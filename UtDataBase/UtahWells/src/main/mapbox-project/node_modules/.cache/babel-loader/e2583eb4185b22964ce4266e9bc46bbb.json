{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { withMap } from './context';\nvar containerStyle = {\n  position: 'absolute',\n  zIndex: 10,\n  display: 'flex',\n  flexDirection: 'column',\n  boxShadow: '0px 1px 4px rgba(0, 0, 0, .3)',\n  border: '1px solid rgba(0, 0, 0, 0.1)'\n};\nvar positions = {\n  'top-right': {\n    top: 62,\n    right: 10,\n    bottom: 'auto',\n    left: 'auto'\n  },\n  'top-left': {\n    top: 62,\n    left: 10,\n    bottom: 'auto',\n    right: 'auto'\n  },\n  'bottom-right': {\n    bottom: 63,\n    right: 10,\n    top: 'auto',\n    left: 'auto'\n  },\n  'bottom-left': {\n    bottom: 63,\n    left: 10,\n    top: 'auto',\n    right: 'auto'\n  }\n};\nvar buttonStyle = {\n  backgroundColor: '#f9f9f9',\n  opacity: 0.95,\n  transition: 'background-color 0.16s ease-out',\n  cursor: 'pointer',\n  border: 0,\n  height: 26,\n  width: 26,\n  outline: 0,\n  padding: 3\n};\nvar buttonStyleHovered = {\n  backgroundColor: '#fff',\n  opacity: 1\n};\nvar buttonStyleCompass = {\n  borderBottom: '1px solid rgba(0, 0, 0, 0.1)',\n  borderTopLeftRadius: 2,\n  borderTopRightRadius: 2,\n  borderBottomLeftRadius: 2,\n  borderBottomRightRadius: 2\n};\n\nvar Icon = function () {\n  return React.createElement(\"svg\", {\n    viewBox: \"0 0 20 20\"\n  }, React.createElement(\"polygon\", {\n    fill: \"#333333\",\n    points: \"6,9 10,1 14,9\"\n  }), React.createElement(\"polygon\", {\n    fill: \"#CCCCCC\",\n    points: \"6,11 10,19 14,11\"\n  }));\n};\n\nvar compassSpan = {\n  width: 20,\n  height: 20,\n  display: 'inline-block'\n};\nvar COMPASS = [0][0];\nvar POSITIONS = Object.keys(positions);\n\nvar RotationControl = function (_super) {\n  __extends(RotationControl, _super);\n\n  function RotationControl() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      hover: undefined\n    };\n    _this.compassIcon = null;\n\n    _this.onMouseOut = function () {\n      if (!_this.state.hover) {\n        _this.setState({\n          hover: undefined\n        });\n      }\n    };\n\n    _this.onMouseIn = function () {\n      if (COMPASS !== _this.state.hover) {\n        _this.setState({\n          hover: COMPASS\n        });\n      }\n    };\n\n    _this.onClickCompass = function () {\n      _this.props.map.resetNorth();\n    };\n\n    _this.onMapRotate = function () {\n      var map = _this.props.map;\n      var rotate = \"rotate(\" + map.transform.angle * (180 / Math.PI) + \"deg)\";\n\n      if (_this.compassIcon) {\n        _this.compassIcon.style.transform = rotate;\n      }\n    };\n\n    _this.assignRef = function (icon) {\n      _this.compassIcon = icon;\n    };\n\n    return _this;\n  }\n\n  RotationControl.prototype.componentDidMount = function () {\n    this.props.map.on('rotate', this.onMapRotate);\n  };\n\n  RotationControl.prototype.componentWillUnmount = function () {\n    this.props.map.off('rotate', this.onMapRotate);\n  };\n\n  RotationControl.prototype.render = function () {\n    var _a = this.props,\n        position = _a.position,\n        style = _a.style,\n        className = _a.className,\n        tabIndex = _a.tabIndex;\n    var hover = this.state.hover;\n\n    var controlStyle = __assign({}, buttonStyle, buttonStyleCompass, hover === COMPASS ? buttonStyleHovered : {});\n\n    return React.createElement(\"div\", {\n      className: className,\n      tabIndex: tabIndex,\n      style: __assign({}, containerStyle, positions[position], style)\n    }, React.createElement(\"button\", {\n      style: controlStyle,\n      onMouseOver: this.onMouseIn,\n      onMouseOut: this.onMouseOut,\n      onClick: this.onClickCompass\n    }, React.createElement(\"span\", {\n      ref: this.assignRef,\n      style: compassSpan\n    }, React.createElement(Icon, null))));\n  };\n\n  RotationControl.defaultProps = {\n    position: POSITIONS[0]\n  };\n  return RotationControl;\n}(React.Component);\n\nexport { RotationControl };\nexport default withMap(RotationControl);","map":{"version":3,"mappings":"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","names":["React","withMap","containerStyle","position","zIndex","display","flexDirection","boxShadow","border","positions","top","right","bottom","left","buttonStyle","backgroundColor","opacity","transition","cursor","height","width","outline","padding","buttonStyleHovered","buttonStyleCompass","borderBottom","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","Icon","viewBox","fill","points","compassSpan","POSITIONS","Object","keys","__extends","_this","hover","undefined","state","setState","COMPASS","props","map","resetNorth","rotate","transform","angle","Math","PI","compassIcon","style","icon","RotationControl","on","onMapRotate","off","className","tabIndex","controlStyle","onMouseOver","onMouseIn","onMouseOut","onClick","onClickCompass","ref","assignRef","Component"],"sources":["D:\\Github\\CUSP_DataBase\\CUSP_DB\\src\\main\\mapbox-project\\node_modules\\react-mapbox-gl\\src\\rotation-control.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Map } from 'mapbox-gl';\nimport { AnchorLimits } from './util/types';\nimport { withMap } from './context';\n\nconst containerStyle: React.CSSProperties = {\n  position: 'absolute',\n  zIndex: 10,\n  display: 'flex',\n  flexDirection: 'column',\n  boxShadow: '0px 1px 4px rgba(0, 0, 0, .3)',\n  border: '1px solid rgba(0, 0, 0, 0.1)'\n};\n\nconst positions = {\n  'top-right': { top: 62, right: 10, bottom: 'auto', left: 'auto' },\n  'top-left': { top: 62, left: 10, bottom: 'auto', right: 'auto' },\n  'bottom-right': { bottom: 63, right: 10, top: 'auto', left: 'auto' },\n  'bottom-left': { bottom: 63, left: 10, top: 'auto', right: 'auto' }\n};\n\nconst buttonStyle = {\n  backgroundColor: '#f9f9f9',\n  opacity: 0.95,\n  transition: 'background-color 0.16s ease-out',\n  cursor: 'pointer',\n  border: 0,\n  height: 26,\n  width: 26,\n  outline: 0,\n  padding: 3\n};\n\nconst buttonStyleHovered = {\n  backgroundColor: '#fff',\n  opacity: 1\n};\n\nconst buttonStyleCompass = {\n  borderBottom: '1px solid rgba(0, 0, 0, 0.1)',\n  borderTopLeftRadius: 2,\n  borderTopRightRadius: 2,\n  borderBottomLeftRadius: 2,\n  borderBottomRightRadius: 2\n};\n\nconst Icon = () => (\n  <svg viewBox=\"0 0 20 20\">\n    <polygon fill=\"#333333\" points=\"6,9 10,1 14,9\" />\n    <polygon fill=\"#CCCCCC\" points=\"6,11 10,19 14,11\" />\n  </svg>\n);\n\nconst compassSpan = {\n  width: 20,\n  height: 20,\n  display: 'inline-block'\n};\n\nconst [COMPASS] = [0];\nconst POSITIONS = Object.keys(positions);\n\nexport interface Props {\n  position?: AnchorLimits;\n  style?: React.CSSProperties;\n  className?: string;\n  tabIndex?: number;\n  map: Map;\n}\n\nexport interface State {\n  hover?: number;\n}\n\nexport class RotationControl extends React.Component<Props, State> {\n  public static defaultProps = {\n    position: POSITIONS[0]\n  };\n\n  public state = {\n    hover: undefined\n  };\n\n  public componentDidMount() {\n    this.props.map.on('rotate', this.onMapRotate);\n  }\n\n  public componentWillUnmount() {\n    this.props.map.off('rotate', this.onMapRotate);\n  }\n\n  public compassIcon: HTMLSpanElement | null = null;\n\n  private onMouseOut = () => {\n    if (!this.state.hover) {\n      this.setState({ hover: undefined });\n    }\n  };\n\n  private onMouseIn = () => {\n    if (COMPASS !== this.state.hover) {\n      this.setState({ hover: COMPASS });\n    }\n  };\n\n  private onClickCompass = () => {\n    this.props.map.resetNorth();\n  };\n\n  private onMapRotate = () => {\n    const { map } = this.props;\n    // tslint:disable-next-line:no-any\n    const rotate = `rotate(${(map as any).transform.angle *\n      (180 / Math.PI)}deg)`;\n\n    if (this.compassIcon) {\n      this.compassIcon.style.transform = rotate;\n    }\n  };\n\n  private assignRef = (icon: HTMLSpanElement | null) => {\n    this.compassIcon = icon;\n  };\n\n  public render() {\n    const { position, style, className, tabIndex } = this.props;\n    const { hover } = this.state;\n    const controlStyle = {\n      ...buttonStyle,\n      ...buttonStyleCompass,\n      ...(hover === COMPASS ? buttonStyleHovered : {})\n    };\n\n    return (\n      <div\n        className={className}\n        tabIndex={tabIndex}\n        style={{ ...containerStyle, ...positions[position!], ...style }}\n      >\n        <button\n          style={controlStyle}\n          onMouseOver={this.onMouseIn}\n          onMouseOut={this.onMouseOut}\n          onClick={this.onClickCompass}\n        >\n          <span ref={this.assignRef} style={compassSpan}>\n            <Icon />\n          </span>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default withMap(RotationControl);\n"]},"metadata":{},"sourceType":"module"}