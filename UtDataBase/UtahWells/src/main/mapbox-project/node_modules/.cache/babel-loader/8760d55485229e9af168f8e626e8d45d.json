{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.setState = exports.setMatchers = exports.getState = exports.getMatchers = exports.INTERNAL_MATCHER_FLAG = void 0;\n\nvar _asymmetricMatchers = require('./asymmetricMatchers');\n\nvar global = function () {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  } else if (typeof global !== 'undefined') {\n    return global;\n  } else if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else {\n    return Function('return this')();\n  }\n}();\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol; // Global matchers object holds the list of available matchers and\n// the state, that can hold matcher specific values that change over time.\n\nconst JEST_MATCHERS_OBJECT = Symbol.for('$$jest-matchers-object'); // Notes a built-in/internal Jest matcher.\n// Jest may override the stack trace of Errors thrown by internal matchers.\n\nconst INTERNAL_MATCHER_FLAG = Symbol.for('$$jest-internal-matcher');\nexports.INTERNAL_MATCHER_FLAG = INTERNAL_MATCHER_FLAG;\n\nif (!global.hasOwnProperty(JEST_MATCHERS_OBJECT)) {\n  const defaultState = {\n    assertionCalls: 0,\n    expectedAssertionsNumber: null,\n    isExpectingAssertions: false,\n    suppressedErrors: [] // errors that are not thrown immediately.\n\n  };\n  Object.defineProperty(global, JEST_MATCHERS_OBJECT, {\n    value: {\n      matchers: Object.create(null),\n      state: defaultState\n    }\n  });\n}\n\nconst getState = () => global[JEST_MATCHERS_OBJECT].state;\n\nexports.getState = getState;\n\nconst setState = state => {\n  Object.assign(global[JEST_MATCHERS_OBJECT].state, state);\n};\n\nexports.setState = setState;\n\nconst getMatchers = () => global[JEST_MATCHERS_OBJECT].matchers;\n\nexports.getMatchers = getMatchers;\n\nconst setMatchers = (matchers, isInternal, expect) => {\n  Object.keys(matchers).forEach(key => {\n    const matcher = matchers[key];\n    Object.defineProperty(matcher, INTERNAL_MATCHER_FLAG, {\n      value: isInternal\n    });\n\n    if (!isInternal) {\n      // expect is defined\n      class CustomMatcher extends _asymmetricMatchers.AsymmetricMatcher {\n        constructor() {\n          let inverse = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n          for (var _len = arguments.length, sample = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            sample[_key - 1] = arguments[_key];\n          }\n\n          super(sample, inverse);\n        }\n\n        asymmetricMatch(other) {\n          const {\n            pass\n          } = matcher.call(this.getMatcherContext(), other, ...this.sample);\n          return this.inverse ? !pass : pass;\n        }\n\n        toString() {\n          return `${this.inverse ? 'not.' : ''}${key}`;\n        }\n\n        getExpectedType() {\n          return 'any';\n        }\n\n        toAsymmetricMatcher() {\n          return `${this.toString()}<${this.sample.map(String).join(', ')}>`;\n        }\n\n      }\n\n      Object.defineProperty(expect, key, {\n        configurable: true,\n        enumerable: true,\n        value: function () {\n          for (var _len2 = arguments.length, sample = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            sample[_key2] = arguments[_key2];\n          }\n\n          return new CustomMatcher(false, ...sample);\n        },\n        writable: true\n      });\n      Object.defineProperty(expect.not, key, {\n        configurable: true,\n        enumerable: true,\n        value: function () {\n          for (var _len3 = arguments.length, sample = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            sample[_key3] = arguments[_key3];\n          }\n\n          return new CustomMatcher(true, ...sample);\n        },\n        writable: true\n      });\n    }\n  });\n  Object.assign(global[JEST_MATCHERS_OBJECT].matchers, matchers);\n};\n\nexports.setMatchers = setMatchers;","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/mapbox-project/node_modules/expect/build/jestMatchersObject.js"],"names":["Object","defineProperty","exports","value","setState","setMatchers","getState","getMatchers","INTERNAL_MATCHER_FLAG","_asymmetricMatchers","require","global","globalThis","self","window","Function","Symbol","JEST_MATCHERS_OBJECT","for","hasOwnProperty","defaultState","assertionCalls","expectedAssertionsNumber","isExpectingAssertions","suppressedErrors","matchers","create","state","assign","isInternal","expect","keys","forEach","key","matcher","CustomMatcher","AsymmetricMatcher","constructor","inverse","sample","asymmetricMatch","other","pass","call","getMatcherContext","toString","getExpectedType","toAsymmetricMatcher","map","String","join","configurable","enumerable","writable","not"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,QAAR,GACEF,OAAO,CAACG,WAAR,GACAH,OAAO,CAACI,QAAR,GACAJ,OAAO,CAACK,WAAR,GACAL,OAAO,CAACM,qBAAR,GACE,KAAK,CALT;;AAOA,IAAIC,mBAAmB,GAAGC,OAAO,CAAC,sBAAD,CAAjC;;AAEA,IAAIC,MAAM,GAAI,YAAY;AACxB,MAAI,OAAOC,UAAP,KAAsB,WAA1B,EAAuC;AACrC,WAAOA,UAAP;AACD,GAFD,MAEO,IAAI,OAAOD,MAAP,KAAkB,WAAtB,EAAmC;AACxC,WAAOA,MAAP;AACD,GAFM,MAEA,IAAI,OAAOE,IAAP,KAAgB,WAApB,EAAiC;AACtC,WAAOA,IAAP;AACD,GAFM,MAEA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACxC,WAAOA,MAAP;AACD,GAFM,MAEA;AACL,WAAOC,QAAQ,CAAC,aAAD,CAAR,EAAP;AACD;AACF,CAZY,EAAb;;AAcA,IAAIC,MAAM,GAAGL,MAAM,CAAC,0BAAD,CAAN,IAAsCA,MAAM,CAACK,MAA1D,C,CACA;AACA;;AACA,MAAMC,oBAAoB,GAAGD,MAAM,CAACE,GAAP,CAAW,wBAAX,CAA7B,C,CAAmE;AACnE;;AAEA,MAAMV,qBAAqB,GAAGQ,MAAM,CAACE,GAAP,CAAW,yBAAX,CAA9B;AACAhB,OAAO,CAACM,qBAAR,GAAgCA,qBAAhC;;AAEA,IAAI,CAACG,MAAM,CAACQ,cAAP,CAAsBF,oBAAtB,CAAL,EAAkD;AAChD,QAAMG,YAAY,GAAG;AACnBC,IAAAA,cAAc,EAAE,CADG;AAEnBC,IAAAA,wBAAwB,EAAE,IAFP;AAGnBC,IAAAA,qBAAqB,EAAE,KAHJ;AAInBC,IAAAA,gBAAgB,EAAE,EAJC,CAIE;;AAJF,GAArB;AAMAxB,EAAAA,MAAM,CAACC,cAAP,CAAsBU,MAAtB,EAA8BM,oBAA9B,EAAoD;AAClDd,IAAAA,KAAK,EAAE;AACLsB,MAAAA,QAAQ,EAAEzB,MAAM,CAAC0B,MAAP,CAAc,IAAd,CADL;AAELC,MAAAA,KAAK,EAAEP;AAFF;AAD2C,GAApD;AAMD;;AAED,MAAMd,QAAQ,GAAG,MAAMK,MAAM,CAACM,oBAAD,CAAN,CAA6BU,KAApD;;AAEAzB,OAAO,CAACI,QAAR,GAAmBA,QAAnB;;AAEA,MAAMF,QAAQ,GAAGuB,KAAK,IAAI;AACxB3B,EAAAA,MAAM,CAAC4B,MAAP,CAAcjB,MAAM,CAACM,oBAAD,CAAN,CAA6BU,KAA3C,EAAkDA,KAAlD;AACD,CAFD;;AAIAzB,OAAO,CAACE,QAAR,GAAmBA,QAAnB;;AAEA,MAAMG,WAAW,GAAG,MAAMI,MAAM,CAACM,oBAAD,CAAN,CAA6BQ,QAAvD;;AAEAvB,OAAO,CAACK,WAAR,GAAsBA,WAAtB;;AAEA,MAAMF,WAAW,GAAG,CAACoB,QAAD,EAAWI,UAAX,EAAuBC,MAAvB,KAAkC;AACpD9B,EAAAA,MAAM,CAAC+B,IAAP,CAAYN,QAAZ,EAAsBO,OAAtB,CAA8BC,GAAG,IAAI;AACnC,UAAMC,OAAO,GAAGT,QAAQ,CAACQ,GAAD,CAAxB;AACAjC,IAAAA,MAAM,CAACC,cAAP,CAAsBiC,OAAtB,EAA+B1B,qBAA/B,EAAsD;AACpDL,MAAAA,KAAK,EAAE0B;AAD6C,KAAtD;;AAIA,QAAI,CAACA,UAAL,EAAiB;AACf;AACA,YAAMM,aAAN,SAA4B1B,mBAAmB,CAAC2B,iBAAhD,CAAkE;AAChEC,QAAAA,WAAW,GAA6B;AAAA,cAA5BC,OAA4B,uEAAlB,KAAkB;;AAAA,4CAARC,MAAQ;AAARA,YAAAA,MAAQ;AAAA;;AACtC,gBAAMA,MAAN,EAAcD,OAAd;AACD;;AAEDE,QAAAA,eAAe,CAACC,KAAD,EAAQ;AACrB,gBAAM;AAACC,YAAAA;AAAD,cAASR,OAAO,CAACS,IAAR,CACb,KAAKC,iBAAL,EADa,EAEbH,KAFa,EAGb,GAAG,KAAKF,MAHK,CAAf;AAKA,iBAAO,KAAKD,OAAL,GAAe,CAACI,IAAhB,GAAuBA,IAA9B;AACD;;AAEDG,QAAAA,QAAQ,GAAG;AACT,iBAAQ,GAAE,KAAKP,OAAL,GAAe,MAAf,GAAwB,EAAG,GAAEL,GAAI,EAA3C;AACD;;AAEDa,QAAAA,eAAe,GAAG;AAChB,iBAAO,KAAP;AACD;;AAEDC,QAAAA,mBAAmB,GAAG;AACpB,iBAAQ,GAAE,KAAKF,QAAL,EAAgB,IAAG,KAAKN,MAAL,CAAYS,GAAZ,CAAgBC,MAAhB,EAAwBC,IAAxB,CAA6B,IAA7B,CAAmC,GAAhE;AACD;;AAxB+D;;AA2BlElD,MAAAA,MAAM,CAACC,cAAP,CAAsB6B,MAAtB,EAA8BG,GAA9B,EAAmC;AACjCkB,QAAAA,YAAY,EAAE,IADmB;AAEjCC,QAAAA,UAAU,EAAE,IAFqB;AAGjCjD,QAAAA,KAAK,EAAE;AAAA,6CAAIoC,MAAJ;AAAIA,YAAAA,MAAJ;AAAA;;AAAA,iBAAe,IAAIJ,aAAJ,CAAkB,KAAlB,EAAyB,GAAGI,MAA5B,CAAf;AAAA,SAH0B;AAIjCc,QAAAA,QAAQ,EAAE;AAJuB,OAAnC;AAMArD,MAAAA,MAAM,CAACC,cAAP,CAAsB6B,MAAM,CAACwB,GAA7B,EAAkCrB,GAAlC,EAAuC;AACrCkB,QAAAA,YAAY,EAAE,IADuB;AAErCC,QAAAA,UAAU,EAAE,IAFyB;AAGrCjD,QAAAA,KAAK,EAAE;AAAA,6CAAIoC,MAAJ;AAAIA,YAAAA,MAAJ;AAAA;;AAAA,iBAAe,IAAIJ,aAAJ,CAAkB,IAAlB,EAAwB,GAAGI,MAA3B,CAAf;AAAA,SAH8B;AAIrCc,QAAAA,QAAQ,EAAE;AAJ2B,OAAvC;AAMD;AACF,GAhDD;AAiDArD,EAAAA,MAAM,CAAC4B,MAAP,CAAcjB,MAAM,CAACM,oBAAD,CAAN,CAA6BQ,QAA3C,EAAqDA,QAArD;AACD,CAnDD;;AAqDAvB,OAAO,CAACG,WAAR,GAAsBA,WAAtB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.setState =\n  exports.setMatchers =\n  exports.getState =\n  exports.getMatchers =\n  exports.INTERNAL_MATCHER_FLAG =\n    void 0;\n\nvar _asymmetricMatchers = require('./asymmetricMatchers');\n\nvar global = (function () {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  } else if (typeof global !== 'undefined') {\n    return global;\n  } else if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else {\n    return Function('return this')();\n  }\n})();\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\n// Global matchers object holds the list of available matchers and\n// the state, that can hold matcher specific values that change over time.\nconst JEST_MATCHERS_OBJECT = Symbol.for('$$jest-matchers-object'); // Notes a built-in/internal Jest matcher.\n// Jest may override the stack trace of Errors thrown by internal matchers.\n\nconst INTERNAL_MATCHER_FLAG = Symbol.for('$$jest-internal-matcher');\nexports.INTERNAL_MATCHER_FLAG = INTERNAL_MATCHER_FLAG;\n\nif (!global.hasOwnProperty(JEST_MATCHERS_OBJECT)) {\n  const defaultState = {\n    assertionCalls: 0,\n    expectedAssertionsNumber: null,\n    isExpectingAssertions: false,\n    suppressedErrors: [] // errors that are not thrown immediately.\n  };\n  Object.defineProperty(global, JEST_MATCHERS_OBJECT, {\n    value: {\n      matchers: Object.create(null),\n      state: defaultState\n    }\n  });\n}\n\nconst getState = () => global[JEST_MATCHERS_OBJECT].state;\n\nexports.getState = getState;\n\nconst setState = state => {\n  Object.assign(global[JEST_MATCHERS_OBJECT].state, state);\n};\n\nexports.setState = setState;\n\nconst getMatchers = () => global[JEST_MATCHERS_OBJECT].matchers;\n\nexports.getMatchers = getMatchers;\n\nconst setMatchers = (matchers, isInternal, expect) => {\n  Object.keys(matchers).forEach(key => {\n    const matcher = matchers[key];\n    Object.defineProperty(matcher, INTERNAL_MATCHER_FLAG, {\n      value: isInternal\n    });\n\n    if (!isInternal) {\n      // expect is defined\n      class CustomMatcher extends _asymmetricMatchers.AsymmetricMatcher {\n        constructor(inverse = false, ...sample) {\n          super(sample, inverse);\n        }\n\n        asymmetricMatch(other) {\n          const {pass} = matcher.call(\n            this.getMatcherContext(),\n            other,\n            ...this.sample\n          );\n          return this.inverse ? !pass : pass;\n        }\n\n        toString() {\n          return `${this.inverse ? 'not.' : ''}${key}`;\n        }\n\n        getExpectedType() {\n          return 'any';\n        }\n\n        toAsymmetricMatcher() {\n          return `${this.toString()}<${this.sample.map(String).join(', ')}>`;\n        }\n      }\n\n      Object.defineProperty(expect, key, {\n        configurable: true,\n        enumerable: true,\n        value: (...sample) => new CustomMatcher(false, ...sample),\n        writable: true\n      });\n      Object.defineProperty(expect.not, key, {\n        configurable: true,\n        enumerable: true,\n        value: (...sample) => new CustomMatcher(true, ...sample),\n        writable: true\n      });\n    }\n  });\n  Object.assign(global[JEST_MATCHERS_OBJECT].matchers, matchers);\n};\n\nexports.setMatchers = setMatchers;\n"]},"metadata":{},"sourceType":"script"}