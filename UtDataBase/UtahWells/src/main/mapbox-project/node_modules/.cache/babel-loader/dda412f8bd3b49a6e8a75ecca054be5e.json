{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { overlayState, overlayTransform } from './util/overlays';\nimport { withMap } from './context';\nvar defaultStyle = {\n  zIndex: 3\n};\n\nvar ProjectedLayer = function (_super) {\n  __extends(ProjectedLayer, _super);\n\n  function ProjectedLayer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.container = undefined;\n    _this.prevent = false;\n    _this.state = {};\n\n    _this.setContainer = function (el) {\n      if (el) {\n        _this.container = el;\n      }\n    };\n\n    _this.handleMapMove = function () {\n      if (!_this.prevent) {\n        _this.setState(overlayState(_this.props, _this.props.map, _this.container));\n      }\n    };\n\n    return _this;\n  }\n\n  ProjectedLayer.prototype.componentDidMount = function () {\n    var map = this.props.map;\n    map.on('move', this.handleMapMove);\n    this.handleMapMove();\n  };\n\n  ProjectedLayer.prototype.havePropsChanged = function (props, prevProps) {\n    return props.coordinates[0] !== prevProps.coordinates[0] || props.coordinates[1] !== prevProps.coordinates[1] || props.offset !== prevProps.offset || props.anchor !== prevProps.anchor;\n  };\n\n  ProjectedLayer.prototype.componentDidUpdate = function (prevProps) {\n    if (this.havePropsChanged(this.props, prevProps)) {\n      this.setState(overlayState(this.props, this.props.map, this.container));\n    }\n  };\n\n  ProjectedLayer.prototype.componentWillUnmount = function () {\n    var map = this.props.map;\n    this.prevent = true;\n    map.off('move', this.handleMapMove);\n  };\n\n  ProjectedLayer.prototype.render = function () {\n    var _a = this.props,\n        style = _a.style,\n        children = _a.children,\n        className = _a.className,\n        onClick = _a.onClick,\n        onDoubleClick = _a.onDoubleClick,\n        onMouseEnter = _a.onMouseEnter,\n        onMouseLeave = _a.onMouseLeave,\n        onScroll = _a.onScroll,\n        onWheel = _a.onWheel,\n        type = _a.type,\n        tabIndex = _a.tabIndex;\n    var anchor = this.state.anchor;\n\n    var finalStyle = __assign({}, defaultStyle, style, {\n      transform: overlayTransform(this.state).join(' ')\n    });\n\n    var anchorClassname = anchor && type === 'popup' ? \"mapboxgl-popup-anchor-\" + anchor : '';\n    return React.createElement(\"div\", {\n      className: className + \" \" + anchorClassname,\n      onClick: onClick,\n      onDoubleClick: onDoubleClick,\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onScroll: onScroll,\n      onWheel: onWheel,\n      style: finalStyle,\n      ref: this.setContainer,\n      tabIndex: tabIndex\n    }, children);\n  };\n\n  ProjectedLayer.defaultProps = {\n    offset: 0,\n    onClick: function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return args;\n    }\n  };\n  return ProjectedLayer;\n}(React.Component);\n\nexport { ProjectedLayer };\nexport default withMap(ProjectedLayer);","map":{"version":3,"mappings":"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","names":["React","overlayState","overlayTransform","withMap","defaultStyle","zIndex","__extends","_this","undefined","el","container","prevent","setState","props","map","ProjectedLayer","on","handleMapMove","prevProps","coordinates","offset","anchor","havePropsChanged","off","style","children","className","onClick","onDoubleClick","onMouseEnter","onMouseLeave","onScroll","onWheel","type","tabIndex","finalStyle","transform","state","join","anchorClassname","ref","setContainer","args","Component"],"sources":["D:\\Github\\CUSP_DataBase\\CUSP_DB\\src\\main\\mapbox-project\\node_modules\\react-mapbox-gl\\src\\projected-layer.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Map, Point } from 'mapbox-gl';\nimport { OverlayParams, overlayState, overlayTransform } from './util/overlays';\nimport { Anchor } from './util/types';\nimport { withMap } from './context';\n\nconst defaultStyle = {\n  zIndex: 3\n};\n\nexport interface Props {\n  type: 'marker' | 'popup';\n  coordinates: [number, number];\n  anchor?: Anchor;\n  offset?: number | [number, number] | Point;\n  children?: JSX.Element | JSX.Element[];\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n  onDoubleClick?: React.MouseEventHandler<HTMLDivElement>;\n  onMouseEnter?: React.MouseEventHandler<HTMLDivElement>;\n  onMouseLeave?: React.MouseEventHandler<HTMLDivElement>;\n  onScroll?: React.UIEventHandler<HTMLDivElement>;\n  onWheel?: React.MouseEventHandler<HTMLDivElement>;\n  style?: React.CSSProperties;\n  className: string;\n  tabIndex?: number;\n  map: Map;\n}\n\nexport class ProjectedLayer extends React.Component<Props, OverlayParams> {\n  private container: HTMLElement | undefined = undefined;\n  private prevent: boolean = false;\n\n  public static defaultProps = {\n    offset: 0,\n    // tslint:disable-next-line:no-any\n    onClick: (...args: any[]) => args\n  };\n\n  public state: OverlayParams = {};\n\n  private setContainer = (el: HTMLElement | null) => {\n    if (el) {\n      this.container = el;\n    }\n  };\n\n  private handleMapMove = () => {\n    if (!this.prevent) {\n      this.setState(overlayState(this.props, this.props.map, this.container!));\n    }\n  };\n\n  public componentDidMount() {\n    const { map } = this.props;\n\n    map.on('move', this.handleMapMove);\n    // Now this.container is rendered and the size of container is known.\n    // Recalculate the anchor/position\n    this.handleMapMove();\n  }\n\n  private havePropsChanged(props: Props, prevProps: Props) {\n    return (\n      props.coordinates[0] !== prevProps.coordinates[0] ||\n      props.coordinates[1] !== prevProps.coordinates[1] ||\n      props.offset !== prevProps.offset ||\n      props.anchor !== prevProps.anchor\n    );\n  }\n\n  public componentDidUpdate(prevProps: Props) {\n    if (this.havePropsChanged(this.props, prevProps)) {\n      this.setState(overlayState(this.props, this.props.map, this.container!));\n    }\n  }\n\n  public componentWillUnmount() {\n    const { map } = this.props;\n\n    this.prevent = true;\n\n    map.off('move', this.handleMapMove);\n  }\n\n  public render() {\n    const {\n      style,\n      children,\n      className,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onScroll,\n      onWheel,\n      type,\n      tabIndex\n    } = this.props;\n    const { anchor } = this.state;\n    const finalStyle = {\n      ...defaultStyle,\n      ...style,\n      transform: overlayTransform(this.state).join(' ')\n    };\n    const anchorClassname =\n      anchor && type === 'popup' ? `mapboxgl-popup-anchor-${anchor}` : '';\n    return (\n      <div\n        className={`${className} ${anchorClassname}`}\n        onClick={onClick}\n        onDoubleClick={onDoubleClick}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onScroll={onScroll}\n        onWheel={onWheel}\n        style={finalStyle}\n        ref={this.setContainer}\n        tabIndex={tabIndex}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default withMap(ProjectedLayer);\n"]},"metadata":{},"sourceType":"module"}