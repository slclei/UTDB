{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { withMap } from './context';\n\nvar Image = function (_super) {\n  __extends(Image, _super);\n\n  function Image() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Image.prototype.componentDidMount = function () {\n    this.loadImage(this.props);\n  };\n\n  Image.prototype.componentWillUnmount = function () {\n    Image.removeImage(this.props);\n  };\n\n  Image.prototype.componentDidUpdate = function (prevProps) {\n    var id = prevProps.id;\n\n    if (prevProps.map !== this.props.map) {\n      Image.removeImage(this.props);\n    }\n\n    if (this.props.map && !this.props.map.hasImage(id)) {\n      this.loadImage(this.props);\n    }\n  };\n\n  Image.prototype.render = function () {\n    return null;\n  };\n\n  Image.prototype.loadImage = function (props) {\n    var _this = this;\n\n    var map = props.map,\n        id = props.id,\n        url = props.url,\n        data = props.data,\n        options = props.options,\n        onError = props.onError;\n\n    if (data) {\n      map.addImage(id, data, options);\n      this.loaded();\n    } else if (url) {\n      map.loadImage(url, function (error, image) {\n        if (error) {\n          if (onError) {\n            onError(error);\n          }\n\n          return;\n        }\n\n        map.addImage(id, image, options);\n\n        _this.loaded();\n      });\n    }\n  };\n\n  Image.removeImage = function (props) {\n    var id = props.id,\n        map = props.map;\n\n    if (map && map.getStyle()) {\n      map.removeImage(id);\n    }\n  };\n\n  Image.prototype.loaded = function () {\n    var onLoaded = this.props.onLoaded;\n\n    if (onLoaded) {\n      onLoaded();\n    }\n  };\n\n  return Image;\n}(React.Component);\n\nexport default withMap(Image);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAwBA;AAAoBC;;AAApB;;AA4DC;;AA3DQC,sCAAP;AACE,SAAKC,SAAL,CAAe,KAAKC,KAApB;AACD,GAFM;;AAIAF,yCAAP;AACEA,SAAK,CAACG,WAAN,CAAkB,KAAKD,KAAvB;AACD,GAFM;;AAIAF,uCAAP,UAA0BI,SAA1B,EAA0C;AAChC;;AAER,QAAIA,SAAS,CAACC,GAAV,KAAkB,KAAKH,KAAL,CAAWG,GAAjC,EAAsC;AAEpCL,WAAK,CAACG,WAAN,CAAkB,KAAKD,KAAvB;AACD;;AAED,QAAI,KAAKA,KAAL,CAAWG,GAAX,IAAkB,CAAC,KAAKH,KAAL,CAAWG,GAAX,CAAeC,QAAf,CAAwBC,EAAxB,CAAvB,EAAoD;AAElD,WAAKN,SAAL,CAAe,KAAKC,KAApB;AACD;AACF,GAZM;;AAcAF,2BAAP;AACE,WAAO,IAAP;AACD,GAFM;;AAICA,8BAAR,UAAkBE,KAAlB,EAA8B;AAA9B;;AACU;AAAA,QAAKK,aAAL;AAAA,QAASC,eAAT;AAAA,QAAcC,iBAAd;AAAA,QAAoBC,uBAApB;AAAA,QAA6BC,uBAA7B;;AAER,QAAIF,IAAJ,EAAU;AACRJ,SAAG,CAACO,QAAJ,CAAaL,EAAb,EAAiBE,IAAjB,EAAuBC,OAAvB;AACA,WAAKG,MAAL;AACD,KAHD,MAGO,IAAIL,GAAJ,EAAS;AACdH,SAAG,CAACJ,SAAJ,CAAcO,GAAd,EAAmB,UAACM,KAAD,EAA2BC,KAA3B,EAA+C;AAChE,YAAID,KAAJ,EAAW;AACT,cAAIH,OAAJ,EAAa;AACXA,mBAAO,CAACG,KAAD,CAAP;AACD;;AAED;AACD;;AACDT,WAAG,CAACO,QAAJ,CAAaL,EAAb,EAAiBQ,KAAjB,EAAwBL,OAAxB;;AACAM,aAAI,CAACH,MAAL;AACD,OAVD;AAWD;AACF,GAnBO;;AAqBOb,sBAAf,UAA2BE,KAA3B,EAAuC;AAC7B;AAAA,QAAIG,eAAJ;;AACR,QAAIA,GAAG,IAAIA,GAAG,CAACY,QAAJ,EAAX,EAA2B;AACzBZ,SAAG,CAACF,WAAJ,CAAgBI,EAAhB;AACD;AACF,GALc;;AAMPP,2BAAR;AACU;;AACR,QAAIkB,QAAJ,EAAc;AACZA,cAAQ;AACT;AACF,GALO;;AAMV;AAAC,CA5DD,CAAoBrB,KAAK,CAACsB,SAA1B;;AA8DA,eAAerB,OAAO,CAACE,KAAD,CAAtB","names":["React","withMap","__extends","Image","loadImage","props","removeImage","prevProps","map","hasImage","id","url","data","options","onError","addImage","loaded","error","image","_this","getStyle","onLoaded","Component"],"sources":["D:\\Github\\CUSP_DataBase\\CUSP_DB\\src\\main\\mapbox-project\\node_modules\\react-mapbox-gl\\src\\image.tsx"],"sourcesContent":["import * as React from 'react';\nimport { withMap } from './context';\nimport { Map } from 'mapbox-gl';\n\ninterface ImageOptionsType {\n  pixelRatio?: number;\n  sdf?: boolean;\n}\n\ntype ImageDataType =\n  | HTMLImageElement\n  | ArrayBufferView\n  | { width: number; height: number; data: Uint8Array | Uint8ClampedArray }\n  | ImageData;\n\nexport interface Props {\n  id: string;\n  url?: string;\n  data?: ImageDataType;\n  options?: ImageOptionsType;\n  onLoaded?: () => void;\n  onError?: (error: Error) => void;\n  map: Map;\n}\n\nclass Image extends React.Component<Props> {\n  public componentDidMount() {\n    this.loadImage(this.props);\n  }\n\n  public componentWillUnmount() {\n    Image.removeImage(this.props);\n  }\n\n  public componentDidUpdate(prevProps: Props) {\n    const { id } = prevProps;\n\n    if (prevProps.map !== this.props.map) {\n      // Remove image from old map\n      Image.removeImage(this.props);\n    }\n\n    if (this.props.map && !this.props.map.hasImage(id)) {\n      // Add missing image to map\n      this.loadImage(this.props);\n    }\n  }\n\n  public render() {\n    return null;\n  }\n\n  private loadImage(props: Props) {\n    const { map, id, url, data, options, onError } = props;\n\n    if (data) {\n      map.addImage(id, data, options);\n      this.loaded();\n    } else if (url) {\n      map.loadImage(url, (error: Error | undefined, image: ImageDataType) => {\n        if (error) {\n          if (onError) {\n            onError(error);\n          }\n\n          return;\n        }\n        map.addImage(id, image, options);\n        this.loaded();\n      });\n    }\n  }\n\n  private static removeImage(props: Props) {\n    const { id, map } = props;\n    if (map && map.getStyle()) {\n      map.removeImage(id);\n    }\n  }\n  private loaded() {\n    const { onLoaded } = this.props;\n    if (onLoaded) {\n      onLoaded();\n    }\n  }\n}\n\nexport default withMap(Image);\n"]},"metadata":{},"sourceType":"module"}