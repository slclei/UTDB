{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\CUSP_DataBase\\\\CUSP_DB\\\\src\\\\main\\\\mapbox-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport data from './data/wellsut.geojson';\nimport { Source } from \"react-map-gl\";\nimport Layer from \"react-mapbox-gl/lib-esm/layer\"; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2xjbGVpIiwiYSI6ImNsMXV6czRnYjJkbnQzZG1qMHRxeGd0YmoifQ.mvtESpI1GCIdTrWSupNEIw';\nexport default function App() {\n  _s();\n\n  const mapContainer = useRef(null);\n  const [lng, setLong] = useState(-111.2);\n  const [lat, setLat] = useState(40.5);\n  const [zoom, setZoom] = useState(6);\n  const [height, setHight] = useState(1500);\n  const [hoveredDistrict, _setHoveredDistrict] = useState(null);\n  const hoveredDistrictRef = useRef(hoveredDistrict);\n\n  const setHoveredDistrict = data1 => {\n    hoveredDistrictRef.current = data1;\n\n    _setHoveredDistrict(data1);\n  };\n\n  useEffect(() => {\n    let map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/outdoors-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    map.addControl(new mapboxgl.NavigationControl());\n    map.once(\"load\", function () {\n      map.addSource('district-source', {\n        'type': 'geojson',\n        'data': data\n      });\n      map.addLayer({\n        'id': 'district-layer',\n        'type': 'fill',\n        'source': 'district-source',\n        'layout': {},\n        'paint': {\n          'fill-color': ['match', ['get', 'CD116FP'], '01', '#5AA5D7', '02', '#02735E', '03', '#00E0EF', '04', '#84D0D9', '05', '#202359', '06', '#CE7529', '07', '#00AE6C', '08', '#0056A3',\n          /* other */\n          '#ffffff'],\n          'fill-opacity': ['case', ['boolean', ['feature-state', 'hover'], false], .8, 0.5]\n        }\n      });\n      map.on('mousemove', 'district-layer', function (e) {\n        if (e.features.length > 0) {\n          if (hoveredDistrictRef.current && hoveredDistrictRef.current > -1) {\n            map.setFeatureState({\n              source: 'district-source',\n              id: hoveredDistrictRef.current\n            }, {\n              hover: false\n            });\n          }\n\n          let _hoveredDistrict = e.features[0].id;\n          map.setFeatureState({\n            source: 'district-source',\n            id: _hoveredDistrict\n          }, {\n            hover: true\n          });\n          setHoveredDistrict(_hoveredDistrict);\n        }\n      }); // When the mouse leaves the state-fill layer, update the feature state of the\n      // previously hovered feature.\n\n      map.on('mouseleave', 'district-layer', function () {\n        if (hoveredDistrictRef.current) {\n          map.setFeatureState({\n            source: 'district-source',\n            id: hoveredDistrictRef.current\n          }, {\n            hover: false\n          });\n        }\n\n        setHoveredDistrict(null);\n      });\n      map.on('move', () => {\n        const {\n          lng,\n          lat\n        } = map.getCenter();\n        setLong(lng.toFixed(4));\n        setLat(lat.toFixed(4));\n        setZoom(map.getZoom().toFixed(2));\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"district-map-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [\"Current hovered district: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: hoveredDistrict ? hoveredDistrict : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"districtDetailMap\",\n        className: \"map\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          ref: mapContainer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"XiX9gQ7d8yL5rVD8pRd9bjkUFh0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/mapbox-project/src/App.js"],"names":["React","useRef","useEffect","useState","mapboxgl","data","Source","Layer","accessToken","App","mapContainer","lng","setLong","lat","setLat","zoom","setZoom","height","setHight","hoveredDistrict","_setHoveredDistrict","hoveredDistrictRef","setHoveredDistrict","data1","current","map","Map","container","style","center","addControl","NavigationControl","once","addSource","addLayer","on","e","features","length","setFeatureState","source","id","hover","_hoveredDistrict","getCenter","toFixed","getZoom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,OAAOC,KAAP,MAAkB,+BAAlB,C,CAAmD;;;AAEnDH,QAAQ,CAACI,WAAT,GAAuB,0FAAvB;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAMC,YAAY,GAAGT,MAAM,CAAC,IAAD,CAA3B;AACA,QAAM,CAACU,GAAD,EAAMC,OAAN,IAAiBT,QAAQ,CAAC,CAAC,KAAF,CAA/B;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACc,MAAD,EAAQC,QAAR,IAAkBf,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAM,CAACgB,eAAD,EAAkBC,mBAAlB,IAAyCjB,QAAQ,CAAC,IAAD,CAAvD;AACA,QAAMkB,kBAAkB,GAAGpB,MAAM,CAACkB,eAAD,CAAjC;;AAEE,QAAMG,kBAAkB,GAAGC,KAAK,IAAI;AAChCF,IAAAA,kBAAkB,CAACG,OAAnB,GAA6BD,KAA7B;;AACAH,IAAAA,mBAAmB,CAACG,KAAD,CAAnB;AACH,GAHD;;AAKArB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIuB,GAAG,GAAG,IAAIrB,QAAQ,CAACsB,GAAb,CAAiB;AACvBC,MAAAA,SAAS,EAAEjB,YAAY,CAACc,OADD;AAEvBI,MAAAA,KAAK,EAAE,qCAFgB;AAGvBC,MAAAA,MAAM,EAAE,CAAClB,GAAD,EAAME,GAAN,CAHe;AAItBE,MAAAA,IAAI,EAAEA;AAJgB,KAAjB,CAAV;AAOAU,IAAAA,GAAG,CAACK,UAAJ,CAAe,IAAI1B,QAAQ,CAAC2B,iBAAb,EAAf;AAEAN,IAAAA,GAAG,CAACO,IAAJ,CAAS,MAAT,EAAiB,YAAY;AAC7BP,MAAAA,GAAG,CAACQ,SAAJ,CAAc,iBAAd,EAAiC;AAC7B,gBAAQ,SADqB;AAE7B,gBAAQ5B;AAFqB,OAAjC;AAKAoB,MAAAA,GAAG,CAACS,QAAJ,CAAa;AACT,cAAM,gBADG;AAET,gBAAQ,MAFC;AAGT,kBAAU,iBAHD;AAIT,kBAAU,EAJD;AAKT,iBAAS;AACL,wBAAc,CACV,OADU,EAEV,CAAC,KAAD,EAAQ,SAAR,CAFU,EAGV,IAHU,EAIV,SAJU,EAKV,IALU,EAMV,SANU,EAOV,IAPU,EAQV,SARU,EASV,IATU,EAUV,SAVU,EAWV,IAXU,EAYV,SAZU,EAaV,IAbU,EAcV,SAdU,EAeV,IAfU,EAgBV,SAhBU,EAiBV,IAjBU,EAkBV,SAlBU;AAmBV;AAAY,mBAnBF,CADT;AAsBL,0BAAgB,CACZ,MADY,EAEZ,CAAC,SAAD,EAAY,CAAC,eAAD,EAAkB,OAAlB,CAAZ,EAAwC,KAAxC,CAFY,EAGZ,EAHY,EAIZ,GAJY;AAtBX;AALA,OAAb;AAoCIT,MAAAA,GAAG,CAACU,EAAJ,CAAO,WAAP,EAAoB,gBAApB,EAAsC,UAAUC,CAAV,EAAa;AAC/C,YAAIA,CAAC,CAACC,QAAF,CAAWC,MAAX,GAAoB,CAAxB,EAA2B;AACvB,cAAIjB,kBAAkB,CAACG,OAAnB,IAA8BH,kBAAkB,CAACG,OAAnB,GAA6B,CAAC,CAAhE,EAAmE;AAE/DC,YAAAA,GAAG,CAACc,eAAJ,CACI;AAAEC,cAAAA,MAAM,EAAE,iBAAV;AAA6BC,cAAAA,EAAE,EAAEpB,kBAAkB,CAACG;AAApD,aADJ,EAEI;AAAEkB,cAAAA,KAAK,EAAE;AAAT,aAFJ;AAIH;;AAED,cAAIC,gBAAgB,GAAGP,CAAC,CAACC,QAAF,CAAW,CAAX,EAAcI,EAArC;AAEAhB,UAAAA,GAAG,CAACc,eAAJ,CACI;AAAEC,YAAAA,MAAM,EAAE,iBAAV;AAA6BC,YAAAA,EAAE,EAAEE;AAAjC,WADJ,EAEI;AAAED,YAAAA,KAAK,EAAE;AAAT,WAFJ;AAKApB,UAAAA,kBAAkB,CAACqB,gBAAD,CAAlB;AACH;AAEJ,OApBD,EA1CyB,CAgEzB;AACA;;AACAlB,MAAAA,GAAG,CAACU,EAAJ,CAAO,YAAP,EAAqB,gBAArB,EAAuC,YAAY;AAC/C,YAAId,kBAAkB,CAACG,OAAvB,EAAgC;AAC5BC,UAAAA,GAAG,CAACc,eAAJ,CACI;AAAEC,YAAAA,MAAM,EAAE,iBAAV;AAA6BC,YAAAA,EAAE,EAAEpB,kBAAkB,CAACG;AAApD,WADJ,EAEI;AAAEkB,YAAAA,KAAK,EAAE;AAAT,WAFJ;AAIH;;AACDpB,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,OARD;AAUAG,MAAAA,GAAG,CAACU,EAAJ,CAAO,MAAP,EAAe,MAAM;AACjB,cAAM;AAAExB,UAAAA,GAAF;AAAOE,UAAAA;AAAP,YAAeY,GAAG,CAACmB,SAAJ,EAArB;AAEAhC,QAAAA,OAAO,CAACD,GAAG,CAACkC,OAAJ,CAAY,CAAZ,CAAD,CAAP;AACA/B,QAAAA,MAAM,CAACD,GAAG,CAACgC,OAAJ,CAAY,CAAZ,CAAD,CAAN;AACA7B,QAAAA,OAAO,CAACS,GAAG,CAACqB,OAAJ,GAAcD,OAAd,CAAsB,CAAtB,CAAD,CAAP;AACH,OAND;AAQH,KApFD;AAqFC,GA/FI,EA+FF,EA/FE,CAAT;AAiGF,sBACI;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gCACclC,GADd,mBACgCE,GADhC,eAC8CE,IAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAII;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,8DAC8B;AAAA,oBAASI,eAAe,GAAGA,eAAH,GAAqB;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAK,QAAA,EAAE,EAAC,mBAAR;AAA4B,QAAA,SAAS,EAAC,KAAtC;AAAA,+BACI;AAAK,UAAA,KAAK,EAAE;AAAEF,YAAAA,MAAM,EAAE;AAAV,WAAZ;AAAgC,UAAA,GAAG,EAAEP;AAArC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBD;;GAjIuBD,G;;KAAAA,G","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport data from './data/wellsut.geojson';\nimport {Source} from \"react-map-gl\";\nimport Layer from \"react-mapbox-gl/lib-esm/layer\"; // eslint-disable-line import/no-webpack-loader-syntax\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2xjbGVpIiwiYSI6ImNsMXV6czRnYjJkbnQzZG1qMHRxeGd0YmoifQ.mvtESpI1GCIdTrWSupNEIw';\n\nexport default function App() {\n  const mapContainer = useRef(null);\n  const [lng, setLong] = useState(-111.2);\n  const [lat, setLat] = useState(40.5);\n  const [zoom, setZoom] = useState(6);\n  const [height,setHight]=useState(1500);\n\n  const [hoveredDistrict, _setHoveredDistrict] = useState(null);\n  const hoveredDistrictRef = useRef(hoveredDistrict);\n\n    const setHoveredDistrict = data1 => {\n        hoveredDistrictRef.current = data1;\n        _setHoveredDistrict(data1);\n    };\n\n    useEffect(() => {\n        let map = new mapboxgl.Map({\n            container: mapContainer.current,\n            style: 'mapbox://styles/mapbox/outdoors-v11',\n            center: [lng, lat],\n             zoom: zoom\n        });\n\n        map.addControl(new mapboxgl.NavigationControl());\n\n        map.once(\"load\", function () {\n        map.addSource('district-source', {\n            'type': 'geojson',\n            'data': data\n        });\n\n        map.addLayer({\n            'id': 'district-layer',\n            'type': 'fill',\n            'source': 'district-source',\n            'layout': {},\n            'paint': {\n                'fill-color': [\n                    'match',\n                    ['get', 'CD116FP'],\n                    '01',\n                    '#5AA5D7',\n                    '02',\n                    '#02735E',\n                    '03',\n                    '#00E0EF',\n                    '04',\n                    '#84D0D9',\n                    '05',\n                    '#202359',\n                    '06',\n                    '#CE7529',\n                    '07',\n                    '#00AE6C',\n                    '08',\n                    '#0056A3',\n                    /* other */ '#ffffff'\n                ],\n                'fill-opacity': [\n                    'case',\n                    ['boolean', ['feature-state', 'hover'], false],\n                    .8,\n                    0.5\n                ]\n            }\n        });\n\n            map.on('mousemove', 'district-layer', function (e) {\n                if (e.features.length > 0) {\n                    if (hoveredDistrictRef.current && hoveredDistrictRef.current > -1) {\n\n                        map.setFeatureState(\n                            { source: 'district-source', id: hoveredDistrictRef.current },\n                            { hover: false }\n                        );\n                    }\n\n                    let _hoveredDistrict = e.features[0].id;\n\n                    map.setFeatureState(\n                        { source: 'district-source', id: _hoveredDistrict },\n                        { hover: true }\n                    );\n\n                    setHoveredDistrict(_hoveredDistrict);\n                }\n\n            });\n\n            // When the mouse leaves the state-fill layer, update the feature state of the\n            // previously hovered feature.\n            map.on('mouseleave', 'district-layer', function () {\n                if (hoveredDistrictRef.current) {\n                    map.setFeatureState(\n                        { source: 'district-source', id: hoveredDistrictRef.current },\n                        { hover: false }\n                    );\n                }\n                setHoveredDistrict(null);\n            });\n\n            map.on('move', () => {\n                const { lng, lat } = map.getCenter();\n\n                setLong(lng.toFixed(4));\n                setLat(lat.toFixed(4));\n                setZoom(map.getZoom().toFixed(2));\n            });\n\n        });\n        }, []);\n\n  return (\n      <div>\n        <div className=\"sidebar\">\n          Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n        </div>\n          <div className=\"district-map-wrapper\">\n\n              <div className=\"info\">\n                  Current hovered district: <strong>{hoveredDistrict ? hoveredDistrict : \"\"}</strong>\n              </div>\n              <div id=\"districtDetailMap\" className=\"map\">\n                  <div style={{ height: \"100%\" }} ref={mapContainer}>\n                  </div>\n              </div>\n          </div>\n      </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}