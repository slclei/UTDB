{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { generateID } from './util/uid';\nexport function layerMouseTouchEvents(WrappedComponent) {\n  return function (_super) {\n    __extends(EnhancedLayer, _super);\n\n    function EnhancedLayer() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n\n      _this.hover = [];\n      _this.draggedChildren = undefined;\n      _this.id = _this.props.id || \"layer-\" + generateID();\n\n      _this.getChildren = function () {\n        return [].concat(_this.props.children).filter(function (el) {\n          return typeof el !== 'undefined';\n        });\n      };\n\n      _this.getChildFromId = function (children, id) {\n        return children[id];\n      };\n\n      _this.areFeaturesDraggable = function (children, featureIds) {\n        if (featureIds === void 0) {\n          featureIds = _this.hover;\n        }\n\n        return !!featureIds.map(function (id) {\n          return _this.getChildFromId(children, id) ? _this.getChildFromId(children, id).props.draggable : false;\n        }).filter(Boolean).length;\n      };\n\n      _this.onClick = function (evt) {\n        var features = evt.features;\n\n        var children = _this.getChildren();\n\n        var map = _this.props.map;\n\n        if (features) {\n          features.forEach(function (feature) {\n            var id = feature.properties.id;\n\n            if (children) {\n              var child = _this.getChildFromId(children, id);\n\n              var onClick = child && child.props.onClick;\n\n              if (onClick) {\n                onClick(__assign({}, evt, {\n                  feature: feature,\n                  map: map\n                }));\n              }\n            }\n          });\n        }\n      };\n\n      _this.onMouseEnter = function (evt) {\n        var children = _this.getChildren();\n\n        var map = _this.props.map;\n        _this.hover = [];\n        evt.features.forEach(function (feature) {\n          var id = feature.properties.id;\n\n          var child = _this.getChildFromId(children, id);\n\n          _this.hover.push(id);\n\n          var onMouseEnter = child && child.props.onMouseEnter;\n\n          if (onMouseEnter) {\n            onMouseEnter(__assign({}, evt, {\n              feature: feature,\n              map: map\n            }));\n          }\n        });\n\n        if (_this.areFeaturesDraggable(children)) {\n          map.dragPan.disable();\n        }\n      };\n\n      _this.onMouseLeave = function (evt) {\n        var children = _this.getChildren();\n\n        var map = _this.props.map;\n\n        if (_this.areFeaturesDraggable(children)) {\n          map.dragPan.enable();\n        }\n\n        _this.hover.forEach(function (id) {\n          var child = _this.getChildFromId(children, id);\n\n          var onMouseLeave = child && child.props.onMouseLeave;\n\n          if (onMouseLeave) {\n            onMouseLeave(__assign({}, evt, {\n              map: map\n            }));\n          }\n        });\n\n        if (!_this.draggedChildren) {\n          _this.hover = [];\n        }\n      };\n\n      _this.onMouseDown = function () {\n        if (_this.hover.length) {\n          _this.onFeatureDown('mousedown');\n        }\n      };\n\n      _this.onTouchStart = function (evt) {\n        _this.hover = evt.features.map(function (feature) {\n          return feature.properties.id;\n        });\n\n        if (_this.hover.length) {\n          _this.onFeatureDown('touchstart');\n        }\n      };\n\n      _this.onFeatureDown = function (startEvent) {\n        var moveEvent = startEvent === 'mousedown' ? 'mousemove' : 'touchmove';\n        var endEvent = startEvent === 'mousedown' ? 'mouseup' : 'touchend';\n        var map = _this.props.map;\n        map.once(moveEvent, _this.onFeatureDragStart);\n        map.on(moveEvent, _this.onFeatureDrag);\n        map.once(endEvent, function (evt) {\n          map.off(moveEvent, _this.onFeatureDragStart);\n          map.off(moveEvent, _this.onFeatureDrag);\n\n          _this.onFeatureDragEnd(evt);\n        });\n      };\n\n      _this.onFeatureDragStart = function (evt) {\n        var map = _this.props.map;\n\n        var children = _this.getChildren();\n\n        _this.hover.forEach(function (id) {\n          var child = _this.getChildFromId(children, id);\n\n          if (child && !child.props.draggable) {\n            return;\n          }\n\n          var onDragStart = child && child.props.onDragStart;\n\n          if (onDragStart) {\n            onDragStart(__assign({}, evt, {\n              map: map\n            }));\n          }\n        });\n      };\n\n      _this.onFeatureDrag = function (evt) {\n        var children = _this.getChildren();\n\n        var map = _this.props.map;\n        var _a = evt.lngLat,\n            lng = _a.lng,\n            lat = _a.lat;\n        _this.draggedChildren = [];\n\n        _this.hover.forEach(function (id) {\n          var child = _this.getChildFromId(children, id);\n\n          var onDrag = child && child.props.onDrag;\n\n          if (child && child.props.draggable) {\n            _this.draggedChildren.push(React.cloneElement(child, {\n              coordinates: [lng, lat]\n            }));\n\n            if (onDrag) {\n              onDrag(__assign({}, evt, {\n                map: map\n              }));\n            }\n          }\n        });\n\n        _this.forceUpdate();\n      };\n\n      _this.onFeatureDragEnd = function (evt) {\n        var map = _this.props.map;\n\n        var children = _this.getChildren();\n\n        _this.hover.forEach(function (id) {\n          var child = _this.getChildFromId(children, id);\n\n          var onDragEnd = child && child.props.onDragEnd;\n\n          if (onDragEnd && child.props.draggable && _this.draggedChildren) {\n            onDragEnd(__assign({}, evt, {\n              map: map\n            }));\n          }\n        });\n\n        _this.draggedChildren = undefined;\n      };\n\n      return _this;\n    }\n\n    EnhancedLayer.prototype.componentDidMount = function () {\n      var map = this.props.map;\n      map.on('click', this.id, this.onClick);\n      map.on('mouseenter', this.id, this.onMouseEnter);\n      map.on('mouseleave', this.id, this.onMouseLeave);\n      map.on('mousedown', this.id, this.onMouseDown);\n      map.on('touchstart', this.id, this.onTouchStart);\n    };\n\n    EnhancedLayer.prototype.componentWillUnmount = function () {\n      var map = this.props.map;\n      map.off('click', this.onClick);\n      map.off('mouseenter', this.onMouseEnter);\n      map.off('mouseleave', this.onMouseLeave);\n      map.off('mousedown', this.onMouseDown);\n      map.off('touchstart', this.onTouchStart);\n    };\n\n    EnhancedLayer.prototype.render = function () {\n      return React.createElement(WrappedComponent, __assign({}, this.props, {\n        id: this.id,\n        map: this.props.map,\n        draggedChildren: this.draggedChildren\n      }));\n    };\n\n    return EnhancedLayer;\n  }(React.Component);\n}\nexport default layerMouseTouchEvents;","map":{"version":3,"mappings":"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","names":["React","generateID","layerMouseTouchEvents","WrappedComponent","__extends","_this","undefined","props","id","concat","children","filter","el","featureIds","hover","map","getChildFromId","draggable","Boolean","length","evt","features","getChildren","forEach","child","onClick","feature","push","onMouseEnter","areFeaturesDraggable","dragPan","disable","enable","onMouseLeave","draggedChildren","onFeatureDown","properties","startEvent","moveEvent","endEvent","once","onFeatureDragStart","on","onFeatureDrag","off","onFeatureDragEnd","onDragStart","lng","lat","onDrag","cloneElement","coordinates","forceUpdate","onDragEnd","EnhancedLayer","onMouseDown","onTouchStart","__assign","Component"],"sources":["D:\\Github\\CUSP_DataBase\\CUSP_DB\\src\\main\\mapbox-project\\node_modules\\react-mapbox-gl\\src\\layer-events-hoc.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Props as FeatureProps } from './feature';\nimport { generateID } from './util/uid';\nimport { LayerCommonProps, Props as LayerProps } from './layer';\nimport { Map } from 'mapbox-gl';\n\nexport interface EnhancedLayerProps {\n  id?: string;\n  map: Map;\n}\n\nexport type OwnProps = EnhancedLayerProps & LayerCommonProps;\n\ntype LayerChildren = React.ReactElement<FeatureProps> | undefined;\n\nexport function layerMouseTouchEvents(\n  WrappedComponent: React.ComponentClass<LayerProps>\n) {\n  return class EnhancedLayer extends React.Component<OwnProps> {\n    public hover: number[] = [];\n    public draggedChildren:\n      | Array<React.ReactElement<FeatureProps>>\n      | undefined = undefined;\n\n    public id: string = this.props.id || `layer-${generateID()}`;\n\n    public getChildren = () =>\n      ([] as LayerChildren[])\n        .concat(this.props.children)\n        .filter(\n          (el): el is React.ReactElement<FeatureProps> =>\n            typeof el !== 'undefined'\n        );\n    public getChildFromId = (\n      children: Array<React.ReactElement<FeatureProps>>,\n      id: number\n    ) => children[id];\n\n    public areFeaturesDraggable = (\n      children: Array<React.ReactElement<FeatureProps>>,\n      featureIds: number[] = this.hover\n    ) =>\n      !!featureIds\n        .map(\n          id =>\n            this.getChildFromId(children, id)\n              ? this.getChildFromId(children, id)!.props.draggable\n              : false\n        )\n        .filter(Boolean).length;\n\n    // tslint:disable-next-line:no-any\n    public onClick = (evt: any) => {\n      const features = evt.features as Array<\n        GeoJSON.Feature<GeoJSON.GeometryObject, { id: number }>\n      >;\n      const children = this.getChildren();\n\n      const { map } = this.props;\n\n      if (features) {\n        features.forEach(feature => {\n          const { id } = feature.properties;\n          if (children) {\n            const child = this.getChildFromId(children, id);\n\n            const onClick = child && child.props.onClick;\n            if (onClick) {\n              onClick({ ...evt, feature, map });\n            }\n          }\n        });\n      }\n    };\n\n    // tslint:disable-next-line:no-any\n    public onMouseEnter = (evt: any) => {\n      const children = this.getChildren();\n\n      const { map } = this.props;\n      this.hover = [];\n\n      evt.features.forEach(\n        (feature: GeoJSON.Feature<GeoJSON.GeometryObject, { id: number }>) => {\n          const { id } = feature.properties;\n          const child = this.getChildFromId(children, id);\n          this.hover.push(id);\n\n          const onMouseEnter = child && child.props.onMouseEnter;\n          if (onMouseEnter) {\n            onMouseEnter({ ...evt, feature, map });\n          }\n        }\n      );\n\n      if (this.areFeaturesDraggable(children)) {\n        map.dragPan.disable();\n      }\n    };\n\n    // tslint:disable-next-line:no-any\n    public onMouseLeave = (evt: any) => {\n      const children = this.getChildren();\n      const { map } = this.props;\n      if (this.areFeaturesDraggable(children)) {\n        map.dragPan.enable();\n      }\n\n      this.hover.forEach(id => {\n        const child = this.getChildFromId(children, id);\n        const onMouseLeave = child && child.props.onMouseLeave;\n        if (onMouseLeave) {\n          onMouseLeave({ ...evt, map });\n        }\n      });\n\n      if (!this.draggedChildren) {\n        this.hover = [];\n      }\n    };\n\n    public onMouseDown = () => {\n      // User did this on a feature\n      if (this.hover.length) {\n        this.onFeatureDown('mousedown');\n      }\n    };\n\n    // tslint:disable-next-line:no-any\n    public onTouchStart = (evt: any) => {\n      // tslint:disable-next-line:no-any\n      this.hover = evt.features.map((feature: any) => feature.properties.id);\n\n      if (this.hover.length) {\n        this.onFeatureDown('touchstart');\n      }\n    };\n\n    public onFeatureDown = (startEvent: string) => {\n      const moveEvent = startEvent === 'mousedown' ? 'mousemove' : 'touchmove';\n      const endEvent = startEvent === 'mousedown' ? 'mouseup' : 'touchend';\n      const { map } = this.props;\n\n      map.once(moveEvent, this.onFeatureDragStart);\n      map.on(moveEvent, this.onFeatureDrag);\n\n      // tslint:disable-next-line:no-any\n      map.once(endEvent, (evt: any) => {\n        map.off(moveEvent, this.onFeatureDragStart);\n        map.off(moveEvent, this.onFeatureDrag);\n        this.onFeatureDragEnd(evt);\n      });\n    };\n\n    // tslint:disable-next-line:no-any\n    public onFeatureDragStart = (evt: any) => {\n      const { map } = this.props;\n      const children = this.getChildren();\n\n      this.hover.forEach(id => {\n        const child = this.getChildFromId(children, id);\n        if (child && !child.props.draggable) {\n          return;\n        }\n\n        const onDragStart = child && child.props.onDragStart;\n        if (onDragStart) {\n          onDragStart({ ...evt, map });\n        }\n      });\n    };\n\n    // tslint:disable-next-line:no-any\n    public onFeatureDrag = (evt: any) => {\n      const children = this.getChildren();\n      const { map } = this.props;\n      const { lngLat: { lng, lat } } = evt;\n      this.draggedChildren = [];\n\n      this.hover.forEach(id => {\n        const child = this.getChildFromId(children, id);\n        const onDrag = child && child.props.onDrag;\n\n        // drag children if draggable\n        if (child && child.props.draggable) {\n          this.draggedChildren!.push(\n            React.cloneElement(child, {\n              coordinates: [lng, lat]\n            })\n          );\n\n          if (onDrag) {\n            onDrag({ ...evt, map });\n          }\n        }\n      });\n\n      this.forceUpdate();\n    };\n\n    // tslint:disable-next-line:no-any\n    public onFeatureDragEnd = (evt: any) => {\n      const { map } = this.props;\n      const children = this.getChildren();\n\n      this.hover.forEach(id => {\n        const child = this.getChildFromId(children, id);\n        const onDragEnd = child && child.props.onDragEnd;\n\n        if (onDragEnd && child!.props.draggable && this.draggedChildren) {\n          onDragEnd({ ...evt, map });\n        }\n      });\n\n      this.draggedChildren = undefined;\n    };\n\n    public componentDidMount() {\n      const { map } = this.props;\n\n      map.on('click', this.id, this.onClick);\n      map.on('mouseenter', this.id, this.onMouseEnter);\n      map.on('mouseleave', this.id, this.onMouseLeave);\n      map.on('mousedown', this.id, this.onMouseDown);\n      map.on('touchstart', this.id, this.onTouchStart);\n    }\n\n    public componentWillUnmount() {\n      const { map } = this.props;\n\n      map.off('click', this.onClick);\n      map.off('mouseenter', this.onMouseEnter);\n      map.off('mouseleave', this.onMouseLeave);\n      map.off('mousedown', this.onMouseDown);\n      map.off('touchstart', this.onTouchStart);\n    }\n\n    public render() {\n      return (\n        <WrappedComponent\n          {...this.props}\n          id={this.id}\n          map={this.props.map}\n          draggedChildren={this.draggedChildren}\n        />\n      );\n    }\n  };\n}\n\nexport default layerMouseTouchEvents;\n"]},"metadata":{},"sourceType":"module"}