{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../../../../config.js\";\nimport t from \"../../../../request.js\";\nimport { bidiText as i } from \"../../../../core/BidiText.js\";\nimport s from \"../../../../core/Error.js\";\nimport r from \"../../../../core/Logger.js\";\nimport { isNone as n, isSome as o } from \"../../../../core/maybe.js\";\nimport { throwIfAborted as a, isAbortError as h } from \"../../../../core/promiseUtils.js\";\nimport { pt2px as c } from \"../../../../core/screenUtils.js\";\nimport { s as u } from \"../../../../chunks/vec2.js\";\nimport { c as d } from \"../../../../chunks/vec2f32.js\";\nimport l from \"../../../../symbols/cim/Rasterizer.js\";\nimport { TEXTURE_BINDING_GLYPH_ATLAS as m, TEXTURE_BINDING_SPRITE_ATLAS as g } from \"./definitions.js\";\nimport { MosaicType as p } from \"./enums.js\";\nimport { getFullyQualifiedFontName as f } from \"./fontUtils.js\";\nimport _ from \"./GlyphMosaic.js\";\nimport w from \"./GlyphSource.js\";\nimport y from \"./SDFConverter.js\";\nimport M from \"./SpriteMosaic.js\";\nimport { is3D as v, charCodes as I, isSimple as R, isSVGResource as b, isImageResource as z, shouldRepeat as T, getPMSResourceSize as j, isGIF as x, isPNG as S, getUrl as U, isSVGImage as B } from \"./Utils.js\";\nimport G, { isPNG as P, isAnimatedPNG as C } from \"./animatedFormats/apng.js\";\nimport L, { isGIF as F, isAnimatedGIF as q } from \"./animatedFormats/gif.js\";\nimport { ok as A } from \"./util/Result.js\";\nimport { keyFromSymbol as N } from \"./util/symbolUtils.js\";\nimport { QueueProcessor as $ } from \"../../../support/QueueProcessor.js\";\nimport { TextureSamplingMode as E } from \"../../../webgl/enums.js\";\nconst k = d(),\n      O = \"arial-unicode-ms-regular\",\n      Q = 126,\n      H = r.getLogger(\"esri.views.2d.engine.webgl.TextureManager\");\n\nasync function V(e, i) {\n  const r = U(e);\n  let n;\n  const o = \";base64,\";\n\n  if (r.includes(o)) {\n    const e = r.indexOf(o) + o.length,\n          t = r.substring(e),\n          i = atob(t),\n          s = new Uint8Array(i.length);\n\n    for (let r = 0; r < i.length; r++) s[r] = i.charCodeAt(r);\n\n    n = s.buffer;\n  } else try {\n    const {\n      data: e\n    } = await t(r, {\n      responseType: \"array-buffer\",\n      ...i\n    });\n    n = e;\n  } catch (a) {\n    if (!h(a)) return new s(\"mapview-invalid-resource\", `Could not fetch requested resource at ${r}`);\n  }\n\n  return n;\n}\n\nfunction Y(e, t) {\n  const i = Math.round(c(t) * window.devicePixelRatio),\n        s = i >= 128 ? 2 : 4;\n  return Math.min(e, i * s);\n}\n\nconst D = (e, t, i) => H.error(new s(e, t, i));\n\nclass J {\n  constructor(e, t, i) {\n    this.mosaicType = e, this.page = t, this.sdf = i;\n  }\n\n  static fromMosaic(e, t) {\n    return new J(e, t.page, t.sdf);\n  }\n\n}\n\nclass W {\n  constructor(i, r) {\n    this.resourceManager = r, this._invalidFontsMap = new Map(), this._sdfConverter = new y(Q), this._bindingInfos = new Array(), this._hashToBindingIndex = new Map(), this._ongoingRasterizations = new Map(), this._imageRequestQueue = new $({\n      concurrency: 10,\n      process: async (e, i) => {\n        a(i);\n\n        try {\n          return await t(e, {\n            responseType: \"image\",\n            signal: i\n          });\n        } catch (r) {\n          if (!h(r)) throw new s(\"mapview-invalid-resource\", `Could not fetch requested resource at ${e}`, r);\n          throw r;\n        }\n      }\n    }), this._spriteMosaic = new M(i, 2048, 2048, 500), this._glyphSource = new w(`${e.fontsUrl}/{fontstack}/{range}.pbf`), this._glyphMosaic = new _(1024, 1024, this._glyphSource), this._rasterizer = new l(r);\n  }\n\n  dispose() {\n    this._spriteMosaic.dispose(), this._glyphMosaic.dispose(), this._rasterizer.dispose(), this._sdfConverter.dispose(), this._spriteMosaic = null, this._glyphMosaic = null, this._sdfConverter = null, this._hashToBindingIndex.clear(), this._hashToBindingIndex = null, this._bindingInfos = null, this._ongoingRasterizations.clear(), this._ongoingRasterizations = null, this._imageRequestQueue.clear(), this._imageRequestQueue = null;\n  }\n\n  get sprites() {\n    return this._spriteMosaic;\n  }\n\n  get glyphs() {\n    return this._glyphMosaic;\n  }\n\n  async rasterizeItem(e, t, i, s) {\n    if (n(e)) return D(\"mapview-null-resource\", \"Unable to rasterize null resource\"), null;\n\n    switch (e.type) {\n      case \"text\":\n      case \"esriTS\":\n        {\n          const t = await this._rasterizeText(e, i, s);\n          return t.forEach(e => this._setTextureBinding(p.GLYPH, e)), {\n            glyphMosaicItems: t\n          };\n        }\n\n      default:\n        {\n          if (v(e)) return D(\"mapview-invalid-type\", `MapView does not support symbol type: ${e.type}`, e), null;\n          const i = await this._rasterizeSpriteSymbol(e, t, s);\n          return A(i) && i && this._setTextureBinding(p.SPRITE, i), {\n            spriteMosaicItem: i\n          };\n        }\n    }\n  }\n\n  bindTextures(e, t, i) {\n    let s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n    if (0 === i.textureBinding) return;\n    const r = this._bindingInfos[i.textureBinding - 1],\n          n = r.page,\n          o = s ? E.LINEAR_MIPMAP_LINEAR : E.LINEAR;\n\n    switch (r.mosaicType) {\n      case p.SPRITE:\n        {\n          const i = this.sprites.getWidth(n),\n                s = this.sprites.getHeight(n),\n                r = u(k, i, s);\n          return this._spriteMosaic.bind(e, o, n, g), t.setUniform1i(\"u_texture\", g), void t.setUniform2fv(\"u_mosaicSize\", r);\n        }\n\n      case p.GLYPH:\n        {\n          const i = this.glyphs.width,\n                s = this.glyphs.height,\n                r = u(k, i, s);\n          return this._glyphMosaic.bind(e, o, n, m), t.setUniform1i(\"u_texture\", m), void t.setUniform2fv(\"u_mosaicSize\", r);\n        }\n\n      default:\n        H.error(\"mapview-texture-manager\", `Cannot handle unknown type ${r.mosaicType}`);\n    }\n  }\n\n  _hashMosaic(e, t) {\n    return 1 | e << 1 | (t.sdf ? 1 : 0) << 2 | t.page << 3;\n  }\n\n  _setTextureBinding(e, t) {\n    const i = this._hashMosaic(e, t);\n\n    if (!this._hashToBindingIndex.has(i)) {\n      const s = J.fromMosaic(e, t),\n            r = this._bindingInfos.length + 1;\n      this._hashToBindingIndex.set(i, r), this._bindingInfos.push(s);\n    }\n\n    t.textureBinding = this._hashToBindingIndex.get(i);\n  }\n\n  async _rasterizeText(e, t, s) {\n    let r, n;\n\n    if (\"cim\" in e) {\n      const t = e;\n      r = t.fontName, n = t.text;\n    } else {\n      const t = e;\n      r = f(t.font), n = t.text;\n    }\n\n    const o = this._invalidFontsMap.has(r),\n          a = t || I(i(n)[0]);\n\n    try {\n      return await this._glyphMosaic.getGlyphItems(o ? O : r, a, s);\n    } catch (h) {\n      return D(\"mapview-invalid-resource\", `Couldn't find font ${r}. Falling back to Arial Unicode MS Regular`), this._invalidFontsMap.set(r, !0), this._glyphMosaic.getGlyphItems(O, a, s);\n    }\n  }\n\n  async _rasterizeSpriteSymbol(e, t, i) {\n    if (R(e)) return null;\n    const r = N(e);\n    if (this._spriteMosaic.has(r)) return this._spriteMosaic.getSpriteItem(r);\n    if (b(e) || z(e)) return this._handleAsyncResource(r, e, i);\n\n    const n = 1,\n          o = this._rasterizer.rasterizeJSONResource(e, n);\n\n    if (o) {\n      const {\n        size: t,\n        image: i,\n        sdf: s,\n        simplePattern: n\n      } = o;\n      return this._addItemToMosaic(r, t, {\n        type: \"static\",\n        data: i\n      }, T(e), s, n);\n    }\n\n    return new s(\"TextureManager\", \"unrecognized or null rasterized image\");\n  }\n\n  async _handleAsyncResource(e, t, i) {\n    if (this._ongoingRasterizations.has(e)) return this._ongoingRasterizations.get(e);\n    let s;\n    s = b(t) ? this._handleSVG(t, e, i) : this._handleImage(t, e, i), this._ongoingRasterizations.set(e, s);\n\n    try {\n      await s, this._ongoingRasterizations.delete(e);\n    } catch {\n      this._ongoingRasterizations.delete(e);\n    }\n\n    return s;\n  }\n\n  async _handleSVG(e, t, i) {\n    const s = [Q, Q],\n          r = await this._sdfConverter.draw(e.path, i);\n    return this._addItemToMosaic(t, s, {\n      type: \"static\",\n      data: new Uint32Array(r.buffer)\n    }, !1, !0, !0);\n  }\n\n  async _handleGIFOrPNG(e, t, i) {\n    const r = await V(e, i);\n\n    if (A(r)) {\n      const o = F(r),\n            a = P(r);\n      if (!o && !a) return new s(\"mapview-invalid-resource\", \"Image data is neither GIF nor PNG!\");\n      let c;\n\n      try {\n        o && q(r) ? c = await L.create(r, i) : a && C(r) && (c = await G.create(r, i));\n      } catch (n) {\n        if (!h(n)) return new s(\"mapview-invalid-resource\", \"Could not fetch requested resource!\");\n      }\n\n      if (c && A(c)) return this._addItemToMosaic(t, [c.width, c.height], {\n        type: \"animated\",\n        data: c\n      }, T(e), !1, !1);\n      const u = new Blob([r], {\n        type: o ? \"image/gif\" : \"image/png\"\n      }),\n            d = await this._imageFromBlob(u);\n\n      if (d && d instanceof HTMLImageElement) {\n        let i = d.width,\n            s = d.height;\n        \"esriPMS\" === e.type && (i = Math.round(Y(d.width, j(e))), s = Math.round(d.height * (i / d.width)));\n\n        const r = \"cim\" in e ? e.cim.colorSubstitutions : void 0,\n              {\n          size: n,\n          sdf: o,\n          image: a\n        } = this._rasterizer.rasterizeImageResource(i, s, d, r);\n\n        return this._addItemToMosaic(t, n, {\n          type: \"static\",\n          data: a\n        }, T(e), o, !1);\n      }\n    }\n\n    return new s(\"mapview-invalid-resource\", \"Could not handle resource!\");\n  }\n\n  async _handleImage(e, t, i) {\n    if (x(e) || S(e)) return this._handleGIFOrPNG(e, t, i);\n    const r = U(e);\n\n    try {\n      let s;\n      const a = this.resourceManager.getResource(r);\n      if (o(a)) s = a;else {\n        const {\n          data: e\n        } = await this._imageRequestQueue.push(r, { ...i\n        });\n        s = e;\n      }\n      if (B(r)) if (\"width\" in e && \"height\" in e) s.width = c(e.width), s.height = c(e.height);else if (\"cim\" in e) {\n        var n;\n        const t = e.cim;\n        s.width = c(null != (n = t.width) ? n : t.scaleX * t.size), s.height = c(t.size);\n      }\n      if (!s.width || !s.height) return null;\n      let h = s.width,\n          u = s.height;\n      \"esriPMS\" === e.type && (h = Math.round(Y(s.width, j(e))), u = Math.round(s.height * (h / s.width)));\n\n      const d = \"cim\" in e ? e.cim.colorSubstitutions : void 0,\n            {\n        size: l,\n        sdf: m,\n        image: g\n      } = this._rasterizer.rasterizeImageResource(h, u, s, d);\n\n      return this._addItemToMosaic(t, l, {\n        type: \"static\",\n        data: g\n      }, T(e), m, !1);\n    } catch (a) {\n      if (!h(a)) return new s(\"mapview-invalid-resource\", `Could not fetch requested resource at ${r}. ${a.message}`);\n    }\n  }\n\n  async _imageFromBlob(e) {\n    const t = window.URL.createObjectURL(e);\n\n    try {\n      const {\n        data: e\n      } = await this._imageRequestQueue.push(t);\n      return window.URL.revokeObjectURL(t), e;\n    } catch (i) {\n      if (window.URL.revokeObjectURL(t), !h(i)) return new s(\"mapview-invalid-resource\", `Could not fetch requested resource at ${t}`);\n      throw i;\n    }\n  }\n\n  _addItemToMosaic(e, t, i, s, r, n) {\n    return this._spriteMosaic.addSpriteItem(e, t, i, s, r, n);\n  }\n\n}\n\nexport { W as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/webgl/TextureManager.js"],"names":["e","t","bidiText","i","s","r","isNone","n","isSome","o","throwIfAborted","a","isAbortError","h","pt2px","c","u","d","l","TEXTURE_BINDING_GLYPH_ATLAS","m","TEXTURE_BINDING_SPRITE_ATLAS","g","MosaicType","p","getFullyQualifiedFontName","f","_","w","y","M","is3D","v","charCodes","I","isSimple","R","isSVGResource","b","isImageResource","z","shouldRepeat","T","getPMSResourceSize","j","isGIF","x","isPNG","S","getUrl","U","isSVGImage","B","G","P","isAnimatedPNG","C","L","F","isAnimatedGIF","q","ok","A","keyFromSymbol","N","QueueProcessor","$","TextureSamplingMode","E","k","O","Q","H","getLogger","V","includes","indexOf","length","substring","atob","Uint8Array","charCodeAt","buffer","data","responseType","Y","Math","round","window","devicePixelRatio","min","D","error","J","constructor","mosaicType","page","sdf","fromMosaic","W","resourceManager","_invalidFontsMap","Map","_sdfConverter","_bindingInfos","Array","_hashToBindingIndex","_ongoingRasterizations","_imageRequestQueue","concurrency","process","signal","_spriteMosaic","_glyphSource","fontsUrl","_glyphMosaic","_rasterizer","dispose","clear","sprites","glyphs","rasterizeItem","type","_rasterizeText","forEach","_setTextureBinding","GLYPH","glyphMosaicItems","_rasterizeSpriteSymbol","SPRITE","spriteMosaicItem","bindTextures","textureBinding","LINEAR_MIPMAP_LINEAR","LINEAR","getWidth","getHeight","bind","setUniform1i","setUniform2fv","width","height","_hashMosaic","has","set","push","get","fontName","text","font","getGlyphItems","getSpriteItem","_handleAsyncResource","rasterizeJSONResource","size","image","simplePattern","_addItemToMosaic","_handleSVG","_handleImage","delete","draw","path","Uint32Array","_handleGIFOrPNG","create","Blob","_imageFromBlob","HTMLImageElement","cim","colorSubstitutions","rasterizeImageResource","getResource","scaleX","message","URL","createObjectURL","revokeObjectURL","addSpriteItem","default"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,uBAAb;AAAqC,OAAOC,CAAP,MAAa,wBAAb;AAAsC,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,8BAAzB;AAAwD,OAAOC,CAAP,MAAa,2BAAb;AAAyC,OAAOC,CAAP,MAAa,4BAAb;AAA0C,SAAOC,MAAM,IAAIC,CAAjB,EAAmBC,MAAM,IAAIC,CAA7B,QAAmC,2BAAnC;AAA+D,SAAOC,cAAc,IAAIC,CAAzB,EAA2BC,YAAY,IAAIC,CAA3C,QAAiD,kCAAjD;AAAoF,SAAOC,KAAK,IAAIC,CAAhB,QAAsB,iCAAtB;AAAwD,SAAOX,CAAC,IAAIY,CAAZ,QAAkB,4BAAlB;AAA+C,SAAOD,CAAC,IAAIE,CAAZ,QAAkB,+BAAlB;AAAkD,OAAOC,CAAP,MAAa,uCAAb;AAAqD,SAAOC,2BAA2B,IAAIC,CAAtC,EAAwCC,4BAA4B,IAAIC,CAAxE,QAA8E,kBAA9E;AAAiG,SAAOC,UAAU,IAAIC,CAArB,QAA2B,YAA3B;AAAwC,SAAOC,yBAAyB,IAAIC,CAApC,QAA0C,gBAA1C;AAA2D,OAAOC,CAAP,MAAa,kBAAb;AAAgC,OAAOC,CAAP,MAAa,kBAAb;AAAgC,OAAOC,CAAP,MAAa,mBAAb;AAAiC,OAAOC,CAAP,MAAa,mBAAb;AAAiC,SAAOC,IAAI,IAAIC,CAAf,EAAiBC,SAAS,IAAIC,CAA9B,EAAgCC,QAAQ,IAAIC,CAA5C,EAA8CC,aAAa,IAAIC,CAA/D,EAAiEC,eAAe,IAAIC,CAApF,EAAsFC,YAAY,IAAIC,CAAtG,EAAwGC,kBAAkB,IAAIC,CAA9H,EAAgIC,KAAK,IAAIC,CAAzI,EAA2IC,KAAK,IAAIC,CAApJ,EAAsJC,MAAM,IAAIC,CAAhK,EAAkKC,UAAU,IAAIC,CAAhL,QAAsL,YAAtL;AAAmM,OAAOC,CAAP,IAAUN,KAAK,IAAIO,CAAnB,EAAqBC,aAAa,IAAIC,CAAtC,QAA4C,2BAA5C;AAAwE,OAAOC,CAAP,IAAUZ,KAAK,IAAIa,CAAnB,EAAqBC,aAAa,IAAIC,CAAtC,QAA4C,0BAA5C;AAAuE,SAAOC,EAAE,IAAIC,CAAb,QAAmB,kBAAnB;AAAsC,SAAOC,aAAa,IAAIC,CAAxB,QAA8B,uBAA9B;AAAsD,SAAOC,cAAc,IAAIC,CAAzB,QAA+B,oCAA/B;AAAoE,SAAOC,mBAAmB,IAAIC,CAA9B,QAAoC,yBAApC;AAA8D,MAAMC,CAAC,GAACpD,CAAC,EAAT;AAAA,MAAYqD,CAAC,GAAC,0BAAd;AAAA,MAAyCC,CAAC,GAAC,GAA3C;AAAA,MAA+CC,CAAC,GAACnE,CAAC,CAACoE,SAAF,CAAY,2CAAZ,CAAjD;;AAA0G,eAAeC,CAAf,CAAiB1E,CAAjB,EAAmBG,CAAnB,EAAqB;AAAC,QAAME,CAAC,GAAC6C,CAAC,CAAClD,CAAD,CAAT;AAAa,MAAIO,CAAJ;AAAM,QAAME,CAAC,GAAC,UAAR;;AAAmB,MAAGJ,CAAC,CAACsE,QAAF,CAAWlE,CAAX,CAAH,EAAiB;AAAC,UAAMT,CAAC,GAACK,CAAC,CAACuE,OAAF,CAAUnE,CAAV,IAAaA,CAAC,CAACoE,MAAvB;AAAA,UAA8B5E,CAAC,GAACI,CAAC,CAACyE,SAAF,CAAY9E,CAAZ,CAAhC;AAAA,UAA+CG,CAAC,GAAC4E,IAAI,CAAC9E,CAAD,CAArD;AAAA,UAAyDG,CAAC,GAAC,IAAI4E,UAAJ,CAAe7E,CAAC,CAAC0E,MAAjB,CAA3D;;AAAoF,SAAI,IAAIxE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,CAAC,CAAC0E,MAAhB,EAAuBxE,CAAC,EAAxB,EAA2BD,CAAC,CAACC,CAAD,CAAD,GAAKF,CAAC,CAAC8E,UAAF,CAAa5E,CAAb,CAAL;;AAAqBE,IAAAA,CAAC,GAACH,CAAC,CAAC8E,MAAJ;AAAW,GAAjK,MAAsK,IAAG;AAAC,UAAK;AAACC,MAAAA,IAAI,EAACnF;AAAN,QAAS,MAAMC,CAAC,CAACI,CAAD,EAAG;AAAC+E,MAAAA,YAAY,EAAC,cAAd;AAA6B,SAAGjF;AAAhC,KAAH,CAArB;AAA4DI,IAAAA,CAAC,GAACP,CAAF;AAAI,GAApE,CAAoE,OAAMW,CAAN,EAAQ;AAAC,QAAG,CAACE,CAAC,CAACF,CAAD,CAAL,EAAS,OAAO,IAAIP,CAAJ,CAAM,0BAAN,EAAkC,yCAAwCC,CAAE,EAA5E,CAAP;AAAsF;;AAAA,SAAOE,CAAP;AAAS;;AAAA,SAAS8E,CAAT,CAAWrF,CAAX,EAAaC,CAAb,EAAe;AAAC,QAAME,CAAC,GAACmF,IAAI,CAACC,KAAL,CAAWxE,CAAC,CAACd,CAAD,CAAD,GAAKuF,MAAM,CAACC,gBAAvB,CAAR;AAAA,QAAiDrF,CAAC,GAACD,CAAC,IAAE,GAAH,GAAO,CAAP,GAAS,CAA5D;AAA8D,SAAOmF,IAAI,CAACI,GAAL,CAAS1F,CAAT,EAAWG,CAAC,GAACC,CAAb,CAAP;AAAuB;;AAAA,MAAMuF,CAAC,GAAC,CAAC3F,CAAD,EAAGC,CAAH,EAAKE,CAAL,KAASqE,CAAC,CAACoB,KAAF,CAAQ,IAAIxF,CAAJ,CAAMJ,CAAN,EAAQC,CAAR,EAAUE,CAAV,CAAR,CAAjB;;AAAuC,MAAM0F,CAAN,CAAO;AAACC,EAAAA,WAAW,CAAC9F,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAO;AAAC,SAAK4F,UAAL,GAAgB/F,CAAhB,EAAkB,KAAKgG,IAAL,GAAU/F,CAA5B,EAA8B,KAAKgG,GAAL,GAAS9F,CAAvC;AAAyC;;AAAiB,SAAV+F,UAAU,CAAClG,CAAD,EAAGC,CAAH,EAAK;AAAC,WAAO,IAAI4F,CAAJ,CAAM7F,CAAN,EAAQC,CAAC,CAAC+F,IAAV,EAAe/F,CAAC,CAACgG,GAAjB,CAAP;AAA6B;;AAAjH;;AAAkH,MAAME,CAAN,CAAO;AAACL,EAAAA,WAAW,CAAC3F,CAAD,EAAGE,CAAH,EAAK;AAAC,SAAK+F,eAAL,GAAqB/F,CAArB,EAAuB,KAAKgG,gBAAL,GAAsB,IAAIC,GAAJ,EAA7C,EAAqD,KAAKC,aAAL,GAAmB,IAAI1E,CAAJ,CAAM0C,CAAN,CAAxE,EAAiF,KAAKiC,aAAL,GAAmB,IAAIC,KAAJ,EAApG,EAA8G,KAAKC,mBAAL,GAAyB,IAAIJ,GAAJ,EAAvI,EAA+I,KAAKK,sBAAL,GAA4B,IAAIL,GAAJ,EAA3K,EAAmL,KAAKM,kBAAL,GAAwB,IAAI1C,CAAJ,CAAM;AAAC2C,MAAAA,WAAW,EAAC,EAAb;AAAgBC,MAAAA,OAAO,EAAC,OAAM9G,CAAN,EAAQG,CAAR,KAAY;AAACQ,QAAAA,CAAC,CAACR,CAAD,CAAD;;AAAK,YAAG;AAAC,iBAAO,MAAMF,CAAC,CAACD,CAAD,EAAG;AAACoF,YAAAA,YAAY,EAAC,OAAd;AAAsB2B,YAAAA,MAAM,EAAC5G;AAA7B,WAAH,CAAd;AAAkD,SAAtD,CAAsD,OAAME,CAAN,EAAQ;AAAC,cAAG,CAACQ,CAAC,CAACR,CAAD,CAAL,EAAS,MAAM,IAAID,CAAJ,CAAM,0BAAN,EAAkC,yCAAwCJ,CAAE,EAA5E,EAA8EK,CAA9E,CAAN;AAAuF,gBAAMA,CAAN;AAAQ;AAAC;AAAlN,KAAN,CAA3M,EAAsa,KAAK2G,aAAL,GAAmB,IAAIlF,CAAJ,CAAM3B,CAAN,EAAQ,IAAR,EAAa,IAAb,EAAkB,GAAlB,CAAzb,EAAgd,KAAK8G,YAAL,GAAkB,IAAIrF,CAAJ,CAAO,GAAE5B,CAAC,CAACkH,QAAS,0BAApB,CAAle,EAAihB,KAAKC,YAAL,GAAkB,IAAIxF,CAAJ,CAAM,IAAN,EAAW,IAAX,EAAgB,KAAKsF,YAArB,CAAniB,EAAskB,KAAKG,WAAL,GAAiB,IAAIlG,CAAJ,CAAMb,CAAN,CAAvlB;AAAgmB;;AAAAgH,EAAAA,OAAO,GAAE;AAAC,SAAKL,aAAL,CAAmBK,OAAnB,IAA6B,KAAKF,YAAL,CAAkBE,OAAlB,EAA7B,EAAyD,KAAKD,WAAL,CAAiBC,OAAjB,EAAzD,EAAoF,KAAKd,aAAL,CAAmBc,OAAnB,EAApF,EAAiH,KAAKL,aAAL,GAAmB,IAApI,EAAyI,KAAKG,YAAL,GAAkB,IAA3J,EAAgK,KAAKZ,aAAL,GAAmB,IAAnL,EAAwL,KAAKG,mBAAL,CAAyBY,KAAzB,EAAxL,EAAyN,KAAKZ,mBAAL,GAAyB,IAAlP,EAAuP,KAAKF,aAAL,GAAmB,IAA1Q,EAA+Q,KAAKG,sBAAL,CAA4BW,KAA5B,EAA/Q,EAAmT,KAAKX,sBAAL,GAA4B,IAA/U,EAAoV,KAAKC,kBAAL,CAAwBU,KAAxB,EAApV,EAAoX,KAAKV,kBAAL,GAAwB,IAA5Y;AAAiZ;;AAAW,MAAPW,OAAO,GAAE;AAAC,WAAO,KAAKP,aAAZ;AAA0B;;AAAU,MAANQ,MAAM,GAAE;AAAC,WAAO,KAAKL,YAAZ;AAAyB;;AAAmB,QAAbM,aAAa,CAACzH,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAOC,CAAP,EAAS;AAAC,QAAGG,CAAC,CAACP,CAAD,CAAJ,EAAQ,OAAO2F,CAAC,CAAC,uBAAD,EAAyB,mCAAzB,CAAD,EAA+D,IAAtE;;AAA2E,YAAO3F,CAAC,CAAC0H,IAAT;AAAe,WAAI,MAAJ;AAAW,WAAI,QAAJ;AAAa;AAAC,gBAAMzH,CAAC,GAAC,MAAM,KAAK0H,cAAL,CAAoB3H,CAApB,EAAsBG,CAAtB,EAAwBC,CAAxB,CAAd;AAAyC,iBAAOH,CAAC,CAAC2H,OAAF,CAAW5H,CAAC,IAAE,KAAK6H,kBAAL,CAAwBrG,CAAC,CAACsG,KAA1B,EAAgC9H,CAAhC,CAAd,GAAmD;AAAC+H,YAAAA,gBAAgB,EAAC9H;AAAlB,WAA1D;AAA+E;;AAAA;AAAQ;AAAC,cAAG+B,CAAC,CAAChC,CAAD,CAAJ,EAAQ,OAAO2F,CAAC,CAAC,sBAAD,EAAyB,yCAAwC3F,CAAC,CAAC0H,IAAK,EAAxE,EAA0E1H,CAA1E,CAAD,EAA8E,IAArF;AAA0F,gBAAMG,CAAC,GAAC,MAAM,KAAK6H,sBAAL,CAA4BhI,CAA5B,EAA8BC,CAA9B,EAAgCG,CAAhC,CAAd;AAAiD,iBAAO0D,CAAC,CAAC3D,CAAD,CAAD,IAAMA,CAAN,IAAS,KAAK0H,kBAAL,CAAwBrG,CAAC,CAACyG,MAA1B,EAAiC9H,CAAjC,CAAT,EAA6C;AAAC+H,YAAAA,gBAAgB,EAAC/H;AAAlB,WAApD;AAAyE;AAArY;AAAuY;;AAAAgI,EAAAA,YAAY,CAACnI,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAY;AAAA,QAALC,CAAK,uEAAH,CAAC,CAAE;AAAC,QAAG,MAAID,CAAC,CAACiI,cAAT,EAAwB;AAAO,UAAM/H,CAAC,GAAC,KAAKmG,aAAL,CAAmBrG,CAAC,CAACiI,cAAF,GAAiB,CAApC,CAAR;AAAA,UAA+C7H,CAAC,GAACF,CAAC,CAAC2F,IAAnD;AAAA,UAAwDvF,CAAC,GAACL,CAAC,GAACgE,CAAC,CAACiE,oBAAH,GAAwBjE,CAAC,CAACkE,MAArF;;AAA4F,YAAOjI,CAAC,CAAC0F,UAAT;AAAqB,WAAKvE,CAAC,CAACyG,MAAP;AAAc;AAAC,gBAAM9H,CAAC,GAAC,KAAKoH,OAAL,CAAagB,QAAb,CAAsBhI,CAAtB,CAAR;AAAA,gBAAiCH,CAAC,GAAC,KAAKmH,OAAL,CAAaiB,SAAb,CAAuBjI,CAAvB,CAAnC;AAAA,gBAA6DF,CAAC,GAACW,CAAC,CAACqD,CAAD,EAAGlE,CAAH,EAAKC,CAAL,CAAhE;AAAwE,iBAAO,KAAK4G,aAAL,CAAmByB,IAAnB,CAAwBzI,CAAxB,EAA0BS,CAA1B,EAA4BF,CAA5B,EAA8Be,CAA9B,GAAiCrB,CAAC,CAACyI,YAAF,CAAe,WAAf,EAA2BpH,CAA3B,CAAjC,EAA+D,KAAKrB,CAAC,CAAC0I,aAAF,CAAgB,cAAhB,EAA+BtI,CAA/B,CAA3E;AAA6G;;AAAA,WAAKmB,CAAC,CAACsG,KAAP;AAAa;AAAC,gBAAM3H,CAAC,GAAC,KAAKqH,MAAL,CAAYoB,KAApB;AAAA,gBAA0BxI,CAAC,GAAC,KAAKoH,MAAL,CAAYqB,MAAxC;AAAA,gBAA+CxI,CAAC,GAACW,CAAC,CAACqD,CAAD,EAAGlE,CAAH,EAAKC,CAAL,CAAlD;AAA0D,iBAAO,KAAK+G,YAAL,CAAkBsB,IAAlB,CAAuBzI,CAAvB,EAAyBS,CAAzB,EAA2BF,CAA3B,EAA6Ba,CAA7B,GAAgCnB,CAAC,CAACyI,YAAF,CAAe,WAAf,EAA2BtH,CAA3B,CAAhC,EAA8D,KAAKnB,CAAC,CAAC0I,aAAF,CAAgB,cAAhB,EAA+BtI,CAA/B,CAA1E;AAA4G;;AAAA;AAAQmE,QAAAA,CAAC,CAACoB,KAAF,CAAQ,yBAAR,EAAmC,8BAA6BvF,CAAC,CAAC0F,UAAW,EAA7E;AAArZ;AAAse;;AAAA+C,EAAAA,WAAW,CAAC9I,CAAD,EAAGC,CAAH,EAAK;AAAC,WAAO,IAAED,CAAC,IAAE,CAAL,GAAO,CAACC,CAAC,CAACgG,GAAF,GAAM,CAAN,GAAQ,CAAT,KAAa,CAApB,GAAsBhG,CAAC,CAAC+F,IAAF,IAAQ,CAArC;AAAuC;;AAAA6B,EAAAA,kBAAkB,CAAC7H,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAME,CAAC,GAAC,KAAK2I,WAAL,CAAiB9I,CAAjB,EAAmBC,CAAnB,CAAR;;AAA8B,QAAG,CAAC,KAAKyG,mBAAL,CAAyBqC,GAAzB,CAA6B5I,CAA7B,CAAJ,EAAoC;AAAC,YAAMC,CAAC,GAACyF,CAAC,CAACK,UAAF,CAAalG,CAAb,EAAeC,CAAf,CAAR;AAAA,YAA0BI,CAAC,GAAC,KAAKmG,aAAL,CAAmB3B,MAAnB,GAA0B,CAAtD;AAAwD,WAAK6B,mBAAL,CAAyBsC,GAAzB,CAA6B7I,CAA7B,EAA+BE,CAA/B,GAAkC,KAAKmG,aAAL,CAAmByC,IAAnB,CAAwB7I,CAAxB,CAAlC;AAA6D;;AAAAH,IAAAA,CAAC,CAACmI,cAAF,GAAiB,KAAK1B,mBAAL,CAAyBwC,GAAzB,CAA6B/I,CAA7B,CAAjB;AAAiD;;AAAoB,QAAdwH,cAAc,CAAC3H,CAAD,EAAGC,CAAH,EAAKG,CAAL,EAAO;AAAC,QAAIC,CAAJ,EAAME,CAAN;;AAAQ,QAAG,SAAQP,CAAX,EAAa;AAAC,YAAMC,CAAC,GAACD,CAAR;AAAUK,MAAAA,CAAC,GAACJ,CAAC,CAACkJ,QAAJ,EAAa5I,CAAC,GAACN,CAAC,CAACmJ,IAAjB;AAAsB,KAA9C,MAAkD;AAAC,YAAMnJ,CAAC,GAACD,CAAR;AAAUK,MAAAA,CAAC,GAACqB,CAAC,CAACzB,CAAC,CAACoJ,IAAH,CAAH,EAAY9I,CAAC,GAACN,CAAC,CAACmJ,IAAhB;AAAqB;;AAAA,UAAM3I,CAAC,GAAC,KAAK4F,gBAAL,CAAsB0C,GAAtB,CAA0B1I,CAA1B,CAAR;AAAA,UAAqCM,CAAC,GAACV,CAAC,IAAEiC,CAAC,CAAC/B,CAAC,CAACI,CAAD,CAAD,CAAK,CAAL,CAAD,CAA3C;;AAAqD,QAAG;AAAC,aAAO,MAAM,KAAK4G,YAAL,CAAkBmC,aAAlB,CAAgC7I,CAAC,GAAC6D,CAAD,GAAGjE,CAApC,EAAsCM,CAAtC,EAAwCP,CAAxC,CAAb;AAAwD,KAA5D,CAA4D,OAAMS,CAAN,EAAQ;AAAC,aAAO8E,CAAC,CAAC,0BAAD,EAA6B,sBAAqBtF,CAAE,4CAApD,CAAD,EAAkG,KAAKgG,gBAAL,CAAsB2C,GAAtB,CAA0B3I,CAA1B,EAA4B,CAAC,CAA7B,CAAlG,EAAkI,KAAK8G,YAAL,CAAkBmC,aAAlB,CAAgChF,CAAhC,EAAkC3D,CAAlC,EAAoCP,CAApC,CAAzI;AAAgL;AAAC;;AAA4B,QAAtB4H,sBAAsB,CAAChI,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAO;AAAC,QAAGiC,CAAC,CAACpC,CAAD,CAAJ,EAAQ,OAAO,IAAP;AAAY,UAAMK,CAAC,GAAC2D,CAAC,CAAChE,CAAD,CAAT;AAAa,QAAG,KAAKgH,aAAL,CAAmB+B,GAAnB,CAAuB1I,CAAvB,CAAH,EAA6B,OAAO,KAAK2G,aAAL,CAAmBuC,aAAnB,CAAiClJ,CAAjC,CAAP;AAA2C,QAAGiC,CAAC,CAACtC,CAAD,CAAD,IAAMwC,CAAC,CAACxC,CAAD,CAAV,EAAc,OAAO,KAAKwJ,oBAAL,CAA0BnJ,CAA1B,EAA4BL,CAA5B,EAA8BG,CAA9B,CAAP;;AAAwC,UAAMI,CAAC,GAAC,CAAR;AAAA,UAAUE,CAAC,GAAC,KAAK2G,WAAL,CAAiBqC,qBAAjB,CAAuCzJ,CAAvC,EAAyCO,CAAzC,CAAZ;;AAAwD,QAAGE,CAAH,EAAK;AAAC,YAAK;AAACiJ,QAAAA,IAAI,EAACzJ,CAAN;AAAQ0J,QAAAA,KAAK,EAACxJ,CAAd;AAAgB8F,QAAAA,GAAG,EAAC7F,CAApB;AAAsBwJ,QAAAA,aAAa,EAACrJ;AAApC,UAAuCE,CAA5C;AAA8C,aAAO,KAAKoJ,gBAAL,CAAsBxJ,CAAtB,EAAwBJ,CAAxB,EAA0B;AAACyH,QAAAA,IAAI,EAAC,QAAN;AAAevC,QAAAA,IAAI,EAAChF;AAApB,OAA1B,EAAiDuC,CAAC,CAAC1C,CAAD,CAAlD,EAAsDI,CAAtD,EAAwDG,CAAxD,CAAP;AAAkE;;AAAA,WAAO,IAAIH,CAAJ,CAAM,gBAAN,EAAuB,uCAAvB,CAAP;AAAuE;;AAA0B,QAApBoJ,oBAAoB,CAACxJ,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAO;AAAC,QAAG,KAAKwG,sBAAL,CAA4BoC,GAA5B,CAAgC/I,CAAhC,CAAH,EAAsC,OAAO,KAAK2G,sBAAL,CAA4BuC,GAA5B,CAAgClJ,CAAhC,CAAP;AAA0C,QAAII,CAAJ;AAAMA,IAAAA,CAAC,GAACkC,CAAC,CAACrC,CAAD,CAAD,GAAK,KAAK6J,UAAL,CAAgB7J,CAAhB,EAAkBD,CAAlB,EAAoBG,CAApB,CAAL,GAA4B,KAAK4J,YAAL,CAAkB9J,CAAlB,EAAoBD,CAApB,EAAsBG,CAAtB,CAA9B,EAAuD,KAAKwG,sBAAL,CAA4BqC,GAA5B,CAAgChJ,CAAhC,EAAkCI,CAAlC,CAAvD;;AAA4F,QAAG;AAAC,YAAMA,CAAN,EAAQ,KAAKuG,sBAAL,CAA4BqD,MAA5B,CAAmChK,CAAnC,CAAR;AAA8C,KAAlD,CAAkD,MAAK;AAAC,WAAK2G,sBAAL,CAA4BqD,MAA5B,CAAmChK,CAAnC;AAAsC;;AAAA,WAAOI,CAAP;AAAS;;AAAgB,QAAV0J,UAAU,CAAC9J,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAO;AAAC,UAAMC,CAAC,GAAC,CAACmE,CAAD,EAAGA,CAAH,CAAR;AAAA,UAAclE,CAAC,GAAC,MAAM,KAAKkG,aAAL,CAAmB0D,IAAnB,CAAwBjK,CAAC,CAACkK,IAA1B,EAA+B/J,CAA/B,CAAtB;AAAwD,WAAO,KAAK0J,gBAAL,CAAsB5J,CAAtB,EAAwBG,CAAxB,EAA0B;AAACsH,MAAAA,IAAI,EAAC,QAAN;AAAevC,MAAAA,IAAI,EAAC,IAAIgF,WAAJ,CAAgB9J,CAAC,CAAC6E,MAAlB;AAApB,KAA1B,EAAyE,CAAC,CAA1E,EAA4E,CAAC,CAA7E,EAA+E,CAAC,CAAhF,CAAP;AAA0F;;AAAqB,QAAfkF,eAAe,CAACpK,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAO;AAAC,UAAME,CAAC,GAAC,MAAMqE,CAAC,CAAC1E,CAAD,EAAGG,CAAH,CAAf;;AAAqB,QAAG2D,CAAC,CAACzD,CAAD,CAAJ,EAAQ;AAAC,YAAMI,CAAC,GAACiD,CAAC,CAACrD,CAAD,CAAT;AAAA,YAAaM,CAAC,GAAC2C,CAAC,CAACjD,CAAD,CAAhB;AAAoB,UAAG,CAACI,CAAD,IAAI,CAACE,CAAR,EAAU,OAAO,IAAIP,CAAJ,CAAM,0BAAN,EAAiC,oCAAjC,CAAP;AAA8E,UAAIW,CAAJ;;AAAM,UAAG;AAACN,QAAAA,CAAC,IAAEmD,CAAC,CAACvD,CAAD,CAAJ,GAAQU,CAAC,GAAC,MAAM0C,CAAC,CAAC4G,MAAF,CAAShK,CAAT,EAAWF,CAAX,CAAhB,GAA8BQ,CAAC,IAAE6C,CAAC,CAACnD,CAAD,CAAJ,KAAUU,CAAC,GAAC,MAAMsC,CAAC,CAACgH,MAAF,CAAShK,CAAT,EAAWF,CAAX,CAAlB,CAA9B;AAA+D,OAAnE,CAAmE,OAAMI,CAAN,EAAQ;AAAC,YAAG,CAACM,CAAC,CAACN,CAAD,CAAL,EAAS,OAAO,IAAIH,CAAJ,CAAM,0BAAN,EAAiC,qCAAjC,CAAP;AAA+E;;AAAA,UAAGW,CAAC,IAAE+C,CAAC,CAAC/C,CAAD,CAAP,EAAW,OAAO,KAAK8I,gBAAL,CAAsB5J,CAAtB,EAAwB,CAACc,CAAC,CAAC6H,KAAH,EAAS7H,CAAC,CAAC8H,MAAX,CAAxB,EAA2C;AAACnB,QAAAA,IAAI,EAAC,UAAN;AAAiBvC,QAAAA,IAAI,EAACpE;AAAtB,OAA3C,EAAoE2B,CAAC,CAAC1C,CAAD,CAArE,EAAyE,CAAC,CAA1E,EAA4E,CAAC,CAA7E,CAAP;AAAuF,YAAMgB,CAAC,GAAC,IAAIsJ,IAAJ,CAAS,CAACjK,CAAD,CAAT,EAAa;AAACqH,QAAAA,IAAI,EAACjH,CAAC,GAAC,WAAD,GAAa;AAApB,OAAb,CAAR;AAAA,YAAuDQ,CAAC,GAAC,MAAM,KAAKsJ,cAAL,CAAoBvJ,CAApB,CAA/D;;AAAsF,UAAGC,CAAC,IAAEA,CAAC,YAAYuJ,gBAAnB,EAAoC;AAAC,YAAIrK,CAAC,GAACc,CAAC,CAAC2H,KAAR;AAAA,YAAcxI,CAAC,GAACa,CAAC,CAAC4H,MAAlB;AAAyB,sBAAY7I,CAAC,CAAC0H,IAAd,KAAqBvH,CAAC,GAACmF,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACpE,CAAC,CAAC2H,KAAH,EAAShG,CAAC,CAAC5C,CAAD,CAAV,CAAZ,CAAF,EAA8BI,CAAC,GAACkF,IAAI,CAACC,KAAL,CAAWtE,CAAC,CAAC4H,MAAF,IAAU1I,CAAC,GAACc,CAAC,CAAC2H,KAAd,CAAX,CAArD;;AAAuF,cAAMvI,CAAC,GAAC,SAAQL,CAAR,GAAUA,CAAC,CAACyK,GAAF,CAAMC,kBAAhB,GAAmC,KAAK,CAAhD;AAAA,cAAkD;AAAChB,UAAAA,IAAI,EAACnJ,CAAN;AAAQ0F,UAAAA,GAAG,EAACxF,CAAZ;AAAckJ,UAAAA,KAAK,EAAChJ;AAApB,YAAuB,KAAKyG,WAAL,CAAiBuD,sBAAjB,CAAwCxK,CAAxC,EAA0CC,CAA1C,EAA4Ca,CAA5C,EAA8CZ,CAA9C,CAAzE;;AAA0H,eAAO,KAAKwJ,gBAAL,CAAsB5J,CAAtB,EAAwBM,CAAxB,EAA0B;AAACmH,UAAAA,IAAI,EAAC,QAAN;AAAevC,UAAAA,IAAI,EAACxE;AAApB,SAA1B,EAAiD+B,CAAC,CAAC1C,CAAD,CAAlD,EAAsDS,CAAtD,EAAwD,CAAC,CAAzD,CAAP;AAAmE;AAAC;;AAAA,WAAO,IAAIL,CAAJ,CAAM,0BAAN,EAAiC,4BAAjC,CAAP;AAAsE;;AAAkB,QAAZ2J,YAAY,CAAC/J,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAO;AAAC,QAAG2C,CAAC,CAAC9C,CAAD,CAAD,IAAMgD,CAAC,CAAChD,CAAD,CAAV,EAAc,OAAO,KAAKoK,eAAL,CAAqBpK,CAArB,EAAuBC,CAAvB,EAAyBE,CAAzB,CAAP;AAAmC,UAAME,CAAC,GAAC6C,CAAC,CAAClD,CAAD,CAAT;;AAAa,QAAG;AAAC,UAAII,CAAJ;AAAM,YAAMO,CAAC,GAAC,KAAKyF,eAAL,CAAqBwE,WAArB,CAAiCvK,CAAjC,CAAR;AAA4C,UAAGI,CAAC,CAACE,CAAD,CAAJ,EAAQP,CAAC,GAACO,CAAF,CAAR,KAAgB;AAAC,cAAK;AAACwE,UAAAA,IAAI,EAACnF;AAAN,YAAS,MAAM,KAAK4G,kBAAL,CAAwBqC,IAAxB,CAA6B5I,CAA7B,EAA+B,EAAC,GAAGF;AAAJ,SAA/B,CAApB;AAA2DC,QAAAA,CAAC,GAACJ,CAAF;AAAI;AAAA,UAAGoD,CAAC,CAAC/C,CAAD,CAAJ,EAAQ,IAAG,WAAUL,CAAV,IAAa,YAAWA,CAA3B,EAA6BI,CAAC,CAACwI,KAAF,GAAQ7H,CAAC,CAACf,CAAC,CAAC4I,KAAH,CAAT,EAAmBxI,CAAC,CAACyI,MAAF,GAAS9H,CAAC,CAACf,CAAC,CAAC6I,MAAH,CAA7B,CAA7B,KAA0E,IAAG,SAAQ7I,CAAX,EAAa;AAAC,YAAIO,CAAJ;AAAM,cAAMN,CAAC,GAACD,CAAC,CAACyK,GAAV;AAAcrK,QAAAA,CAAC,CAACwI,KAAF,GAAQ7H,CAAC,CAAC,SAAOR,CAAC,GAACN,CAAC,CAAC2I,KAAX,IAAkBrI,CAAlB,GAAoBN,CAAC,CAAC4K,MAAF,GAAS5K,CAAC,CAACyJ,IAAhC,CAAT,EAA+CtJ,CAAC,CAACyI,MAAF,GAAS9H,CAAC,CAACd,CAAC,CAACyJ,IAAH,CAAzD;AAAkE;AAAA,UAAG,CAACtJ,CAAC,CAACwI,KAAH,IAAU,CAACxI,CAAC,CAACyI,MAAhB,EAAuB,OAAO,IAAP;AAAY,UAAIhI,CAAC,GAACT,CAAC,CAACwI,KAAR;AAAA,UAAc5H,CAAC,GAACZ,CAAC,CAACyI,MAAlB;AAAyB,oBAAY7I,CAAC,CAAC0H,IAAd,KAAqB7G,CAAC,GAACyE,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACjF,CAAC,CAACwI,KAAH,EAAShG,CAAC,CAAC5C,CAAD,CAAV,CAAZ,CAAF,EAA8BgB,CAAC,GAACsE,IAAI,CAACC,KAAL,CAAWnF,CAAC,CAACyI,MAAF,IAAUhI,CAAC,GAACT,CAAC,CAACwI,KAAd,CAAX,CAArD;;AAAuF,YAAM3H,CAAC,GAAC,SAAQjB,CAAR,GAAUA,CAAC,CAACyK,GAAF,CAAMC,kBAAhB,GAAmC,KAAK,CAAhD;AAAA,YAAkD;AAAChB,QAAAA,IAAI,EAACxI,CAAN;AAAQ+E,QAAAA,GAAG,EAAC7E,CAAZ;AAAcuI,QAAAA,KAAK,EAACrI;AAApB,UAAuB,KAAK8F,WAAL,CAAiBuD,sBAAjB,CAAwC9J,CAAxC,EAA0CG,CAA1C,EAA4CZ,CAA5C,EAA8Ca,CAA9C,CAAzE;;AAA0H,aAAO,KAAK4I,gBAAL,CAAsB5J,CAAtB,EAAwBiB,CAAxB,EAA0B;AAACwG,QAAAA,IAAI,EAAC,QAAN;AAAevC,QAAAA,IAAI,EAAC7D;AAApB,OAA1B,EAAiDoB,CAAC,CAAC1C,CAAD,CAAlD,EAAsDoB,CAAtD,EAAwD,CAAC,CAAzD,CAAP;AAAmE,KAA5oB,CAA4oB,OAAMT,CAAN,EAAQ;AAAC,UAAG,CAACE,CAAC,CAACF,CAAD,CAAL,EAAS,OAAO,IAAIP,CAAJ,CAAM,0BAAN,EAAkC,yCAAwCC,CAAE,KAAIM,CAAC,CAACmK,OAAQ,EAA1F,CAAP;AAAoG;AAAC;;AAAoB,QAAdP,cAAc,CAACvK,CAAD,EAAG;AAAC,UAAMC,CAAC,GAACuF,MAAM,CAACuF,GAAP,CAAWC,eAAX,CAA2BhL,CAA3B,CAAR;;AAAsC,QAAG;AAAC,YAAK;AAACmF,QAAAA,IAAI,EAACnF;AAAN,UAAS,MAAM,KAAK4G,kBAAL,CAAwBqC,IAAxB,CAA6BhJ,CAA7B,CAApB;AAAoD,aAAOuF,MAAM,CAACuF,GAAP,CAAWE,eAAX,CAA2BhL,CAA3B,GAA8BD,CAArC;AAAuC,KAA/F,CAA+F,OAAMG,CAAN,EAAQ;AAAC,UAAGqF,MAAM,CAACuF,GAAP,CAAWE,eAAX,CAA2BhL,CAA3B,GAA8B,CAACY,CAAC,CAACV,CAAD,CAAnC,EAAuC,OAAO,IAAIC,CAAJ,CAAM,0BAAN,EAAkC,yCAAwCH,CAAE,EAA5E,CAAP;AAAsF,YAAME,CAAN;AAAQ;AAAC;;AAAA0J,EAAAA,gBAAgB,CAAC7J,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAOC,CAAP,EAASC,CAAT,EAAWE,CAAX,EAAa;AAAC,WAAO,KAAKyG,aAAL,CAAmBkE,aAAnB,CAAiClL,CAAjC,EAAmCC,CAAnC,EAAqCE,CAArC,EAAuCC,CAAvC,EAAyCC,CAAzC,EAA2CE,CAA3C,CAAP;AAAqD;;AAA/7L;;AAAg8L,SAAO4F,CAAC,IAAIgF,OAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../../../config.js\";import t from\"../../../../request.js\";import{bidiText as i}from\"../../../../core/BidiText.js\";import s from\"../../../../core/Error.js\";import r from\"../../../../core/Logger.js\";import{isNone as n,isSome as o}from\"../../../../core/maybe.js\";import{throwIfAborted as a,isAbortError as h}from\"../../../../core/promiseUtils.js\";import{pt2px as c}from\"../../../../core/screenUtils.js\";import{s as u}from\"../../../../chunks/vec2.js\";import{c as d}from\"../../../../chunks/vec2f32.js\";import l from\"../../../../symbols/cim/Rasterizer.js\";import{TEXTURE_BINDING_GLYPH_ATLAS as m,TEXTURE_BINDING_SPRITE_ATLAS as g}from\"./definitions.js\";import{MosaicType as p}from\"./enums.js\";import{getFullyQualifiedFontName as f}from\"./fontUtils.js\";import _ from\"./GlyphMosaic.js\";import w from\"./GlyphSource.js\";import y from\"./SDFConverter.js\";import M from\"./SpriteMosaic.js\";import{is3D as v,charCodes as I,isSimple as R,isSVGResource as b,isImageResource as z,shouldRepeat as T,getPMSResourceSize as j,isGIF as x,isPNG as S,getUrl as U,isSVGImage as B}from\"./Utils.js\";import G,{isPNG as P,isAnimatedPNG as C}from\"./animatedFormats/apng.js\";import L,{isGIF as F,isAnimatedGIF as q}from\"./animatedFormats/gif.js\";import{ok as A}from\"./util/Result.js\";import{keyFromSymbol as N}from\"./util/symbolUtils.js\";import{QueueProcessor as $}from\"../../../support/QueueProcessor.js\";import{TextureSamplingMode as E}from\"../../../webgl/enums.js\";const k=d(),O=\"arial-unicode-ms-regular\",Q=126,H=r.getLogger(\"esri.views.2d.engine.webgl.TextureManager\");async function V(e,i){const r=U(e);let n;const o=\";base64,\";if(r.includes(o)){const e=r.indexOf(o)+o.length,t=r.substring(e),i=atob(t),s=new Uint8Array(i.length);for(let r=0;r<i.length;r++)s[r]=i.charCodeAt(r);n=s.buffer}else try{const{data:e}=await t(r,{responseType:\"array-buffer\",...i});n=e}catch(a){if(!h(a))return new s(\"mapview-invalid-resource\",`Could not fetch requested resource at ${r}`)}return n}function Y(e,t){const i=Math.round(c(t)*window.devicePixelRatio),s=i>=128?2:4;return Math.min(e,i*s)}const D=(e,t,i)=>H.error(new s(e,t,i));class J{constructor(e,t,i){this.mosaicType=e,this.page=t,this.sdf=i}static fromMosaic(e,t){return new J(e,t.page,t.sdf)}}class W{constructor(i,r){this.resourceManager=r,this._invalidFontsMap=new Map,this._sdfConverter=new y(Q),this._bindingInfos=new Array,this._hashToBindingIndex=new Map,this._ongoingRasterizations=new Map,this._imageRequestQueue=new $({concurrency:10,process:async(e,i)=>{a(i);try{return await t(e,{responseType:\"image\",signal:i})}catch(r){if(!h(r))throw new s(\"mapview-invalid-resource\",`Could not fetch requested resource at ${e}`,r);throw r}}}),this._spriteMosaic=new M(i,2048,2048,500),this._glyphSource=new w(`${e.fontsUrl}/{fontstack}/{range}.pbf`),this._glyphMosaic=new _(1024,1024,this._glyphSource),this._rasterizer=new l(r)}dispose(){this._spriteMosaic.dispose(),this._glyphMosaic.dispose(),this._rasterizer.dispose(),this._sdfConverter.dispose(),this._spriteMosaic=null,this._glyphMosaic=null,this._sdfConverter=null,this._hashToBindingIndex.clear(),this._hashToBindingIndex=null,this._bindingInfos=null,this._ongoingRasterizations.clear(),this._ongoingRasterizations=null,this._imageRequestQueue.clear(),this._imageRequestQueue=null}get sprites(){return this._spriteMosaic}get glyphs(){return this._glyphMosaic}async rasterizeItem(e,t,i,s){if(n(e))return D(\"mapview-null-resource\",\"Unable to rasterize null resource\"),null;switch(e.type){case\"text\":case\"esriTS\":{const t=await this._rasterizeText(e,i,s);return t.forEach((e=>this._setTextureBinding(p.GLYPH,e))),{glyphMosaicItems:t}}default:{if(v(e))return D(\"mapview-invalid-type\",`MapView does not support symbol type: ${e.type}`,e),null;const i=await this._rasterizeSpriteSymbol(e,t,s);return A(i)&&i&&this._setTextureBinding(p.SPRITE,i),{spriteMosaicItem:i}}}}bindTextures(e,t,i,s=!1){if(0===i.textureBinding)return;const r=this._bindingInfos[i.textureBinding-1],n=r.page,o=s?E.LINEAR_MIPMAP_LINEAR:E.LINEAR;switch(r.mosaicType){case p.SPRITE:{const i=this.sprites.getWidth(n),s=this.sprites.getHeight(n),r=u(k,i,s);return this._spriteMosaic.bind(e,o,n,g),t.setUniform1i(\"u_texture\",g),void t.setUniform2fv(\"u_mosaicSize\",r)}case p.GLYPH:{const i=this.glyphs.width,s=this.glyphs.height,r=u(k,i,s);return this._glyphMosaic.bind(e,o,n,m),t.setUniform1i(\"u_texture\",m),void t.setUniform2fv(\"u_mosaicSize\",r)}default:H.error(\"mapview-texture-manager\",`Cannot handle unknown type ${r.mosaicType}`)}}_hashMosaic(e,t){return 1|e<<1|(t.sdf?1:0)<<2|t.page<<3}_setTextureBinding(e,t){const i=this._hashMosaic(e,t);if(!this._hashToBindingIndex.has(i)){const s=J.fromMosaic(e,t),r=this._bindingInfos.length+1;this._hashToBindingIndex.set(i,r),this._bindingInfos.push(s)}t.textureBinding=this._hashToBindingIndex.get(i)}async _rasterizeText(e,t,s){let r,n;if(\"cim\"in e){const t=e;r=t.fontName,n=t.text}else{const t=e;r=f(t.font),n=t.text}const o=this._invalidFontsMap.has(r),a=t||I(i(n)[0]);try{return await this._glyphMosaic.getGlyphItems(o?O:r,a,s)}catch(h){return D(\"mapview-invalid-resource\",`Couldn't find font ${r}. Falling back to Arial Unicode MS Regular`),this._invalidFontsMap.set(r,!0),this._glyphMosaic.getGlyphItems(O,a,s)}}async _rasterizeSpriteSymbol(e,t,i){if(R(e))return null;const r=N(e);if(this._spriteMosaic.has(r))return this._spriteMosaic.getSpriteItem(r);if(b(e)||z(e))return this._handleAsyncResource(r,e,i);const n=1,o=this._rasterizer.rasterizeJSONResource(e,n);if(o){const{size:t,image:i,sdf:s,simplePattern:n}=o;return this._addItemToMosaic(r,t,{type:\"static\",data:i},T(e),s,n)}return new s(\"TextureManager\",\"unrecognized or null rasterized image\")}async _handleAsyncResource(e,t,i){if(this._ongoingRasterizations.has(e))return this._ongoingRasterizations.get(e);let s;s=b(t)?this._handleSVG(t,e,i):this._handleImage(t,e,i),this._ongoingRasterizations.set(e,s);try{await s,this._ongoingRasterizations.delete(e)}catch{this._ongoingRasterizations.delete(e)}return s}async _handleSVG(e,t,i){const s=[Q,Q],r=await this._sdfConverter.draw(e.path,i);return this._addItemToMosaic(t,s,{type:\"static\",data:new Uint32Array(r.buffer)},!1,!0,!0)}async _handleGIFOrPNG(e,t,i){const r=await V(e,i);if(A(r)){const o=F(r),a=P(r);if(!o&&!a)return new s(\"mapview-invalid-resource\",\"Image data is neither GIF nor PNG!\");let c;try{o&&q(r)?c=await L.create(r,i):a&&C(r)&&(c=await G.create(r,i))}catch(n){if(!h(n))return new s(\"mapview-invalid-resource\",\"Could not fetch requested resource!\")}if(c&&A(c))return this._addItemToMosaic(t,[c.width,c.height],{type:\"animated\",data:c},T(e),!1,!1);const u=new Blob([r],{type:o?\"image/gif\":\"image/png\"}),d=await this._imageFromBlob(u);if(d&&d instanceof HTMLImageElement){let i=d.width,s=d.height;\"esriPMS\"===e.type&&(i=Math.round(Y(d.width,j(e))),s=Math.round(d.height*(i/d.width)));const r=\"cim\"in e?e.cim.colorSubstitutions:void 0,{size:n,sdf:o,image:a}=this._rasterizer.rasterizeImageResource(i,s,d,r);return this._addItemToMosaic(t,n,{type:\"static\",data:a},T(e),o,!1)}}return new s(\"mapview-invalid-resource\",\"Could not handle resource!\")}async _handleImage(e,t,i){if(x(e)||S(e))return this._handleGIFOrPNG(e,t,i);const r=U(e);try{let s;const a=this.resourceManager.getResource(r);if(o(a))s=a;else{const{data:e}=await this._imageRequestQueue.push(r,{...i});s=e}if(B(r))if(\"width\"in e&&\"height\"in e)s.width=c(e.width),s.height=c(e.height);else if(\"cim\"in e){var n;const t=e.cim;s.width=c(null!=(n=t.width)?n:t.scaleX*t.size),s.height=c(t.size)}if(!s.width||!s.height)return null;let h=s.width,u=s.height;\"esriPMS\"===e.type&&(h=Math.round(Y(s.width,j(e))),u=Math.round(s.height*(h/s.width)));const d=\"cim\"in e?e.cim.colorSubstitutions:void 0,{size:l,sdf:m,image:g}=this._rasterizer.rasterizeImageResource(h,u,s,d);return this._addItemToMosaic(t,l,{type:\"static\",data:g},T(e),m,!1)}catch(a){if(!h(a))return new s(\"mapview-invalid-resource\",`Could not fetch requested resource at ${r}. ${a.message}`)}}async _imageFromBlob(e){const t=window.URL.createObjectURL(e);try{const{data:e}=await this._imageRequestQueue.push(t);return window.URL.revokeObjectURL(t),e}catch(i){if(window.URL.revokeObjectURL(t),!h(i))return new s(\"mapview-invalid-resource\",`Could not fetch requested resource at ${t}`);throw i}}_addItemToMosaic(e,t,i,s,r,n){return this._spriteMosaic.addSpriteItem(e,t,i,s,r,n)}}export{W as default};\n"]},"metadata":{},"sourceType":"module"}