{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../../../core/Error.js\";\nimport t from \"../../../core/Logger.js\";\nimport { isSome as r, unwrap as s } from \"../../../core/maybe.js\";\nimport { throwIfAborted as a, createTask as i, isAbortError as n } from \"../../../core/promiseUtils.js\";\nimport { equals as o, WGS84 as u } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport { convertFromGeometry as p, convertToGeometry as h } from \"../featureConversionUtils.js\";\nimport y from \"../data/FeatureStore.js\";\nimport { project as l, checkProjectionSupport as c } from \"../data/projectionSupport.js\";\nimport m from \"../data/QueryEngine.js\";\nimport { validateGeoJSON as g, createOptimizedFeatures as _ } from \"./geojson/geojson.js\";\nimport { mixAttributes as f } from \"./support/sourceUtils.js\";\nimport { getFeature as d } from \"../../ogc/wfsUtils.js\";\nimport w from \"../../support/FieldsIndex.js\";\n\nclass E {\n  constructor() {\n    this._queryEngine = null, this._customParameters = null, this._snapshotFeatures = async e => {\n      const {\n        objectIdField: t\n      } = this._queryEngine,\n            s = await d(this._getFeatureUrl, this._featureType.typeName, this._getFeatureOutputFormat, {\n        customParameters: this._customParameters,\n        dateFields: this._queryEngine.fieldsIndex.dateFields.map(e => e.name),\n        signal: e\n      });\n      await g(s), a(e);\n\n      const i = _(s, {\n        geometryType: this._queryEngine.geometryType,\n        hasZ: !1,\n        objectIdField: t\n      });\n\n      if (!o(this._queryEngine.spatialReference, u)) for (const a of i) r(a.geometry) && (a.geometry = p(l(h(a.geometry, this._queryEngine.geometryType, !1, !1), u, this._queryEngine.spatialReference)));\n      let n = 1;\n\n      for (const r of i) {\n        const e = {};\n        f(this._fieldsIndex, e, r.attributes, !0), r.attributes = e, null == r.attributes[t] && (r.objectId = r.attributes[t] = n++);\n      }\n\n      return i;\n    };\n  }\n\n  destroy() {\n    var e;\n    null == (e = this._queryEngine) || e.destroy(), this._queryEngine = null;\n  }\n\n  async load(e, t) {\n    const {\n      getFeatureUrl: r,\n      getFeatureOutputFormat: i,\n      spatialReference: n,\n      fields: o,\n      geometryType: u,\n      featureType: p,\n      objectIdField: h,\n      customParameters: l\n    } = e;\n    this._featureType = p, this._customParameters = l, this._getFeatureUrl = r, this._getFeatureOutputFormat = i, this._fieldsIndex = new w(o), await this._checkProjection(n), a(t), this._queryEngine = new m({\n      fields: o,\n      geometryType: u,\n      hasM: !1,\n      hasZ: !1,\n      objectIdField: h,\n      spatialReference: n,\n      timeInfo: null,\n      featureStore: new y({\n        geometryType: u,\n        hasM: !1,\n        hasZ: !1\n      })\n    });\n    const c = await this._snapshotFeatures(s(t.signal));\n    return this._queryEngine.featureStore.addMany(c), {\n      extent: this._queryEngine.fullExtent\n    };\n  }\n\n  async applyEdits() {\n    throw new e(\"wfs-source:editing-not-supported\", \"applyEdits() is not supported on WFSLayer\");\n  }\n\n  async queryFeatures() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQuery(e, t.signal);\n  }\n\n  async queryFeatureCount() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForCount(e, t.signal);\n  }\n\n  async queryObjectIds() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForIds(e, t.signal);\n  }\n\n  async queryExtent() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForExtent(e, t.signal);\n  }\n\n  async querySnapping(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForSnapping(e, t.signal);\n  }\n\n  async refresh(r) {\n    var s;\n    return this._customParameters = r, null == (s = this._snapshotTask) || s.abort(), this._snapshotTask = i(this._snapshotFeatures), this._snapshotTask.promise.then(e => {\n      this._queryEngine.featureStore.clear(), e && this._queryEngine.featureStore.addMany(e);\n    }, r => {\n      this._queryEngine.featureStore.clear(), n(r) || t.getLogger(\"esri.layers.WFSLayer\").error(new e(\"wfs-layer:getfeature-error\", \"An error occurred during the GetFeature request\", {\n        error: r\n      }));\n    }), await this._waitSnapshotComplete(), {\n      extent: this._queryEngine.fullExtent\n    };\n  }\n\n  async _waitSnapshotComplete() {\n    if (this._snapshotTask && !this._snapshotTask.finished) {\n      try {\n        await this._snapshotTask.promise;\n      } catch {}\n\n      return this._waitSnapshotComplete();\n    }\n  }\n\n  async _checkProjection(t) {\n    try {\n      await c(u, t);\n    } catch {\n      throw new e(\"unsupported-projection\", \"Projection not supported\", {\n        spatialReference: t\n      });\n    }\n  }\n\n}\n\nexport { E as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/layers/graphics/sources/WFSSourceWorker.js"],"names":["e","t","isSome","r","unwrap","s","throwIfAborted","a","createTask","i","isAbortError","n","equals","o","WGS84","u","convertFromGeometry","p","convertToGeometry","h","y","project","l","checkProjectionSupport","c","m","validateGeoJSON","g","createOptimizedFeatures","_","mixAttributes","f","getFeature","d","w","E","constructor","_queryEngine","_customParameters","_snapshotFeatures","objectIdField","_getFeatureUrl","_featureType","typeName","_getFeatureOutputFormat","customParameters","dateFields","fieldsIndex","map","name","signal","geometryType","hasZ","spatialReference","geometry","_fieldsIndex","attributes","objectId","destroy","load","getFeatureUrl","getFeatureOutputFormat","fields","featureType","_checkProjection","hasM","timeInfo","featureStore","addMany","extent","fullExtent","applyEdits","queryFeatures","_waitSnapshotComplete","executeQuery","queryFeatureCount","executeQueryForCount","queryObjectIds","executeQueryForIds","queryExtent","executeQueryForExtent","querySnapping","executeQueryForSnapping","refresh","_snapshotTask","abort","promise","then","clear","getLogger","error","finished","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../../core/Error.js\";import t from\"../../../core/Logger.js\";import{isSome as r,unwrap as s}from\"../../../core/maybe.js\";import{throwIfAborted as a,createTask as i,isAbortError as n}from\"../../../core/promiseUtils.js\";import{equals as o,WGS84 as u}from\"../../../geometry/support/spatialReferenceUtils.js\";import{convertFromGeometry as p,convertToGeometry as h}from\"../featureConversionUtils.js\";import y from\"../data/FeatureStore.js\";import{project as l,checkProjectionSupport as c}from\"../data/projectionSupport.js\";import m from\"../data/QueryEngine.js\";import{validateGeoJSON as g,createOptimizedFeatures as _}from\"./geojson/geojson.js\";import{mixAttributes as f}from\"./support/sourceUtils.js\";import{getFeature as d}from\"../../ogc/wfsUtils.js\";import w from\"../../support/FieldsIndex.js\";class E{constructor(){this._queryEngine=null,this._customParameters=null,this._snapshotFeatures=async e=>{const{objectIdField:t}=this._queryEngine,s=await d(this._getFeatureUrl,this._featureType.typeName,this._getFeatureOutputFormat,{customParameters:this._customParameters,dateFields:this._queryEngine.fieldsIndex.dateFields.map((e=>e.name)),signal:e});await g(s),a(e);const i=_(s,{geometryType:this._queryEngine.geometryType,hasZ:!1,objectIdField:t});if(!o(this._queryEngine.spatialReference,u))for(const a of i)r(a.geometry)&&(a.geometry=p(l(h(a.geometry,this._queryEngine.geometryType,!1,!1),u,this._queryEngine.spatialReference)));let n=1;for(const r of i){const e={};f(this._fieldsIndex,e,r.attributes,!0),r.attributes=e,null==r.attributes[t]&&(r.objectId=r.attributes[t]=n++)}return i}}destroy(){var e;null==(e=this._queryEngine)||e.destroy(),this._queryEngine=null}async load(e,t){const{getFeatureUrl:r,getFeatureOutputFormat:i,spatialReference:n,fields:o,geometryType:u,featureType:p,objectIdField:h,customParameters:l}=e;this._featureType=p,this._customParameters=l,this._getFeatureUrl=r,this._getFeatureOutputFormat=i,this._fieldsIndex=new w(o),await this._checkProjection(n),a(t),this._queryEngine=new m({fields:o,geometryType:u,hasM:!1,hasZ:!1,objectIdField:h,spatialReference:n,timeInfo:null,featureStore:new y({geometryType:u,hasM:!1,hasZ:!1})});const c=await this._snapshotFeatures(s(t.signal));return this._queryEngine.featureStore.addMany(c),{extent:this._queryEngine.fullExtent}}async applyEdits(){throw new e(\"wfs-source:editing-not-supported\",\"applyEdits() is not supported on WFSLayer\")}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(r){var s;return this._customParameters=r,null==(s=this._snapshotTask)||s.abort(),this._snapshotTask=i(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),e&&this._queryEngine.featureStore.addMany(e)}),(r=>{this._queryEngine.featureStore.clear(),n(r)||t.getLogger(\"esri.layers.WFSLayer\").error(new e(\"wfs-layer:getfeature-error\",\"An error occurred during the GetFeature request\",{error:r}))})),await this._waitSnapshotComplete(),{extent:this._queryEngine.fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _checkProjection(t){try{await c(u,t)}catch{throw new e(\"unsupported-projection\",\"Projection not supported\",{spatialReference:t})}}}export{E as default};\n"]},"metadata":{},"sourceType":"module"}