{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport \"../../../../../geometry.js\";\nimport e from \"../../../../../core/Evented.js\";\nimport t from \"../../../../../core/has.js\";\nimport { isNone as s, isSome as r, applySome as i } from \"../../../../../core/maybe.js\";\nimport { diff as a, hasDiff as o } from \"../../../../../core/accessorSupport/diffUtils.js\";\nimport { GeohashTree as h } from \"../../../../../geohash/GeohashTree.js\";\nimport { setGeohashBuf as l, setGeohashXY as n } from \"../../../../../geohash/geohashUtils.js\";\nimport { earth as u } from \"../../../../../geometry/support/Ellipsoid.js\";\nimport { getInfo as c } from \"../../../../../geometry/support/spatialReferenceUtils.js\";\nimport { quantizeX as g, quantizeY as d } from \"../../../../../layers/graphics/featureConversionUtils.js\";\nimport { OptimizedFeatureWithGeometry as f, OptimizedFeature as p } from \"../../../../../layers/graphics/OptimizedFeature.js\";\nimport _ from \"../../../../../layers/graphics/OptimizedGeometry.js\";\nimport { checkProjectionSupport as m, project as y } from \"../../../../../layers/graphics/data/projectionSupport.js\";\nimport { TILE_SIZE as v } from \"../../../engine/webgl/definitions.js\";\nimport { DISPLAY_ID_TEXEL_MASK as I } from \"../../../engine/webgl/DisplayId.js\";\nimport { Store2D as b } from \"../Store2D.js\";\nimport { FeatureSetReaderJSON as R } from \"./FeatureSetReaderJSON.js\";\nimport C from \"../../../../../geometry/SpatialReference.js\";\nconst M = 12,\n      x = 1;\n\nclass L extends f {\n  constructor(e, t, s, r, i) {\n    super(new _([], [t, s]), r, null, e), this.geohashBoundsInfo = i;\n  }\n\n  get count() {\n    return this.attributes.cluster_count;\n  }\n\n  static create(e, t, s, r, i, a, o, h) {\n    const l = new L(t, s, r, a, o);\n    return l.displayId = e.createDisplayId(!0), l.referenceId = h, l.tileLevel = i, l;\n  }\n\n  update(e, t, s, r, i, a) {\n    return this.geometry.coords[0] = e, this.geometry.coords[1] = t, this.tileLevel = s, this.attributes = r, this.geohashBoundsInfo = i, this.referenceId = null, this.referenceId = a, this;\n  }\n\n  toJSON() {\n    return {\n      objectId: this.objectId,\n      referenceId: 1 === this.attributes.cluster_count ? this.referenceId : null,\n      attributes: { ...this.attributes,\n        clusterId: this.objectId\n      },\n      geometry: {\n        x: this.geometry.coords[0],\n        y: this.geometry.coords[1]\n      }\n    };\n  }\n\n}\n\nfunction j(e) {\n  return 57.29577951308232 * e;\n}\n\nclass w extends b {\n  constructor(t, s, r, i) {\n    super(t, r), this.events = new e(), this._geohashLevel = 0, this._tileLevel = 0, this._aggregateValueRanges = {}, this._aggregateValueRangesChanged = !1, this._geohashBuf = [], this._clusters = new Map(), this._tiles = new Map(), this._serviceInfo = i, this.geometryInfo = t.geometryInfo, this._spatialReference = s, this._projectionSupportCheck = m(s, C.WGS84), this._bitsets.geohash = r.getBitset(r.createBitset()), this._bitsets.inserted = r.getBitset(r.createBitset());\n  }\n\n  async updateSchema(e, r) {\n    const i = this._schema;\n\n    try {\n      await super.updateSchema(e, r), await this._projectionSupportCheck;\n    } catch (n) {}\n\n    const l = a(i, r);\n    r && (!s(l) || e.source || e.storage.filters) ? ((o(l, \"params.fields\") || !this._tree || e.source) && (this._tree = new h(this._statisticFields, this._serviceInfo), this._rebuildTree(), t(\"esri-2d-update-debug\") && console.debug(\"Aggregate mesh needs update due to tree changing\")), t(\"esri-2d-update-debug\") && console.debug(\"Applying Update - ClusterStore:\", l), e.targets[r.name] = !0, e.mesh = !1, this._aggregateValueRanges = {}) : i && (e.mesh = !0);\n  }\n\n  clear() {\n    this._rebuildTree();\n  }\n\n  sweepFeatures(e, t) {\n    this._bitsets.inserted.forEachSet(s => {\n      if (!e.has(s)) {\n        const e = t.lookupByDisplayIdUnsafe(s);\n\n        this._remove(e);\n      }\n    });\n  }\n\n  sweepClusters(e, t, s) {\n    this._clusters.forEach((r, i) => {\n      r && r.tileLevel !== s && (e.releaseDisplayId(r.displayId), t.unsetAttributeData(r.displayId), this._clusters.delete(i));\n    });\n  }\n\n  onTileData(e, t, r, i) {\n    let a = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : !0;\n    if (!this._schema || s(t.addOrUpdate)) return t;\n\n    const o = this._getTransforms(e, this._spatialReference);\n\n    {\n      const e = t.addOrUpdate.getCursor();\n\n      for (; e.next();) this._update(e, i);\n    }\n    if (t.status.mesh || !a) return t;\n    const h = new Array(),\n          l = this._schema.params.clusterRadius;\n    this._getClustersForTile(h, e, l, r, o), t.addOrUpdate = R.fromOptimizedFeatures(h, this._serviceInfo), t.addOrUpdate.attachStorage(r), t.end = !0;\n    {\n      const s = t.addOrUpdate.getCursor();\n\n      for (; s.next();) {\n        const t = s.getDisplayId();\n        this._bitsets.computed.unset(t), this.setComputedAttributes(r, s, t, e.scale);\n      }\n    }\n    return this._aggregateValueRangesChanged && t.end && (this.events.emit(\"valueRangesChanged\", {\n      valueRanges: this._aggregateValueRanges\n    }), this._aggregateValueRangesChanged = !1), t;\n  }\n\n  onTileUpdate(_ref) {\n    let {\n      added: e,\n      removed: t\n    } = _ref;\n\n    if (e.length) {\n      const t = e[0].level;\n      this._tileLevel = t, this._setGeohashLevel(t);\n    }\n\n    if (!this._schema) return;\n    const s = this._schema.params.clusterRadius;\n    t.forEach(e => {\n      this._tiles.delete(e.key.id), this._markTileClustersForDeletion(e, s);\n    });\n  }\n\n  getAggregate(e) {\n    for (const t of this._clusters.values()) if (((null == t ? void 0 : t.displayId) & I) == (e & I)) return t.toJSON();\n\n    return null;\n  }\n\n  getAggregates() {\n    const e = [];\n\n    for (const t of this._clusters.values()) (null == t ? void 0 : t.tileLevel) === this._tileLevel && e.push(t.toJSON());\n\n    return e;\n  }\n\n  getDisplayId(e) {\n    const t = this._clusters.get(e);\n\n    return t ? t.displayId : null;\n  }\n\n  getFeatureDisplayIdsForAggregate(e) {\n    const t = this._clusters.get(e);\n\n    if (!t) return [];\n    const s = t.geohashBoundsInfo;\n    return this._tree.getRegionDisplayIds(s.xLL, s.yLL, s.xTR, s.yTR, s.level);\n  }\n\n  getDisplayIdForReferenceId(e) {\n    for (const t of this._clusters.values()) if ((null == t ? void 0 : t.referenceId) === e) return t.displayId;\n\n    return null;\n  }\n\n  getAggregateValueRanges() {\n    return this._aggregateValueRanges;\n  }\n\n  forEach(e) {\n    for (const [t, s] of this._clusters) s && e(s, t);\n  }\n\n  size() {\n    let e = 0;\n    return this.forEach(t => e++), e;\n  }\n\n  _rebuildTree() {\n    this._bitsets.computed.clear(), this._bitsets.inserted.clear(), this._tree && this._tree.clear();\n  }\n\n  _remove(e) {\n    const t = e.getDisplayId(),\n          s = e.getXHydrated(),\n          r = e.getYHydrated(),\n          i = this._geohashBuf[2 * t],\n          a = this._geohashBuf[2 * t + 1];\n    this._bitsets.inserted.has(t) && (this._bitsets.inserted.unset(t), this._tree.removeCursor(e, s, r, i, a, this._geohashLevel));\n  }\n\n  _update(e, t) {\n    const s = e.getDisplayId(),\n          r = this._bitsets.inserted,\n          i = t.isVisible(s);\n    if (i === r.has(s)) return;\n    if (!i) return void this._remove(e);\n    const a = e.getXHydrated(),\n          o = e.getYHydrated();\n    if (!this._setGeohash(s, a, o)) return;\n    const h = this._geohashBuf[2 * s],\n          l = this._geohashBuf[2 * s + 1];\n    this._tree.insertCursor(e, s, a, o, h, l, this._geohashLevel), r.set(s);\n  }\n\n  _setGeohash(e, t, s) {\n    if (this._bitsets.geohash.has(e)) return !0;\n    const r = this._geohashBuf;\n\n    if (this._spatialReference.isWebMercator) {\n      const i = j(t / u.radius),\n            a = i - 360 * Math.floor((i + 180) / 360),\n            o = j(Math.PI / 2 - 2 * Math.atan(Math.exp(-s / u.radius)));\n      l(r, e, o, a, M);\n    } else {\n      const i = y({\n        x: t,\n        y: s\n      }, this._spatialReference, C.WGS84);\n      if (!i) return !1;\n      l(r, e, i.y, i.x, M);\n    }\n\n    return this._bitsets.geohash.set(e), !0;\n  }\n\n  _getClustersForTile(e, t, a, o, h) {\n    let l = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : !0;\n\n    const n = this._schema.params.clusterPixelBuffer,\n          u = 2 * a,\n          c = this._getGeohashLevel(t.key.level),\n          f = Math.ceil(2 ** t.key.level * v / u),\n          _ = Math.ceil(n / u) + 0,\n          m = Math.ceil(v / u),\n          {\n      row: y,\n      col: I\n    } = t.key,\n          b = I * v,\n          R = y * v,\n          C = Math.floor(b / u) - _,\n          M = Math.floor(R / u) - _,\n          x = C + m + 2 * _,\n          L = M + m + 2 * _,\n          j = t.tileInfoView.getLODInfoAt(t.key.level);\n\n    for (let v = C; v <= x; v++) for (let a = M; a <= L; a++) {\n      let n = v;\n      j.wrap && (n = v < 0 ? v + f : v % f);\n\n      const u = j.wrap && v < 0,\n            _ = j.wrap && v % f !== v,\n            m = this._lookupCluster(o, j, t.key.level, n, a, c);\n\n      if (r(m)) {\n        const t = i(h, e => u ? e.left : _ ? e.right : e.tile);\n        if (l && s(t)) continue;\n        if (!m.count) continue;\n\n        if (r(t) && l) {\n          const s = m.geometry.clone();\n          let i = m.attributes;\n          s.coords[0] = g(t, s.coords[0]), s.coords[1] = d(t, s.coords[1]), 1 === m.count && r(m.referenceId) && (i = { ...m.attributes,\n            referenceId: m.referenceId\n          });\n          const a = new p(s, i);\n          a.displayId = m.displayId, e.push(a);\n        }\n      }\n    }\n  }\n\n  _getGeohashLevel(e) {\n    return Math.min(Math.ceil(e / 2 + 2), M);\n  }\n\n  _setGeohashLevel(e) {\n    const t = this._getGeohashLevel(e),\n          s = (Math.floor(t / x) + 1) * x - 1;\n\n    if (this._geohashLevel !== s) return this._geohashLevel = s, this._rebuildTree(), void this._bitsets.geohash.clear();\n  }\n\n  _getTransforms(e, t) {\n    const s = {\n      originPosition: \"upperLeft\",\n      scale: [e.resolution, e.resolution],\n      translate: [e.bounds[0], e.bounds[3]]\n    },\n          r = c(t);\n    if (!r) return {\n      tile: s,\n      left: null,\n      right: null\n    };\n    const [i, a] = r.valid;\n    return {\n      tile: s,\n      left: { ...s,\n        translate: [a, e.bounds[3]]\n      },\n      right: { ...s,\n        translate: [i - a + e.bounds[0], e.bounds[3]]\n      }\n    };\n  }\n\n  _getClusterId(e, t, s) {\n    return (15 & e) << 28 | (16383 & t) << 14 | 16383 & s;\n  }\n\n  _markForDeletion(e, t, s) {\n    const r = this._getClusterId(e, t, s);\n\n    this._clusters.delete(r);\n  }\n\n  _getClusterBounds(e, t, s) {\n    const r = this._schema.params.clusterRadius,\n          i = 2 * r;\n    let a = s % 2 ? t * i : t * i - r;\n    const o = s * i;\n    let h = a + i;\n    const l = o - i,\n          n = 2 ** e.level * v;\n    e.wrap && a < 0 && (a = 0), e.wrap && h > n && (h = n);\n    const u = a / v,\n          c = o / v,\n          g = h / v,\n          d = l / v;\n    return [e.getXForColumn(u), e.getYForRow(c), e.getXForColumn(g), e.getYForRow(d)];\n  }\n\n  _lookupCluster(e, t, s, i, a, o) {\n    const h = this._getClusterId(s, i, a),\n          l = this._clusters.get(h),\n          [c, g, d, f] = this._getClusterBounds(t, i, a),\n          p = {\n      x: c,\n      y: g\n    },\n          _ = {\n      x: d,\n      y: f\n    };\n\n    let m = 0,\n        v = 0,\n        I = 0,\n        b = 0;\n\n    if (this._spatialReference.isWebMercator) {\n      {\n        const e = j(p.x / u.radius);\n        m = e - 360 * Math.floor((e + 180) / 360), v = j(Math.PI / 2 - 2 * Math.atan(Math.exp(-p.y / u.radius)));\n      }\n      {\n        const e = j(_.x / u.radius);\n        I = e - 360 * Math.floor((e + 180) / 360), b = j(Math.PI / 2 - 2 * Math.atan(Math.exp(-_.y / u.radius)));\n      }\n    } else {\n      const e = y(p, this._spatialReference, C.WGS84),\n            t = y(_, this._spatialReference, C.WGS84);\n      if (!e || !t) return null;\n      m = e.x, v = e.y, I = t.x, b = t.y;\n    }\n\n    const R = {\n      geohashX: 0,\n      geohashY: 0\n    },\n          M = {\n      geohashX: 0,\n      geohashY: 0\n    };\n    n(R, v, m, o), n(M, b, I, o);\n\n    const x = R.geohashX,\n          w = R.geohashY,\n          V = M.geohashX,\n          S = M.geohashY,\n          F = {\n      xLL: x,\n      yLL: w,\n      xTR: V,\n      yTR: S,\n      level: o\n    },\n          D = this._tree.getRegionStatistics(x, w, V, S, o),\n          {\n      count: T,\n      xTotal: k,\n      yTotal: B,\n      referenceId: G\n    } = D,\n          O = T ? k / T : 0,\n          A = T ? B / T : 0;\n\n    if (0 === T) return this._clusters.set(h, null), null;\n    const U = {\n      cluster_count: T,\n      ...D.attributes\n    },\n          X = r(l) ? l.update(O, A, s, U, F, G) : L.create(e, h, O, A, s, U, F, G);\n    return 0 === T && (X.geometry.coords[0] = (c + d) / 2, X.geometry.coords[1] = (g + f) / 2), this._clusters.set(h, X), this._updateAggregateValueRangeForCluster(X, X.tileLevel), X;\n  }\n\n  _updateAggregateValueRangeForCluster(e, t) {\n    const s = this._aggregateValueRanges[t] || {\n      minValue: 1 / 0,\n      maxValue: 0\n    },\n          r = s.minValue,\n          i = s.maxValue;\n    s.minValue = Math.min(r, e.count), s.maxValue = Math.max(i, e.count), this._aggregateValueRanges[t] = s, r === s.minValue && i === s.maxValue || (this._aggregateValueRangesChanged = !0);\n  }\n\n  _markTileClustersForDeletion(e, t) {\n    const s = 2 * t,\n          r = Math.ceil(v / s),\n          {\n      row: i,\n      col: a\n    } = e.key,\n          o = a * v,\n          h = i * v,\n          l = Math.floor(o / s),\n          n = Math.floor(h / s);\n\n    for (let u = l; u < l + r; u++) for (let t = n; t < n + r; t++) this._markForDeletion(e.key.level, u, t);\n  }\n\n}\n\nexport { L as ClusterInfo, w as ClusterStore };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/layers/features/support/ClusterStore.js"],"names":["e","t","isNone","s","isSome","r","applySome","i","diff","a","hasDiff","o","GeohashTree","h","setGeohashBuf","l","setGeohashXY","n","earth","u","getInfo","c","quantizeX","g","quantizeY","d","OptimizedFeatureWithGeometry","f","OptimizedFeature","p","_","checkProjectionSupport","m","project","y","TILE_SIZE","v","DISPLAY_ID_TEXEL_MASK","I","Store2D","b","FeatureSetReaderJSON","R","C","M","x","L","constructor","geohashBoundsInfo","count","attributes","cluster_count","create","displayId","createDisplayId","referenceId","tileLevel","update","geometry","coords","toJSON","objectId","clusterId","j","w","events","_geohashLevel","_tileLevel","_aggregateValueRanges","_aggregateValueRangesChanged","_geohashBuf","_clusters","Map","_tiles","_serviceInfo","geometryInfo","_spatialReference","_projectionSupportCheck","WGS84","_bitsets","geohash","getBitset","createBitset","inserted","updateSchema","_schema","source","storage","filters","_tree","_statisticFields","_rebuildTree","console","debug","targets","name","mesh","clear","sweepFeatures","forEachSet","has","lookupByDisplayIdUnsafe","_remove","sweepClusters","forEach","releaseDisplayId","unsetAttributeData","delete","onTileData","addOrUpdate","_getTransforms","getCursor","next","_update","status","Array","params","clusterRadius","_getClustersForTile","fromOptimizedFeatures","attachStorage","end","getDisplayId","computed","unset","setComputedAttributes","scale","emit","valueRanges","onTileUpdate","added","removed","length","level","_setGeohashLevel","key","id","_markTileClustersForDeletion","getAggregate","values","getAggregates","push","get","getFeatureDisplayIdsForAggregate","getRegionDisplayIds","xLL","yLL","xTR","yTR","getDisplayIdForReferenceId","getAggregateValueRanges","size","getXHydrated","getYHydrated","removeCursor","isVisible","_setGeohash","insertCursor","set","isWebMercator","radius","Math","floor","PI","atan","exp","clusterPixelBuffer","_getGeohashLevel","ceil","row","col","tileInfoView","getLODInfoAt","wrap","_lookupCluster","left","right","tile","clone","min","originPosition","resolution","translate","bounds","valid","_getClusterId","_markForDeletion","_getClusterBounds","getXForColumn","getYForRow","geohashX","geohashY","V","S","F","D","getRegionStatistics","T","xTotal","k","yTotal","B","G","O","A","U","X","_updateAggregateValueRangeForCluster","minValue","maxValue","max","ClusterInfo","ClusterStore"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAM,4BAAN;AAAmC,OAAOA,CAAP,MAAa,gCAAb;AAA8C,OAAOC,CAAP,MAAa,4BAAb;AAA0C,SAAOC,MAAM,IAAIC,CAAjB,EAAmBC,MAAM,IAAIC,CAA7B,EAA+BC,SAAS,IAAIC,CAA5C,QAAkD,8BAAlD;AAAiF,SAAOC,IAAI,IAAIC,CAAf,EAAiBC,OAAO,IAAIC,CAA5B,QAAkC,kDAAlC;AAAqF,SAAOC,WAAW,IAAIC,CAAtB,QAA4B,uCAA5B;AAAoE,SAAOC,aAAa,IAAIC,CAAxB,EAA0BC,YAAY,IAAIC,CAA1C,QAAgD,wCAAhD;AAAyF,SAAOC,KAAK,IAAIC,CAAhB,QAAsB,8CAAtB;AAAqE,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,0DAAxB;AAAmF,SAAOC,SAAS,IAAIC,CAApB,EAAsBC,SAAS,IAAIC,CAAnC,QAAyC,0DAAzC;AAAoG,SAAOC,4BAA4B,IAAIC,CAAvC,EAAyCC,gBAAgB,IAAIC,CAA7D,QAAmE,oDAAnE;AAAwH,OAAOC,CAAP,MAAa,qDAAb;AAAmE,SAAOC,sBAAsB,IAAIC,CAAjC,EAAmCC,OAAO,IAAIC,CAA9C,QAAoD,0DAApD;AAA+G,SAAOC,SAAS,IAAIC,CAApB,QAA0B,sCAA1B;AAAiE,SAAOC,qBAAqB,IAAIC,CAAhC,QAAsC,oCAAtC;AAA2E,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,eAAxB;AAAwC,SAAOC,oBAAoB,IAAIC,CAA/B,QAAqC,2BAArC;AAAiE,OAAOC,CAAP,MAAa,6CAAb;AAA2D,MAAMC,CAAC,GAAC,EAAR;AAAA,MAAWC,CAAC,GAAC,CAAb;;AAAe,MAAMC,CAAN,SAAgBnB,CAAhB,CAAiB;AAACoB,EAAAA,WAAW,CAAC/C,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAOE,CAAP,EAASE,CAAT,EAAW;AAAC,UAAM,IAAIuB,CAAJ,CAAM,EAAN,EAAS,CAAC7B,CAAD,EAAGE,CAAH,CAAT,CAAN,EAAsBE,CAAtB,EAAwB,IAAxB,EAA6BL,CAA7B,GAAgC,KAAKgD,iBAAL,GAAuBzC,CAAvD;AAAyD;;AAAS,MAAL0C,KAAK,GAAE;AAAC,WAAO,KAAKC,UAAL,CAAgBC,aAAvB;AAAqC;;AAAa,SAANC,MAAM,CAACpD,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAOE,CAAP,EAASE,CAAT,EAAWE,CAAX,EAAaE,CAAb,EAAeE,CAAf,EAAiB;AAAC,UAAME,CAAC,GAAC,IAAI+B,CAAJ,CAAM7C,CAAN,EAAQE,CAAR,EAAUE,CAAV,EAAYI,CAAZ,EAAcE,CAAd,CAAR;AAAyB,WAAOI,CAAC,CAACsC,SAAF,GAAYrD,CAAC,CAACsD,eAAF,CAAkB,CAAC,CAAnB,CAAZ,EAAkCvC,CAAC,CAACwC,WAAF,GAAc1C,CAAhD,EAAkDE,CAAC,CAACyC,SAAF,GAAYjD,CAA9D,EAAgEQ,CAAvE;AAAyE;;AAAA0C,EAAAA,MAAM,CAACzD,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAOE,CAAP,EAASE,CAAT,EAAWE,CAAX,EAAa;AAAC,WAAO,KAAKiD,QAAL,CAAcC,MAAd,CAAqB,CAArB,IAAwB3D,CAAxB,EAA0B,KAAK0D,QAAL,CAAcC,MAAd,CAAqB,CAArB,IAAwB1D,CAAlD,EAAoD,KAAKuD,SAAL,GAAerD,CAAnE,EAAqE,KAAK+C,UAAL,GAAgB7C,CAArF,EAAuF,KAAK2C,iBAAL,GAAuBzC,CAA9G,EAAgH,KAAKgD,WAAL,GAAiB,IAAjI,EAAsI,KAAKA,WAAL,GAAiB9C,CAAvJ,EAAyJ,IAAhK;AAAqK;;AAAAmD,EAAAA,MAAM,GAAE;AAAC,WAAM;AAACC,MAAAA,QAAQ,EAAC,KAAKA,QAAf;AAAwBN,MAAAA,WAAW,EAAC,MAAI,KAAKL,UAAL,CAAgBC,aAApB,GAAkC,KAAKI,WAAvC,GAAmD,IAAvF;AAA4FL,MAAAA,UAAU,EAAC,EAAC,GAAG,KAAKA,UAAT;AAAoBY,QAAAA,SAAS,EAAC,KAAKD;AAAnC,OAAvG;AAAoJH,MAAAA,QAAQ,EAAC;AAACb,QAAAA,CAAC,EAAC,KAAKa,QAAL,CAAcC,MAAd,CAAqB,CAArB,CAAH;AAA2BzB,QAAAA,CAAC,EAAC,KAAKwB,QAAL,CAAcC,MAAd,CAAqB,CAArB;AAA7B;AAA7J,KAAN;AAA0N;;AAA/pB;;AAAgqB,SAASI,CAAT,CAAW/D,CAAX,EAAa;AAAC,SAAO,oBAAkBA,CAAzB;AAA2B;;AAAA,MAAMgE,CAAN,SAAgBxB,CAAhB,CAAiB;AAACO,EAAAA,WAAW,CAAC9C,CAAD,EAAGE,CAAH,EAAKE,CAAL,EAAOE,CAAP,EAAS;AAAC,UAAMN,CAAN,EAAQI,CAAR,GAAW,KAAK4D,MAAL,GAAY,IAAIjE,CAAJ,EAAvB,EAA6B,KAAKkE,aAAL,GAAmB,CAAhD,EAAkD,KAAKC,UAAL,GAAgB,CAAlE,EAAoE,KAAKC,qBAAL,GAA2B,EAA/F,EAAkG,KAAKC,4BAAL,GAAkC,CAAC,CAArI,EAAuI,KAAKC,WAAL,GAAiB,EAAxJ,EAA2J,KAAKC,SAAL,GAAe,IAAIC,GAAJ,EAA1K,EAAkL,KAAKC,MAAL,GAAY,IAAID,GAAJ,EAA9L,EAAsM,KAAKE,YAAL,GAAkBnE,CAAxN,EAA0N,KAAKoE,YAAL,GAAkB1E,CAAC,CAAC0E,YAA9O,EAA2P,KAAKC,iBAAL,GAAuBzE,CAAlR,EAAoR,KAAK0E,uBAAL,GAA6B7C,CAAC,CAAC7B,CAAD,EAAGwC,CAAC,CAACmC,KAAL,CAAlT,EAA8T,KAAKC,QAAL,CAAcC,OAAd,GAAsB3E,CAAC,CAAC4E,SAAF,CAAY5E,CAAC,CAAC6E,YAAF,EAAZ,CAApV,EAAkX,KAAKH,QAAL,CAAcI,QAAd,GAAuB9E,CAAC,CAAC4E,SAAF,CAAY5E,CAAC,CAAC6E,YAAF,EAAZ,CAAzY;AAAua;;AAAkB,QAAZE,YAAY,CAACpF,CAAD,EAAGK,CAAH,EAAK;AAAC,UAAME,CAAC,GAAC,KAAK8E,OAAb;;AAAqB,QAAG;AAAC,YAAM,MAAMD,YAAN,CAAmBpF,CAAnB,EAAqBK,CAArB,CAAN,EAA8B,MAAM,KAAKwE,uBAAzC;AAAiE,KAArE,CAAqE,OAAM5D,CAAN,EAAQ,CAAE;;AAAA,UAAMF,CAAC,GAACN,CAAC,CAACF,CAAD,EAAGF,CAAH,CAAT;AAAeA,IAAAA,CAAC,KAAG,CAACF,CAAC,CAACY,CAAD,CAAF,IAAOf,CAAC,CAACsF,MAAT,IAAiBtF,CAAC,CAACuF,OAAF,CAAUC,OAA9B,CAAD,IAAyC,CAAC7E,CAAC,CAACI,CAAD,EAAG,eAAH,CAAD,IAAsB,CAAC,KAAK0E,KAA5B,IAAmCzF,CAAC,CAACsF,MAAtC,MAAgD,KAAKG,KAAL,GAAW,IAAI5E,CAAJ,CAAM,KAAK6E,gBAAX,EAA4B,KAAKhB,YAAjC,CAAX,EAA0D,KAAKiB,YAAL,EAA1D,EAA8E1F,CAAC,CAAC,sBAAD,CAAD,IAA2B2F,OAAO,CAACC,KAAR,CAAc,kDAAd,CAAzJ,GAA4N5F,CAAC,CAAC,sBAAD,CAAD,IAA2B2F,OAAO,CAACC,KAAR,CAAc,iCAAd,EAAgD9E,CAAhD,CAAvP,EAA0Sf,CAAC,CAAC8F,OAAF,CAAUzF,CAAC,CAAC0F,IAAZ,IAAkB,CAAC,CAA7T,EAA+T/F,CAAC,CAACgG,IAAF,GAAO,CAAC,CAAvU,EAAyU,KAAK5B,qBAAL,GAA2B,EAA7Y,IAAiZ7D,CAAC,KAAGP,CAAC,CAACgG,IAAF,GAAO,CAAC,CAAX,CAAlZ;AAAga;;AAAAC,EAAAA,KAAK,GAAE;AAAC,SAAKN,YAAL;AAAoB;;AAAAO,EAAAA,aAAa,CAAClG,CAAD,EAAGC,CAAH,EAAK;AAAC,SAAK8E,QAAL,CAAcI,QAAd,CAAuBgB,UAAvB,CAAmChG,CAAC,IAAE;AAAC,UAAG,CAACH,CAAC,CAACoG,GAAF,CAAMjG,CAAN,CAAJ,EAAa;AAAC,cAAMH,CAAC,GAACC,CAAC,CAACoG,uBAAF,CAA0BlG,CAA1B,CAAR;;AAAqC,aAAKmG,OAAL,CAAatG,CAAb;AAAgB;AAAC,KAA3G;AAA8G;;AAAAuG,EAAAA,aAAa,CAACvG,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAO;AAAC,SAAKoE,SAAL,CAAeiC,OAAf,CAAwB,CAACnG,CAAD,EAAGE,CAAH,KAAO;AAACF,MAAAA,CAAC,IAAEA,CAAC,CAACmD,SAAF,KAAcrD,CAAjB,KAAqBH,CAAC,CAACyG,gBAAF,CAAmBpG,CAAC,CAACgD,SAArB,GAAgCpD,CAAC,CAACyG,kBAAF,CAAqBrG,CAAC,CAACgD,SAAvB,CAAhC,EAAkE,KAAKkB,SAAL,CAAeoC,MAAf,CAAsBpG,CAAtB,CAAvF;AAAiH,KAAjJ;AAAoJ;;AAAAqG,EAAAA,UAAU,CAAC5G,CAAD,EAAGC,CAAH,EAAKI,CAAL,EAAOE,CAAP,EAAc;AAAA,QAALE,CAAK,uEAAH,CAAC,CAAE;AAAC,QAAG,CAAC,KAAK4E,OAAN,IAAelF,CAAC,CAACF,CAAC,CAAC4G,WAAH,CAAnB,EAAmC,OAAO5G,CAAP;;AAAS,UAAMU,CAAC,GAAC,KAAKmG,cAAL,CAAoB9G,CAApB,EAAsB,KAAK4E,iBAA3B,CAAR;;AAAsD;AAAC,YAAM5E,CAAC,GAACC,CAAC,CAAC4G,WAAF,CAAcE,SAAd,EAAR;;AAAkC,aAAK/G,CAAC,CAACgH,IAAF,EAAL,GAAe,KAAKC,OAAL,CAAajH,CAAb,EAAeO,CAAf;AAAkB;AAAA,QAAGN,CAAC,CAACiH,MAAF,CAASlB,IAAT,IAAe,CAACvF,CAAnB,EAAqB,OAAOR,CAAP;AAAS,UAAMY,CAAC,GAAC,IAAIsG,KAAJ,EAAR;AAAA,UAAkBpG,CAAC,GAAC,KAAKsE,OAAL,CAAa+B,MAAb,CAAoBC,aAAxC;AAAsD,SAAKC,mBAAL,CAAyBzG,CAAzB,EAA2Bb,CAA3B,EAA6Be,CAA7B,EAA+BV,CAA/B,EAAiCM,CAAjC,GAAoCV,CAAC,CAAC4G,WAAF,GAAcnE,CAAC,CAAC6E,qBAAF,CAAwB1G,CAAxB,EAA0B,KAAK6D,YAA/B,CAAlD,EAA+FzE,CAAC,CAAC4G,WAAF,CAAcW,aAAd,CAA4BnH,CAA5B,CAA/F,EAA8HJ,CAAC,CAACwH,GAAF,GAAM,CAAC,CAArI;AAAuI;AAAC,YAAMtH,CAAC,GAACF,CAAC,CAAC4G,WAAF,CAAcE,SAAd,EAAR;;AAAkC,aAAK5G,CAAC,CAAC6G,IAAF,EAAL,GAAe;AAAC,cAAM/G,CAAC,GAACE,CAAC,CAACuH,YAAF,EAAR;AAAyB,aAAK3C,QAAL,CAAc4C,QAAd,CAAuBC,KAAvB,CAA6B3H,CAA7B,GAAgC,KAAK4H,qBAAL,CAA2BxH,CAA3B,EAA6BF,CAA7B,EAA+BF,CAA/B,EAAiCD,CAAC,CAAC8H,KAAnC,CAAhC;AAA0E;AAAC;AAAA,WAAO,KAAKzD,4BAAL,IAAmCpE,CAAC,CAACwH,GAArC,KAA2C,KAAKxD,MAAL,CAAY8D,IAAZ,CAAiB,oBAAjB,EAAsC;AAACC,MAAAA,WAAW,EAAC,KAAK5D;AAAlB,KAAtC,GAAgF,KAAKC,4BAAL,GAAkC,CAAC,CAA9J,GAAiKpE,CAAxK;AAA0K;;AAAAgI,EAAAA,YAAY,OAAqB;AAAA,QAApB;AAACC,MAAAA,KAAK,EAAClI,CAAP;AAASmI,MAAAA,OAAO,EAAClI;AAAjB,KAAoB;;AAAC,QAAGD,CAAC,CAACoI,MAAL,EAAY;AAAC,YAAMnI,CAAC,GAACD,CAAC,CAAC,CAAD,CAAD,CAAKqI,KAAb;AAAmB,WAAKlE,UAAL,GAAgBlE,CAAhB,EAAkB,KAAKqI,gBAAL,CAAsBrI,CAAtB,CAAlB;AAA2C;;AAAA,QAAG,CAAC,KAAKoF,OAAT,EAAiB;AAAO,UAAMlF,CAAC,GAAC,KAAKkF,OAAL,CAAa+B,MAAb,CAAoBC,aAA5B;AAA0CpH,IAAAA,CAAC,CAACuG,OAAF,CAAWxG,CAAC,IAAE;AAAC,WAAKyE,MAAL,CAAYkC,MAAZ,CAAmB3G,CAAC,CAACuI,GAAF,CAAMC,EAAzB,GAA6B,KAAKC,4BAAL,CAAkCzI,CAAlC,EAAoCG,CAApC,CAA7B;AAAoE,KAAnF;AAAsF;;AAAAuI,EAAAA,YAAY,CAAC1I,CAAD,EAAG;AAAC,SAAI,MAAMC,CAAV,IAAe,KAAKsE,SAAL,CAAeoE,MAAf,EAAf,EAAuC,IAAG,CAAC,CAAC,QAAM1I,CAAN,GAAQ,KAAK,CAAb,GAAeA,CAAC,CAACoD,SAAlB,IAA6Bf,CAA9B,MAAmCtC,CAAC,GAACsC,CAArC,CAAH,EAA2C,OAAOrC,CAAC,CAAC2D,MAAF,EAAP;;AAAkB,WAAO,IAAP;AAAY;;AAAAgF,EAAAA,aAAa,GAAE;AAAC,UAAM5I,CAAC,GAAC,EAAR;;AAAW,SAAI,MAAMC,CAAV,IAAe,KAAKsE,SAAL,CAAeoE,MAAf,EAAf,EAAuC,CAAC,QAAM1I,CAAN,GAAQ,KAAK,CAAb,GAAeA,CAAC,CAACuD,SAAlB,MAA+B,KAAKW,UAApC,IAAgDnE,CAAC,CAAC6I,IAAF,CAAO5I,CAAC,CAAC2D,MAAF,EAAP,CAAhD;;AAAmE,WAAO5D,CAAP;AAAS;;AAAA0H,EAAAA,YAAY,CAAC1H,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAKsE,SAAL,CAAeuE,GAAf,CAAmB9I,CAAnB,CAAR;;AAA8B,WAAOC,CAAC,GAACA,CAAC,CAACoD,SAAH,GAAa,IAArB;AAA0B;;AAAA0F,EAAAA,gCAAgC,CAAC/I,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAKsE,SAAL,CAAeuE,GAAf,CAAmB9I,CAAnB,CAAR;;AAA8B,QAAG,CAACC,CAAJ,EAAM,OAAM,EAAN;AAAS,UAAME,CAAC,GAACF,CAAC,CAAC+C,iBAAV;AAA4B,WAAO,KAAKyC,KAAL,CAAWuD,mBAAX,CAA+B7I,CAAC,CAAC8I,GAAjC,EAAqC9I,CAAC,CAAC+I,GAAvC,EAA2C/I,CAAC,CAACgJ,GAA7C,EAAiDhJ,CAAC,CAACiJ,GAAnD,EAAuDjJ,CAAC,CAACkI,KAAzD,CAAP;AAAuE;;AAAAgB,EAAAA,0BAA0B,CAACrJ,CAAD,EAAG;AAAC,SAAI,MAAMC,CAAV,IAAe,KAAKsE,SAAL,CAAeoE,MAAf,EAAf,EAAuC,IAAG,CAAC,QAAM1I,CAAN,GAAQ,KAAK,CAAb,GAAeA,CAAC,CAACsD,WAAlB,MAAiCvD,CAApC,EAAsC,OAAOC,CAAC,CAACoD,SAAT;;AAAmB,WAAO,IAAP;AAAY;;AAAAiG,EAAAA,uBAAuB,GAAE;AAAC,WAAO,KAAKlF,qBAAZ;AAAkC;;AAAAoC,EAAAA,OAAO,CAACxG,CAAD,EAAG;AAAC,SAAI,MAAK,CAACC,CAAD,EAAGE,CAAH,CAAT,IAAiB,KAAKoE,SAAtB,EAAgCpE,CAAC,IAAEH,CAAC,CAACG,CAAD,EAAGF,CAAH,CAAJ;AAAU;;AAAAsJ,EAAAA,IAAI,GAAE;AAAC,QAAIvJ,CAAC,GAAC,CAAN;AAAQ,WAAO,KAAKwG,OAAL,CAAcvG,CAAC,IAAED,CAAC,EAAlB,GAAuBA,CAA9B;AAAgC;;AAAA2F,EAAAA,YAAY,GAAE;AAAC,SAAKZ,QAAL,CAAc4C,QAAd,CAAuB1B,KAAvB,IAA+B,KAAKlB,QAAL,CAAcI,QAAd,CAAuBc,KAAvB,EAA/B,EAA8D,KAAKR,KAAL,IAAY,KAAKA,KAAL,CAAWQ,KAAX,EAA1E;AAA6F;;AAAAK,EAAAA,OAAO,CAACtG,CAAD,EAAG;AAAC,UAAMC,CAAC,GAACD,CAAC,CAAC0H,YAAF,EAAR;AAAA,UAAyBvH,CAAC,GAACH,CAAC,CAACwJ,YAAF,EAA3B;AAAA,UAA4CnJ,CAAC,GAACL,CAAC,CAACyJ,YAAF,EAA9C;AAAA,UAA+DlJ,CAAC,GAAC,KAAK+D,WAAL,CAAiB,IAAErE,CAAnB,CAAjE;AAAA,UAAuFQ,CAAC,GAAC,KAAK6D,WAAL,CAAiB,IAAErE,CAAF,GAAI,CAArB,CAAzF;AAAiH,SAAK8E,QAAL,CAAcI,QAAd,CAAuBiB,GAAvB,CAA2BnG,CAA3B,MAAgC,KAAK8E,QAAL,CAAcI,QAAd,CAAuByC,KAAvB,CAA6B3H,CAA7B,GAAgC,KAAKwF,KAAL,CAAWiE,YAAX,CAAwB1J,CAAxB,EAA0BG,CAA1B,EAA4BE,CAA5B,EAA8BE,CAA9B,EAAgCE,CAAhC,EAAkC,KAAKyD,aAAvC,CAAhE;AAAuH;;AAAA+C,EAAAA,OAAO,CAACjH,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAME,CAAC,GAACH,CAAC,CAAC0H,YAAF,EAAR;AAAA,UAAyBrH,CAAC,GAAC,KAAK0E,QAAL,CAAcI,QAAzC;AAAA,UAAkD5E,CAAC,GAACN,CAAC,CAAC0J,SAAF,CAAYxJ,CAAZ,CAApD;AAAmE,QAAGI,CAAC,KAAGF,CAAC,CAAC+F,GAAF,CAAMjG,CAAN,CAAP,EAAgB;AAAO,QAAG,CAACI,CAAJ,EAAM,OAAO,KAAK,KAAK+F,OAAL,CAAatG,CAAb,CAAZ;AAA4B,UAAMS,CAAC,GAACT,CAAC,CAACwJ,YAAF,EAAR;AAAA,UAAyB7I,CAAC,GAACX,CAAC,CAACyJ,YAAF,EAA3B;AAA4C,QAAG,CAAC,KAAKG,WAAL,CAAiBzJ,CAAjB,EAAmBM,CAAnB,EAAqBE,CAArB,CAAJ,EAA4B;AAAO,UAAME,CAAC,GAAC,KAAKyD,WAAL,CAAiB,IAAEnE,CAAnB,CAAR;AAAA,UAA8BY,CAAC,GAAC,KAAKuD,WAAL,CAAiB,IAAEnE,CAAF,GAAI,CAArB,CAAhC;AAAwD,SAAKsF,KAAL,CAAWoE,YAAX,CAAwB7J,CAAxB,EAA0BG,CAA1B,EAA4BM,CAA5B,EAA8BE,CAA9B,EAAgCE,CAAhC,EAAkCE,CAAlC,EAAoC,KAAKmD,aAAzC,GAAwD7D,CAAC,CAACyJ,GAAF,CAAM3J,CAAN,CAAxD;AAAiE;;AAAAyJ,EAAAA,WAAW,CAAC5J,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAO;AAAC,QAAG,KAAK4E,QAAL,CAAcC,OAAd,CAAsBoB,GAAtB,CAA0BpG,CAA1B,CAAH,EAAgC,OAAM,CAAC,CAAP;AAAS,UAAMK,CAAC,GAAC,KAAKiE,WAAb;;AAAyB,QAAG,KAAKM,iBAAL,CAAuBmF,aAA1B,EAAwC;AAAC,YAAMxJ,CAAC,GAACwD,CAAC,CAAC9D,CAAC,GAACkB,CAAC,CAAC6I,MAAL,CAAT;AAAA,YAAsBvJ,CAAC,GAACF,CAAC,GAAC,MAAI0J,IAAI,CAACC,KAAL,CAAW,CAAC3J,CAAC,GAAC,GAAH,IAAQ,GAAnB,CAA9B;AAAA,YAAsDI,CAAC,GAACoD,CAAC,CAACkG,IAAI,CAACE,EAAL,GAAQ,CAAR,GAAU,IAAEF,IAAI,CAACG,IAAL,CAAUH,IAAI,CAACI,GAAL,CAAS,CAAClK,CAAD,GAAGgB,CAAC,CAAC6I,MAAd,CAAV,CAAb,CAAzD;AAAwGjJ,MAAAA,CAAC,CAACV,CAAD,EAAGL,CAAH,EAAKW,CAAL,EAAOF,CAAP,EAASmC,CAAT,CAAD;AAAa,KAA9J,MAAkK;AAAC,YAAMrC,CAAC,GAAC2B,CAAC,CAAC;AAACW,QAAAA,CAAC,EAAC5C,CAAH;AAAKiC,QAAAA,CAAC,EAAC/B;AAAP,OAAD,EAAW,KAAKyE,iBAAhB,EAAkCjC,CAAC,CAACmC,KAApC,CAAT;AAAoD,UAAG,CAACvE,CAAJ,EAAM,OAAM,CAAC,CAAP;AAASQ,MAAAA,CAAC,CAACV,CAAD,EAAGL,CAAH,EAAKO,CAAC,CAAC2B,CAAP,EAAS3B,CAAC,CAACsC,CAAX,EAAaD,CAAb,CAAD;AAAiB;;AAAA,WAAO,KAAKmC,QAAL,CAAcC,OAAd,CAAsB8E,GAAtB,CAA0B9J,CAA1B,GAA6B,CAAC,CAArC;AAAuC;;AAAAsH,EAAAA,mBAAmB,CAACtH,CAAD,EAAGC,CAAH,EAAKQ,CAAL,EAAOE,CAAP,EAASE,CAAT,EAAgB;AAAA,QAALE,CAAK,uEAAH,CAAC,CAAE;;AAAC,UAAME,CAAC,GAAC,KAAKoE,OAAL,CAAa+B,MAAb,CAAoBkD,kBAA5B;AAAA,UAA+CnJ,CAAC,GAAC,IAAEV,CAAnD;AAAA,UAAqDY,CAAC,GAAC,KAAKkJ,gBAAL,CAAsBtK,CAAC,CAACsI,GAAF,CAAMF,KAA5B,CAAvD;AAAA,UAA0F1G,CAAC,GAACsI,IAAI,CAACO,IAAL,CAAU,KAAGvK,CAAC,CAACsI,GAAF,CAAMF,KAAT,GAAejG,CAAf,GAAiBjB,CAA3B,CAA5F;AAAA,UAA0HW,CAAC,GAACmI,IAAI,CAACO,IAAL,CAAUvJ,CAAC,GAACE,CAAZ,IAAe,CAA3I;AAAA,UAA6Ia,CAAC,GAACiI,IAAI,CAACO,IAAL,CAAUpI,CAAC,GAACjB,CAAZ,CAA/I;AAAA,UAA8J;AAACsJ,MAAAA,GAAG,EAACvI,CAAL;AAAOwI,MAAAA,GAAG,EAACpI;AAAX,QAAcrC,CAAC,CAACsI,GAA9K;AAAA,UAAkL/F,CAAC,GAACF,CAAC,GAACF,CAAtL;AAAA,UAAwLM,CAAC,GAACR,CAAC,GAACE,CAA5L;AAAA,UAA8LO,CAAC,GAACsH,IAAI,CAACC,KAAL,CAAW1H,CAAC,GAACrB,CAAb,IAAgBW,CAAhN;AAAA,UAAkNc,CAAC,GAACqH,IAAI,CAACC,KAAL,CAAWxH,CAAC,GAACvB,CAAb,IAAgBW,CAApO;AAAA,UAAsOe,CAAC,GAACF,CAAC,GAACX,CAAF,GAAI,IAAEF,CAA9O;AAAA,UAAgPgB,CAAC,GAACF,CAAC,GAACZ,CAAF,GAAI,IAAEF,CAAxP;AAAA,UAA0PiC,CAAC,GAAC9D,CAAC,CAAC0K,YAAF,CAAeC,YAAf,CAA4B3K,CAAC,CAACsI,GAAF,CAAMF,KAAlC,CAA5P;;AAAqS,SAAI,IAAIjG,CAAC,GAACO,CAAV,EAAYP,CAAC,IAAES,CAAf,EAAiBT,CAAC,EAAlB,EAAqB,KAAI,IAAI3B,CAAC,GAACmC,CAAV,EAAYnC,CAAC,IAAEqC,CAAf,EAAiBrC,CAAC,EAAlB,EAAqB;AAAC,UAAIQ,CAAC,GAACmB,CAAN;AAAQ2B,MAAAA,CAAC,CAAC8G,IAAF,KAAS5J,CAAC,GAACmB,CAAC,GAAC,CAAF,GAAIA,CAAC,GAACT,CAAN,GAAQS,CAAC,GAACT,CAArB;;AAAwB,YAAMR,CAAC,GAAC4C,CAAC,CAAC8G,IAAF,IAAQzI,CAAC,GAAC,CAAlB;AAAA,YAAoBN,CAAC,GAACiC,CAAC,CAAC8G,IAAF,IAAQzI,CAAC,GAACT,CAAF,KAAMS,CAApC;AAAA,YAAsCJ,CAAC,GAAC,KAAK8I,cAAL,CAAoBnK,CAApB,EAAsBoD,CAAtB,EAAwB9D,CAAC,CAACsI,GAAF,CAAMF,KAA9B,EAAoCpH,CAApC,EAAsCR,CAAtC,EAAwCY,CAAxC,CAAxC;;AAAmF,UAAGhB,CAAC,CAAC2B,CAAD,CAAJ,EAAQ;AAAC,cAAM/B,CAAC,GAACM,CAAC,CAACM,CAAD,EAAIb,CAAC,IAAEmB,CAAC,GAACnB,CAAC,CAAC+K,IAAH,GAAQjJ,CAAC,GAAC9B,CAAC,CAACgL,KAAH,GAAShL,CAAC,CAACiL,IAA5B,CAAT;AAA4C,YAAGlK,CAAC,IAAEZ,CAAC,CAACF,CAAD,CAAP,EAAW;AAAS,YAAG,CAAC+B,CAAC,CAACiB,KAAN,EAAY;;AAAS,YAAG5C,CAAC,CAACJ,CAAD,CAAD,IAAMc,CAAT,EAAW;AAAC,gBAAMZ,CAAC,GAAC6B,CAAC,CAAC0B,QAAF,CAAWwH,KAAX,EAAR;AAA2B,cAAI3K,CAAC,GAACyB,CAAC,CAACkB,UAAR;AAAmB/C,UAAAA,CAAC,CAACwD,MAAF,CAAS,CAAT,IAAYpC,CAAC,CAACtB,CAAD,EAAGE,CAAC,CAACwD,MAAF,CAAS,CAAT,CAAH,CAAb,EAA6BxD,CAAC,CAACwD,MAAF,CAAS,CAAT,IAAYlC,CAAC,CAACxB,CAAD,EAAGE,CAAC,CAACwD,MAAF,CAAS,CAAT,CAAH,CAA1C,EAA0D,MAAI3B,CAAC,CAACiB,KAAN,IAAa5C,CAAC,CAAC2B,CAAC,CAACuB,WAAH,CAAd,KAAgChD,CAAC,GAAC,EAAC,GAAGyB,CAAC,CAACkB,UAAN;AAAiBK,YAAAA,WAAW,EAACvB,CAAC,CAACuB;AAA/B,WAAlC,CAA1D;AAAyI,gBAAM9C,CAAC,GAAC,IAAIoB,CAAJ,CAAM1B,CAAN,EAAQI,CAAR,CAAR;AAAmBE,UAAAA,CAAC,CAAC4C,SAAF,GAAYrB,CAAC,CAACqB,SAAd,EAAwBrD,CAAC,CAAC6I,IAAF,CAAOpI,CAAP,CAAxB;AAAkC;AAAC;AAAC;AAAC;;AAAA8J,EAAAA,gBAAgB,CAACvK,CAAD,EAAG;AAAC,WAAOiK,IAAI,CAACkB,GAAL,CAASlB,IAAI,CAACO,IAAL,CAAUxK,CAAC,GAAC,CAAF,GAAI,CAAd,CAAT,EAA0B4C,CAA1B,CAAP;AAAoC;;AAAA0F,EAAAA,gBAAgB,CAACtI,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAKsK,gBAAL,CAAsBvK,CAAtB,CAAR;AAAA,UAAiCG,CAAC,GAAC,CAAC8J,IAAI,CAACC,KAAL,CAAWjK,CAAC,GAAC4C,CAAb,IAAgB,CAAjB,IAAoBA,CAApB,GAAsB,CAAzD;;AAA2D,QAAG,KAAKqB,aAAL,KAAqB/D,CAAxB,EAA0B,OAAO,KAAK+D,aAAL,GAAmB/D,CAAnB,EAAqB,KAAKwF,YAAL,EAArB,EAAyC,KAAK,KAAKZ,QAAL,CAAcC,OAAd,CAAsBiB,KAAtB,EAArD;AAAmF;;AAAAa,EAAAA,cAAc,CAAC9G,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAME,CAAC,GAAC;AAACiL,MAAAA,cAAc,EAAC,WAAhB;AAA4BtD,MAAAA,KAAK,EAAC,CAAC9H,CAAC,CAACqL,UAAH,EAAcrL,CAAC,CAACqL,UAAhB,CAAlC;AAA8DC,MAAAA,SAAS,EAAC,CAACtL,CAAC,CAACuL,MAAF,CAAS,CAAT,CAAD,EAAavL,CAAC,CAACuL,MAAF,CAAS,CAAT,CAAb;AAAxE,KAAR;AAAA,UAA2GlL,CAAC,GAACgB,CAAC,CAACpB,CAAD,CAA9G;AAAkH,QAAG,CAACI,CAAJ,EAAM,OAAM;AAAC4K,MAAAA,IAAI,EAAC9K,CAAN;AAAQ4K,MAAAA,IAAI,EAAC,IAAb;AAAkBC,MAAAA,KAAK,EAAC;AAAxB,KAAN;AAAoC,UAAK,CAACzK,CAAD,EAAGE,CAAH,IAAMJ,CAAC,CAACmL,KAAb;AAAmB,WAAM;AAACP,MAAAA,IAAI,EAAC9K,CAAN;AAAQ4K,MAAAA,IAAI,EAAC,EAAC,GAAG5K,CAAJ;AAAMmL,QAAAA,SAAS,EAAC,CAAC7K,CAAD,EAAGT,CAAC,CAACuL,MAAF,CAAS,CAAT,CAAH;AAAhB,OAAb;AAA8CP,MAAAA,KAAK,EAAC,EAAC,GAAG7K,CAAJ;AAAMmL,QAAAA,SAAS,EAAC,CAAC/K,CAAC,GAACE,CAAF,GAAIT,CAAC,CAACuL,MAAF,CAAS,CAAT,CAAL,EAAiBvL,CAAC,CAACuL,MAAF,CAAS,CAAT,CAAjB;AAAhB;AAApD,KAAN;AAA0G;;AAAAE,EAAAA,aAAa,CAACzL,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAO;AAAC,WAAM,CAAC,KAAGH,CAAJ,KAAQ,EAAR,GAAW,CAAC,QAAMC,CAAP,KAAW,EAAtB,GAAyB,QAAME,CAArC;AAAuC;;AAAAuL,EAAAA,gBAAgB,CAAC1L,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAO;AAAC,UAAME,CAAC,GAAC,KAAKoL,aAAL,CAAmBzL,CAAnB,EAAqBC,CAArB,EAAuBE,CAAvB,CAAR;;AAAkC,SAAKoE,SAAL,CAAeoC,MAAf,CAAsBtG,CAAtB;AAAyB;;AAAAsL,EAAAA,iBAAiB,CAAC3L,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAO;AAAC,UAAME,CAAC,GAAC,KAAKgF,OAAL,CAAa+B,MAAb,CAAoBC,aAA5B;AAAA,UAA0C9G,CAAC,GAAC,IAAEF,CAA9C;AAAgD,QAAII,CAAC,GAACN,CAAC,GAAC,CAAF,GAAIF,CAAC,GAACM,CAAN,GAAQN,CAAC,GAACM,CAAF,GAAIF,CAAlB;AAAoB,UAAMM,CAAC,GAACR,CAAC,GAACI,CAAV;AAAY,QAAIM,CAAC,GAACJ,CAAC,GAACF,CAAR;AAAU,UAAMQ,CAAC,GAACJ,CAAC,GAACJ,CAAV;AAAA,UAAYU,CAAC,GAAC,KAAGjB,CAAC,CAACqI,KAAL,GAAWjG,CAAzB;AAA2BpC,IAAAA,CAAC,CAAC6K,IAAF,IAAQpK,CAAC,GAAC,CAAV,KAAcA,CAAC,GAAC,CAAhB,GAAmBT,CAAC,CAAC6K,IAAF,IAAQhK,CAAC,GAACI,CAAV,KAAcJ,CAAC,GAACI,CAAhB,CAAnB;AAAsC,UAAME,CAAC,GAACV,CAAC,GAAC2B,CAAV;AAAA,UAAYf,CAAC,GAACV,CAAC,GAACyB,CAAhB;AAAA,UAAkBb,CAAC,GAACV,CAAC,GAACuB,CAAtB;AAAA,UAAwBX,CAAC,GAACV,CAAC,GAACqB,CAA5B;AAA8B,WAAM,CAACpC,CAAC,CAAC4L,aAAF,CAAgBzK,CAAhB,CAAD,EAAoBnB,CAAC,CAAC6L,UAAF,CAAaxK,CAAb,CAApB,EAAoCrB,CAAC,CAAC4L,aAAF,CAAgBrK,CAAhB,CAApC,EAAuDvB,CAAC,CAAC6L,UAAF,CAAapK,CAAb,CAAvD,CAAN;AAA8E;;AAAAqJ,EAAAA,cAAc,CAAC9K,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAOI,CAAP,EAASE,CAAT,EAAWE,CAAX,EAAa;AAAC,UAAME,CAAC,GAAC,KAAK4K,aAAL,CAAmBtL,CAAnB,EAAqBI,CAArB,EAAuBE,CAAvB,CAAR;AAAA,UAAkCM,CAAC,GAAC,KAAKwD,SAAL,CAAeuE,GAAf,CAAmBjI,CAAnB,CAApC;AAAA,UAA0D,CAACQ,CAAD,EAAGE,CAAH,EAAKE,CAAL,EAAOE,CAAP,IAAU,KAAKgK,iBAAL,CAAuB1L,CAAvB,EAAyBM,CAAzB,EAA2BE,CAA3B,CAApE;AAAA,UAAkGoB,CAAC,GAAC;AAACgB,MAAAA,CAAC,EAACxB,CAAH;AAAKa,MAAAA,CAAC,EAACX;AAAP,KAApG;AAAA,UAA8GO,CAAC,GAAC;AAACe,MAAAA,CAAC,EAACpB,CAAH;AAAKS,MAAAA,CAAC,EAACP;AAAP,KAAhH;;AAA0H,QAAIK,CAAC,GAAC,CAAN;AAAA,QAAQI,CAAC,GAAC,CAAV;AAAA,QAAYE,CAAC,GAAC,CAAd;AAAA,QAAgBE,CAAC,GAAC,CAAlB;;AAAoB,QAAG,KAAKoC,iBAAL,CAAuBmF,aAA1B,EAAwC;AAAC;AAAC,cAAM/J,CAAC,GAAC+D,CAAC,CAAClC,CAAC,CAACgB,CAAF,GAAI1B,CAAC,CAAC6I,MAAP,CAAT;AAAwBhI,QAAAA,CAAC,GAAChC,CAAC,GAAC,MAAIiK,IAAI,CAACC,KAAL,CAAW,CAAClK,CAAC,GAAC,GAAH,IAAQ,GAAnB,CAAR,EAAgCoC,CAAC,GAAC2B,CAAC,CAACkG,IAAI,CAACE,EAAL,GAAQ,CAAR,GAAU,IAAEF,IAAI,CAACG,IAAL,CAAUH,IAAI,CAACI,GAAL,CAAS,CAACxI,CAAC,CAACK,CAAH,GAAKf,CAAC,CAAC6I,MAAhB,CAAV,CAAb,CAAnC;AAAoF;AAAA;AAAC,cAAMhK,CAAC,GAAC+D,CAAC,CAACjC,CAAC,CAACe,CAAF,GAAI1B,CAAC,CAAC6I,MAAP,CAAT;AAAwB1H,QAAAA,CAAC,GAACtC,CAAC,GAAC,MAAIiK,IAAI,CAACC,KAAL,CAAW,CAAClK,CAAC,GAAC,GAAH,IAAQ,GAAnB,CAAR,EAAgCwC,CAAC,GAACuB,CAAC,CAACkG,IAAI,CAACE,EAAL,GAAQ,CAAR,GAAU,IAAEF,IAAI,CAACG,IAAL,CAAUH,IAAI,CAACI,GAAL,CAAS,CAACvI,CAAC,CAACI,CAAH,GAAKf,CAAC,CAAC6I,MAAhB,CAAV,CAAb,CAAnC;AAAoF;AAAC,KAApQ,MAAwQ;AAAC,YAAMhK,CAAC,GAACkC,CAAC,CAACL,CAAD,EAAG,KAAK+C,iBAAR,EAA0BjC,CAAC,CAACmC,KAA5B,CAAT;AAAA,YAA4C7E,CAAC,GAACiC,CAAC,CAACJ,CAAD,EAAG,KAAK8C,iBAAR,EAA0BjC,CAAC,CAACmC,KAA5B,CAA/C;AAAkF,UAAG,CAAC9E,CAAD,IAAI,CAACC,CAAR,EAAU,OAAO,IAAP;AAAY+B,MAAAA,CAAC,GAAChC,CAAC,CAAC6C,CAAJ,EAAMT,CAAC,GAACpC,CAAC,CAACkC,CAAV,EAAYI,CAAC,GAACrC,CAAC,CAAC4C,CAAhB,EAAkBL,CAAC,GAACvC,CAAC,CAACiC,CAAtB;AAAwB;;AAAA,UAAMQ,CAAC,GAAC;AAACoJ,MAAAA,QAAQ,EAAC,CAAV;AAAYC,MAAAA,QAAQ,EAAC;AAArB,KAAR;AAAA,UAAgCnJ,CAAC,GAAC;AAACkJ,MAAAA,QAAQ,EAAC,CAAV;AAAYC,MAAAA,QAAQ,EAAC;AAArB,KAAlC;AAA0D9K,IAAAA,CAAC,CAACyB,CAAD,EAAGN,CAAH,EAAKJ,CAAL,EAAOrB,CAAP,CAAD,EAAWM,CAAC,CAAC2B,CAAD,EAAGJ,CAAH,EAAKF,CAAL,EAAO3B,CAAP,CAAZ;;AAAsB,UAAMkC,CAAC,GAACH,CAAC,CAACoJ,QAAV;AAAA,UAAmB9H,CAAC,GAACtB,CAAC,CAACqJ,QAAvB;AAAA,UAAgCC,CAAC,GAACpJ,CAAC,CAACkJ,QAApC;AAAA,UAA6CG,CAAC,GAACrJ,CAAC,CAACmJ,QAAjD;AAAA,UAA0DG,CAAC,GAAC;AAACjD,MAAAA,GAAG,EAACpG,CAAL;AAAOqG,MAAAA,GAAG,EAAClF,CAAX;AAAamF,MAAAA,GAAG,EAAC6C,CAAjB;AAAmB5C,MAAAA,GAAG,EAAC6C,CAAvB;AAAyB5D,MAAAA,KAAK,EAAC1H;AAA/B,KAA5D;AAAA,UAA8FwL,CAAC,GAAC,KAAK1G,KAAL,CAAW2G,mBAAX,CAA+BvJ,CAA/B,EAAiCmB,CAAjC,EAAmCgI,CAAnC,EAAqCC,CAArC,EAAuCtL,CAAvC,CAAhG;AAAA,UAA0I;AAACsC,MAAAA,KAAK,EAACoJ,CAAP;AAASC,MAAAA,MAAM,EAACC,CAAhB;AAAkBC,MAAAA,MAAM,EAACC,CAAzB;AAA2BlJ,MAAAA,WAAW,EAACmJ;AAAvC,QAA0CP,CAApL;AAAA,UAAsLQ,CAAC,GAACN,CAAC,GAACE,CAAC,GAACF,CAAH,GAAK,CAA9L;AAAA,UAAgMO,CAAC,GAACP,CAAC,GAACI,CAAC,GAACJ,CAAH,GAAK,CAAxM;;AAA0M,QAAG,MAAIA,CAAP,EAAS,OAAO,KAAK9H,SAAL,CAAeuF,GAAf,CAAmBjJ,CAAnB,EAAqB,IAArB,GAA2B,IAAlC;AAAuC,UAAMgM,CAAC,GAAC;AAAC1J,MAAAA,aAAa,EAACkJ,CAAf;AAAiB,SAAGF,CAAC,CAACjJ;AAAtB,KAAR;AAAA,UAA0C4J,CAAC,GAACzM,CAAC,CAACU,CAAD,CAAD,GAAKA,CAAC,CAAC0C,MAAF,CAASkJ,CAAT,EAAWC,CAAX,EAAazM,CAAb,EAAe0M,CAAf,EAAiBX,CAAjB,EAAmBQ,CAAnB,CAAL,GAA2B5J,CAAC,CAACM,MAAF,CAASpD,CAAT,EAAWa,CAAX,EAAa8L,CAAb,EAAeC,CAAf,EAAiBzM,CAAjB,EAAmB0M,CAAnB,EAAqBX,CAArB,EAAuBQ,CAAvB,CAAvE;AAAiG,WAAO,MAAIL,CAAJ,KAAQS,CAAC,CAACpJ,QAAF,CAAWC,MAAX,CAAkB,CAAlB,IAAqB,CAACtC,CAAC,GAACI,CAAH,IAAM,CAA3B,EAA6BqL,CAAC,CAACpJ,QAAF,CAAWC,MAAX,CAAkB,CAAlB,IAAqB,CAACpC,CAAC,GAACI,CAAH,IAAM,CAAhE,GAAmE,KAAK4C,SAAL,CAAeuF,GAAf,CAAmBjJ,CAAnB,EAAqBiM,CAArB,CAAnE,EAA2F,KAAKC,oCAAL,CAA0CD,CAA1C,EAA4CA,CAAC,CAACtJ,SAA9C,CAA3F,EAAoJsJ,CAA3J;AAA6J;;AAAAC,EAAAA,oCAAoC,CAAC/M,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAME,CAAC,GAAC,KAAKiE,qBAAL,CAA2BnE,CAA3B,KAA+B;AAAC+M,MAAAA,QAAQ,EAAC,IAAE,CAAZ;AAAcC,MAAAA,QAAQ,EAAC;AAAvB,KAAvC;AAAA,UAAiE5M,CAAC,GAACF,CAAC,CAAC6M,QAArE;AAAA,UAA8EzM,CAAC,GAACJ,CAAC,CAAC8M,QAAlF;AAA2F9M,IAAAA,CAAC,CAAC6M,QAAF,GAAW/C,IAAI,CAACkB,GAAL,CAAS9K,CAAT,EAAWL,CAAC,CAACiD,KAAb,CAAX,EAA+B9C,CAAC,CAAC8M,QAAF,GAAWhD,IAAI,CAACiD,GAAL,CAAS3M,CAAT,EAAWP,CAAC,CAACiD,KAAb,CAA1C,EAA8D,KAAKmB,qBAAL,CAA2BnE,CAA3B,IAA8BE,CAA5F,EAA8FE,CAAC,KAAGF,CAAC,CAAC6M,QAAN,IAAgBzM,CAAC,KAAGJ,CAAC,CAAC8M,QAAtB,KAAiC,KAAK5I,4BAAL,GAAkC,CAAC,CAApE,CAA9F;AAAqK;;AAAAoE,EAAAA,4BAA4B,CAACzI,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAME,CAAC,GAAC,IAAEF,CAAV;AAAA,UAAYI,CAAC,GAAC4J,IAAI,CAACO,IAAL,CAAUpI,CAAC,GAACjC,CAAZ,CAAd;AAAA,UAA6B;AAACsK,MAAAA,GAAG,EAAClK,CAAL;AAAOmK,MAAAA,GAAG,EAACjK;AAAX,QAAcT,CAAC,CAACuI,GAA7C;AAAA,UAAiD5H,CAAC,GAACF,CAAC,GAAC2B,CAArD;AAAA,UAAuDvB,CAAC,GAACN,CAAC,GAAC6B,CAA3D;AAAA,UAA6DrB,CAAC,GAACkJ,IAAI,CAACC,KAAL,CAAWvJ,CAAC,GAACR,CAAb,CAA/D;AAAA,UAA+Ec,CAAC,GAACgJ,IAAI,CAACC,KAAL,CAAWrJ,CAAC,GAACV,CAAb,CAAjF;;AAAiG,SAAI,IAAIgB,CAAC,GAACJ,CAAV,EAAYI,CAAC,GAACJ,CAAC,GAACV,CAAhB,EAAkBc,CAAC,EAAnB,EAAsB,KAAI,IAAIlB,CAAC,GAACgB,CAAV,EAAYhB,CAAC,GAACgB,CAAC,GAACZ,CAAhB,EAAkBJ,CAAC,EAAnB,EAAsB,KAAKyL,gBAAL,CAAsB1L,CAAC,CAACuI,GAAF,CAAMF,KAA5B,EAAkClH,CAAlC,EAAoClB,CAApC;AAAuC;;AAAh/O;;AAAi/O,SAAO6C,CAAC,IAAIqK,WAAZ,EAAwBnJ,CAAC,IAAIoJ,YAA7B","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport\"../../../../../geometry.js\";import e from\"../../../../../core/Evented.js\";import t from\"../../../../../core/has.js\";import{isNone as s,isSome as r,applySome as i}from\"../../../../../core/maybe.js\";import{diff as a,hasDiff as o}from\"../../../../../core/accessorSupport/diffUtils.js\";import{GeohashTree as h}from\"../../../../../geohash/GeohashTree.js\";import{setGeohashBuf as l,setGeohashXY as n}from\"../../../../../geohash/geohashUtils.js\";import{earth as u}from\"../../../../../geometry/support/Ellipsoid.js\";import{getInfo as c}from\"../../../../../geometry/support/spatialReferenceUtils.js\";import{quantizeX as g,quantizeY as d}from\"../../../../../layers/graphics/featureConversionUtils.js\";import{OptimizedFeatureWithGeometry as f,OptimizedFeature as p}from\"../../../../../layers/graphics/OptimizedFeature.js\";import _ from\"../../../../../layers/graphics/OptimizedGeometry.js\";import{checkProjectionSupport as m,project as y}from\"../../../../../layers/graphics/data/projectionSupport.js\";import{TILE_SIZE as v}from\"../../../engine/webgl/definitions.js\";import{DISPLAY_ID_TEXEL_MASK as I}from\"../../../engine/webgl/DisplayId.js\";import{Store2D as b}from\"../Store2D.js\";import{FeatureSetReaderJSON as R}from\"./FeatureSetReaderJSON.js\";import C from\"../../../../../geometry/SpatialReference.js\";const M=12,x=1;class L extends f{constructor(e,t,s,r,i){super(new _([],[t,s]),r,null,e),this.geohashBoundsInfo=i}get count(){return this.attributes.cluster_count}static create(e,t,s,r,i,a,o,h){const l=new L(t,s,r,a,o);return l.displayId=e.createDisplayId(!0),l.referenceId=h,l.tileLevel=i,l}update(e,t,s,r,i,a){return this.geometry.coords[0]=e,this.geometry.coords[1]=t,this.tileLevel=s,this.attributes=r,this.geohashBoundsInfo=i,this.referenceId=null,this.referenceId=a,this}toJSON(){return{objectId:this.objectId,referenceId:1===this.attributes.cluster_count?this.referenceId:null,attributes:{...this.attributes,clusterId:this.objectId},geometry:{x:this.geometry.coords[0],y:this.geometry.coords[1]}}}}function j(e){return 57.29577951308232*e}class w extends b{constructor(t,s,r,i){super(t,r),this.events=new e,this._geohashLevel=0,this._tileLevel=0,this._aggregateValueRanges={},this._aggregateValueRangesChanged=!1,this._geohashBuf=[],this._clusters=new Map,this._tiles=new Map,this._serviceInfo=i,this.geometryInfo=t.geometryInfo,this._spatialReference=s,this._projectionSupportCheck=m(s,C.WGS84),this._bitsets.geohash=r.getBitset(r.createBitset()),this._bitsets.inserted=r.getBitset(r.createBitset())}async updateSchema(e,r){const i=this._schema;try{await super.updateSchema(e,r),await this._projectionSupportCheck}catch(n){}const l=a(i,r);r&&(!s(l)||e.source||e.storage.filters)?((o(l,\"params.fields\")||!this._tree||e.source)&&(this._tree=new h(this._statisticFields,this._serviceInfo),this._rebuildTree(),t(\"esri-2d-update-debug\")&&console.debug(\"Aggregate mesh needs update due to tree changing\")),t(\"esri-2d-update-debug\")&&console.debug(\"Applying Update - ClusterStore:\",l),e.targets[r.name]=!0,e.mesh=!1,this._aggregateValueRanges={}):i&&(e.mesh=!0)}clear(){this._rebuildTree()}sweepFeatures(e,t){this._bitsets.inserted.forEachSet((s=>{if(!e.has(s)){const e=t.lookupByDisplayIdUnsafe(s);this._remove(e)}}))}sweepClusters(e,t,s){this._clusters.forEach(((r,i)=>{r&&r.tileLevel!==s&&(e.releaseDisplayId(r.displayId),t.unsetAttributeData(r.displayId),this._clusters.delete(i))}))}onTileData(e,t,r,i,a=!0){if(!this._schema||s(t.addOrUpdate))return t;const o=this._getTransforms(e,this._spatialReference);{const e=t.addOrUpdate.getCursor();for(;e.next();)this._update(e,i)}if(t.status.mesh||!a)return t;const h=new Array,l=this._schema.params.clusterRadius;this._getClustersForTile(h,e,l,r,o),t.addOrUpdate=R.fromOptimizedFeatures(h,this._serviceInfo),t.addOrUpdate.attachStorage(r),t.end=!0;{const s=t.addOrUpdate.getCursor();for(;s.next();){const t=s.getDisplayId();this._bitsets.computed.unset(t),this.setComputedAttributes(r,s,t,e.scale)}}return this._aggregateValueRangesChanged&&t.end&&(this.events.emit(\"valueRangesChanged\",{valueRanges:this._aggregateValueRanges}),this._aggregateValueRangesChanged=!1),t}onTileUpdate({added:e,removed:t}){if(e.length){const t=e[0].level;this._tileLevel=t,this._setGeohashLevel(t)}if(!this._schema)return;const s=this._schema.params.clusterRadius;t.forEach((e=>{this._tiles.delete(e.key.id),this._markTileClustersForDeletion(e,s)}))}getAggregate(e){for(const t of this._clusters.values())if(((null==t?void 0:t.displayId)&I)==(e&I))return t.toJSON();return null}getAggregates(){const e=[];for(const t of this._clusters.values())(null==t?void 0:t.tileLevel)===this._tileLevel&&e.push(t.toJSON());return e}getDisplayId(e){const t=this._clusters.get(e);return t?t.displayId:null}getFeatureDisplayIdsForAggregate(e){const t=this._clusters.get(e);if(!t)return[];const s=t.geohashBoundsInfo;return this._tree.getRegionDisplayIds(s.xLL,s.yLL,s.xTR,s.yTR,s.level)}getDisplayIdForReferenceId(e){for(const t of this._clusters.values())if((null==t?void 0:t.referenceId)===e)return t.displayId;return null}getAggregateValueRanges(){return this._aggregateValueRanges}forEach(e){for(const[t,s]of this._clusters)s&&e(s,t)}size(){let e=0;return this.forEach((t=>e++)),e}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrated(),r=e.getYHydrated(),i=this._geohashBuf[2*t],a=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,r,i,a,this._geohashLevel))}_update(e,t){const s=e.getDisplayId(),r=this._bitsets.inserted,i=t.isVisible(s);if(i===r.has(s))return;if(!i)return void this._remove(e);const a=e.getXHydrated(),o=e.getYHydrated();if(!this._setGeohash(s,a,o))return;const h=this._geohashBuf[2*s],l=this._geohashBuf[2*s+1];this._tree.insertCursor(e,s,a,o,h,l,this._geohashLevel),r.set(s)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const r=this._geohashBuf;if(this._spatialReference.isWebMercator){const i=j(t/u.radius),a=i-360*Math.floor((i+180)/360),o=j(Math.PI/2-2*Math.atan(Math.exp(-s/u.radius)));l(r,e,o,a,M)}else{const i=y({x:t,y:s},this._spatialReference,C.WGS84);if(!i)return!1;l(r,e,i.y,i.x,M)}return this._bitsets.geohash.set(e),!0}_getClustersForTile(e,t,a,o,h,l=!0){const n=this._schema.params.clusterPixelBuffer,u=2*a,c=this._getGeohashLevel(t.key.level),f=Math.ceil(2**t.key.level*v/u),_=Math.ceil(n/u)+0,m=Math.ceil(v/u),{row:y,col:I}=t.key,b=I*v,R=y*v,C=Math.floor(b/u)-_,M=Math.floor(R/u)-_,x=C+m+2*_,L=M+m+2*_,j=t.tileInfoView.getLODInfoAt(t.key.level);for(let v=C;v<=x;v++)for(let a=M;a<=L;a++){let n=v;j.wrap&&(n=v<0?v+f:v%f);const u=j.wrap&&v<0,_=j.wrap&&v%f!==v,m=this._lookupCluster(o,j,t.key.level,n,a,c);if(r(m)){const t=i(h,(e=>u?e.left:_?e.right:e.tile));if(l&&s(t))continue;if(!m.count)continue;if(r(t)&&l){const s=m.geometry.clone();let i=m.attributes;s.coords[0]=g(t,s.coords[0]),s.coords[1]=d(t,s.coords[1]),1===m.count&&r(m.referenceId)&&(i={...m.attributes,referenceId:m.referenceId});const a=new p(s,i);a.displayId=m.displayId,e.push(a)}}}}_getGeohashLevel(e){return Math.min(Math.ceil(e/2+2),M)}_setGeohashLevel(e){const t=this._getGeohashLevel(e),s=(Math.floor(t/x)+1)*x-1;if(this._geohashLevel!==s)return this._geohashLevel=s,this._rebuildTree(),void this._bitsets.geohash.clear()}_getTransforms(e,t){const s={originPosition:\"upperLeft\",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},r=c(t);if(!r)return{tile:s,left:null,right:null};const[i,a]=r.valid;return{tile:s,left:{...s,translate:[a,e.bounds[3]]},right:{...s,translate:[i-a+e.bounds[0],e.bounds[3]]}}}_getClusterId(e,t,s){return(15&e)<<28|(16383&t)<<14|16383&s}_markForDeletion(e,t,s){const r=this._getClusterId(e,t,s);this._clusters.delete(r)}_getClusterBounds(e,t,s){const r=this._schema.params.clusterRadius,i=2*r;let a=s%2?t*i:t*i-r;const o=s*i;let h=a+i;const l=o-i,n=2**e.level*v;e.wrap&&a<0&&(a=0),e.wrap&&h>n&&(h=n);const u=a/v,c=o/v,g=h/v,d=l/v;return[e.getXForColumn(u),e.getYForRow(c),e.getXForColumn(g),e.getYForRow(d)]}_lookupCluster(e,t,s,i,a,o){const h=this._getClusterId(s,i,a),l=this._clusters.get(h),[c,g,d,f]=this._getClusterBounds(t,i,a),p={x:c,y:g},_={x:d,y:f};let m=0,v=0,I=0,b=0;if(this._spatialReference.isWebMercator){{const e=j(p.x/u.radius);m=e-360*Math.floor((e+180)/360),v=j(Math.PI/2-2*Math.atan(Math.exp(-p.y/u.radius)))}{const e=j(_.x/u.radius);I=e-360*Math.floor((e+180)/360),b=j(Math.PI/2-2*Math.atan(Math.exp(-_.y/u.radius)))}}else{const e=y(p,this._spatialReference,C.WGS84),t=y(_,this._spatialReference,C.WGS84);if(!e||!t)return null;m=e.x,v=e.y,I=t.x,b=t.y}const R={geohashX:0,geohashY:0},M={geohashX:0,geohashY:0};n(R,v,m,o),n(M,b,I,o);const x=R.geohashX,w=R.geohashY,V=M.geohashX,S=M.geohashY,F={xLL:x,yLL:w,xTR:V,yTR:S,level:o},D=this._tree.getRegionStatistics(x,w,V,S,o),{count:T,xTotal:k,yTotal:B,referenceId:G}=D,O=T?k/T:0,A=T?B/T:0;if(0===T)return this._clusters.set(h,null),null;const U={cluster_count:T,...D.attributes},X=r(l)?l.update(O,A,s,U,F,G):L.create(e,h,O,A,s,U,F,G);return 0===T&&(X.geometry.coords[0]=(c+d)/2,X.geometry.coords[1]=(g+f)/2),this._clusters.set(h,X),this._updateAggregateValueRangeForCluster(X,X.tileLevel),X}_updateAggregateValueRangeForCluster(e,t){const s=this._aggregateValueRanges[t]||{minValue:1/0,maxValue:0},r=s.minValue,i=s.maxValue;s.minValue=Math.min(r,e.count),s.maxValue=Math.max(i,e.count),this._aggregateValueRanges[t]=s,r===s.minValue&&i===s.maxValue||(this._aggregateValueRangesChanged=!0)}_markTileClustersForDeletion(e,t){const s=2*t,r=Math.ceil(v/s),{row:i,col:a}=e.key,o=a*v,h=i*v,l=Math.floor(o/s),n=Math.floor(h/s);for(let u=l;u<l+r;u++)for(let t=n;t<n+r;t++)this._markForDeletion(e.key.level,u,t)}}export{L as ClusterInfo,w as ClusterStore};\n"]},"metadata":{},"sourceType":"module"}