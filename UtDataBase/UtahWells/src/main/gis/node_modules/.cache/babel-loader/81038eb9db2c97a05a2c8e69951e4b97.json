{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { isAbortError as e, eachAlways as t } from \"../../../../core/promiseUtils.js\";\nimport { addQueryParameters as s } from \"../../../../core/urlUtils.js\";\nimport { open as r } from \"../../../../core/workers/workers.js\";\nimport i from \"./GlyphMosaic.js\";\nimport o from \"./GlyphSource.js\";\nimport l from \"./SpriteMosaic.js\";\nimport { perfAdd as a } from \"./decluttering/debugging.js\";\nimport n from \"../../tiling/TileKey.js\";\n\nclass c {\n  constructor(e, t, s) {\n    this._layer = e, this._styleRepository = t, this.devicePixelRatio = s, this._spriteMosaic = null, this._glyphMosaic = null, this._connection = null;\n  }\n\n  destroy() {\n    this._connection && (this._connection.close(), this._connection = null), this._styleRepository = null, this._layer = null, this._spriteMosaic && (this._spriteMosaic = null), this._glyphMosaic && (this._glyphMosaic = null);\n  }\n\n  get spriteMosaic() {\n    return this._spriteSourcePromise.then(() => this._spriteMosaic);\n  }\n\n  get glyphMosaic() {\n    return this._glyphMosaic;\n  }\n\n  async start(e) {\n    this._spriteSourcePromise = this._layer.loadSpriteSource(this.devicePixelRatio, e), this._spriteSourcePromise.then(e => {\n      this._spriteMosaic = new l(1024, 1024, 250), this._spriteMosaic.setSpriteSource(e);\n    });\n    const t = new o(this._layer.currentStyleInfo.glyphsUrl ? s(this._layer.currentStyleInfo.glyphsUrl, { ...this._layer.customParameters,\n      token: this._layer.apiKey\n    }) : null);\n    this._glyphMosaic = new i(1024, 1024, t), this._broadcastPromise = r(\"WorkerTileHandler\", {\n      client: this,\n      schedule: e.schedule,\n      signal: e.signal\n    }).then(t => (this._connection = t, Promise.all(this._connection.broadcast(\"setStyle\", this._layer.currentStyleInfo.style, e))));\n  }\n\n  async updateStyle(e) {\n    return await this._broadcastPromise, this._broadcastPromise = Promise.all(this._connection.broadcast(\"updateStyle\", e)), this._broadcastPromise;\n  }\n\n  setSpriteSource(e) {\n    const t = new l(1024, 1024, 250);\n    return t.setSpriteSource(e), this._spriteMosaic = t, this._spriteSourcePromise = Promise.resolve(e), t;\n  }\n\n  async setStyle(e, t) {\n    await this._broadcastPromise, this._styleRepository = e, this._spriteSourcePromise = this._layer.loadSpriteSource(this.devicePixelRatio, null), this._spriteSourcePromise.then(e => {\n      this._spriteMosaic = new l(1024, 1024, 250), this._spriteMosaic.setSpriteSource(e);\n    });\n    const r = new o(this._layer.currentStyleInfo.glyphsUrl ? s(this._layer.currentStyleInfo.glyphsUrl, { ...this._layer.customParameters,\n      token: this._layer.apiKey\n    }) : null);\n    return this._glyphMosaic = new i(1024, 1024, r), this._broadcastPromise = Promise.all(this._connection.broadcast(\"setStyle\", t)), this._broadcastPromise;\n  }\n\n  fetchTileData(e, t) {\n    return this._getRefKeys(e, t).then(e => {\n      const s = this._layer.sourceNameToSource,\n            r = [];\n\n      for (const t in s) r.push(t);\n\n      return this._getSourcesData(r, e, t);\n    });\n  }\n\n  parseTileData(e, t) {\n    const s = e && e.data;\n    if (!s) return Promise.resolve(null);\n    const {\n      sourceName2DataAndRefKey: r,\n      transferList: i\n    } = s;\n    return 0 === Object.keys(r).length ? Promise.resolve(null) : this._broadcastPromise.then(() => this._connection.getAvailableClient().then(s => s.invoke(\"createTileAndParse\", {\n      key: e.key.id,\n      sourceName2DataAndRefKey: r,\n      styleLayerUIDs: e.styleLayerUIDs\n    }, { ...t,\n      transferList: i\n    })));\n  }\n\n  async getSprites(e) {\n    return await this._spriteSourcePromise, this._spriteMosaic.getSpriteItems(e);\n  }\n\n  getGlyphs(e) {\n    return this._glyphMosaic.getGlyphItems(e.font, e.codePoints);\n  }\n\n  perfReport(_ref) {\n    let {\n      key: e,\n      milliseconds: t\n    } = _ref;\n    a(e, t, \"ms\");\n  }\n\n  async _getTilePayload(t, s, r) {\n    const i = n.pool.acquire(t.id),\n          o = this._layer.sourceNameToSource[s],\n          {\n      level: l,\n      row: a,\n      col: c\n    } = i;\n    n.pool.release(i);\n\n    try {\n      return {\n        protobuff: await o.requestTile(l, a, c, r),\n        sourceName: s\n      };\n    } catch (h) {\n      if (e(h)) throw h;\n      return {\n        protobuff: null,\n        sourceName: s\n      };\n    }\n  }\n\n  _getRefKeys(e, s) {\n    const r = this._layer.sourceNameToSource,\n          i = new Array();\n\n    for (const t in r) {\n      const o = r[t].getRefKey(e, s);\n      i.push(o);\n    }\n\n    return t(i);\n  }\n\n  _getSourcesData(e, s, r) {\n    const i = [];\n\n    for (let t = 0; t < s.length; t++) if (null == s[t].value || null == e[t]) i.push(null);else {\n      const o = this._getTilePayload(s[t].value, e[t], r);\n\n      i.push(o);\n    }\n\n    return t(i).then(e => {\n      const t = {},\n            r = [];\n\n      for (let i = 0; i < e.length; i++) if (e[i].value && e[i].value && e[i].value.protobuff && e[i].value.protobuff.byteLength > 0) {\n        const o = s[i].value.id;\n        t[e[i].value.sourceName] = {\n          refKey: o,\n          protobuff: e[i].value.protobuff\n        }, r.push(e[i].value.protobuff);\n      }\n\n      return {\n        sourceName2DataAndRefKey: t,\n        transferList: r\n      };\n    });\n  }\n\n}\n\nexport { c as TileHandler };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/vectorTiles/TileHandler.js"],"names":["isAbortError","e","eachAlways","t","addQueryParameters","s","open","r","i","o","l","perfAdd","a","n","c","constructor","_layer","_styleRepository","devicePixelRatio","_spriteMosaic","_glyphMosaic","_connection","destroy","close","spriteMosaic","_spriteSourcePromise","then","glyphMosaic","start","loadSpriteSource","setSpriteSource","currentStyleInfo","glyphsUrl","customParameters","token","apiKey","_broadcastPromise","client","schedule","signal","Promise","all","broadcast","style","updateStyle","resolve","setStyle","fetchTileData","_getRefKeys","sourceNameToSource","push","_getSourcesData","parseTileData","data","sourceName2DataAndRefKey","transferList","Object","keys","length","getAvailableClient","invoke","key","id","styleLayerUIDs","getSprites","getSpriteItems","getGlyphs","getGlyphItems","font","codePoints","perfReport","milliseconds","_getTilePayload","pool","acquire","level","row","col","release","protobuff","requestTile","sourceName","h","Array","getRefKey","value","byteLength","refKey","TileHandler"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{isAbortError as e,eachAlways as t}from\"../../../../core/promiseUtils.js\";import{addQueryParameters as s}from\"../../../../core/urlUtils.js\";import{open as r}from\"../../../../core/workers/workers.js\";import i from\"./GlyphMosaic.js\";import o from\"./GlyphSource.js\";import l from\"./SpriteMosaic.js\";import{perfAdd as a}from\"./decluttering/debugging.js\";import n from\"../../tiling/TileKey.js\";class c{constructor(e,t,s){this._layer=e,this._styleRepository=t,this.devicePixelRatio=s,this._spriteMosaic=null,this._glyphMosaic=null,this._connection=null}destroy(){this._connection&&(this._connection.close(),this._connection=null),this._styleRepository=null,this._layer=null,this._spriteMosaic&&(this._spriteMosaic=null),this._glyphMosaic&&(this._glyphMosaic=null)}get spriteMosaic(){return this._spriteSourcePromise.then((()=>this._spriteMosaic))}get glyphMosaic(){return this._glyphMosaic}async start(e){this._spriteSourcePromise=this._layer.loadSpriteSource(this.devicePixelRatio,e),this._spriteSourcePromise.then((e=>{this._spriteMosaic=new l(1024,1024,250),this._spriteMosaic.setSpriteSource(e)}));const t=new o(this._layer.currentStyleInfo.glyphsUrl?s(this._layer.currentStyleInfo.glyphsUrl,{...this._layer.customParameters,token:this._layer.apiKey}):null);this._glyphMosaic=new i(1024,1024,t),this._broadcastPromise=r(\"WorkerTileHandler\",{client:this,schedule:e.schedule,signal:e.signal}).then((t=>(this._connection=t,Promise.all(this._connection.broadcast(\"setStyle\",this._layer.currentStyleInfo.style,e)))))}async updateStyle(e){return await this._broadcastPromise,this._broadcastPromise=Promise.all(this._connection.broadcast(\"updateStyle\",e)),this._broadcastPromise}setSpriteSource(e){const t=new l(1024,1024,250);return t.setSpriteSource(e),this._spriteMosaic=t,this._spriteSourcePromise=Promise.resolve(e),t}async setStyle(e,t){await this._broadcastPromise,this._styleRepository=e,this._spriteSourcePromise=this._layer.loadSpriteSource(this.devicePixelRatio,null),this._spriteSourcePromise.then((e=>{this._spriteMosaic=new l(1024,1024,250),this._spriteMosaic.setSpriteSource(e)}));const r=new o(this._layer.currentStyleInfo.glyphsUrl?s(this._layer.currentStyleInfo.glyphsUrl,{...this._layer.customParameters,token:this._layer.apiKey}):null);return this._glyphMosaic=new i(1024,1024,r),this._broadcastPromise=Promise.all(this._connection.broadcast(\"setStyle\",t)),this._broadcastPromise}fetchTileData(e,t){return this._getRefKeys(e,t).then((e=>{const s=this._layer.sourceNameToSource,r=[];for(const t in s)r.push(t);return this._getSourcesData(r,e,t)}))}parseTileData(e,t){const s=e&&e.data;if(!s)return Promise.resolve(null);const{sourceName2DataAndRefKey:r,transferList:i}=s;return 0===Object.keys(r).length?Promise.resolve(null):this._broadcastPromise.then((()=>this._connection.getAvailableClient().then((s=>s.invoke(\"createTileAndParse\",{key:e.key.id,sourceName2DataAndRefKey:r,styleLayerUIDs:e.styleLayerUIDs},{...t,transferList:i})))))}async getSprites(e){return await this._spriteSourcePromise,this._spriteMosaic.getSpriteItems(e)}getGlyphs(e){return this._glyphMosaic.getGlyphItems(e.font,e.codePoints)}perfReport({key:e,milliseconds:t}){a(e,t,\"ms\")}async _getTilePayload(t,s,r){const i=n.pool.acquire(t.id),o=this._layer.sourceNameToSource[s],{level:l,row:a,col:c}=i;n.pool.release(i);try{return{protobuff:await o.requestTile(l,a,c,r),sourceName:s}}catch(h){if(e(h))throw h;return{protobuff:null,sourceName:s}}}_getRefKeys(e,s){const r=this._layer.sourceNameToSource,i=new Array;for(const t in r){const o=r[t].getRefKey(e,s);i.push(o)}return t(i)}_getSourcesData(e,s,r){const i=[];for(let t=0;t<s.length;t++)if(null==s[t].value||null==e[t])i.push(null);else{const o=this._getTilePayload(s[t].value,e[t],r);i.push(o)}return t(i).then((e=>{const t={},r=[];for(let i=0;i<e.length;i++)if(e[i].value&&e[i].value&&e[i].value.protobuff&&e[i].value.protobuff.byteLength>0){const o=s[i].value.id;t[e[i].value.sourceName]={refKey:o,protobuff:e[i].value.protobuff},r.push(e[i].value.protobuff)}return{sourceName2DataAndRefKey:t,transferList:r}}))}}export{c as TileHandler};\n"]},"metadata":{},"sourceType":"module"}