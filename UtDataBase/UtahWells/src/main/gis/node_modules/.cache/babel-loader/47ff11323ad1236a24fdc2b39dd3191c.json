{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport t from \"../../../core/Accessor.js\";\nimport { isSome as r } from \"../../../core/maybe.js\";\nimport { property as s } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/arrayUtils.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport { subclass as o } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { TaskPriority as u, ImmediateTask as a } from \"../../support/Scheduler.js\";\nlet n = class extends t {\n  constructor(e, t) {\n    var r;\n    super({}), this._stage = e, this._textureRequests = new Map(), this._frameTask = null != (r = null == t ? void 0 : t.registerTask(u.TEXTURE_UNLOAD)) ? r : a;\n  }\n\n  normalizeCtorArgs() {\n    return {};\n  }\n\n  destroy() {\n    super.destroy(), this._frameTask.remove(), this._textureRequests.forEach(e => this._releaseTextureRequest(e)), this._textureRequests.clear();\n  }\n\n  get updating() {\n    return this._frameTask.updating;\n  }\n\n  fromData(e, t, r) {\n    const s = this.makeUid(e);\n\n    let o = this._textureRequests.get(s);\n\n    return o || (o = {\n      referenceCount: 0,\n      texture: t(),\n      textureAsync: null,\n      abortController: null,\n      onRemove: r\n    }, this._stage && (this._stage.add(o.texture), this._stage.loadImmediate(o.texture)), this._textureRequests.set(s, o)), o.referenceCount++, {\n      uid: s,\n      texture: o.texture,\n      release: () => this._release(s)\n    };\n  }\n\n  _release(e) {\n    const t = this._textureRequests.get(e);\n\n    t ? (t.referenceCount < 1 && console.warn(\"TextureCollection: reference count is < 1 for \" + e), t.referenceCount--, t.referenceCount < 1 && this._frameTask.schedule(() => this._releaseNow(e))) : console.warn(`TextureCollection: texture doesn't exist: '${e}'`);\n  }\n\n  get test() {\n    return {\n      textureRequests: this._textureRequests\n    };\n  }\n\n  _releaseNow(e) {\n    if (!this._textureRequests) return;\n\n    const t = this._textureRequests.get(e);\n\n    !t || t.referenceCount > 0 || (this._releaseTextureRequest(t), this._textureRequests.delete(e));\n  }\n\n  _releaseTextureRequest(e) {\n    var t;\n    (e.onRemove && e.onRemove(), e.texture) ? null == (t = this._stage) || t.remove(e.texture) : e.abortController && (e.abortController.abort(), e.abortController = null);\n  }\n\n  makeUid(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return r(t) ? `${e}.${t}px` : e;\n  }\n\n};\ne([s()], n.prototype, \"_frameTask\", void 0), e([s()], n.prototype, \"updating\", null), n = e([o(\"esri.views.3d.support.TextureCollection\")], n);\nexport { n as TextureCollection };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/3d/support/TextureCollection.js"],"names":["_","e","t","isSome","r","property","s","subclass","o","TaskPriority","u","ImmediateTask","a","n","constructor","_stage","_textureRequests","Map","_frameTask","registerTask","TEXTURE_UNLOAD","normalizeCtorArgs","destroy","remove","forEach","_releaseTextureRequest","clear","updating","fromData","makeUid","get","referenceCount","texture","textureAsync","abortController","onRemove","add","loadImmediate","set","uid","release","_release","console","warn","schedule","_releaseNow","test","textureRequests","delete","abort","prototype","TextureCollection"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import t from\"../../../core/Accessor.js\";import{isSome as r}from\"../../../core/maybe.js\";import{property as s}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/arrayUtils.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import{subclass as o}from\"../../../core/accessorSupport/decorators/subclass.js\";import{TaskPriority as u,ImmediateTask as a}from\"../../support/Scheduler.js\";let n=class extends t{constructor(e,t){var r;super({}),this._stage=e,this._textureRequests=new Map,this._frameTask=null!=(r=null==t?void 0:t.registerTask(u.TEXTURE_UNLOAD))?r:a}normalizeCtorArgs(){return{}}destroy(){super.destroy(),this._frameTask.remove(),this._textureRequests.forEach((e=>this._releaseTextureRequest(e))),this._textureRequests.clear()}get updating(){return this._frameTask.updating}fromData(e,t,r){const s=this.makeUid(e);let o=this._textureRequests.get(s);return o||(o={referenceCount:0,texture:t(),textureAsync:null,abortController:null,onRemove:r},this._stage&&(this._stage.add(o.texture),this._stage.loadImmediate(o.texture)),this._textureRequests.set(s,o)),o.referenceCount++,{uid:s,texture:o.texture,release:()=>this._release(s)}}_release(e){const t=this._textureRequests.get(e);t?(t.referenceCount<1&&console.warn(\"TextureCollection: reference count is < 1 for \"+e),t.referenceCount--,t.referenceCount<1&&this._frameTask.schedule((()=>this._releaseNow(e)))):console.warn(`TextureCollection: texture doesn't exist: '${e}'`)}get test(){return{textureRequests:this._textureRequests}}_releaseNow(e){if(!this._textureRequests)return;const t=this._textureRequests.get(e);!t||t.referenceCount>0||(this._releaseTextureRequest(t),this._textureRequests.delete(e))}_releaseTextureRequest(e){var t;(e.onRemove&&e.onRemove(),e.texture)?null==(t=this._stage)||t.remove(e.texture):e.abortController&&(e.abortController.abort(),e.abortController=null)}makeUid(e,t=null){return r(t)?`${e}.${t}px`:e}};e([s()],n.prototype,\"_frameTask\",void 0),e([s()],n.prototype,\"updating\",null),n=e([o(\"esri.views.3d.support.TextureCollection\")],n);export{n as TextureCollection};\n"]},"metadata":{},"sourceType":"module"}