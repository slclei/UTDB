{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { isSome as e, isNone as t } from \"../../../core/maybe.js\";\nimport { b as o } from \"../../../chunks/mat4f64.js\";\nimport { DefaultErrorContext as s } from \"./DefaultErrorContext.js\";\nimport { makeMaterialParameters as r, makeTextureSource as a } from \"./LoaderResult.js\";\nimport { Resource as n } from \"./internal/Resource.js\";\nimport { TextureSamplingMode as i, PrimitiveType as l } from \"../../webgl/enums.js\";\nlet u = 0;\n\nasync function c(s, r) {\n  let a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !0;\n  const c = await n.load(s, x, r, a),\n        p = \"gltf_\" + u++,\n        h = {\n    lods: [],\n    materials: new Map(),\n    textures: new Map(),\n    meta: m(c)\n  },\n        I = !(!c.json.asset.extras || \"symbolResource\" !== c.json.asset.extras.ESRI_type),\n        R = new Map();\n  await d(c, async (s, r, n, u) => {\n    var m;\n    const d = null != (m = R.get(n)) ? m : 0;\n    R.set(n, d + 1);\n    const I = void 0 !== s.mode ? s.mode : l.TRIANGLES,\n          E = I === l.TRIANGLES || I === l.TRIANGLE_STRIP || I === l.TRIANGLE_FAN ? I : null;\n    if (t(E)) return void x.warnUnsupported(\"Unsupported primitive mode (\" + T[I] + \"). Skipping primitive.\");\n    if (!c.hasPositions(s)) return void x.warn(\"Skipping primitive without POSITION vertex attribute.\");\n\n    const S = c.getPositionData(s, a),\n          _ = c.getMaterial(s, a, i),\n          g = c.hasNormals(s) ? c.getNormalData(s, a) : null,\n          w = c.hasTangents(s) ? c.getTangentData(s, a) : null,\n          v = c.hasTextureCoordinates(s) ? c.getTextureCoordinates(s, a) : null,\n          N = c.hasVertexColors(s) ? c.getVertexColors(s, a) : null,\n          M = c.getIndexData(s, a),\n          A = {\n      transform: o(r),\n      attributes: {\n        position: await S,\n        normal: g ? await g : null,\n        texCoord0: v ? await v : null,\n        color: N ? await N : null,\n        tangent: w ? await w : null\n      },\n      indices: await M,\n      primitiveType: E,\n      material: f(h, await _, p)\n    };\n\n    let F = null;\n    e(h.meta) && e(h.meta.ESRI_lod) && \"screenSpaceRadius\" === h.meta.ESRI_lod.metric && (F = h.meta.ESRI_lod.thresholds[n]), h.lods[n] = h.lods[n] || {\n      parts: [],\n      name: u,\n      lodThreshold: F\n    }, h.lods[n].parts[d] = A;\n  });\n\n  for (const e of h.lods) e.parts = e.parts.filter(e => !!e);\n\n  return {\n    model: h,\n    meta: {\n      isEsriSymbolResource: I,\n      uri: c.uri\n    },\n    customMeta: {}\n  };\n}\n\nfunction m(t) {\n  const o = t.json;\n  let s = null;\n  return o.nodes.forEach(t => {\n    const o = t.extras;\n    e(o) && (o.ESRI_proxyEllipsoid || o.ESRI_lod) && (s = o);\n  }), s;\n}\n\nasync function d(e, t) {\n  const o = e.json,\n        s = o.scenes[o.scene || 0].nodes,\n        r = s.length > 1,\n        a = [];\n\n  for (const i of s) {\n    const e = o.nodes[i];\n\n    if (a.push(n(i, 0)), p(e) && !r) {\n      e.extensions.MSFT_lod.ids.forEach((e, t) => n(e, t + 1));\n    }\n  }\n\n  async function n(s, r) {\n    const i = o.nodes[s],\n          l = e.getNodeTransform(s);\n\n    if (x.warnUnsupportedIf(null != i.weights, \"Morph targets are not supported.\"), null != i.mesh) {\n      const e = o.meshes[i.mesh];\n\n      for (const o of e.primitives) a.push(t(o, l, r, e.name));\n    }\n\n    for (const e of i.children || []) a.push(n(e, r));\n  }\n\n  await Promise.all(a);\n}\n\nfunction p(e) {\n  return e.extensions && e.extensions.MSFT_lod && Array.isArray(e.extensions.MSFT_lod.ids);\n}\n\nfunction f(e, t, o) {\n  const s = t => {\n    const s = `${o}_tex_${t && t.id}${t && t.name ? \"_\" + t.name : \"\"}`;\n\n    if (t && !e.textures.has(s)) {\n      const o = a(t.data, {\n        wrap: {\n          s: t.wrapS,\n          t: t.wrapT\n        },\n        mipmap: h.some(e => e === t.minFilter),\n        noUnpackFlip: !0\n      });\n      e.textures.set(s, o);\n    }\n\n    return s;\n  },\n        n = `${o}_mat_${t.id}_${t.name}`;\n\n  if (!e.materials.has(n)) {\n    const o = r({\n      color: [t.color[0], t.color[1], t.color[2]],\n      opacity: t.color[3],\n      alphaMode: t.alphaMode,\n      alphaCutoff: t.alphaCutoff,\n      doubleSided: t.doubleSided,\n      colorMixMode: t.ESRI_externalColorMixMode,\n      textureColor: t.colorTexture ? s(t.colorTexture) : void 0,\n      textureNormal: t.normalTexture ? s(t.normalTexture) : void 0,\n      textureOcclusion: t.occlusionTexture ? s(t.occlusionTexture) : void 0,\n      textureEmissive: t.emissiveTexture ? s(t.emissiveTexture) : void 0,\n      textureMetallicRoughness: t.metallicRoughnessTexture ? s(t.metallicRoughnessTexture) : void 0,\n      emissiveFactor: [t.emissiveFactor[0], t.emissiveFactor[1], t.emissiveFactor[2]],\n      metallicFactor: t.metallicFactor,\n      roughnessFactor: t.roughnessFactor\n    });\n    e.materials.set(n, o);\n  }\n\n  return n;\n}\n\nconst x = new s(),\n      h = [i.LINEAR_MIPMAP_LINEAR, i.LINEAR_MIPMAP_NEAREST],\n      T = [\"POINTS\", \"LINES\", \"LINE_LOOP\", \"LINE_STRIP\", \"TRIANGLES\", \"TRIANGLE_STRIP\", \"TRIANGLE_FAN\"];\nexport { c as load };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/3d/glTF/loader.js"],"names":["isSome","e","isNone","t","b","o","DefaultErrorContext","s","makeMaterialParameters","r","makeTextureSource","a","Resource","n","TextureSamplingMode","i","PrimitiveType","l","u","c","load","x","p","h","lods","materials","Map","textures","meta","m","I","json","asset","extras","ESRI_type","R","d","get","set","mode","TRIANGLES","E","TRIANGLE_STRIP","TRIANGLE_FAN","warnUnsupported","T","hasPositions","warn","S","getPositionData","_","getMaterial","g","hasNormals","getNormalData","w","hasTangents","getTangentData","v","hasTextureCoordinates","getTextureCoordinates","N","hasVertexColors","getVertexColors","M","getIndexData","A","transform","attributes","position","normal","texCoord0","color","tangent","indices","primitiveType","material","f","F","ESRI_lod","metric","thresholds","parts","name","lodThreshold","filter","model","isEsriSymbolResource","uri","customMeta","nodes","forEach","ESRI_proxyEllipsoid","scenes","scene","length","push","extensions","MSFT_lod","ids","getNodeTransform","warnUnsupportedIf","weights","mesh","meshes","primitives","children","Promise","all","Array","isArray","id","has","data","wrap","wrapS","wrapT","mipmap","some","minFilter","noUnpackFlip","opacity","alphaMode","alphaCutoff","doubleSided","colorMixMode","ESRI_externalColorMixMode","textureColor","colorTexture","textureNormal","normalTexture","textureOcclusion","occlusionTexture","textureEmissive","emissiveTexture","textureMetallicRoughness","metallicRoughnessTexture","emissiveFactor","metallicFactor","roughnessFactor","LINEAR_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{isSome as e,isNone as t}from\"../../../core/maybe.js\";import{b as o}from\"../../../chunks/mat4f64.js\";import{DefaultErrorContext as s}from\"./DefaultErrorContext.js\";import{makeMaterialParameters as r,makeTextureSource as a}from\"./LoaderResult.js\";import{Resource as n}from\"./internal/Resource.js\";import{TextureSamplingMode as i,PrimitiveType as l}from\"../../webgl/enums.js\";let u=0;async function c(s,r,a={},i=!0){const c=await n.load(s,x,r,a),p=\"gltf_\"+u++,h={lods:[],materials:new Map,textures:new Map,meta:m(c)},I=!(!c.json.asset.extras||\"symbolResource\"!==c.json.asset.extras.ESRI_type),R=new Map;await d(c,(async(s,r,n,u)=>{var m;const d=null!=(m=R.get(n))?m:0;R.set(n,d+1);const I=void 0!==s.mode?s.mode:l.TRIANGLES,E=I===l.TRIANGLES||I===l.TRIANGLE_STRIP||I===l.TRIANGLE_FAN?I:null;if(t(E))return void x.warnUnsupported(\"Unsupported primitive mode (\"+T[I]+\"). Skipping primitive.\");if(!c.hasPositions(s))return void x.warn(\"Skipping primitive without POSITION vertex attribute.\");const S=c.getPositionData(s,a),_=c.getMaterial(s,a,i),g=c.hasNormals(s)?c.getNormalData(s,a):null,w=c.hasTangents(s)?c.getTangentData(s,a):null,v=c.hasTextureCoordinates(s)?c.getTextureCoordinates(s,a):null,N=c.hasVertexColors(s)?c.getVertexColors(s,a):null,M=c.getIndexData(s,a),A={transform:o(r),attributes:{position:await S,normal:g?await g:null,texCoord0:v?await v:null,color:N?await N:null,tangent:w?await w:null},indices:await M,primitiveType:E,material:f(h,await _,p)};let F=null;e(h.meta)&&e(h.meta.ESRI_lod)&&\"screenSpaceRadius\"===h.meta.ESRI_lod.metric&&(F=h.meta.ESRI_lod.thresholds[n]),h.lods[n]=h.lods[n]||{parts:[],name:u,lodThreshold:F},h.lods[n].parts[d]=A}));for(const e of h.lods)e.parts=e.parts.filter((e=>!!e));return{model:h,meta:{isEsriSymbolResource:I,uri:c.uri},customMeta:{}}}function m(t){const o=t.json;let s=null;return o.nodes.forEach((t=>{const o=t.extras;e(o)&&(o.ESRI_proxyEllipsoid||o.ESRI_lod)&&(s=o)})),s}async function d(e,t){const o=e.json,s=o.scenes[o.scene||0].nodes,r=s.length>1,a=[];for(const i of s){const e=o.nodes[i];if(a.push(n(i,0)),p(e)&&!r){e.extensions.MSFT_lod.ids.forEach(((e,t)=>n(e,t+1)))}}async function n(s,r){const i=o.nodes[s],l=e.getNodeTransform(s);if(x.warnUnsupportedIf(null!=i.weights,\"Morph targets are not supported.\"),null!=i.mesh){const e=o.meshes[i.mesh];for(const o of e.primitives)a.push(t(o,l,r,e.name))}for(const e of i.children||[])a.push(n(e,r))}await Promise.all(a)}function p(e){return e.extensions&&e.extensions.MSFT_lod&&Array.isArray(e.extensions.MSFT_lod.ids)}function f(e,t,o){const s=t=>{const s=`${o}_tex_${t&&t.id}${t&&t.name?\"_\"+t.name:\"\"}`;if(t&&!e.textures.has(s)){const o=a(t.data,{wrap:{s:t.wrapS,t:t.wrapT},mipmap:h.some((e=>e===t.minFilter)),noUnpackFlip:!0});e.textures.set(s,o)}return s},n=`${o}_mat_${t.id}_${t.name}`;if(!e.materials.has(n)){const o=r({color:[t.color[0],t.color[1],t.color[2]],opacity:t.color[3],alphaMode:t.alphaMode,alphaCutoff:t.alphaCutoff,doubleSided:t.doubleSided,colorMixMode:t.ESRI_externalColorMixMode,textureColor:t.colorTexture?s(t.colorTexture):void 0,textureNormal:t.normalTexture?s(t.normalTexture):void 0,textureOcclusion:t.occlusionTexture?s(t.occlusionTexture):void 0,textureEmissive:t.emissiveTexture?s(t.emissiveTexture):void 0,textureMetallicRoughness:t.metallicRoughnessTexture?s(t.metallicRoughnessTexture):void 0,emissiveFactor:[t.emissiveFactor[0],t.emissiveFactor[1],t.emissiveFactor[2]],metallicFactor:t.metallicFactor,roughnessFactor:t.roughnessFactor});e.materials.set(n,o)}return n}const x=new s,h=[i.LINEAR_MIPMAP_LINEAR,i.LINEAR_MIPMAP_NEAREST],T=[\"POINTS\",\"LINES\",\"LINE_LOOP\",\"LINE_STRIP\",\"TRIANGLES\",\"TRIANGLE_STRIP\",\"TRIANGLE_FAN\"];export{c as load};\n"]},"metadata":{},"sourceType":"module"}