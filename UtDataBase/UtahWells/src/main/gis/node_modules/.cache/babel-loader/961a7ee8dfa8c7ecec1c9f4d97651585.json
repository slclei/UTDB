{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nfunction t(t, h, i, e, d, l, n, o) {\n  let u;\n  t.ignorePadding && (e = {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  }), null != t.width && null != t.height ? u = [t.width, t.height] : null == t.width && null != t.height ? u = [t.height, t.height] : null != t.width && null == t.height ? u = [t.width, t.width] : null == t.width && null == t.height && (u = null);\n  const r = i[0] - (e.left + e.right),\n        a = i[1] - (e.top + e.bottom);\n  let g,\n      w,\n      c = t.area || {\n    x: 0,\n    y: 0,\n    width: r,\n    height: a\n  };\n\n  if (u) {\n    const t = r / a,\n          h = u[0] / u[1];\n\n    if (h > t) {\n      const t = c.width / h;\n      c = {\n        x: c.x,\n        y: Math.round(c.y + (c.height - t) / 2),\n        width: c.width,\n        height: Math.round(t)\n      };\n    } else {\n      const t = c.height * h;\n      c = {\n        x: Math.round(c.x + (c.width - t) / 2),\n        y: c.y,\n        width: Math.round(t),\n        height: c.height\n      };\n    }\n  } else u = [c.width, c.height];\n\n  u[0] > c.width ? (g = Math.min(u[0] / c.width, h), w = u[0] / c.width / g) : (g = 1, w = u[0] / c.width);\n  return {\n    resolutionScale: g,\n    cropArea: {\n      x: Math.round((c.x + e.left) * g),\n      y: Math.round((c.y + e.top) * g),\n      width: Math.round(c.width * g),\n      height: Math.round(c.height * g)\n    },\n    outputScale: w,\n    format: d,\n    quality: l,\n    children: n,\n    rotation: o\n  };\n}\n\nexport { t as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/support/createScreenshotPlan.js"],"names":["t","h","i","e","d","l","n","o","u","ignorePadding","left","right","top","bottom","width","height","r","a","g","w","c","area","x","y","Math","round","min","resolutionScale","cropArea","outputScale","format","quality","children","rotation","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nfunction t(t,h,i,e,d,l,n,o){let u;t.ignorePadding&&(e={left:0,right:0,top:0,bottom:0}),null!=t.width&&null!=t.height?u=[t.width,t.height]:null==t.width&&null!=t.height?u=[t.height,t.height]:null!=t.width&&null==t.height?u=[t.width,t.width]:null==t.width&&null==t.height&&(u=null);const r=i[0]-(e.left+e.right),a=i[1]-(e.top+e.bottom);let g,w,c=t.area||{x:0,y:0,width:r,height:a};if(u){const t=r/a,h=u[0]/u[1];if(h>t){const t=c.width/h;c={x:c.x,y:Math.round(c.y+(c.height-t)/2),width:c.width,height:Math.round(t)}}else{const t=c.height*h;c={x:Math.round(c.x+(c.width-t)/2),y:c.y,width:Math.round(t),height:c.height}}}else u=[c.width,c.height];u[0]>c.width?(g=Math.min(u[0]/c.width,h),w=u[0]/c.width/g):(g=1,w=u[0]/c.width);return{resolutionScale:g,cropArea:{x:Math.round((c.x+e.left)*g),y:Math.round((c.y+e.top)*g),width:Math.round(c.width*g),height:Math.round(c.height*g)},outputScale:w,format:d,quality:l,children:n,rotation:o}}export{t as default};\n"]},"metadata":{},"sourceType":"module"}