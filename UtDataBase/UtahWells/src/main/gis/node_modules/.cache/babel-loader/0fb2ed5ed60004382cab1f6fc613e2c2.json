{"ast":null,"code":"import MyFeatureLayer from \"./MyFeatureLayer\";\nconst wells = ([\"esri/WebScene\", \"esri/layers/CSVLayer\", \"esri/views/SceneView\"], (WebScene, CSVLayer, SceneView) => {\n  // If CSV files are not on the same domain as your website, a CORS enabled server\n  // or a proxy is required.\n  const url = \"https://developers.arcgis.com/javascript/latest//sample-code/layers-csv/live/earthquakes.csv\"; // Paste the url into a browser's address bar to download and view the attributes\n  // in the CSV file. These attributes include:\n  // * mag - magnitude\n  // * type - earthquake or other event such as nuclear test\n  // * place - location of the event\n  // * time - the time of the event\n\n  const template = {\n    title: \"Earthquake Info\",\n    content: \"Magnitude {mag} {type} hit {place} on {time}.\"\n  };\n  const csvLayer = new CSVLayer({\n    url: url,\n    copyright: \"USGS Earthquakes\",\n    popupTemplate: template\n  });\n  csvLayer.renderer = {\n    type: \"simple\",\n    // autocasts as new SimpleRenderer()\n    symbol: {\n      type: \"point-3d\",\n      // autocasts as new PointSymbol3D()\n      // for this symbol we use 2 symbol layers, one for the outer circle\n      // and one for the inner circle\n      symbolLayers: [{\n        type: \"icon\",\n        // autocasts as new IconSymbol3DLayer()\n        resource: {\n          primitive: \"circle\"\n        },\n        material: {\n          color: [255, 84, 54, 1]\n        },\n        size: 5\n      }, {\n        type: \"icon\",\n        // autocasts as new IconSymbol3DLayer()\n        resource: {\n          primitive: \"circle\"\n        },\n        material: {\n          color: [255, 84, 54, 0]\n        },\n        outline: {\n          color: [255, 84, 54, 0.6],\n          size: 1\n        },\n        size: 25\n      }]\n    }\n  };\n  const map = new WebScene({\n    portalItem: {\n      id: \"a467ef1140de4e88acf34d38df9fb869\"\n    }\n  });\n  map.add(csvLayer);\n  const view = new SceneView({\n    container: \"viewDiv\",\n    qualityProfile: \"high\",\n    map: map,\n    alphaCompositingEnabled: true,\n    highlightOptions: {\n      fillOpacity: 0,\n      color: \"#ffffff\"\n    },\n    constraints: {\n      altitude: {\n        min: 700000\n      }\n    },\n    environment: {\n      background: {\n        type: \"color\",\n        color: [0, 0, 0, 0]\n      },\n      lighting: {\n        type: \"virtual\"\n      }\n    }\n  });\n});\nexport default wells;","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/src/WellsinUT.js"],"names":["MyFeatureLayer","wells","WebScene","CSVLayer","SceneView","url","template","title","content","csvLayer","copyright","popupTemplate","renderer","type","symbol","symbolLayers","resource","primitive","material","color","size","outline","map","portalItem","id","add","view","container","qualityProfile","alphaCompositingEnabled","highlightOptions","fillOpacity","constraints","altitude","min","environment","background","lighting"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,KAAK,IAAI,CAAC,eAAD,EAAkB,sBAAlB,EAA0C,sBAA1C,GAAmE,CAC9EC,QAD8E,EAE9EC,QAF8E,EAG9EC,SAH8E,KAI7E;AACD;AACA;AACA,QAAMC,GAAG,GAAG,8FAAZ,CAHC,CAKD;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,QAAQ,GAAG;AACbC,IAAAA,KAAK,EAAE,iBADM;AAEbC,IAAAA,OAAO,EAAE;AAFI,GAAjB;AAKA,QAAMC,QAAQ,GAAG,IAAIN,QAAJ,CAAa;AAC1BE,IAAAA,GAAG,EAAEA,GADqB;AAE1BK,IAAAA,SAAS,EAAE,kBAFe;AAG1BC,IAAAA,aAAa,EAAEL;AAHW,GAAb,CAAjB;AAMAG,EAAAA,QAAQ,CAACG,QAAT,GAAoB;AAChBC,IAAAA,IAAI,EAAE,QADU;AACA;AAChBC,IAAAA,MAAM,EAAE;AACJD,MAAAA,IAAI,EAAE,UADF;AACc;AAClB;AACA;AACAE,MAAAA,YAAY,EAAE,CAAC;AACXF,QAAAA,IAAI,EAAE,MADK;AACG;AACdG,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAFC;AAGXC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,EAAV,EAAc,CAAd;AAAT,SAHC;AAIXC,QAAAA,IAAI,EAAE;AAJK,OAAD,EAKX;AACCP,QAAAA,IAAI,EAAE,MADP;AACe;AACdG,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAFX;AAGCC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,EAAV,EAAc,CAAd;AAAT,SAHX;AAICE,QAAAA,OAAO,EAAE;AAACF,UAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,EAAV,EAAc,GAAd,CAAR;AAA4BC,UAAAA,IAAI,EAAE;AAAlC,SAJV;AAKCA,QAAAA,IAAI,EAAE;AALP,OALW;AAJV;AAFQ,GAApB;AAqBA,QAAME,GAAG,GAAG,IAAIpB,QAAJ,CAAa;AACrBqB,IAAAA,UAAU,EAAE;AACRC,MAAAA,EAAE,EAAE;AADI;AADS,GAAb,CAAZ;AAMAF,EAAAA,GAAG,CAACG,GAAJ,CAAQhB,QAAR;AAEA,QAAMiB,IAAI,GAAG,IAAItB,SAAJ,CAAc;AACvBuB,IAAAA,SAAS,EAAE,SADY;AAEvBC,IAAAA,cAAc,EAAE,MAFO;AAGvBN,IAAAA,GAAG,EAAEA,GAHkB;AAIvBO,IAAAA,uBAAuB,EAAE,IAJF;AAKvBC,IAAAA,gBAAgB,EAAE;AACdC,MAAAA,WAAW,EAAE,CADC;AAEdZ,MAAAA,KAAK,EAAE;AAFO,KALK;AASvBa,IAAAA,WAAW,EAAE;AACTC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,GAAG,EAAE;AADC;AADD,KATU;AAcvBC,IAAAA,WAAW,EAAE;AACTC,MAAAA,UAAU,EAAE;AACRvB,QAAAA,IAAI,EAAE,OADE;AAERM,QAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAFC,OADH;AAKTkB,MAAAA,QAAQ,EAAE;AACNxB,QAAAA,IAAI,EAAE;AADA;AALD;AAdU,GAAd,CAAb;AAwBH,CAhFU,CAAX;AAkFA,eAAeZ,KAAf","sourcesContent":["import MyFeatureLayer from \"./MyFeatureLayer\";\r\n\r\nconst wells = ([\"esri/WebScene\", \"esri/layers/CSVLayer\", \"esri/views/SceneView\"], (\r\n    WebScene,\r\n    CSVLayer,\r\n    SceneView\r\n) => {\r\n    // If CSV files are not on the same domain as your website, a CORS enabled server\r\n    // or a proxy is required.\r\n    const url = \"https://developers.arcgis.com/javascript/latest//sample-code/layers-csv/live/earthquakes.csv\";\r\n\r\n    // Paste the url into a browser's address bar to download and view the attributes\r\n    // in the CSV file. These attributes include:\r\n    // * mag - magnitude\r\n    // * type - earthquake or other event such as nuclear test\r\n    // * place - location of the event\r\n    // * time - the time of the event\r\n\r\n    const template = {\r\n        title: \"Earthquake Info\",\r\n        content: \"Magnitude {mag} {type} hit {place} on {time}.\"\r\n    };\r\n\r\n    const csvLayer = new CSVLayer({\r\n        url: url,\r\n        copyright: \"USGS Earthquakes\",\r\n        popupTemplate: template\r\n    });\r\n\r\n    csvLayer.renderer = {\r\n        type: \"simple\", // autocasts as new SimpleRenderer()\r\n        symbol: {\r\n            type: \"point-3d\", // autocasts as new PointSymbol3D()\r\n            // for this symbol we use 2 symbol layers, one for the outer circle\r\n            // and one for the inner circle\r\n            symbolLayers: [{\r\n                type: \"icon\", // autocasts as new IconSymbol3DLayer()\r\n                resource: { primitive: \"circle\"},\r\n                material: { color: [255, 84, 54, 1] },\r\n                size: 5\r\n            }, {\r\n                type: \"icon\", // autocasts as new IconSymbol3DLayer()\r\n                resource: { primitive: \"circle\"},\r\n                material: { color: [255, 84, 54, 0] },\r\n                outline: {color: [255, 84, 54, 0.6], size: 1},\r\n                size: 25\r\n            }]\r\n        }\r\n    };\r\n\r\n    const map = new WebScene({\r\n        portalItem: {\r\n            id: \"a467ef1140de4e88acf34d38df9fb869\"\r\n        }\r\n    });\r\n\r\n    map.add(csvLayer);\r\n\r\n    const view = new SceneView({\r\n        container: \"viewDiv\",\r\n        qualityProfile: \"high\",\r\n        map: map,\r\n        alphaCompositingEnabled: true,\r\n        highlightOptions: {\r\n            fillOpacity: 0,\r\n            color: \"#ffffff\"\r\n        },\r\n        constraints: {\r\n            altitude: {\r\n                min: 700000\r\n            }\r\n        },\r\n        environment: {\r\n            background: {\r\n                type: \"color\",\r\n                color: [0, 0, 0, 0]\r\n            },\r\n            lighting: {\r\n                type: \"virtual\"\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\nexport default wells;"]},"metadata":{},"sourceType":"module"}