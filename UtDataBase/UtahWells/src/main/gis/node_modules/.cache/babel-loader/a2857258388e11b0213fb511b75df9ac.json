{"ast":null,"code":"/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n */\nimport { Build } from '@stencil/core/internal/client';\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\n\nfunction createObserver(type, callback, options) {\n  const Observer = getObserver(type);\n  return Build.isBrowser ? new Observer(callback, options) : undefined;\n}\n\nfunction getObserver(type) {\n  return type === \"intersection\" ? window.IntersectionObserver : type === \"mutation\" ? window.MutationObserver : window.ResizeObserver;\n}\n\nexport { createObserver as c };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@esri/calcite-components/dist/components/observers.js"],"names":["Build","createObserver","type","callback","options","Observer","getObserver","isBrowser","undefined","window","IntersectionObserver","MutationObserver","ResizeObserver","c"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,KAAT,QAAsB,+BAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CAAwBC,IAAxB,EAA8BC,QAA9B,EAAwCC,OAAxC,EAAiD;AAC/C,QAAMC,QAAQ,GAAGC,WAAW,CAACJ,IAAD,CAA5B;AACA,SAAOF,KAAK,CAACO,SAAN,GAAkB,IAAIF,QAAJ,CAAaF,QAAb,EAAuBC,OAAvB,CAAlB,GAAoDI,SAA3D;AACD;;AACD,SAASF,WAAT,CAAqBJ,IAArB,EAA2B;AACzB,SAAQA,IAAI,KAAK,cAAT,GACJO,MAAM,CAACC,oBADH,GAEJR,IAAI,KAAK,UAAT,GACEO,MAAM,CAACE,gBADT,GAEEF,MAAM,CAACG,cAJb;AAKD;;AAED,SAASX,cAAc,IAAIY,CAA3B","sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n */\nimport { Build } from '@stencil/core/internal/client';\n\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nfunction createObserver(type, callback, options) {\n  const Observer = getObserver(type);\n  return Build.isBrowser ? new Observer(callback, options) : undefined;\n}\nfunction getObserver(type) {\n  return (type === \"intersection\"\n    ? window.IntersectionObserver\n    : type === \"mutation\"\n      ? window.MutationObserver\n      : window.ResizeObserver);\n}\n\nexport { createObserver as c };\n"]},"metadata":{},"sourceType":"module"}