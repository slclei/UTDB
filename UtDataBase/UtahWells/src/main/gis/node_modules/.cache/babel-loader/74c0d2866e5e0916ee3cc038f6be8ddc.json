{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport r from \"../request.js\";\nimport { createQueryParamsHelper as e } from \"../core/queryUtils.js\";\nimport { normalizeCentralMeridian as t } from \"../geometry/support/normalizeUtils.js\";\nimport { collectGeometries as i, isInputGeometryZAware as a, fetchServiceDescription as s, dropZValuesOffInputGeometry as o } from \"./networkService.js\";\nimport { parseUrl as n } from \"./utils.js\";\nimport u from \"./support/ServiceAreaSolveResult.js\";\nconst l = e({\n  accumulateAttributes: {\n    name: \"accumulateAttributeNames\"\n  },\n  attributeParameterValues: !0,\n  defaultBreaks: !0,\n  facilities: !0,\n  outSpatialReference: {\n    name: \"outSR\",\n    getter: r => r.outSpatialReference.wkid\n  },\n  pointBarriers: {\n    name: \"barriers\"\n  },\n  polylineBarriers: !0,\n  polygonBarriers: !0,\n  restrictionAttributes: {\n    name: \"restrictionAttributeNames\"\n  },\n  returnPointBarriers: {\n    name: \"returnBarriers\"\n  },\n  travelMode: !0\n});\n\nasync function f(e, f, p) {\n  const c = [],\n        m = [],\n        y = {},\n        B = {},\n        g = n(e),\n        {\n    path: S\n  } = g;\n  f.facilities && f.facilities.features && i(f.facilities.features, m, \"facilities.features\", y), f.pointBarriers && f.pointBarriers.features && i(f.pointBarriers.features, m, \"pointBarriers.features\", y), f.polylineBarriers && f.polylineBarriers.features && i(f.polylineBarriers.features, m, \"polylineBarriers.features\", y), f.polygonBarriers && f.polygonBarriers.features && i(f.polygonBarriers.features, m, \"polygonBarriers.features\", y);\n  const j = await t(m);\n\n  for (const r in y) {\n    const e = y[r];\n    c.push(r), B[r] = j.slice(e[0], e[1]);\n  }\n\n  if (a(B, c)) {\n    let r = null;\n\n    try {\n      r = await s(S, f.apiKey, p);\n    } catch {}\n\n    r && !r.hasZ && o(B, c);\n  }\n\n  for (const r in B) B[r].forEach((e, t) => {\n    f.get(r)[t].geometry = e;\n  });\n\n  const b = { ...p,\n    query: { ...g.query,\n      ...l.toQueryParams(f),\n      f: \"json\"\n    }\n  },\n        {\n    data: v\n  } = await r(`${S}/solveServiceArea`, b);\n  return u.fromJSON(v);\n}\n\nexport { f as solve };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/rest/serviceArea.js"],"names":["r","createQueryParamsHelper","e","normalizeCentralMeridian","t","collectGeometries","i","isInputGeometryZAware","a","fetchServiceDescription","s","dropZValuesOffInputGeometry","o","parseUrl","n","u","l","accumulateAttributes","name","attributeParameterValues","defaultBreaks","facilities","outSpatialReference","getter","wkid","pointBarriers","polylineBarriers","polygonBarriers","restrictionAttributes","returnPointBarriers","travelMode","f","p","c","m","y","B","g","path","S","features","j","push","slice","apiKey","hasZ","forEach","get","geometry","b","query","toQueryParams","data","v","fromJSON","solve"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport r from\"../request.js\";import{createQueryParamsHelper as e}from\"../core/queryUtils.js\";import{normalizeCentralMeridian as t}from\"../geometry/support/normalizeUtils.js\";import{collectGeometries as i,isInputGeometryZAware as a,fetchServiceDescription as s,dropZValuesOffInputGeometry as o}from\"./networkService.js\";import{parseUrl as n}from\"./utils.js\";import u from\"./support/ServiceAreaSolveResult.js\";const l=e({accumulateAttributes:{name:\"accumulateAttributeNames\"},attributeParameterValues:!0,defaultBreaks:!0,facilities:!0,outSpatialReference:{name:\"outSR\",getter:r=>r.outSpatialReference.wkid},pointBarriers:{name:\"barriers\"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:\"restrictionAttributeNames\"},returnPointBarriers:{name:\"returnBarriers\"},travelMode:!0});async function f(e,f,p){const c=[],m=[],y={},B={},g=n(e),{path:S}=g;f.facilities&&f.facilities.features&&i(f.facilities.features,m,\"facilities.features\",y),f.pointBarriers&&f.pointBarriers.features&&i(f.pointBarriers.features,m,\"pointBarriers.features\",y),f.polylineBarriers&&f.polylineBarriers.features&&i(f.polylineBarriers.features,m,\"polylineBarriers.features\",y),f.polygonBarriers&&f.polygonBarriers.features&&i(f.polygonBarriers.features,m,\"polygonBarriers.features\",y);const j=await t(m);for(const r in y){const e=y[r];c.push(r),B[r]=j.slice(e[0],e[1])}if(a(B,c)){let r=null;try{r=await s(S,f.apiKey,p)}catch{}r&&!r.hasZ&&o(B,c)}for(const r in B)B[r].forEach(((e,t)=>{f.get(r)[t].geometry=e}));const b={...p,query:{...g.query,...l.toQueryParams(f),f:\"json\"}},{data:v}=await r(`${S}/solveServiceArea`,b);return u.fromJSON(v)}export{f as solve};\n"]},"metadata":{},"sourceType":"module"}