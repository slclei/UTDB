{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { loadModules } from 'esri-loader';\nimport * as React from 'react';\nimport ArcContainer from './ArcContainer';\n\nvar ArcView =\n/** @class */\nfunction (_super) {\n  __extends(ArcView, _super);\n\n  function ArcView(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      mapContainerId: Math.random().toString(36).substring(0, 14),\n      status: 'loading'\n    };\n    return _this;\n  }\n\n  ArcView.prototype.render = function () {\n    var _this = this;\n\n    var centerStyle = {\n      left: '50%',\n      marginRight: '-50%',\n      position: 'absolute',\n      top: '50%',\n      transform: 'translate(-50%, -50%)'\n    };\n    var mapStyle = this.props.className ? this.props.style : __assign({\n      height: '100%',\n      position: 'relative',\n      width: '100%'\n    }, this.props.style);\n    var loadElement = this.props.loadElement ? this.props.loadElement : React.createElement(\"h3\", {\n      id: \"react-arcgis-loading-text\"\n    }, \"Loading...\");\n    var failElement = this.props.failElement ? this.props.failElement : React.createElement(\"h3\", {\n      id: \"react-arcgis-fail-text\"\n    }, \"The ArcGIS API failed to load.\");\n\n    if (this.state.status === 'loaded') {\n      if (!!this.props.childrenAsFunction) {\n        return this.props.childrenAsFunction(this.state.map, this.state.view);\n      }\n\n      var childrenWithProps = React.Children.map(this.props.children, function (child) {\n        var childEl = child;\n        return React.cloneElement(childEl, {\n          map: _this.state.map,\n          view: _this.state.view\n        });\n      });\n      return React.createElement(\"div\", {\n        id: \"base-container\",\n        style: mapStyle,\n        className: this.props.className\n      }, React.createElement(ArcContainer, {\n        id: this.state.mapContainerId,\n        style: {\n          width: '100%',\n          height: '100%'\n        }\n      }), childrenWithProps);\n    } else if (this.state.status === 'loading') {\n      return React.createElement(\"div\", {\n        id: \"base-container\",\n        style: mapStyle,\n        className: this.props.className\n      }, React.createElement(ArcContainer, {\n        id: this.state.mapContainerId,\n        style: {\n          width: '100%',\n          height: '100%'\n        }\n      }), React.createElement(\"div\", {\n        style: centerStyle\n      }, loadElement));\n    }\n\n    return React.createElement(\"div\", {\n      id: \"base-container\",\n      style: mapStyle,\n      className: this.props.className\n    }, React.createElement(ArcContainer, {\n      id: this.state.mapContainerId,\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }), React.createElement(\"div\", {\n      style: centerStyle\n    }, failElement));\n  };\n\n  ArcView.prototype.componentDidMount = function () {\n    var _this = this;\n\n    loadModules(this.props.scriptUri, this.props.loaderOptions).then(function (modules) {\n      return _this.props.loadMap(modules, _this.state.mapContainerId).then(function (_a) {\n        var map = _a.map,\n            view = _a.view;\n\n        _this.setState({\n          map: map,\n          view: view,\n          status: 'loaded'\n        });\n\n        if (_this.props.onLoad) {\n          _this.props.onLoad(map, view);\n        }\n      }).catch(function (e) {\n        throw e;\n      });\n    }).catch(function (e) {\n      _this.setState({\n        status: 'failed'\n      });\n\n      if (_this.props.onFail) {\n        _this.props.onFail(e);\n      }\n    });\n  };\n\n  return ArcView;\n}(React.Component);\n\nexport { ArcView };","map":{"version":3,"mappings":"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","names":["loadModules","React","ArcContainer","__extends","props","_super","_this","state","mapContainerId","Math","random","toString","substring","status","ArcView","centerStyle","left","marginRight","position","top","transform","mapStyle","className","style","__assign","height","width","loadElement","id","failElement","childrenAsFunction","map","view","childrenWithProps","Children","children","child","childEl","cloneElement","scriptUri","loaderOptions","then","modules","loadMap","_a","setState","onLoad","catch","e","onFail","Component"],"sources":["../../../src/ts/components/ArcBase.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}