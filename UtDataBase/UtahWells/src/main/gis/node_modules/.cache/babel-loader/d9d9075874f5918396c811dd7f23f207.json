{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { DISPLAY_ID_TEXEL_MASK as t, createDisplayId as e } from \"../../../engine/webgl/DisplayId.js\";\nimport { DisplayIdGenerator as s } from \"./DisplayIdGenerator.js\";\nimport { StaticBitSet as i } from \"./StaticBitSet.js\";\n\nfunction n(t, e, s) {\n  if (!(t.length > e)) for (; t.length <= e;) t.push(s);\n}\n\nclass r {\n  constructor() {\n    this._numerics = [], this._strings = [], this._idGenerator = new s(), this._allocatedSize = 256, this._bitsets = [], this._instanceIds = [], this._bounds = [];\n  }\n\n  createBitset() {\n    const e = this._bitsets.length;\n    return this._bitsets.push(i.create(this._allocatedSize, t)), e + 1;\n  }\n\n  getBitset(t) {\n    return this._bitsets[t - 1];\n  }\n\n  _expand() {\n    this._allocatedSize <<= 1;\n\n    for (const t of this._bitsets) t.resize(this._allocatedSize);\n  }\n\n  _ensureNumeric(t, e) {\n    this._numerics[t] || (this._numerics[t] = []);\n    n(this._numerics[t], e, 0);\n  }\n\n  _ensureInstanceId(t) {\n    n(this._instanceIds, t, 0);\n  }\n\n  _ensureString(t, e) {\n    this._strings[t] || (this._strings[t] = []);\n    n(this._strings[t], e, null);\n  }\n\n  createDisplayId() {\n    let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;\n\n    const s = this._idGenerator.createId();\n\n    return s > this._allocatedSize && this._expand(), e(s, t);\n  }\n\n  releaseDisplayId(e) {\n    for (const t of this._bitsets) t.unset(e);\n\n    return this._idGenerator.releaseId(e & t);\n  }\n\n  getComputedNumeric(e, s) {\n    return this.getComputedNumericAtIndex(e & t, 0);\n  }\n\n  setComputedNumeric(e, s, i) {\n    return this.setComputedNumericAtIndex(e & t, i, 0);\n  }\n\n  getComputedString(e, s) {\n    return this.getComputedStringAtIndex(e & t, 0);\n  }\n\n  setComputedString(e, s, i) {\n    return this.setComputedStringAtIndex(e & t, 0, i);\n  }\n\n  getComputedNumericAtIndex(e, s) {\n    const i = e & t;\n    return this._ensureNumeric(s, i), this._numerics[s][i];\n  }\n\n  setComputedNumericAtIndex(e, s, i) {\n    const n = e & t;\n    this._ensureNumeric(s, n), this._numerics[s][n] = i;\n  }\n\n  getInstanceId(e) {\n    const s = e & t;\n    return this._ensureInstanceId(s), this._instanceIds[s];\n  }\n\n  setInstanceId(e, s) {\n    const i = e & t;\n    this._ensureInstanceId(i), this._instanceIds[i] = s;\n  }\n\n  getComputedStringAtIndex(e, s) {\n    const i = e & t;\n    return this._ensureString(s, i), this._strings[s][i];\n  }\n\n  setComputedStringAtIndex(e, s, i) {\n    const n = e & t;\n    this._ensureString(s, n), this._strings[s][n] = i;\n  }\n\n  getXMin(e) {\n    return this._bounds[4 * (e & t)];\n  }\n\n  getYMin(e) {\n    return this._bounds[4 * (e & t) + 1];\n  }\n\n  getXMax(e) {\n    return this._bounds[4 * (e & t) + 2];\n  }\n\n  getYMax(e) {\n    return this._bounds[4 * (e & t) + 3];\n  }\n\n  setBounds(e, s) {\n    const i = s.readHydratedGeometry();\n    if (!i || !i.coords.length) return !1;\n    let r = 1 / 0,\n        u = 1 / 0,\n        o = -1 / 0,\n        h = -1 / 0;\n    i.forEachVertex((t, e) => {\n      r = Math.min(r, t), u = Math.min(u, e), o = Math.max(o, t), h = Math.max(h, e);\n    });\n    const d = e & t;\n    return n(this._bounds, 4 * d + 4, 0), this._bounds[4 * d] = r, this._bounds[4 * d + 1] = u, this._bounds[4 * d + 2] = o, this._bounds[4 * d + 3] = h, !0;\n  }\n\n}\n\nexport { r as ComputedAttributeStorage };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/layers/features/support/ComputedAttributeStorage.js"],"names":["DISPLAY_ID_TEXEL_MASK","t","createDisplayId","e","DisplayIdGenerator","s","StaticBitSet","i","n","length","push","r","constructor","_numerics","_strings","_idGenerator","_allocatedSize","_bitsets","_instanceIds","_bounds","createBitset","create","getBitset","_expand","resize","_ensureNumeric","_ensureInstanceId","_ensureString","createId","releaseDisplayId","unset","releaseId","getComputedNumeric","getComputedNumericAtIndex","setComputedNumeric","setComputedNumericAtIndex","getComputedString","getComputedStringAtIndex","setComputedString","setComputedStringAtIndex","getInstanceId","setInstanceId","getXMin","getYMin","getXMax","getYMax","setBounds","readHydratedGeometry","coords","u","o","h","forEachVertex","Math","min","max","d","ComputedAttributeStorage"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{DISPLAY_ID_TEXEL_MASK as t,createDisplayId as e}from\"../../../engine/webgl/DisplayId.js\";import{DisplayIdGenerator as s}from\"./DisplayIdGenerator.js\";import{StaticBitSet as i}from\"./StaticBitSet.js\";function n(t,e,s){if(!(t.length>e))for(;t.length<=e;)t.push(s)}class r{constructor(){this._numerics=[],this._strings=[],this._idGenerator=new s,this._allocatedSize=256,this._bitsets=[],this._instanceIds=[],this._bounds=[]}createBitset(){const e=this._bitsets.length;return this._bitsets.push(i.create(this._allocatedSize,t)),e+1}getBitset(t){return this._bitsets[t-1]}_expand(){this._allocatedSize<<=1;for(const t of this._bitsets)t.resize(this._allocatedSize)}_ensureNumeric(t,e){this._numerics[t]||(this._numerics[t]=[]);n(this._numerics[t],e,0)}_ensureInstanceId(t){n(this._instanceIds,t,0)}_ensureString(t,e){this._strings[t]||(this._strings[t]=[]);n(this._strings[t],e,null)}createDisplayId(t=!1){const s=this._idGenerator.createId();return s>this._allocatedSize&&this._expand(),e(s,t)}releaseDisplayId(e){for(const t of this._bitsets)t.unset(e);return this._idGenerator.releaseId(e&t)}getComputedNumeric(e,s){return this.getComputedNumericAtIndex(e&t,0)}setComputedNumeric(e,s,i){return this.setComputedNumericAtIndex(e&t,i,0)}getComputedString(e,s){return this.getComputedStringAtIndex(e&t,0)}setComputedString(e,s,i){return this.setComputedStringAtIndex(e&t,0,i)}getComputedNumericAtIndex(e,s){const i=e&t;return this._ensureNumeric(s,i),this._numerics[s][i]}setComputedNumericAtIndex(e,s,i){const n=e&t;this._ensureNumeric(s,n),this._numerics[s][n]=i}getInstanceId(e){const s=e&t;return this._ensureInstanceId(s),this._instanceIds[s]}setInstanceId(e,s){const i=e&t;this._ensureInstanceId(i),this._instanceIds[i]=s}getComputedStringAtIndex(e,s){const i=e&t;return this._ensureString(s,i),this._strings[s][i]}setComputedStringAtIndex(e,s,i){const n=e&t;this._ensureString(s,n),this._strings[s][n]=i}getXMin(e){return this._bounds[4*(e&t)]}getYMin(e){return this._bounds[4*(e&t)+1]}getXMax(e){return this._bounds[4*(e&t)+2]}getYMax(e){return this._bounds[4*(e&t)+3]}setBounds(e,s){const i=s.readHydratedGeometry();if(!i||!i.coords.length)return!1;let r=1/0,u=1/0,o=-1/0,h=-1/0;i.forEachVertex(((t,e)=>{r=Math.min(r,t),u=Math.min(u,e),o=Math.max(o,t),h=Math.max(h,e)}));const d=e&t;return n(this._bounds,4*d+4,0),this._bounds[4*d]=r,this._bounds[4*d+1]=u,this._bounds[4*d+2]=o,this._bounds[4*d+3]=h,!0}}export{r as ComputedAttributeStorage};\n"]},"metadata":{},"sourceType":"module"}