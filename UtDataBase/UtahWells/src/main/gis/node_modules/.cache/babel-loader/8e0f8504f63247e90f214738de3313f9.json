{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { loadModules } from 'esri-loader';\n\nconst MyFeatureLayer = props => {\n  _s();\n\n  const [myFeatureLayer, setMyFeatureLayer] = useState(null);\n  useEffect(() => {\n    loadModules(['esri/layers/FeatureLayer']).then(_ref => {\n      let [FeatureLayer] = _ref;\n      const myFeatureLayer = new FeatureLayer({\n        url: props.featureLayerProperties.url\n      });\n      setMyFeatureLayer(myFeatureLayer);\n      props.map.add(myFeatureLayer);\n    }).catch(err => console.error(err));\n    return function cleanup() {\n      props.map.remove(myFeatureLayer);\n    };\n  }, [props]);\n  return null;\n};\n\n_s(MyFeatureLayer, \"RwpWOwtHaSHMwsb2u9hUc3XiRAE=\");\n\n_c = MyFeatureLayer;\nexport default MyFeatureLayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyFeatureLayer\");","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/src/MyFeatureLayer.js"],"names":["useState","useEffect","loadModules","MyFeatureLayer","props","myFeatureLayer","setMyFeatureLayer","then","FeatureLayer","url","featureLayerProperties","map","add","catch","err","console","error","cleanup","remove"],"mappings":";;AAAA,SAAUA,QAAV,EAAoBC,SAApB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,IAAD,CAApD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,WAAW,CAAC,CAAC,0BAAD,CAAD,CAAX,CAA0CK,IAA1C,CAA+C,QAAoB;AAAA,UAAnB,CAACC,YAAD,CAAmB;AAC/D,YAAMH,cAAc,GAAG,IAAIG,YAAJ,CAAiB;AACpCC,QAAAA,GAAG,EAAEL,KAAK,CAACM,sBAAN,CAA6BD;AADE,OAAjB,CAAvB;AAIAH,MAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACAD,MAAAA,KAAK,CAACO,GAAN,CAAUC,GAAV,CAAcP,cAAd;AACH,KAPD,EAOGQ,KAPH,CAOUC,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAPlB;AASA,WAAO,SAASG,OAAT,GAAmB;AACtBb,MAAAA,KAAK,CAACO,GAAN,CAAUO,MAAV,CAAiBb,cAAjB;AACH,KAFD;AAGH,GAbQ,EAaN,CAAED,KAAF,CAbM,CAAT;AAeA,SAAO,IAAP;AACH,CAlBD;;GAAMD,c;;KAAAA,c;AAoBN,eAAeA,cAAf","sourcesContent":["import  { useState, useEffect } from 'react';\r\nimport { loadModules } from 'esri-loader';\r\n\r\nconst MyFeatureLayer = (props) => {\r\n    const [myFeatureLayer, setMyFeatureLayer] = useState(null);\r\n    useEffect(() => {\r\n        loadModules(['esri/layers/FeatureLayer']).then(([FeatureLayer]) => {\r\n            const myFeatureLayer = new FeatureLayer({\r\n                url: props.featureLayerProperties.url\r\n            });\r\n\r\n            setMyFeatureLayer(myFeatureLayer);\r\n            props.map.add(myFeatureLayer);\r\n        }).catch((err) => console.error(err));\r\n\r\n        return function cleanup() {\r\n            props.map.remove(myFeatureLayer);\r\n        }\r\n    }, [ props ]);\r\n\r\n    return null;\r\n}\r\n\r\nexport default MyFeatureLayer;"]},"metadata":{},"sourceType":"module"}