{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../../../chunks/tslib.es6.js\";\nimport { HandleOwner as t } from \"../../../../../core/HandleOwner.js\";\nimport r from \"../../../../../core/has.js\";\nimport { isNone as s, isSome as i } from \"../../../../../core/maybe.js\";\nimport { ignoreAbortErrors as a, after as o, throwIfAborted as n, throwIfNotAbortError as u, isAbortError as h } from \"../../../../../core/promiseUtils.js\";\nimport { whenOnce as c } from \"../../../../../core/reactiveUtils.js\";\nimport { property as d } from \"../../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../../core/arrayUtils.js\";\nimport \"../../../../../core/accessorSupport/ensureType.js\";\nimport { subclass as l } from \"../../../../../core/accessorSupport/decorators/subclass.js\";\nimport { convertToGeometry as p } from \"../../../../../layers/graphics/featureConversionUtils.js\";\nimport g from \"../../../../../layers/graphics/data/QueryEngine.js\";\nimport f from \"../../../../../layers/support/FieldsIndex.js\";\nimport { FeatureStore2D as y } from \"../FeatureStore2D.js\";\nimport { createSource as m } from \"../sources/createSource.js\";\nimport _ from \"../support/AttributeStore.js\";\nimport { ClusterStore as S } from \"../support/ClusterStore.js\";\nimport { ComputedAttributeStorage as v } from \"../support/ComputedAttributeStorage.js\";\nimport { FeatureSetReaderJSON as b } from \"../support/FeatureSetReaderJSON.js\";\nimport { UpdateToken as I } from \"../support/UpdateToken.js\";\nimport { QueueProcessor as w } from \"../../../../support/QueueProcessor.js\";\nconst C = 5e3,\n      E = \"tileRenderer.featuresView.attributeView.initialize\",\n      j = \"tileRenderer.featuresView.attributeView.requestUpdate\",\n      F = \"tileRenderer.featuresView.requestRender\";\n\nfunction k(e) {\n  return \"worker:port-closed\" === e.name;\n}\n\nfunction T(e) {\n  if (!h(e) && !k(e)) throw e;\n}\n\nfunction q(e) {\n  return \"feature\" === e.type && \"snapshot\" === e.mode;\n}\n\nlet R = class extends t {\n  constructor() {\n    super(...arguments), this._storage = new v(), this._markedIdsBufId = this._storage.createBitset(), this._lastCleanup = performance.now(), this._cleanupNeeded = !1, this._invalidated = !1, this._tileToResolver = new Map(), this._didEdit = !1, this.tileStore = null, this.config = null, this.processor = null, this.remoteClient = null, this.service = null;\n  }\n\n  initialize() {\n    this._initAttributeStore(), this._initStores(), this._initQueryEngine(), this._initSource(), this._updateQueue = new w({\n      concurrency: \"geoevent\" === this._source.type ? 1 : 4,\n      process: (e, t) => this._onTileMessage(e, {\n        signal: t\n      })\n    }), this.handles.add([this.tileStore.on(\"update\", this.onTileUpdate.bind(this)), this.watch(\"updating\", e => !e && this.onIdle())]), this._checkUpdating = setInterval(() => this.notifyChange(\"updating\"), 300);\n  }\n\n  async startup() {\n    this._initAttributeStore();\n  }\n\n  _initSource() {\n    const e = this.tileStore.tileScheme,\n          t = () => this._updateQueue.length < 50,\n          r = (e, t) => (this._invalidated = !0, this._patchTile(e, t));\n\n    this._source = m(this.service, this.spatialReference, e, r, t, this.featureStore), this._proxyEvents();\n  }\n\n  _proxyEvents() {\n    if (\"geoevent\" === this._source.type) {\n      const e = this._source.events;\n      this.handles.add([e.on(\"connectionStatus\", e => this.remoteClient.invoke(\"setProperty\", {\n        propertyName: \"connectionStatus\",\n        value: e\n      }).catch(T)), e.on(\"errorString\", e => this.remoteClient.invoke(\"setProperty\", {\n        propertyName: \"errorString\",\n        value: e\n      }).catch(T)), e.on(\"feature\", e => this.remoteClient.invoke(\"emitEvent\", {\n        name: \"data-received\",\n        event: {\n          attributes: e.attributes,\n          centroid: e.centroid,\n          geometry: e.geometry\n        }\n      }).catch(T)), e.on(\"updateRate\", e => this.remoteClient.invoke(\"emitEvent\", {\n        name: \"update-rate\",\n        event: { ...e\n        }\n      }).catch(T))]);\n    }\n  }\n\n  _initAttributeStore() {\n    this.attributeStore ? this.attributeStore.invalidateResources() : this.attributeStore = new _({\n      type: \"remote\",\n      initialize: (e, t) => a(this.remoteClient.invoke(E, e, {\n        signal: t\n      }).catch(T)),\n      update: (e, t) => a(this.remoteClient.invoke(j, e, {\n        signal: t\n      }).catch(T)),\n      render: e => a(this.remoteClient.invoke(F, void 0, {\n        signal: e\n      }).catch(T))\n    }, this.config);\n  }\n\n  _initStores() {\n    const e = \"snapshot\" === this.service.type ? \"snapshot\" : \"on-demand\",\n          t = {\n      geometryInfo: {\n        geometryType: this.service.geometryType,\n        hasM: !1,\n        hasZ: !1\n      },\n      spatialReference: this.spatialReference,\n      fieldsIndex: this.fieldsIndex,\n      fields: this.service.fields\n    };\n    this.featureStore = new y(t, this._storage, e), this.aggregateStore = new S(t, this.spatialReference, this._storage, this.service), this.handles.add(this.aggregateStore.events.on(\"valueRangesChanged\", e => {\n      this.remoteClient.invoke(\"emitEvent\", {\n        name: \"valueRangesChanged\",\n        event: {\n          valueRanges: e.valueRanges\n        }\n      }).catch(T);\n    }));\n  }\n\n  _initQueryEngine() {\n    var e;\n    const t = this;\n    null == (e = this.queryEngine) || e.destroy(), this.queryEngine = new g({\n      definitionExpression: this.config.definitionExpression,\n      fields: this.service.fields,\n      geometryType: this.service.geometryType,\n      objectIdField: this.service.objectIdField,\n      hasM: !1,\n      hasZ: !1,\n      spatialReference: this.spatialReference.toJSON(),\n      cacheSpatialQueries: !0,\n      featureStore: this.featureStore,\n      aggregateAdapter: {\n        getFeatureObjectIds: e => t.aggregateStore.getFeatureDisplayIdsForAggregate(e).map(e => t.getObjectId(e))\n      },\n      timeInfo: this.service.timeInfo\n    });\n  }\n\n  destroy() {\n    this._updateQueue.destroy(), this._source.destroy(), this.queryEngine.destroy(), this.attributeStore && this.attributeStore.destroy();\n\n    for (const e of this.tileStore.tiles) this._source.unsubscribe(e);\n\n    clearInterval(this._checkUpdating);\n  }\n\n  get fieldsIndex() {\n    return new f(this.service.fields);\n  }\n\n  get hasAggregates() {\n    return !!this.config.schema.targets.aggregate;\n  }\n\n  get spatialReference() {\n    return this.tileStore.tileScheme.spatialReference;\n  }\n\n  get updating() {\n    return this.isUpdating();\n  }\n\n  isUpdating() {\n    return this._source.updating || !!this._updateQueue.length;\n  }\n\n  enableEvent(e) {\n    this._source.enableEvent(e.name, e.value);\n  }\n\n  pause() {\n    this._updateQueue.pause(), this._updateQueue.clear();\n  }\n\n  pauseStream() {\n    \"geoevent\" === this._source.type && this._source.pauseStream();\n  }\n\n  resumeStream() {\n    \"geoevent\" === this._source.type && this._source.resumeStream();\n  }\n\n  async update(e, t) {\n    this._set(\"config\", t), this._schema = t.schema, this._initQueryEngine(), await Promise.all([this._source.update(e, t.schema.source), this.featureStore.updateSchema(e, t.schema.targets.feature), this.attributeStore.update(e, t), this.attributeStore.updateFilters(e, this)]), await this.aggregateStore.updateSchema(e, t.schema.targets.aggregate), r(\"esri-2d-update-debug\") && e.describe();\n  }\n\n  async applyUpdate(e) {\n    e.mesh && this.clearTiles(), this._updateQueue.resume(), await this._source.applyUpdate(e), this.notifyChange(\"updating\"), await c(() => !this.updating), this.hasAggregates && (await o(10), await c(() => !this.updating));\n  }\n\n  async onEdits(_ref) {\n    let {\n      edits: e\n    } = _ref;\n    r(\"esri-2d-update-debug\") && console.debug(\"Applying Edit:\", e), this._didEdit = !0;\n\n    try {\n      const t = e.removed.map(e => e.objectId && -1 !== e.objectId ? e.objectId : this._lookupObjectIdByGlobalId(e.globalId)),\n            r = e.addOrModified.map(_ref2 => {\n        let {\n          objectId: e\n        } = _ref2;\n        return e;\n      });\n      this.featureStore.invalidate(), await this._source.edit(r, t), this.clearTiles(), this.notifyChange(\"updating\"), this.aggregateStore.clear(), await this._source.resend(), await c(() => !this.updating);\n    } catch (t) {}\n  }\n\n  async refresh(e) {\n    if (!e) {\n      const e = I.empty();\n      return e.storage.filters = !0, this.applyUpdate(e);\n    }\n\n    this.featureStore.invalidate(), this.clearTiles(), this._source.refresh(), this._cleanupNeeded = !0, this.notifyChange(\"updating\"), await c(() => !this.updating);\n  }\n\n  clearTiles() {\n    for (const e of this.tileStore.tiles) this.processor.onTileClear(e);\n  }\n\n  onTileUpdate(e) {\n    this.aggregateStore.onTileUpdate(e);\n\n    for (const t of e.added) this._source.subscribe(t), this._level = t.level;\n\n    for (const t of e.removed) this._source.unsubscribe(t), this._cleanupNeeded = !0, this._tileToResolver.has(t.id) && (this._tileToResolver.get(t.id).resolve(), this._tileToResolver.delete(t.id));\n\n    this.notifyChange(\"updating\");\n  }\n\n  onIdle() {\n    this._invalidated && ((this.hasAggregates || \"heatmap\" === this.processor.type) && this._repushCurrentLevelTiles(), this._invalidated = !1), this._markAndSweep();\n  }\n\n  async querySummaryStatistics(_ref3) {\n    let {\n      query: e,\n      params: t\n    } = _ref3;\n    return this.queryEngine.executeQueryForSummaryStatistics(e, t);\n  }\n\n  async queryUniqueValues(_ref4) {\n    let {\n      query: e,\n      params: t\n    } = _ref4;\n    return this.queryEngine.executeQueryForUniqueValues(e, t);\n  }\n\n  async queryClassBreaks(_ref5) {\n    let {\n      query: e,\n      params: t\n    } = _ref5;\n    return this.queryEngine.executeQueryForClassBreaks(e, t);\n  }\n\n  async queryHistogram(_ref6) {\n    let {\n      query: e,\n      params: t\n    } = _ref6;\n    return this.queryEngine.executeQueryForHistogram(e, t);\n  }\n\n  queryExtent(e) {\n    return this.queryEngine.executeQueryForExtent(e);\n  }\n\n  queryFeatures(e) {\n    return this.queryEngine.executeQuery(e);\n  }\n\n  async queryVisibleFeatures(e) {\n    const t = await this.queryEngine.executeQuery(e),\n          r = t.objectIdFieldName;\n    return t.features = t.features.filter(e => {\n      const t = e.attributes[r],\n            s = this.getDisplayId(t);\n      return this.attributeStore.isVisible(s);\n    }), t;\n  }\n\n  queryFeatureCount(e) {\n    return this.queryEngine.executeQueryForCount(e);\n  }\n\n  queryLatestObservations(e) {\n    return this.queryEngine.executeQueryForLatestObservations(e);\n  }\n\n  queryObjectIds(e) {\n    return this.queryEngine.executeQueryForIds(e);\n  }\n\n  async queryStatistics() {\n    return this.featureStore.storeStatistics;\n  }\n\n  getObjectId(e) {\n    return this.featureStore.lookupObjectId(e, this._storage);\n  }\n\n  getDisplayId(e) {\n    if (this._schema.targets.aggregate) {\n      const t = this.aggregateStore.getDisplayId(e);\n\n      if (s(t)) {\n        const t = this.featureStore.lookupDisplayId(e);\n        return this.aggregateStore.getDisplayIdForReferenceId(t);\n      }\n\n      return t;\n    }\n\n    return this.featureStore.lookupDisplayId(e);\n  }\n\n  getFeatures(e) {\n    const t = [],\n          r = [];\n\n    for (const s of e) {\n      const e = this.hasAggregates ? this.getAggregate(s) : null;\n      if (i(e)) {\n        if (i(e.referenceId)) {\n          const r = this.getFeature(e.referenceId);\n          i(r) && t.push(r);\n        } else r.push(e);\n      } else {\n        const e = this.getFeature(s);\n        i(e) && t.push(e);\n      }\n    }\n\n    return {\n      features: t,\n      aggregates: r\n    };\n  }\n\n  getFeature(e) {\n    const t = this.featureStore.lookupFeatureByDisplayId(e, this._storage);\n    if (s(t)) return null;\n    const r = t.readHydratedGeometry(),\n          i = p(r, t.geometryType, t.hasZ, t.hasM);\n    return {\n      attributes: t.readAttributes(),\n      geometry: i\n    };\n  }\n\n  getAggregate(e) {\n    return this.aggregateStore.getAggregate(e);\n  }\n\n  getAggregates() {\n    return this.aggregateStore.getAggregates();\n  }\n\n  async setHighlight(e) {\n    const t = e.map(e => this.getDisplayId(e));\n    return this.attributeStore.setHighlight(e, t);\n  }\n\n  _lookupObjectIdByGlobalId(e) {\n    const t = this.service.globalIdField;\n    if (s(t)) throw new Error(\"Expected globalIdField to be defined\");\n    let r = null;\n    if (this.featureStore.forEach(s => {\n      e === s.readAttribute(t) && (r = s.getObjectId());\n    }), s(r)) throw new Error(`Expected to find a feature with globalId ${e}`);\n    return r;\n  }\n\n  _repushCurrentLevelTiles() {\n    const e = this.tileStore.tiles.filter(e => e.level === this._level);\n\n    for (const t of e) this._patchTile({\n      type: \"append\",\n      id: t.key.id,\n      addOrUpdate: b.fromOptimizedFeatures([], this.service),\n      remove: [],\n      end: !0,\n      status: I.empty()\n    });\n  }\n\n  _maybeForceCleanup() {\n    performance.now() - this._lastCleanup > C && this._markAndSweep();\n  }\n\n  _patchTile(e, t) {\n    const r = this._updateQueue.push(e, t).then(() => {\n      this.notifyChange(\"updating\");\n    }).catch(e => {\n      this.notifyChange(\"updating\");\n    });\n\n    return this.notifyChange(\"updating\"), r;\n  }\n\n  async _onTileMessage(e, t) {\n    n(t);\n    const r = this.tileStore.get(e.id);\n    if (!r) return;\n    if (e.clear) return this.processor.onTileClear(r);\n    const i = e.status;\n    this._cleanupNeeded = !0;\n    const a = [];\n\n    for (const s of e.remove) {\n      const e = this.featureStore.lookupDisplayId(s);\n      e && a.push(e);\n    }\n\n    e.remove = a;\n\n    try {\n      if (s(e.addOrUpdate)) return void this.processor.onTileMessage(r, { ...e,\n        addOrUpdate: null\n      }, this.hasAggregates, t).catch(u);\n\n      if (e.addOrUpdate.setArcadeSpatialReference(this.spatialReference), this.featureStore.hasInstance(e.addOrUpdate.instance) && i.targets.feature || (i.targets.feature = !0, this.featureStore.onTileData(r, e)), !i.storage.data || !i.storage.filters) {\n        i.storage.data = !0, i.storage.filters = !0, this.attributeStore.onTileData(r, e);\n        \"geoevent\" === this._source.type || this._didEdit ? (await this.attributeStore.sendUpdates(), n(t)) : this.attributeStore.sendUpdates();\n      }\n\n      if (this.hasAggregates && !i.targets.aggregate) {\n        i.targets.aggregate = !0;\n\n        const t = q(this._source) && this._source.loading,\n              s = !q(this._source) || t || e.end;\n\n        if (this.aggregateStore.onTileData(r, e, this._storage, this.attributeStore, s), !s) return;\n        i.mesh || (this.attributeStore.onTileData(r, e), await this.attributeStore.sendUpdates(), this.processor.onTileClear(r));\n      }\n\n      i.mesh || (i.mesh = !0, await this.processor.onTileMessage(r, e, this.hasAggregates, t), n(t)), this._maybeForceCleanup();\n    } catch (o) {\n      u(o);\n    }\n  }\n\n  _mark(e, t, r) {\n    const s = (4294901760 & this._storage.getInstanceId(e)) >>> 16;\n    e && (t.add(s), r.set(e));\n  }\n\n  _markAndSweep() {\n    this._lastCleanup = performance.now();\n    if (!(!(\"feature\" === this._source.type && \"snapshot\" === this._source.mode) && (\"geoevent\" === this._source.type || this._cleanupNeeded))) return;\n    this._cleanupNeeded = !1;\n\n    const e = this._storage.getBitset(this._markedIdsBufId),\n          t = new Set();\n\n    e.clear();\n\n    for (const r of this.tileStore.tiles) for (const s of this._source.readers(r.id)) {\n      const r = s.getCursor();\n\n      for (; r.next();) {\n        let s = r.getDisplayId();\n\n        if (!s) {\n          const e = r.getObjectId();\n          s = this.featureStore.lookupDisplayId(e);\n        }\n\n        this._mark(s, t, e);\n      }\n    }\n\n    \"symbol\" === this.processor.type && this.processor.forEachBufferId(r => {\n      this._mark(r, t, e);\n    }), this._updateQueue.forEach(r => {\n      for (const s of r.remove) {\n        const r = this.featureStore.lookupDisplayId(s);\n\n        this._mark(r, t, e);\n      }\n    }), this.config.schema.targets.aggregate && (this.aggregateStore.sweepFeatures(e, this.featureStore), this.aggregateStore.sweepClusters(this._storage, this.attributeStore, this._level)), this.featureStore.sweepFeatures(e, this._storage, this.attributeStore), this.featureStore.sweepFeatureSets(t);\n  }\n\n};\ne([d({\n  constructOnly: !0\n})], R.prototype, \"tileStore\", void 0), e([d()], R.prototype, \"config\", void 0), e([d({\n  readOnly: !0\n})], R.prototype, \"fieldsIndex\", null), e([d()], R.prototype, \"processor\", void 0), e([d({\n  constructOnly: !0\n})], R.prototype, \"remoteClient\", void 0), e([d({\n  constructOnly: !0\n})], R.prototype, \"service\", void 0), e([d()], R.prototype, \"spatialReference\", null), e([d()], R.prototype, \"updating\", null), R = e([l(\"esri.views.2d.layers.features.controllers.FeatureController2D\")], R);\nconst x = R;\nexport { x as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/layers/features/controllers/FeatureController2D.js"],"names":["_","e","HandleOwner","t","r","isNone","s","isSome","i","ignoreAbortErrors","a","after","o","throwIfAborted","n","throwIfNotAbortError","u","isAbortError","h","whenOnce","c","property","d","subclass","l","convertToGeometry","p","g","f","FeatureStore2D","y","createSource","m","ClusterStore","S","ComputedAttributeStorage","v","FeatureSetReaderJSON","b","UpdateToken","I","QueueProcessor","w","C","E","j","F","k","name","T","q","type","mode","R","constructor","arguments","_storage","_markedIdsBufId","createBitset","_lastCleanup","performance","now","_cleanupNeeded","_invalidated","_tileToResolver","Map","_didEdit","tileStore","config","processor","remoteClient","service","initialize","_initAttributeStore","_initStores","_initQueryEngine","_initSource","_updateQueue","concurrency","_source","process","_onTileMessage","signal","handles","add","on","onTileUpdate","bind","watch","onIdle","_checkUpdating","setInterval","notifyChange","startup","tileScheme","length","_patchTile","spatialReference","featureStore","_proxyEvents","events","invoke","propertyName","value","catch","event","attributes","centroid","geometry","attributeStore","invalidateResources","update","render","geometryInfo","geometryType","hasM","hasZ","fieldsIndex","fields","aggregateStore","valueRanges","queryEngine","destroy","definitionExpression","objectIdField","toJSON","cacheSpatialQueries","aggregateAdapter","getFeatureObjectIds","getFeatureDisplayIdsForAggregate","map","getObjectId","timeInfo","tiles","unsubscribe","clearInterval","hasAggregates","schema","targets","aggregate","updating","isUpdating","enableEvent","pause","clear","pauseStream","resumeStream","_set","_schema","Promise","all","source","updateSchema","feature","updateFilters","describe","applyUpdate","mesh","clearTiles","resume","onEdits","edits","console","debug","removed","objectId","_lookupObjectIdByGlobalId","globalId","addOrModified","invalidate","edit","resend","refresh","empty","storage","filters","onTileClear","added","subscribe","_level","level","has","id","get","resolve","delete","_repushCurrentLevelTiles","_markAndSweep","querySummaryStatistics","query","params","executeQueryForSummaryStatistics","queryUniqueValues","executeQueryForUniqueValues","queryClassBreaks","executeQueryForClassBreaks","queryHistogram","executeQueryForHistogram","queryExtent","executeQueryForExtent","queryFeatures","executeQuery","queryVisibleFeatures","objectIdFieldName","features","filter","getDisplayId","isVisible","queryFeatureCount","executeQueryForCount","queryLatestObservations","executeQueryForLatestObservations","queryObjectIds","executeQueryForIds","queryStatistics","storeStatistics","lookupObjectId","lookupDisplayId","getDisplayIdForReferenceId","getFeatures","getAggregate","referenceId","getFeature","push","aggregates","lookupFeatureByDisplayId","readHydratedGeometry","readAttributes","getAggregates","setHighlight","globalIdField","Error","forEach","readAttribute","key","addOrUpdate","fromOptimizedFeatures","remove","end","status","_maybeForceCleanup","then","onTileMessage","setArcadeSpatialReference","hasInstance","instance","onTileData","data","sendUpdates","loading","_mark","getInstanceId","set","getBitset","Set","readers","getCursor","next","forEachBufferId","sweepFeatures","sweepClusters","sweepFeatureSets","constructOnly","prototype","readOnly","x","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../../../chunks/tslib.es6.js\";import{HandleOwner as t}from\"../../../../../core/HandleOwner.js\";import r from\"../../../../../core/has.js\";import{isNone as s,isSome as i}from\"../../../../../core/maybe.js\";import{ignoreAbortErrors as a,after as o,throwIfAborted as n,throwIfNotAbortError as u,isAbortError as h}from\"../../../../../core/promiseUtils.js\";import{whenOnce as c}from\"../../../../../core/reactiveUtils.js\";import{property as d}from\"../../../../../core/accessorSupport/decorators/property.js\";import\"../../../../../core/arrayUtils.js\";import\"../../../../../core/accessorSupport/ensureType.js\";import{subclass as l}from\"../../../../../core/accessorSupport/decorators/subclass.js\";import{convertToGeometry as p}from\"../../../../../layers/graphics/featureConversionUtils.js\";import g from\"../../../../../layers/graphics/data/QueryEngine.js\";import f from\"../../../../../layers/support/FieldsIndex.js\";import{FeatureStore2D as y}from\"../FeatureStore2D.js\";import{createSource as m}from\"../sources/createSource.js\";import _ from\"../support/AttributeStore.js\";import{ClusterStore as S}from\"../support/ClusterStore.js\";import{ComputedAttributeStorage as v}from\"../support/ComputedAttributeStorage.js\";import{FeatureSetReaderJSON as b}from\"../support/FeatureSetReaderJSON.js\";import{UpdateToken as I}from\"../support/UpdateToken.js\";import{QueueProcessor as w}from\"../../../../support/QueueProcessor.js\";const C=5e3,E=\"tileRenderer.featuresView.attributeView.initialize\",j=\"tileRenderer.featuresView.attributeView.requestUpdate\",F=\"tileRenderer.featuresView.requestRender\";function k(e){return\"worker:port-closed\"===e.name}function T(e){if(!h(e)&&!k(e))throw e}function q(e){return\"feature\"===e.type&&\"snapshot\"===e.mode}let R=class extends t{constructor(){super(...arguments),this._storage=new v,this._markedIdsBufId=this._storage.createBitset(),this._lastCleanup=performance.now(),this._cleanupNeeded=!1,this._invalidated=!1,this._tileToResolver=new Map,this._didEdit=!1,this.tileStore=null,this.config=null,this.processor=null,this.remoteClient=null,this.service=null}initialize(){this._initAttributeStore(),this._initStores(),this._initQueryEngine(),this._initSource(),this._updateQueue=new w({concurrency:\"geoevent\"===this._source.type?1:4,process:(e,t)=>this._onTileMessage(e,{signal:t})}),this.handles.add([this.tileStore.on(\"update\",this.onTileUpdate.bind(this)),this.watch(\"updating\",(e=>!e&&this.onIdle()))]),this._checkUpdating=setInterval((()=>this.notifyChange(\"updating\")),300)}async startup(){this._initAttributeStore()}_initSource(){const e=this.tileStore.tileScheme,t=()=>this._updateQueue.length<50,r=(e,t)=>(this._invalidated=!0,this._patchTile(e,t));this._source=m(this.service,this.spatialReference,e,r,t,this.featureStore),this._proxyEvents()}_proxyEvents(){if(\"geoevent\"===this._source.type){const e=this._source.events;this.handles.add([e.on(\"connectionStatus\",(e=>this.remoteClient.invoke(\"setProperty\",{propertyName:\"connectionStatus\",value:e}).catch(T))),e.on(\"errorString\",(e=>this.remoteClient.invoke(\"setProperty\",{propertyName:\"errorString\",value:e}).catch(T))),e.on(\"feature\",(e=>this.remoteClient.invoke(\"emitEvent\",{name:\"data-received\",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}}).catch(T))),e.on(\"updateRate\",(e=>this.remoteClient.invoke(\"emitEvent\",{name:\"update-rate\",event:{...e}}).catch(T)))])}}_initAttributeStore(){this.attributeStore?this.attributeStore.invalidateResources():this.attributeStore=new _({type:\"remote\",initialize:(e,t)=>a(this.remoteClient.invoke(E,e,{signal:t}).catch(T)),update:(e,t)=>a(this.remoteClient.invoke(j,e,{signal:t}).catch(T)),render:e=>a(this.remoteClient.invoke(F,void 0,{signal:e}).catch(T))},this.config)}_initStores(){const e=\"snapshot\"===this.service.type?\"snapshot\":\"on-demand\",t={geometryInfo:{geometryType:this.service.geometryType,hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields};this.featureStore=new y(t,this._storage,e),this.aggregateStore=new S(t,this.spatialReference,this._storage,this.service),this.handles.add(this.aggregateStore.events.on(\"valueRangesChanged\",(e=>{this.remoteClient.invoke(\"emitEvent\",{name:\"valueRangesChanged\",event:{valueRanges:e.valueRanges}}).catch(T)})))}_initQueryEngine(){var e;const t=this;null==(e=this.queryEngine)||e.destroy(),this.queryEngine=new g({definitionExpression:this.config.definitionExpression,fields:this.service.fields,geometryType:this.service.geometryType,objectIdField:this.service.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.spatialReference.toJSON(),cacheSpatialQueries:!0,featureStore:this.featureStore,aggregateAdapter:{getFeatureObjectIds:e=>t.aggregateStore.getFeatureDisplayIdsForAggregate(e).map((e=>t.getObjectId(e)))},timeInfo:this.service.timeInfo})}destroy(){this._updateQueue.destroy(),this._source.destroy(),this.queryEngine.destroy(),this.attributeStore&&this.attributeStore.destroy();for(const e of this.tileStore.tiles)this._source.unsubscribe(e);clearInterval(this._checkUpdating)}get fieldsIndex(){return new f(this.service.fields)}get hasAggregates(){return!!this.config.schema.targets.aggregate}get spatialReference(){return this.tileStore.tileScheme.spatialReference}get updating(){return this.isUpdating()}isUpdating(){return this._source.updating||!!this._updateQueue.length}enableEvent(e){this._source.enableEvent(e.name,e.value)}pause(){this._updateQueue.pause(),this._updateQueue.clear()}pauseStream(){\"geoevent\"===this._source.type&&this._source.pauseStream()}resumeStream(){\"geoevent\"===this._source.type&&this._source.resumeStream()}async update(e,t){this._set(\"config\",t),this._schema=t.schema,this._initQueryEngine(),await Promise.all([this._source.update(e,t.schema.source),this.featureStore.updateSchema(e,t.schema.targets.feature),this.attributeStore.update(e,t),this.attributeStore.updateFilters(e,this)]),await this.aggregateStore.updateSchema(e,t.schema.targets.aggregate),r(\"esri-2d-update-debug\")&&e.describe()}async applyUpdate(e){e.mesh&&this.clearTiles(),this._updateQueue.resume(),await this._source.applyUpdate(e),this.notifyChange(\"updating\"),await c((()=>!this.updating)),this.hasAggregates&&(await o(10),await c((()=>!this.updating)))}async onEdits({edits:e}){r(\"esri-2d-update-debug\")&&console.debug(\"Applying Edit:\",e),this._didEdit=!0;try{const t=e.removed.map((e=>e.objectId&&-1!==e.objectId?e.objectId:this._lookupObjectIdByGlobalId(e.globalId))),r=e.addOrModified.map((({objectId:e})=>e));this.featureStore.invalidate(),await this._source.edit(r,t),this.clearTiles(),this.notifyChange(\"updating\"),this.aggregateStore.clear(),await this._source.resend(),await c((()=>!this.updating))}catch(t){}}async refresh(e){if(!e){const e=I.empty();return e.storage.filters=!0,this.applyUpdate(e)}this.featureStore.invalidate(),this.clearTiles(),this._source.refresh(),this._cleanupNeeded=!0,this.notifyChange(\"updating\"),await c((()=>!this.updating))}clearTiles(){for(const e of this.tileStore.tiles)this.processor.onTileClear(e)}onTileUpdate(e){this.aggregateStore.onTileUpdate(e);for(const t of e.added)this._source.subscribe(t),this._level=t.level;for(const t of e.removed)this._source.unsubscribe(t),this._cleanupNeeded=!0,this._tileToResolver.has(t.id)&&(this._tileToResolver.get(t.id).resolve(),this._tileToResolver.delete(t.id));this.notifyChange(\"updating\")}onIdle(){this._invalidated&&((this.hasAggregates||\"heatmap\"===this.processor.type)&&this._repushCurrentLevelTiles(),this._invalidated=!1),this._markAndSweep()}async querySummaryStatistics({query:e,params:t}){return this.queryEngine.executeQueryForSummaryStatistics(e,t)}async queryUniqueValues({query:e,params:t}){return this.queryEngine.executeQueryForUniqueValues(e,t)}async queryClassBreaks({query:e,params:t}){return this.queryEngine.executeQueryForClassBreaks(e,t)}async queryHistogram({query:e,params:t}){return this.queryEngine.executeQueryForHistogram(e,t)}queryExtent(e){return this.queryEngine.executeQueryForExtent(e)}queryFeatures(e){return this.queryEngine.executeQuery(e)}async queryVisibleFeatures(e){const t=await this.queryEngine.executeQuery(e),r=t.objectIdFieldName;return t.features=t.features.filter((e=>{const t=e.attributes[r],s=this.getDisplayId(t);return this.attributeStore.isVisible(s)})),t}queryFeatureCount(e){return this.queryEngine.executeQueryForCount(e)}queryLatestObservations(e){return this.queryEngine.executeQueryForLatestObservations(e)}queryObjectIds(e){return this.queryEngine.executeQueryForIds(e)}async queryStatistics(){return this.featureStore.storeStatistics}getObjectId(e){return this.featureStore.lookupObjectId(e,this._storage)}getDisplayId(e){if(this._schema.targets.aggregate){const t=this.aggregateStore.getDisplayId(e);if(s(t)){const t=this.featureStore.lookupDisplayId(e);return this.aggregateStore.getDisplayIdForReferenceId(t)}return t}return this.featureStore.lookupDisplayId(e)}getFeatures(e){const t=[],r=[];for(const s of e){const e=this.hasAggregates?this.getAggregate(s):null;if(i(e))if(i(e.referenceId)){const r=this.getFeature(e.referenceId);i(r)&&t.push(r)}else r.push(e);else{const e=this.getFeature(s);i(e)&&t.push(e)}}return{features:t,aggregates:r}}getFeature(e){const t=this.featureStore.lookupFeatureByDisplayId(e,this._storage);if(s(t))return null;const r=t.readHydratedGeometry(),i=p(r,t.geometryType,t.hasZ,t.hasM);return{attributes:t.readAttributes(),geometry:i}}getAggregate(e){return this.aggregateStore.getAggregate(e)}getAggregates(){return this.aggregateStore.getAggregates()}async setHighlight(e){const t=e.map((e=>this.getDisplayId(e)));return this.attributeStore.setHighlight(e,t)}_lookupObjectIdByGlobalId(e){const t=this.service.globalIdField;if(s(t))throw new Error(\"Expected globalIdField to be defined\");let r=null;if(this.featureStore.forEach((s=>{e===s.readAttribute(t)&&(r=s.getObjectId())})),s(r))throw new Error(`Expected to find a feature with globalId ${e}`);return r}_repushCurrentLevelTiles(){const e=this.tileStore.tiles.filter((e=>e.level===this._level));for(const t of e)this._patchTile({type:\"append\",id:t.key.id,addOrUpdate:b.fromOptimizedFeatures([],this.service),remove:[],end:!0,status:I.empty()})}_maybeForceCleanup(){performance.now()-this._lastCleanup>C&&this._markAndSweep()}_patchTile(e,t){const r=this._updateQueue.push(e,t).then((()=>{this.notifyChange(\"updating\")})).catch((e=>{this.notifyChange(\"updating\")}));return this.notifyChange(\"updating\"),r}async _onTileMessage(e,t){n(t);const r=this.tileStore.get(e.id);if(!r)return;if(e.clear)return this.processor.onTileClear(r);const i=e.status;this._cleanupNeeded=!0;const a=[];for(const s of e.remove){const e=this.featureStore.lookupDisplayId(s);e&&a.push(e)}e.remove=a;try{if(s(e.addOrUpdate))return void this.processor.onTileMessage(r,{...e,addOrUpdate:null},this.hasAggregates,t).catch(u);if(e.addOrUpdate.setArcadeSpatialReference(this.spatialReference),this.featureStore.hasInstance(e.addOrUpdate.instance)&&i.targets.feature||(i.targets.feature=!0,this.featureStore.onTileData(r,e)),!i.storage.data||!i.storage.filters){i.storage.data=!0,i.storage.filters=!0,this.attributeStore.onTileData(r,e);\"geoevent\"===this._source.type||this._didEdit?(await this.attributeStore.sendUpdates(),n(t)):this.attributeStore.sendUpdates()}if(this.hasAggregates&&!i.targets.aggregate){i.targets.aggregate=!0;const t=q(this._source)&&this._source.loading,s=!q(this._source)||t||e.end;if(this.aggregateStore.onTileData(r,e,this._storage,this.attributeStore,s),!s)return;i.mesh||(this.attributeStore.onTileData(r,e),await this.attributeStore.sendUpdates(),this.processor.onTileClear(r))}i.mesh||(i.mesh=!0,await this.processor.onTileMessage(r,e,this.hasAggregates,t),n(t)),this._maybeForceCleanup()}catch(o){u(o)}}_mark(e,t,r){const s=(4294901760&this._storage.getInstanceId(e))>>>16;e&&(t.add(s),r.set(e))}_markAndSweep(){this._lastCleanup=performance.now();if(!(!(\"feature\"===this._source.type&&\"snapshot\"===this._source.mode)&&(\"geoevent\"===this._source.type||this._cleanupNeeded)))return;this._cleanupNeeded=!1;const e=this._storage.getBitset(this._markedIdsBufId),t=new Set;e.clear();for(const r of this.tileStore.tiles)for(const s of this._source.readers(r.id)){const r=s.getCursor();for(;r.next();){let s=r.getDisplayId();if(!s){const e=r.getObjectId();s=this.featureStore.lookupDisplayId(e)}this._mark(s,t,e)}}\"symbol\"===this.processor.type&&this.processor.forEachBufferId((r=>{this._mark(r,t,e)})),this._updateQueue.forEach((r=>{for(const s of r.remove){const r=this.featureStore.lookupDisplayId(s);this._mark(r,t,e)}})),this.config.schema.targets.aggregate&&(this.aggregateStore.sweepFeatures(e,this.featureStore),this.aggregateStore.sweepClusters(this._storage,this.attributeStore,this._level)),this.featureStore.sweepFeatures(e,this._storage,this.attributeStore),this.featureStore.sweepFeatureSets(t)}};e([d({constructOnly:!0})],R.prototype,\"tileStore\",void 0),e([d()],R.prototype,\"config\",void 0),e([d({readOnly:!0})],R.prototype,\"fieldsIndex\",null),e([d()],R.prototype,\"processor\",void 0),e([d({constructOnly:!0})],R.prototype,\"remoteClient\",void 0),e([d({constructOnly:!0})],R.prototype,\"service\",void 0),e([d()],R.prototype,\"spatialReference\",null),e([d()],R.prototype,\"updating\",null),R=e([l(\"esri.views.2d.layers.features.controllers.FeatureController2D\")],R);const x=R;export{x as default};\n"]},"metadata":{},"sourceType":"module"}