{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { isNone as t } from \"../../../../core/maybe.js\";\nimport { create as e, containsPointWithMargin as s } from \"../../../../geometry/support/aaBoundingRect.js\";\nimport { polygonCentroid as r } from \"../../../../geometry/support/centroid.js\";\nimport { isPolygon as o, isPolyline as i, isMultipoint as n } from \"../../../../geometry/support/jsonUtils.js\";\nimport { getSpatialReferenceMinMaxX as l } from \"../../../../geometry/support/normalizeUtilsCommon.js\";\nimport { quantizePoint as h, quantizeGeometry as a } from \"../../../../geometry/support/quantizationUtils.js\";\nimport { convertFromPolyline as m, generalizeOptimizedGeometry as u, quantizeOptimizedGeometry as p, convertToPolyline as c } from \"../../../../layers/graphics/featureConversionUtils.js\";\nimport g from \"../../../../layers/graphics/OptimizedGeometry.js\";\nimport { isMarkerSymbol as y, isTextSymbol as f } from \"./graphicsUtils.js\";\nconst d = new g(),\n      z = new g(),\n      b = \"esriGeometryPolyline\";\n\nfunction j(t) {\n  t.coords.length = 0, t.lengths.length = 0;\n}\n\nclass _ {\n  constructor() {\n    this.bounds = e(), this.graphic = null;\n  }\n\n  static acquire() {\n    let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let e = arguments.length > 1 ? arguments[1] : undefined;\n    let s = arguments.length > 2 ? arguments[2] : undefined;\n    let r = arguments.length > 3 ? arguments[3] : undefined;\n    let o = arguments.length > 4 ? arguments[4] : undefined;\n    let i;\n    return 0 === _._pool.length ? i = new _() : (i = _._pool.pop(), this._set.delete(i)), i.acquire(t, e, s, r, o), i;\n  }\n\n  static release(t) {\n    t && !this._set.has(t) && (t.release(), this._pool.push(t), this._set.add(t));\n  }\n\n  static getCentroidQuantized(e, s) {\n    if (o(e.geometry)) {\n      const o = e.symbol;\n      if (t(o)) return null;\n\n      if (y(o.type) || f(o.type)) {\n        const t = r(e.geometry);\n        return h(s, {}, {\n          x: t[0],\n          y: t[1]\n        }, !1, !1);\n      }\n    }\n\n    return null;\n  }\n\n  acquire() {\n    let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let e = arguments.length > 1 ? arguments[1] : undefined;\n    let s = arguments.length > 2 ? arguments[2] : undefined;\n    let r = arguments.length > 3 ? arguments[3] : undefined;\n    let o = arguments.length > 4 ? arguments[4] : undefined;\n    t && this.set(t, e, s, r, o);\n  }\n\n  release() {\n    this.graphic = null, this.symbolResource = null, this.geometry = null;\n  }\n\n  get symbol() {\n    return this.symbolResource.symbol;\n  }\n\n  set(t, e, s, r, o) {\n    this.graphic = t, this.geometry = s, this.symbolResource = e, this.bounds = r, o && (this.size = o);\n  }\n\n  getGeometryQuantized(t, e, r, h) {\n    const g = this.geometry;\n\n    if (o(g)) {\n      const e = g.rings;\n      if (1 === e.length && 2 === e[0].length) return a(t, {\n        paths: [[e[0][0], e[0][1]]]\n      });\n    } else {\n      if (i(g)) return j(d), j(z), m(d, g), u(z, d, g.hasZ, g.hasM, b, t.scale[0]), p(d, z, g.hasZ, g.hasM, b, t), c(d, g.hasZ, g.hasM);\n\n      if (n(g)) {\n        const o = .5 * h * Math.max(Math.abs(this.size[0]) + this.size[2] - this.size[0], Math.abs(this.size[1]) + this.size[3] - this.size[1]),\n              [i, n] = l(r),\n              m = n - i,\n              u = g.points.filter(t => {\n          if (t[0] + o > n || t[0] - o < i) {\n            const r = [...t];\n            return t[0] + o > n ? r[0] -= m : r[0] += m, s(e, t, o) || s(e, r, o);\n          }\n\n          return s(e, t, o);\n        });\n        return 0 === u.length ? {\n          points: u\n        } : a(t, {\n          points: u\n        });\n      }\n    }\n\n    return a(t, this.geometry);\n  }\n\n}\n\n_._pool = [], _._set = new Set();\nexport { _ as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/layers/graphics/GraphicStoreItem.js"],"names":["isNone","t","create","e","containsPointWithMargin","s","polygonCentroid","r","isPolygon","o","isPolyline","i","isMultipoint","n","getSpatialReferenceMinMaxX","l","quantizePoint","h","quantizeGeometry","a","convertFromPolyline","m","generalizeOptimizedGeometry","u","quantizeOptimizedGeometry","p","convertToPolyline","c","g","isMarkerSymbol","y","isTextSymbol","f","d","z","b","j","coords","length","lengths","_","constructor","bounds","graphic","acquire","_pool","pop","_set","delete","release","has","push","add","getCentroidQuantized","geometry","symbol","type","x","set","symbolResource","size","getGeometryQuantized","rings","paths","hasZ","hasM","scale","Math","max","abs","points","filter","Set","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{isNone as t}from\"../../../../core/maybe.js\";import{create as e,containsPointWithMargin as s}from\"../../../../geometry/support/aaBoundingRect.js\";import{polygonCentroid as r}from\"../../../../geometry/support/centroid.js\";import{isPolygon as o,isPolyline as i,isMultipoint as n}from\"../../../../geometry/support/jsonUtils.js\";import{getSpatialReferenceMinMaxX as l}from\"../../../../geometry/support/normalizeUtilsCommon.js\";import{quantizePoint as h,quantizeGeometry as a}from\"../../../../geometry/support/quantizationUtils.js\";import{convertFromPolyline as m,generalizeOptimizedGeometry as u,quantizeOptimizedGeometry as p,convertToPolyline as c}from\"../../../../layers/graphics/featureConversionUtils.js\";import g from\"../../../../layers/graphics/OptimizedGeometry.js\";import{isMarkerSymbol as y,isTextSymbol as f}from\"./graphicsUtils.js\";const d=new g,z=new g,b=\"esriGeometryPolyline\";function j(t){t.coords.length=0,t.lengths.length=0}class _{constructor(){this.bounds=e(),this.graphic=null}static acquire(t=null,e,s,r,o){let i;return 0===_._pool.length?i=new _:(i=_._pool.pop(),this._set.delete(i)),i.acquire(t,e,s,r,o),i}static release(t){t&&!this._set.has(t)&&(t.release(),this._pool.push(t),this._set.add(t))}static getCentroidQuantized(e,s){if(o(e.geometry)){const o=e.symbol;if(t(o))return null;if(y(o.type)||f(o.type)){const t=r(e.geometry);return h(s,{},{x:t[0],y:t[1]},!1,!1)}}return null}acquire(t=null,e,s,r,o){t&&this.set(t,e,s,r,o)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(t,e,s,r,o){this.graphic=t,this.geometry=s,this.symbolResource=e,this.bounds=r,o&&(this.size=o)}getGeometryQuantized(t,e,r,h){const g=this.geometry;if(o(g)){const e=g.rings;if(1===e.length&&2===e[0].length)return a(t,{paths:[[e[0][0],e[0][1]]]})}else{if(i(g))return j(d),j(z),m(d,g),u(z,d,g.hasZ,g.hasM,b,t.scale[0]),p(d,z,g.hasZ,g.hasM,b,t),c(d,g.hasZ,g.hasM);if(n(g)){const o=.5*h*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),[i,n]=l(r),m=n-i,u=g.points.filter((t=>{if(t[0]+o>n||t[0]-o<i){const r=[...t];return t[0]+o>n?r[0]-=m:r[0]+=m,s(e,t,o)||s(e,r,o)}return s(e,t,o)}));return 0===u.length?{points:u}:a(t,{points:u})}}return a(t,this.geometry)}}_._pool=[],_._set=new Set;export{_ as default};\n"]},"metadata":{},"sourceType":"module"}