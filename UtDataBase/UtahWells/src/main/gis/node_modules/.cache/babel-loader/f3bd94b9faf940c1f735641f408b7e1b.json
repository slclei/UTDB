{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../../../request.js\";\nimport r from \"../../../core/Handles.js\";\nimport { clamp as t } from \"../../../core/mathUtils.js\";\nimport { isNone as s, isSome as i, disposeMaybe as a } from \"../../../core/maybe.js\";\nimport { createTask as o } from \"../../../core/promiseUtils.js\";\nimport { isSVG as n } from \"../../../core/urlUtils.js\";\nimport { init as l } from \"../../../core/watchUtils.js\";\nimport { c as h } from \"../../../chunks/mat3f32.js\";\nimport { DisplayObject as m } from \"../engine/DisplayObject.js\";\nimport { Pos2us as u } from \"../engine/webgl/DefaultVertexAttributeLayouts.js\";\nimport { WGLDrawPhase as c } from \"../engine/webgl/enums.js\";\nimport { createMagnifierProgram as d, magnifierProgramTemplate as _ } from \"../engine/webgl/shaders/MagnifierPrograms.js\";\nimport { loadMagnifierResources as p } from \"../../magnifier/resources.js\";\nimport { BufferObject as f } from \"../../webgl/BufferObject.js\";\nimport { PrimitiveType as g, Usage as T, TextureType as b, PixelFormat as x, PixelType as R, TextureWrapMode as y, TextureSamplingMode as k } from \"../../webgl/enums.js\";\nimport { Texture as v } from \"../../webgl/Texture.js\";\nimport { VertexArrayObject as A } from \"../../webgl/VertexArrayObject.js\";\n\nclass E extends m {\n  constructor() {\n    super(), this._handles = new r(), this._resourcePixelRatio = 1, this.visible = !1;\n  }\n\n  destroy() {\n    this._handles.destroy(), this._handles = null, this._disposeRenderResources(), this._resourcesTask && (this._resourcesTask.abort(), this._resourcesTask = null);\n  }\n\n  get background() {\n    return this._background;\n  }\n\n  set background(e) {\n    this._background = e, this.requestRender();\n  }\n\n  get magnifier() {\n    return this._magnifier;\n  }\n\n  set magnifier(e) {\n    this._magnifier = e, this._handles.removeAll(), this._handles.add([l(e, \"version\", () => {\n      this.visible = e.visible && i(e.position) && e.size > 0, this.requestRender();\n    }), e.watch([\"mask\", \"overlay\"], () => this._reloadResources()), e.watch(\"size\", () => {\n      this._disposeRenderResources(), this.requestRender();\n    })]);\n  }\n\n  _createTransforms() {\n    return {\n      dvs: h()\n    };\n  }\n\n  doRender(e) {\n    var r;\n    const i = e.context;\n    if (!this._resourcesTask) return void this._reloadResources();\n    if (e.drawPhase !== c.MAP || !this._canRender()) return;\n\n    this._updateResources(e);\n\n    const a = this._magnifier;\n    if (s(a.position)) return;\n    const o = e.pixelRatio,\n          n = a.size * o,\n          l = 1 / a.factor,\n          h = Math.ceil(l * n);\n\n    this._readbackTexture.resize(h, h);\n\n    const {\n      size: m\n    } = e.state,\n          u = o * m[0],\n          d = o * m[1],\n          _ = .5 * h,\n          p = .5 * h,\n          f = t(o * a.position.x, _, u - _ - 1),\n          T = t(d - o * a.position.y, p, d - p - 1);\n\n    i.setBlendingEnabled(!0);\n    const b = f - _,\n          x = T - p,\n          R = this._readbackTexture;\n    i.bindTexture(R, 0), i.gl.copyTexImage2D(R.descriptor.target, 0, R.descriptor.pixelFormat, b, x, h, h, 0);\n    const y = null == (r = this.background) ? void 0 : r.color,\n          k = y ? [y.a * y.r / 255, y.a * y.g / 255, y.a * y.b / 255, y.a] : [1, 1, 1, 1],\n          v = (f + a.offset.x * o) / u * 2 - 1,\n          A = (T - a.offset.y * o) / d * 2 - 1,\n          E = n / u * 2,\n          w = n / d * 2,\n          j = this._program;\n    i.bindVAO(this._vertexArrayObject), i.bindTexture(this._overlayTexture, 6), i.bindTexture(this._maskTexture, 7), i.useProgram(j), j.setUniform4fv(\"u_background\", k), j.setUniform1i(\"u_readbackTexture\", 0), j.setUniform1i(\"u_overlayTexture\", 6), j.setUniform1i(\"u_maskTexture\", 7), j.setUniform4f(\"u_drawPos\", v, A, E, w), j.setUniform1i(\"u_maskEnabled\", a.maskEnabled ? 1 : 0), j.setUniform1i(\"u_overlayEnabled\", a.overlayEnabled ? 1 : 0), i.setStencilTestEnabled(!1), i.setColorMask(!0, !0, !0, !0), i.drawArrays(g.TRIANGLE_STRIP, 0, 4), i.bindVAO();\n  }\n\n  _canRender() {\n    return this.mask && this.overlay && null != this._magnifier;\n  }\n\n  _reloadResources() {\n    this._resourcesTask && this._resourcesTask.abort();\n    const r = i(this._magnifier) ? this._magnifier.maskUrl : null,\n          t = i(this._magnifier) ? this._magnifier.overlayUrl : null;\n    this._resourcesTask = o(async a => {\n      const o = s(r) || s(t) ? p(a) : null,\n            n = i(r) ? e(r, {\n        responseType: \"image\",\n        signal: a\n      }).then(e => e.data) : o.then(e => e.mask),\n            l = i(t) ? e(t, {\n        responseType: \"image\",\n        signal: a\n      }).then(e => e.data) : o.then(e => e.overlay),\n            [h, m] = await Promise.all([n, l]);\n      this.mask = h, this.overlay = m, this._disposeRenderResources(), this.requestRender();\n    });\n  }\n\n  _disposeRenderResources() {\n    this._readbackTexture = a(this._readbackTexture), this._overlayTexture = a(this._overlayTexture), this._maskTexture = a(this._maskTexture), this._vertexArrayObject = a(this._vertexArrayObject), this._program = a(this._program);\n  }\n\n  _updateResources(e) {\n    if (e.pixelRatio !== this._resourcePixelRatio && this._disposeRenderResources(), this._readbackTexture) return;\n    const r = e.context;\n    this._resourcePixelRatio = e.pixelRatio;\n    const t = Math.ceil(this._magnifier.size * e.pixelRatio);\n    this._program = d(r);\n    const s = new Uint16Array([0, 1, 0, 0, 1, 1, 1, 0]),\n          i = _.attributes;\n    this._vertexArrayObject = new A(r, i, u, {\n      geometry: f.createVertex(r, T.STATIC_DRAW, s)\n    }), this.overlay.width = t, this.overlay.height = t, this._overlayTexture = new v(r, {\n      target: b.TEXTURE_2D,\n      pixelFormat: x.RGBA,\n      internalFormat: x.RGBA,\n      dataType: R.UNSIGNED_BYTE,\n      wrapMode: y.CLAMP_TO_EDGE,\n      samplingMode: k.NEAREST,\n      flipped: !0,\n      preMultiplyAlpha: !n(this.overlay.src) || !e.context.driverTest.svgAlwaysPremultipliesAlpha\n    }, this.overlay), this.mask.width = t, this.mask.height = t, this._maskTexture = new v(r, {\n      target: b.TEXTURE_2D,\n      pixelFormat: x.ALPHA,\n      internalFormat: x.ALPHA,\n      dataType: R.UNSIGNED_BYTE,\n      wrapMode: y.CLAMP_TO_EDGE,\n      samplingMode: k.NEAREST,\n      flipped: !0\n    }, this.mask);\n    const a = 1 / this._magnifier.factor;\n    this._readbackTexture = new v(r, {\n      target: b.TEXTURE_2D,\n      pixelFormat: x.RGBA,\n      internalFormat: x.RGBA,\n      dataType: R.UNSIGNED_BYTE,\n      wrapMode: y.CLAMP_TO_EDGE,\n      samplingMode: k.LINEAR,\n      flipped: !1,\n      width: Math.ceil(a * t),\n      height: Math.ceil(a * t)\n    });\n  }\n\n}\n\nexport { E as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/magnifier/MagnifierView2D.js"],"names":["e","r","clamp","t","isNone","s","isSome","i","disposeMaybe","a","createTask","o","isSVG","n","init","l","c","h","DisplayObject","m","Pos2us","u","WGLDrawPhase","createMagnifierProgram","d","magnifierProgramTemplate","_","loadMagnifierResources","p","BufferObject","f","PrimitiveType","g","Usage","T","TextureType","b","PixelFormat","x","PixelType","R","TextureWrapMode","y","TextureSamplingMode","k","Texture","v","VertexArrayObject","A","E","constructor","_handles","_resourcePixelRatio","visible","destroy","_disposeRenderResources","_resourcesTask","abort","background","_background","requestRender","magnifier","_magnifier","removeAll","add","position","size","watch","_reloadResources","_createTransforms","dvs","doRender","context","drawPhase","MAP","_canRender","_updateResources","pixelRatio","factor","Math","ceil","_readbackTexture","resize","state","setBlendingEnabled","bindTexture","gl","copyTexImage2D","descriptor","target","pixelFormat","color","offset","w","j","_program","bindVAO","_vertexArrayObject","_overlayTexture","_maskTexture","useProgram","setUniform4fv","setUniform1i","setUniform4f","maskEnabled","overlayEnabled","setStencilTestEnabled","setColorMask","drawArrays","TRIANGLE_STRIP","mask","overlay","maskUrl","overlayUrl","responseType","signal","then","data","Promise","all","Uint16Array","attributes","geometry","createVertex","STATIC_DRAW","width","height","TEXTURE_2D","RGBA","internalFormat","dataType","UNSIGNED_BYTE","wrapMode","CLAMP_TO_EDGE","samplingMode","NEAREST","flipped","preMultiplyAlpha","src","driverTest","svgAlwaysPremultipliesAlpha","ALPHA","LINEAR","default"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,qBAAb;AAAmC,OAAOC,CAAP,MAAa,0BAAb;AAAwC,SAAOC,KAAK,IAAIC,CAAhB,QAAsB,4BAAtB;AAAmD,SAAOC,MAAM,IAAIC,CAAjB,EAAmBC,MAAM,IAAIC,CAA7B,EAA+BC,YAAY,IAAIC,CAA/C,QAAqD,wBAArD;AAA8E,SAAOC,UAAU,IAAIC,CAArB,QAA2B,+BAA3B;AAA2D,SAAOC,KAAK,IAAIC,CAAhB,QAAsB,2BAAtB;AAAkD,SAAOC,IAAI,IAAIC,CAAf,QAAqB,6BAArB;AAAmD,SAAOC,CAAC,IAAIC,CAAZ,QAAkB,4BAAlB;AAA+C,SAAOC,aAAa,IAAIC,CAAxB,QAA8B,4BAA9B;AAA2D,SAAOC,MAAM,IAAIC,CAAjB,QAAuB,kDAAvB;AAA0E,SAAOC,YAAY,IAAIN,CAAvB,QAA6B,0BAA7B;AAAwD,SAAOO,sBAAsB,IAAIC,CAAjC,EAAmCC,wBAAwB,IAAIC,CAA/D,QAAqE,8CAArE;AAAoH,SAAOC,sBAAsB,IAAIC,CAAjC,QAAuC,8BAAvC;AAAsE,SAAOC,YAAY,IAAIC,CAAvB,QAA6B,6BAA7B;AAA2D,SAAOC,aAAa,IAAIC,CAAxB,EAA0BC,KAAK,IAAIC,CAAnC,EAAqCC,WAAW,IAAIC,CAApD,EAAsDC,WAAW,IAAIC,CAArE,EAAuEC,SAAS,IAAIC,CAApF,EAAsFC,eAAe,IAAIC,CAAzG,EAA2GC,mBAAmB,IAAIC,CAAlI,QAAwI,sBAAxI;AAA+J,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,wBAAxB;AAAiD,SAAOC,iBAAiB,IAAIC,CAA5B,QAAkC,kCAAlC;;AAAqE,MAAMC,CAAN,SAAgB9B,CAAhB,CAAiB;AAAC+B,EAAAA,WAAW,GAAE;AAAC,aAAQ,KAAKC,QAAL,GAAc,IAAIlD,CAAJ,EAAtB,EAA4B,KAAKmD,mBAAL,GAAyB,CAArD,EAAuD,KAAKC,OAAL,GAAa,CAAC,CAArE;AAAuE;;AAAAC,EAAAA,OAAO,GAAE;AAAC,SAAKH,QAAL,CAAcG,OAAd,IAAwB,KAAKH,QAAL,GAAc,IAAtC,EAA2C,KAAKI,uBAAL,EAA3C,EAA0E,KAAKC,cAAL,KAAsB,KAAKA,cAAL,CAAoBC,KAApB,IAA4B,KAAKD,cAAL,GAAoB,IAAtE,CAA1E;AAAsJ;;AAAc,MAAVE,UAAU,GAAE;AAAC,WAAO,KAAKC,WAAZ;AAAwB;;AAAc,MAAVD,UAAU,CAAC1D,CAAD,EAAG;AAAC,SAAK2D,WAAL,GAAiB3D,CAAjB,EAAmB,KAAK4D,aAAL,EAAnB;AAAwC;;AAAa,MAATC,SAAS,GAAE;AAAC,WAAO,KAAKC,UAAZ;AAAuB;;AAAa,MAATD,SAAS,CAAC7D,CAAD,EAAG;AAAC,SAAK8D,UAAL,GAAgB9D,CAAhB,EAAkB,KAAKmD,QAAL,CAAcY,SAAd,EAAlB,EAA4C,KAAKZ,QAAL,CAAca,GAAd,CAAkB,CAACjD,CAAC,CAACf,CAAD,EAAG,SAAH,EAAc,MAAI;AAAC,WAAKqD,OAAL,GAAarD,CAAC,CAACqD,OAAF,IAAW9C,CAAC,CAACP,CAAC,CAACiE,QAAH,CAAZ,IAA0BjE,CAAC,CAACkE,IAAF,GAAO,CAA9C,EAAgD,KAAKN,aAAL,EAAhD;AAAqE,KAAxF,CAAF,EAA6F5D,CAAC,CAACmE,KAAF,CAAQ,CAAC,MAAD,EAAQ,SAAR,CAAR,EAA4B,MAAI,KAAKC,gBAAL,EAAhC,CAA7F,EAAuJpE,CAAC,CAACmE,KAAF,CAAQ,MAAR,EAAgB,MAAI;AAAC,WAAKZ,uBAAL,IAA+B,KAAKK,aAAL,EAA/B;AAAoD,KAAzE,CAAvJ,CAAlB,CAA5C;AAAmS;;AAAAS,EAAAA,iBAAiB,GAAE;AAAC,WAAM;AAACC,MAAAA,GAAG,EAACrD,CAAC;AAAN,KAAN;AAAgB;;AAAAsD,EAAAA,QAAQ,CAACvE,CAAD,EAAG;AAAC,QAAIC,CAAJ;AAAM,UAAMM,CAAC,GAACP,CAAC,CAACwE,OAAV;AAAkB,QAAG,CAAC,KAAKhB,cAAT,EAAwB,OAAO,KAAK,KAAKY,gBAAL,EAAZ;AAAoC,QAAGpE,CAAC,CAACyE,SAAF,KAAczD,CAAC,CAAC0D,GAAhB,IAAqB,CAAC,KAAKC,UAAL,EAAzB,EAA2C;;AAAO,SAAKC,gBAAL,CAAsB5E,CAAtB;;AAAyB,UAAMS,CAAC,GAAC,KAAKqD,UAAb;AAAwB,QAAGzD,CAAC,CAACI,CAAC,CAACwD,QAAH,CAAJ,EAAiB;AAAO,UAAMtD,CAAC,GAACX,CAAC,CAAC6E,UAAV;AAAA,UAAqBhE,CAAC,GAACJ,CAAC,CAACyD,IAAF,GAAOvD,CAA9B;AAAA,UAAgCI,CAAC,GAAC,IAAEN,CAAC,CAACqE,MAAtC;AAAA,UAA6C7D,CAAC,GAAC8D,IAAI,CAACC,IAAL,CAAUjE,CAAC,GAACF,CAAZ,CAA/C;;AAA8D,SAAKoE,gBAAL,CAAsBC,MAAtB,CAA6BjE,CAA7B,EAA+BA,CAA/B;;AAAkC,UAAK;AAACiD,MAAAA,IAAI,EAAC/C;AAAN,QAASnB,CAAC,CAACmF,KAAhB;AAAA,UAAsB9D,CAAC,GAACV,CAAC,GAACQ,CAAC,CAAC,CAAD,CAA3B;AAAA,UAA+BK,CAAC,GAACb,CAAC,GAACQ,CAAC,CAAC,CAAD,CAApC;AAAA,UAAwCO,CAAC,GAAC,KAAGT,CAA7C;AAAA,UAA+CW,CAAC,GAAC,KAAGX,CAApD;AAAA,UAAsDa,CAAC,GAAC3B,CAAC,CAACQ,CAAC,GAACF,CAAC,CAACwD,QAAF,CAAW3B,CAAd,EAAgBZ,CAAhB,EAAkBL,CAAC,GAACK,CAAF,GAAI,CAAtB,CAAzD;AAAA,UAAkFQ,CAAC,GAAC/B,CAAC,CAACqB,CAAC,GAACb,CAAC,GAACF,CAAC,CAACwD,QAAF,CAAWvB,CAAhB,EAAkBd,CAAlB,EAAoBJ,CAAC,GAACI,CAAF,GAAI,CAAxB,CAArF;;AAAgHrB,IAAAA,CAAC,CAAC6E,kBAAF,CAAqB,CAAC,CAAtB;AAAyB,UAAMhD,CAAC,GAACN,CAAC,GAACJ,CAAV;AAAA,UAAYY,CAAC,GAACJ,CAAC,GAACN,CAAhB;AAAA,UAAkBY,CAAC,GAAC,KAAKyC,gBAAzB;AAA0C1E,IAAAA,CAAC,CAAC8E,WAAF,CAAc7C,CAAd,EAAgB,CAAhB,GAAmBjC,CAAC,CAAC+E,EAAF,CAAKC,cAAL,CAAoB/C,CAAC,CAACgD,UAAF,CAAaC,MAAjC,EAAwC,CAAxC,EAA0CjD,CAAC,CAACgD,UAAF,CAAaE,WAAvD,EAAmEtD,CAAnE,EAAqEE,CAArE,EAAuErB,CAAvE,EAAyEA,CAAzE,EAA2E,CAA3E,CAAnB;AAAiG,UAAMyB,CAAC,GAAC,SAAOzC,CAAC,GAAC,KAAKyD,UAAd,IAA0B,KAAK,CAA/B,GAAiCzD,CAAC,CAAC0F,KAA3C;AAAA,UAAiD/C,CAAC,GAACF,CAAC,GAAC,CAACA,CAAC,CAACjC,CAAF,GAAIiC,CAAC,CAACzC,CAAN,GAAQ,GAAT,EAAayC,CAAC,CAACjC,CAAF,GAAIiC,CAAC,CAACV,CAAN,GAAQ,GAArB,EAAyBU,CAAC,CAACjC,CAAF,GAAIiC,CAAC,CAACN,CAAN,GAAQ,GAAjC,EAAqCM,CAAC,CAACjC,CAAvC,CAAD,GAA2C,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAA/F;AAAA,UAAyGqC,CAAC,GAAC,CAAChB,CAAC,GAACrB,CAAC,CAACmF,MAAF,CAAStD,CAAT,GAAW3B,CAAd,IAAiBU,CAAjB,GAAmB,CAAnB,GAAqB,CAAhI;AAAA,UAAkI2B,CAAC,GAAC,CAACd,CAAC,GAACzB,CAAC,CAACmF,MAAF,CAASlD,CAAT,GAAW/B,CAAd,IAAiBa,CAAjB,GAAmB,CAAnB,GAAqB,CAAzJ;AAAA,UAA2JyB,CAAC,GAACpC,CAAC,GAACQ,CAAF,GAAI,CAAjK;AAAA,UAAmKwE,CAAC,GAAChF,CAAC,GAACW,CAAF,GAAI,CAAzK;AAAA,UAA2KsE,CAAC,GAAC,KAAKC,QAAlL;AAA2LxF,IAAAA,CAAC,CAACyF,OAAF,CAAU,KAAKC,kBAAf,GAAmC1F,CAAC,CAAC8E,WAAF,CAAc,KAAKa,eAAnB,EAAmC,CAAnC,CAAnC,EAAyE3F,CAAC,CAAC8E,WAAF,CAAc,KAAKc,YAAnB,EAAgC,CAAhC,CAAzE,EAA4G5F,CAAC,CAAC6F,UAAF,CAAaN,CAAb,CAA5G,EAA4HA,CAAC,CAACO,aAAF,CAAgB,cAAhB,EAA+BzD,CAA/B,CAA5H,EAA8JkD,CAAC,CAACQ,YAAF,CAAe,mBAAf,EAAmC,CAAnC,CAA9J,EAAoMR,CAAC,CAACQ,YAAF,CAAe,kBAAf,EAAkC,CAAlC,CAApM,EAAyOR,CAAC,CAACQ,YAAF,CAAe,eAAf,EAA+B,CAA/B,CAAzO,EAA2QR,CAAC,CAACS,YAAF,CAAe,WAAf,EAA2BzD,CAA3B,EAA6BE,CAA7B,EAA+BC,CAA/B,EAAiC4C,CAAjC,CAA3Q,EAA+SC,CAAC,CAACQ,YAAF,CAAe,eAAf,EAA+B7F,CAAC,CAAC+F,WAAF,GAAc,CAAd,GAAgB,CAA/C,CAA/S,EAAiWV,CAAC,CAACQ,YAAF,CAAe,kBAAf,EAAkC7F,CAAC,CAACgG,cAAF,GAAiB,CAAjB,GAAmB,CAArD,CAAjW,EAAyZlG,CAAC,CAACmG,qBAAF,CAAwB,CAAC,CAAzB,CAAzZ,EAAqbnG,CAAC,CAACoG,YAAF,CAAe,CAAC,CAAhB,EAAkB,CAAC,CAAnB,EAAqB,CAAC,CAAtB,EAAwB,CAAC,CAAzB,CAArb,EAAidpG,CAAC,CAACqG,UAAF,CAAa5E,CAAC,CAAC6E,cAAf,EAA8B,CAA9B,EAAgC,CAAhC,CAAjd,EAAoftG,CAAC,CAACyF,OAAF,EAApf;AAAggB;;AAAArB,EAAAA,UAAU,GAAE;AAAC,WAAO,KAAKmC,IAAL,IAAW,KAAKC,OAAhB,IAAyB,QAAM,KAAKjD,UAA3C;AAAsD;;AAAAM,EAAAA,gBAAgB,GAAE;AAAC,SAAKZ,cAAL,IAAqB,KAAKA,cAAL,CAAoBC,KAApB,EAArB;AAAiD,UAAMxD,CAAC,GAACM,CAAC,CAAC,KAAKuD,UAAN,CAAD,GAAmB,KAAKA,UAAL,CAAgBkD,OAAnC,GAA2C,IAAnD;AAAA,UAAwD7G,CAAC,GAACI,CAAC,CAAC,KAAKuD,UAAN,CAAD,GAAmB,KAAKA,UAAL,CAAgBmD,UAAnC,GAA8C,IAAxG;AAA6G,SAAKzD,cAAL,GAAoB7C,CAAC,CAAE,MAAMF,CAAN,IAAS;AAAC,YAAME,CAAC,GAACN,CAAC,CAACJ,CAAD,CAAD,IAAMI,CAAC,CAACF,CAAD,CAAP,GAAWyB,CAAC,CAACnB,CAAD,CAAZ,GAAgB,IAAxB;AAAA,YAA6BI,CAAC,GAACN,CAAC,CAACN,CAAD,CAAD,GAAKD,CAAC,CAACC,CAAD,EAAG;AAACiH,QAAAA,YAAY,EAAC,OAAd;AAAsBC,QAAAA,MAAM,EAAC1G;AAA7B,OAAH,CAAD,CAAqC2G,IAArC,CAA2CpH,CAAC,IAAEA,CAAC,CAACqH,IAAhD,CAAL,GAA4D1G,CAAC,CAACyG,IAAF,CAAQpH,CAAC,IAAEA,CAAC,CAAC8G,IAAb,CAA3F;AAAA,YAA+G/F,CAAC,GAACR,CAAC,CAACJ,CAAD,CAAD,GAAKH,CAAC,CAACG,CAAD,EAAG;AAAC+G,QAAAA,YAAY,EAAC,OAAd;AAAsBC,QAAAA,MAAM,EAAC1G;AAA7B,OAAH,CAAD,CAAqC2G,IAArC,CAA2CpH,CAAC,IAAEA,CAAC,CAACqH,IAAhD,CAAL,GAA4D1G,CAAC,CAACyG,IAAF,CAAQpH,CAAC,IAAEA,CAAC,CAAC+G,OAAb,CAA7K;AAAA,YAAoM,CAAC9F,CAAD,EAAGE,CAAH,IAAM,MAAMmG,OAAO,CAACC,GAAR,CAAY,CAAC1G,CAAD,EAAGE,CAAH,CAAZ,CAAhN;AAAmO,WAAK+F,IAAL,GAAU7F,CAAV,EAAY,KAAK8F,OAAL,GAAa5F,CAAzB,EAA2B,KAAKoC,uBAAL,EAA3B,EAA0D,KAAKK,aAAL,EAA1D;AAA+E,KAA9T,CAArB;AAAsV;;AAAAL,EAAAA,uBAAuB,GAAE;AAAC,SAAK0B,gBAAL,GAAsBxE,CAAC,CAAC,KAAKwE,gBAAN,CAAvB,EAA+C,KAAKiB,eAAL,GAAqBzF,CAAC,CAAC,KAAKyF,eAAN,CAArE,EAA4F,KAAKC,YAAL,GAAkB1F,CAAC,CAAC,KAAK0F,YAAN,CAA/G,EAAmI,KAAKF,kBAAL,GAAwBxF,CAAC,CAAC,KAAKwF,kBAAN,CAA5J,EAAsL,KAAKF,QAAL,GAActF,CAAC,CAAC,KAAKsF,QAAN,CAArM;AAAqN;;AAAAnB,EAAAA,gBAAgB,CAAC5E,CAAD,EAAG;AAAC,QAAGA,CAAC,CAAC6E,UAAF,KAAe,KAAKzB,mBAApB,IAAyC,KAAKG,uBAAL,EAAzC,EAAwE,KAAK0B,gBAAhF,EAAiG;AAAO,UAAMhF,CAAC,GAACD,CAAC,CAACwE,OAAV;AAAkB,SAAKpB,mBAAL,GAAyBpD,CAAC,CAAC6E,UAA3B;AAAsC,UAAM1E,CAAC,GAAC4E,IAAI,CAACC,IAAL,CAAU,KAAKlB,UAAL,CAAgBI,IAAhB,GAAqBlE,CAAC,CAAC6E,UAAjC,CAAR;AAAqD,SAAKkB,QAAL,GAAcvE,CAAC,CAACvB,CAAD,CAAf;AAAmB,UAAMI,CAAC,GAAC,IAAImH,WAAJ,CAAgB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CAAhB,CAAR;AAAA,UAA2CjH,CAAC,GAACmB,CAAC,CAAC+F,UAA/C;AAA0D,SAAKxB,kBAAL,GAAwB,IAAIjD,CAAJ,CAAM/C,CAAN,EAAQM,CAAR,EAAUc,CAAV,EAAY;AAACqG,MAAAA,QAAQ,EAAC5F,CAAC,CAAC6F,YAAF,CAAe1H,CAAf,EAAiBiC,CAAC,CAAC0F,WAAnB,EAA+BvH,CAA/B;AAAV,KAAZ,CAAxB,EAAkF,KAAK0G,OAAL,CAAac,KAAb,GAAmB1H,CAArG,EAAuG,KAAK4G,OAAL,CAAae,MAAb,GAAoB3H,CAA3H,EAA6H,KAAK+F,eAAL,GAAqB,IAAIpD,CAAJ,CAAM7C,CAAN,EAAQ;AAACwF,MAAAA,MAAM,EAACrD,CAAC,CAAC2F,UAAV;AAAqBrC,MAAAA,WAAW,EAACpD,CAAC,CAAC0F,IAAnC;AAAwCC,MAAAA,cAAc,EAAC3F,CAAC,CAAC0F,IAAzD;AAA8DE,MAAAA,QAAQ,EAAC1F,CAAC,CAAC2F,aAAzE;AAAuFC,MAAAA,QAAQ,EAAC1F,CAAC,CAAC2F,aAAlG;AAAgHC,MAAAA,YAAY,EAAC1F,CAAC,CAAC2F,OAA/H;AAAuIC,MAAAA,OAAO,EAAC,CAAC,CAAhJ;AAAkJC,MAAAA,gBAAgB,EAAC,CAAC5H,CAAC,CAAC,KAAKkG,OAAL,CAAa2B,GAAd,CAAF,IAAsB,CAAC1I,CAAC,CAACwE,OAAF,CAAUmE,UAAV,CAAqBC;AAA/M,KAAR,EAAoP,KAAK7B,OAAzP,CAAlJ,EAAoZ,KAAKD,IAAL,CAAUe,KAAV,GAAgB1H,CAApa,EAAsa,KAAK2G,IAAL,CAAUgB,MAAV,GAAiB3H,CAAvb,EAAyb,KAAKgG,YAAL,GAAkB,IAAIrD,CAAJ,CAAM7C,CAAN,EAAQ;AAACwF,MAAAA,MAAM,EAACrD,CAAC,CAAC2F,UAAV;AAAqBrC,MAAAA,WAAW,EAACpD,CAAC,CAACuG,KAAnC;AAAyCZ,MAAAA,cAAc,EAAC3F,CAAC,CAACuG,KAA1D;AAAgEX,MAAAA,QAAQ,EAAC1F,CAAC,CAAC2F,aAA3E;AAAyFC,MAAAA,QAAQ,EAAC1F,CAAC,CAAC2F,aAApG;AAAkHC,MAAAA,YAAY,EAAC1F,CAAC,CAAC2F,OAAjI;AAAyIC,MAAAA,OAAO,EAAC,CAAC;AAAlJ,KAAR,EAA6J,KAAK1B,IAAlK,CAA3c;AAAmnB,UAAMrG,CAAC,GAAC,IAAE,KAAKqD,UAAL,CAAgBgB,MAA1B;AAAiC,SAAKG,gBAAL,GAAsB,IAAInC,CAAJ,CAAM7C,CAAN,EAAQ;AAACwF,MAAAA,MAAM,EAACrD,CAAC,CAAC2F,UAAV;AAAqBrC,MAAAA,WAAW,EAACpD,CAAC,CAAC0F,IAAnC;AAAwCC,MAAAA,cAAc,EAAC3F,CAAC,CAAC0F,IAAzD;AAA8DE,MAAAA,QAAQ,EAAC1F,CAAC,CAAC2F,aAAzE;AAAuFC,MAAAA,QAAQ,EAAC1F,CAAC,CAAC2F,aAAlG;AAAgHC,MAAAA,YAAY,EAAC1F,CAAC,CAACkG,MAA/H;AAAsIN,MAAAA,OAAO,EAAC,CAAC,CAA/I;AAAiJX,MAAAA,KAAK,EAAC9C,IAAI,CAACC,IAAL,CAAUvE,CAAC,GAACN,CAAZ,CAAvJ;AAAsK2H,MAAAA,MAAM,EAAC/C,IAAI,CAACC,IAAL,CAAUvE,CAAC,GAACN,CAAZ;AAA7K,KAAR,CAAtB;AAA4N;;AAAj8H;;AAAk8H,SAAO8C,CAAC,IAAI8F,OAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../../request.js\";import r from\"../../../core/Handles.js\";import{clamp as t}from\"../../../core/mathUtils.js\";import{isNone as s,isSome as i,disposeMaybe as a}from\"../../../core/maybe.js\";import{createTask as o}from\"../../../core/promiseUtils.js\";import{isSVG as n}from\"../../../core/urlUtils.js\";import{init as l}from\"../../../core/watchUtils.js\";import{c as h}from\"../../../chunks/mat3f32.js\";import{DisplayObject as m}from\"../engine/DisplayObject.js\";import{Pos2us as u}from\"../engine/webgl/DefaultVertexAttributeLayouts.js\";import{WGLDrawPhase as c}from\"../engine/webgl/enums.js\";import{createMagnifierProgram as d,magnifierProgramTemplate as _}from\"../engine/webgl/shaders/MagnifierPrograms.js\";import{loadMagnifierResources as p}from\"../../magnifier/resources.js\";import{BufferObject as f}from\"../../webgl/BufferObject.js\";import{PrimitiveType as g,Usage as T,TextureType as b,PixelFormat as x,PixelType as R,TextureWrapMode as y,TextureSamplingMode as k}from\"../../webgl/enums.js\";import{Texture as v}from\"../../webgl/Texture.js\";import{VertexArrayObject as A}from\"../../webgl/VertexArrayObject.js\";class E extends m{constructor(){super(),this._handles=new r,this._resourcePixelRatio=1,this.visible=!1}destroy(){this._handles.destroy(),this._handles=null,this._disposeRenderResources(),this._resourcesTask&&(this._resourcesTask.abort(),this._resourcesTask=null)}get background(){return this._background}set background(e){this._background=e,this.requestRender()}get magnifier(){return this._magnifier}set magnifier(e){this._magnifier=e,this._handles.removeAll(),this._handles.add([l(e,\"version\",(()=>{this.visible=e.visible&&i(e.position)&&e.size>0,this.requestRender()})),e.watch([\"mask\",\"overlay\"],(()=>this._reloadResources())),e.watch(\"size\",(()=>{this._disposeRenderResources(),this.requestRender()}))])}_createTransforms(){return{dvs:h()}}doRender(e){var r;const i=e.context;if(!this._resourcesTask)return void this._reloadResources();if(e.drawPhase!==c.MAP||!this._canRender())return;this._updateResources(e);const a=this._magnifier;if(s(a.position))return;const o=e.pixelRatio,n=a.size*o,l=1/a.factor,h=Math.ceil(l*n);this._readbackTexture.resize(h,h);const{size:m}=e.state,u=o*m[0],d=o*m[1],_=.5*h,p=.5*h,f=t(o*a.position.x,_,u-_-1),T=t(d-o*a.position.y,p,d-p-1);i.setBlendingEnabled(!0);const b=f-_,x=T-p,R=this._readbackTexture;i.bindTexture(R,0),i.gl.copyTexImage2D(R.descriptor.target,0,R.descriptor.pixelFormat,b,x,h,h,0);const y=null==(r=this.background)?void 0:r.color,k=y?[y.a*y.r/255,y.a*y.g/255,y.a*y.b/255,y.a]:[1,1,1,1],v=(f+a.offset.x*o)/u*2-1,A=(T-a.offset.y*o)/d*2-1,E=n/u*2,w=n/d*2,j=this._program;i.bindVAO(this._vertexArrayObject),i.bindTexture(this._overlayTexture,6),i.bindTexture(this._maskTexture,7),i.useProgram(j),j.setUniform4fv(\"u_background\",k),j.setUniform1i(\"u_readbackTexture\",0),j.setUniform1i(\"u_overlayTexture\",6),j.setUniform1i(\"u_maskTexture\",7),j.setUniform4f(\"u_drawPos\",v,A,E,w),j.setUniform1i(\"u_maskEnabled\",a.maskEnabled?1:0),j.setUniform1i(\"u_overlayEnabled\",a.overlayEnabled?1:0),i.setStencilTestEnabled(!1),i.setColorMask(!0,!0,!0,!0),i.drawArrays(g.TRIANGLE_STRIP,0,4),i.bindVAO()}_canRender(){return this.mask&&this.overlay&&null!=this._magnifier}_reloadResources(){this._resourcesTask&&this._resourcesTask.abort();const r=i(this._magnifier)?this._magnifier.maskUrl:null,t=i(this._magnifier)?this._magnifier.overlayUrl:null;this._resourcesTask=o((async a=>{const o=s(r)||s(t)?p(a):null,n=i(r)?e(r,{responseType:\"image\",signal:a}).then((e=>e.data)):o.then((e=>e.mask)),l=i(t)?e(t,{responseType:\"image\",signal:a}).then((e=>e.data)):o.then((e=>e.overlay)),[h,m]=await Promise.all([n,l]);this.mask=h,this.overlay=m,this._disposeRenderResources(),this.requestRender()}))}_disposeRenderResources(){this._readbackTexture=a(this._readbackTexture),this._overlayTexture=a(this._overlayTexture),this._maskTexture=a(this._maskTexture),this._vertexArrayObject=a(this._vertexArrayObject),this._program=a(this._program)}_updateResources(e){if(e.pixelRatio!==this._resourcePixelRatio&&this._disposeRenderResources(),this._readbackTexture)return;const r=e.context;this._resourcePixelRatio=e.pixelRatio;const t=Math.ceil(this._magnifier.size*e.pixelRatio);this._program=d(r);const s=new Uint16Array([0,1,0,0,1,1,1,0]),i=_.attributes;this._vertexArrayObject=new A(r,i,u,{geometry:f.createVertex(r,T.STATIC_DRAW,s)}),this.overlay.width=t,this.overlay.height=t,this._overlayTexture=new v(r,{target:b.TEXTURE_2D,pixelFormat:x.RGBA,internalFormat:x.RGBA,dataType:R.UNSIGNED_BYTE,wrapMode:y.CLAMP_TO_EDGE,samplingMode:k.NEAREST,flipped:!0,preMultiplyAlpha:!n(this.overlay.src)||!e.context.driverTest.svgAlwaysPremultipliesAlpha},this.overlay),this.mask.width=t,this.mask.height=t,this._maskTexture=new v(r,{target:b.TEXTURE_2D,pixelFormat:x.ALPHA,internalFormat:x.ALPHA,dataType:R.UNSIGNED_BYTE,wrapMode:y.CLAMP_TO_EDGE,samplingMode:k.NEAREST,flipped:!0},this.mask);const a=1/this._magnifier.factor;this._readbackTexture=new v(r,{target:b.TEXTURE_2D,pixelFormat:x.RGBA,internalFormat:x.RGBA,dataType:R.UNSIGNED_BYTE,wrapMode:y.CLAMP_TO_EDGE,samplingMode:k.LINEAR,flipped:!1,width:Math.ceil(a*t),height:Math.ceil(a*t)})}}export{E as default};\n"]},"metadata":{},"sourceType":"module"}