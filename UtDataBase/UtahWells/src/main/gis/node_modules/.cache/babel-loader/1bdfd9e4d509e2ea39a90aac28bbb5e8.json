{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { ShaderOutput as o } from \"../ShaderOutputOptions.js\";\nimport { Slice as r } from \"../Slice.glsl.js\";\nimport { Transform as e } from \"../Transform.glsl.js\";\nimport { NormalAttribute as t, NormalAttributeType as i } from \"../attributes/NormalAttribute.glsl.js\";\nimport { TextureCoordinateAttribute as a } from \"../attributes/TextureCoordinateAttribute.glsl.js\";\nimport { VertexNormal as l } from \"../attributes/VertexNormal.glsl.js\";\nimport { OutputDepth as s } from \"../output/OutputDepth.glsl.js\";\nimport { OutputHighlight as d } from \"../output/OutputHighlight.glsl.js\";\nimport { VisualVariables as n } from \"../shading/VisualVariables.glsl.js\";\nimport { DiscardOrAdjustAlpha as u } from \"../util/AlphaDiscard.glsl.js\";\nimport { glsl as m } from \"../../shaderModules/interfaces.js\";\n\nfunction p(p, v) {\n  const c = p.vertex.code,\n        f = p.fragment.code,\n        g = v.hasModelTransformation;\n  v.output !== o.Depth && v.output !== o.Shadow || (p.include(e, {\n    linearDepth: !0,\n    hasModelTransformation: g\n  }), p.include(a, v), p.include(n, v), p.include(s, v), p.include(r, v), p.vertex.uniforms.add(\"nearFar\", \"vec2\"), p.varyings.add(\"depth\", \"float\"), v.hasColorTexture && p.fragment.uniforms.add(\"tex\", \"sampler2D\"), c.add(m`\n      void main(void) {\n        vpos = calculateVPos();\n        vpos = subtractOrigin(vpos);\n        vpos = addVerticalOffset(vpos, localOrigin);\n        gl_Position = transformPositionWithDepth(proj, view, ${g ? \"model,\" : \"\"} vpos, nearFar, depth);\n        forwardTextureCoordinates();\n      }\n    `), p.include(u, v), f.add(m`\n      void main(void) {\n        discardBySlice(vpos);\n        ${v.hasColorTexture ? m`\n        vec4 texColor = texture2D(tex, vuv0);\n        discardOrAdjustAlpha(texColor);` : \"\"}\n        outputDepth(depth);\n      }\n    `)), v.output === o.Normal && (p.include(e, {\n    linearDepth: !1,\n    hasModelTransformation: g\n  }), p.include(t, v), p.include(l, v), p.include(a, v), p.include(n, v), v.hasColorTexture && p.fragment.uniforms.add(\"tex\", \"sampler2D\"), p.vertex.uniforms.add(\"viewNormal\", \"mat4\"), p.varyings.add(\"vPositionView\", \"vec3\"), c.add(m`\n      void main(void) {\n        vpos = calculateVPos();\n        vpos = subtractOrigin(vpos);\n        ${v.normalType === i.Attribute ? m`\n        vNormalWorld = dpNormalView(vvLocalNormal(normalModel()));` : \"\"}\n        vpos = addVerticalOffset(vpos, localOrigin);\n        gl_Position = transformPosition(proj, view, ${g ? \"model,\" : \"\"} vpos);\n        forwardTextureCoordinates();\n      }\n    `), p.include(r, v), p.include(u, v), f.add(m`\n      void main() {\n        discardBySlice(vpos);\n        ${v.hasColorTexture ? m`\n        vec4 texColor = texture2D(tex, vuv0);\n        discardOrAdjustAlpha(texColor);` : \"\"}\n\n        ${v.normalType === i.ScreenDerivative ? m`\n            vec3 normal = screenDerivativeNormal(vPositionView);` : m`\n            vec3 normal = normalize(vNormalWorld);\n            if (gl_FrontFacing == false) normal = -normal;`}\n        gl_FragColor = vec4(vec3(0.5) + 0.5 * normal, 1.0);\n      }\n    `)), v.output === o.Highlight && (p.include(e, {\n    linearDepth: !1,\n    hasModelTransformation: g\n  }), p.include(a, v), p.include(n, v), v.hasColorTexture && p.fragment.uniforms.add(\"tex\", \"sampler2D\"), c.add(m`\n      void main(void) {\n        vpos = calculateVPos();\n        vpos = subtractOrigin(vpos);\n        vpos = addVerticalOffset(vpos, localOrigin);\n        gl_Position = transformPosition(proj, view, ${g ? \"model,\" : \"\"} vpos);\n        forwardTextureCoordinates();\n      }\n    `), p.include(r, v), p.include(u, v), p.include(d), f.add(m`\n      void main() {\n        discardBySlice(vpos);\n        ${v.hasColorTexture ? m`\n        vec4 texColor = texture2D(tex, vuv0);\n        discardOrAdjustAlpha(texColor);` : \"\"}\n        outputHighlight();\n      }\n    `));\n}\n\nexport { p as DefaultMaterialAuxiliaryPasses };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js"],"names":["ShaderOutput","o","Slice","r","Transform","e","NormalAttribute","t","NormalAttributeType","i","TextureCoordinateAttribute","a","VertexNormal","l","OutputDepth","s","OutputHighlight","d","VisualVariables","n","DiscardOrAdjustAlpha","u","glsl","m","p","v","c","vertex","code","f","fragment","g","hasModelTransformation","output","Depth","Shadow","include","linearDepth","uniforms","add","varyings","hasColorTexture","Normal","normalType","Attribute","ScreenDerivative","Highlight","DefaultMaterialAuxiliaryPasses"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{ShaderOutput as o}from\"../ShaderOutputOptions.js\";import{Slice as r}from\"../Slice.glsl.js\";import{Transform as e}from\"../Transform.glsl.js\";import{NormalAttribute as t,NormalAttributeType as i}from\"../attributes/NormalAttribute.glsl.js\";import{TextureCoordinateAttribute as a}from\"../attributes/TextureCoordinateAttribute.glsl.js\";import{VertexNormal as l}from\"../attributes/VertexNormal.glsl.js\";import{OutputDepth as s}from\"../output/OutputDepth.glsl.js\";import{OutputHighlight as d}from\"../output/OutputHighlight.glsl.js\";import{VisualVariables as n}from\"../shading/VisualVariables.glsl.js\";import{DiscardOrAdjustAlpha as u}from\"../util/AlphaDiscard.glsl.js\";import{glsl as m}from\"../../shaderModules/interfaces.js\";function p(p,v){const c=p.vertex.code,f=p.fragment.code,g=v.hasModelTransformation;v.output!==o.Depth&&v.output!==o.Shadow||(p.include(e,{linearDepth:!0,hasModelTransformation:g}),p.include(a,v),p.include(n,v),p.include(s,v),p.include(r,v),p.vertex.uniforms.add(\"nearFar\",\"vec2\"),p.varyings.add(\"depth\",\"float\"),v.hasColorTexture&&p.fragment.uniforms.add(\"tex\",\"sampler2D\"),c.add(m`\n      void main(void) {\n        vpos = calculateVPos();\n        vpos = subtractOrigin(vpos);\n        vpos = addVerticalOffset(vpos, localOrigin);\n        gl_Position = transformPositionWithDepth(proj, view, ${g?\"model,\":\"\"} vpos, nearFar, depth);\n        forwardTextureCoordinates();\n      }\n    `),p.include(u,v),f.add(m`\n      void main(void) {\n        discardBySlice(vpos);\n        ${v.hasColorTexture?m`\n        vec4 texColor = texture2D(tex, vuv0);\n        discardOrAdjustAlpha(texColor);`:\"\"}\n        outputDepth(depth);\n      }\n    `)),v.output===o.Normal&&(p.include(e,{linearDepth:!1,hasModelTransformation:g}),p.include(t,v),p.include(l,v),p.include(a,v),p.include(n,v),v.hasColorTexture&&p.fragment.uniforms.add(\"tex\",\"sampler2D\"),p.vertex.uniforms.add(\"viewNormal\",\"mat4\"),p.varyings.add(\"vPositionView\",\"vec3\"),c.add(m`\n      void main(void) {\n        vpos = calculateVPos();\n        vpos = subtractOrigin(vpos);\n        ${v.normalType===i.Attribute?m`\n        vNormalWorld = dpNormalView(vvLocalNormal(normalModel()));`:\"\"}\n        vpos = addVerticalOffset(vpos, localOrigin);\n        gl_Position = transformPosition(proj, view, ${g?\"model,\":\"\"} vpos);\n        forwardTextureCoordinates();\n      }\n    `),p.include(r,v),p.include(u,v),f.add(m`\n      void main() {\n        discardBySlice(vpos);\n        ${v.hasColorTexture?m`\n        vec4 texColor = texture2D(tex, vuv0);\n        discardOrAdjustAlpha(texColor);`:\"\"}\n\n        ${v.normalType===i.ScreenDerivative?m`\n            vec3 normal = screenDerivativeNormal(vPositionView);`:m`\n            vec3 normal = normalize(vNormalWorld);\n            if (gl_FrontFacing == false) normal = -normal;`}\n        gl_FragColor = vec4(vec3(0.5) + 0.5 * normal, 1.0);\n      }\n    `)),v.output===o.Highlight&&(p.include(e,{linearDepth:!1,hasModelTransformation:g}),p.include(a,v),p.include(n,v),v.hasColorTexture&&p.fragment.uniforms.add(\"tex\",\"sampler2D\"),c.add(m`\n      void main(void) {\n        vpos = calculateVPos();\n        vpos = subtractOrigin(vpos);\n        vpos = addVerticalOffset(vpos, localOrigin);\n        gl_Position = transformPosition(proj, view, ${g?\"model,\":\"\"} vpos);\n        forwardTextureCoordinates();\n      }\n    `),p.include(r,v),p.include(u,v),p.include(d),f.add(m`\n      void main() {\n        discardBySlice(vpos);\n        ${v.hasColorTexture?m`\n        vec4 texColor = texture2D(tex, vuv0);\n        discardOrAdjustAlpha(texColor);`:\"\"}\n        outputHighlight();\n      }\n    `))}export{p as DefaultMaterialAuxiliaryPasses};\n"]},"metadata":{},"sourceType":"module"}