{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport \"../../geometry.js\";\nimport r from \"../../request.js\";\nimport { parseUrl as t, asValidOptions as e } from \"../utils.js\";\nimport { trimExtendToRESTParameters as o } from \"../operations/trimExtend.js\";\nimport m from \"../support/TrimExtendParameters.js\";\nimport s from \"../../geometry/Polyline.js\";\n\nasync function i(i, p, n) {\n  p = m.from(p);\n  const a = o(p),\n        f = t(i),\n        j = { ...f.query,\n    f: \"json\",\n    ...a\n  },\n        u = p.sr,\n        y = e(j, n);\n  return r(f.path + \"/trimExtend\", y).then(_ref => {\n    let {\n      data: r\n    } = _ref;\n    return (r.geometries || []).map(_ref2 => {\n      let {\n        paths: r\n      } = _ref2;\n      return new s({\n        spatialReference: u,\n        paths: r\n      });\n    });\n  });\n}\n\nexport { i as trimExtend };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/rest/geometryService/trimExtend.js"],"names":["r","parseUrl","t","asValidOptions","e","trimExtendToRESTParameters","o","m","s","i","p","n","from","a","f","j","query","u","sr","y","path","then","data","geometries","map","paths","spatialReference","trimExtend"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAM,mBAAN;AAA0B,OAAOA,CAAP,MAAa,kBAAb;AAAgC,SAAOC,QAAQ,IAAIC,CAAnB,EAAqBC,cAAc,IAAIC,CAAvC,QAA6C,aAA7C;AAA2D,SAAOC,0BAA0B,IAAIC,CAArC,QAA2C,6BAA3C;AAAyE,OAAOC,CAAP,MAAa,oCAAb;AAAkD,OAAOC,CAAP,MAAa,4BAAb;;AAA0C,eAAeC,CAAf,CAAiBA,CAAjB,EAAmBC,CAAnB,EAAqBC,CAArB,EAAuB;AAACD,EAAAA,CAAC,GAACH,CAAC,CAACK,IAAF,CAAOF,CAAP,CAAF;AAAY,QAAMG,CAAC,GAACP,CAAC,CAACI,CAAD,CAAT;AAAA,QAAaI,CAAC,GAACZ,CAAC,CAACO,CAAD,CAAhB;AAAA,QAAoBM,CAAC,GAAC,EAAC,GAAGD,CAAC,CAACE,KAAN;AAAYF,IAAAA,CAAC,EAAC,MAAd;AAAqB,OAAGD;AAAxB,GAAtB;AAAA,QAAiDI,CAAC,GAACP,CAAC,CAACQ,EAArD;AAAA,QAAwDC,CAAC,GAACf,CAAC,CAACW,CAAD,EAAGJ,CAAH,CAA3D;AAAiE,SAAOX,CAAC,CAACc,CAAC,CAACM,IAAF,GAAO,aAAR,EAAsBD,CAAtB,CAAD,CAA0BE,IAA1B,CAAgC;AAAA,QAAC;AAACC,MAAAA,IAAI,EAACtB;AAAN,KAAD;AAAA,WAAY,CAACA,CAAC,CAACuB,UAAF,IAAc,EAAf,EAAmBC,GAAnB,CAAwB;AAAA,UAAC;AAACC,QAAAA,KAAK,EAACzB;AAAP,OAAD;AAAA,aAAa,IAAIQ,CAAJ,CAAM;AAACkB,QAAAA,gBAAgB,EAACT,CAAlB;AAAoBQ,QAAAA,KAAK,EAACzB;AAA1B,OAAN,CAAb;AAAA,KAAxB,CAAZ;AAAA,GAAhC,CAAP;AAAgI;;AAAA,SAAOS,CAAC,IAAIkB,UAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import r from\"../../request.js\";import{parseUrl as t,asValidOptions as e}from\"../utils.js\";import{trimExtendToRESTParameters as o}from\"../operations/trimExtend.js\";import m from\"../support/TrimExtendParameters.js\";import s from\"../../geometry/Polyline.js\";async function i(i,p,n){p=m.from(p);const a=o(p),f=t(i),j={...f.query,f:\"json\",...a},u=p.sr,y=e(j,n);return r(f.path+\"/trimExtend\",y).then((({data:r})=>(r.geometries||[]).map((({paths:r})=>new s({spatialReference:u,paths:r})))))}export{i as trimExtend};\n"]},"metadata":{},"sourceType":"module"}