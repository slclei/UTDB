{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../../../request.js\";\nimport { mapParameters as t } from \"../../operations/urlUtils.js\";\n\nfunction o(e, t) {\n  const o = e.toJSON();\n  return o.objectIds && (o.objectIds = o.objectIds.join(\",\")), o.orderByFields && (o.orderByFields = o.orderByFields.join(\",\")), !o.outFields || null != t && t.returnCountOnly ? delete o.outFields : -1 !== o.outFields.indexOf(\"*\") ? o.outFields = \"*\" : o.outFields = o.outFields.join(\",\"), o.outSpatialReference && (o.outSR = o.outSR.wkid || JSON.stringify(o.outSR.toJSON()), delete o.outSpatialReference), o.dynamicDataSource && (o.layer = JSON.stringify({\n    source: o.dynamicDataSource\n  }), delete o.dynamicDataSource), o;\n}\n\nasync function r(e, t, o) {\n  const r = await a(e, t, o),\n        n = r.data,\n        s = n.geometryType,\n        d = n.spatialReference,\n        i = {};\n\n  for (const a of n.relatedRecordGroups) {\n    const e = {\n      fields: void 0,\n      objectIdFieldName: void 0,\n      geometryType: s,\n      spatialReference: d,\n      hasZ: !!n.hasZ,\n      hasM: !!n.hasM,\n      features: a.relatedRecords\n    };\n    if (null != a.objectId) i[a.objectId] = e;else for (const t in a) a.hasOwnProperty(t) && \"relatedRecords\" !== t && (i[a[t]] = e);\n  }\n\n  return { ...r,\n    data: i\n  };\n}\n\nasync function n(e, t, o) {\n  const r = await a(e, t, o, {\n    returnCountOnly: !0\n  }),\n        n = r.data,\n        s = {};\n\n  for (const a of n.relatedRecordGroups) null != a.objectId && (s[a.objectId] = a.count);\n\n  return { ...r,\n    data: s\n  };\n}\n\nasync function a(r, n) {\n  let a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let s = arguments.length > 3 ? arguments[3] : undefined;\n  const d = t({ ...r.query,\n    f: \"json\",\n    ...s,\n    ...o(n, s)\n  });\n  return e(r.path + \"/queryRelatedRecords\", { ...a,\n    query: { ...a.query,\n      ...d\n    }\n  });\n}\n\nexport { r as executeRelationshipQuery, n as executeRelationshipQueryForCount, o as toQueryStringParameters };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/rest/query/operations/queryRelatedRecords.js"],"names":["e","mapParameters","t","o","toJSON","objectIds","join","orderByFields","outFields","returnCountOnly","indexOf","outSpatialReference","outSR","wkid","JSON","stringify","dynamicDataSource","layer","source","r","a","n","data","s","geometryType","d","spatialReference","i","relatedRecordGroups","fields","objectIdFieldName","hasZ","hasM","features","relatedRecords","objectId","hasOwnProperty","count","query","f","path","executeRelationshipQuery","executeRelationshipQueryForCount","toQueryStringParameters"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../../request.js\";import{mapParameters as t}from\"../../operations/urlUtils.js\";function o(e,t){const o=e.toJSON();return o.objectIds&&(o.objectIds=o.objectIds.join(\",\")),o.orderByFields&&(o.orderByFields=o.orderByFields.join(\",\")),!o.outFields||null!=t&&t.returnCountOnly?delete o.outFields:-1!==o.outFields.indexOf(\"*\")?o.outFields=\"*\":o.outFields=o.outFields.join(\",\"),o.outSpatialReference&&(o.outSR=o.outSR.wkid||JSON.stringify(o.outSR.toJSON()),delete o.outSpatialReference),o.dynamicDataSource&&(o.layer=JSON.stringify({source:o.dynamicDataSource}),delete o.dynamicDataSource),o}async function r(e,t,o){const r=await a(e,t,o),n=r.data,s=n.geometryType,d=n.spatialReference,i={};for(const a of n.relatedRecordGroups){const e={fields:void 0,objectIdFieldName:void 0,geometryType:s,spatialReference:d,hasZ:!!n.hasZ,hasM:!!n.hasM,features:a.relatedRecords};if(null!=a.objectId)i[a.objectId]=e;else for(const t in a)a.hasOwnProperty(t)&&\"relatedRecords\"!==t&&(i[a[t]]=e)}return{...r,data:i}}async function n(e,t,o){const r=await a(e,t,o,{returnCountOnly:!0}),n=r.data,s={};for(const a of n.relatedRecordGroups)null!=a.objectId&&(s[a.objectId]=a.count);return{...r,data:s}}async function a(r,n,a={},s){const d=t({...r.query,f:\"json\",...s,...o(n,s)});return e(r.path+\"/queryRelatedRecords\",{...a,query:{...a.query,...d}})}export{r as executeRelationshipQuery,n as executeRelationshipQueryForCount,o as toQueryStringParameters};\n"]},"metadata":{},"sourceType":"module"}