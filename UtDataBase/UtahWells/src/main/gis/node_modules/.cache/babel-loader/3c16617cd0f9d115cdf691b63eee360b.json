{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { isSome as t, isNone as e } from \"../../../../../core/maybe.js\";\nimport { DISPLAY_RECORD_INT_PER_ELEMENT as s } from \"../definitions.js\";\nconst r = 2147483647;\n\nclass i {\n  constructor(t) {\n    this._head = t, this._cursor = t;\n  }\n\n  static from(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : t.byteLength / _.BYTES_PER_RECORD - e;\n    const r = new _(new Int32Array(t, e * _.BYTES_PER_RECORD, s * _.ELEMENTS_PER_RECORD));\n    return new i(r);\n  }\n\n  size() {\n    let t = this._cursor,\n        e = 0;\n\n    for (; t;) e += t.size(), t = t._link;\n\n    return e;\n  }\n\n  get id() {\n    return this._cursor.id;\n  }\n\n  set id(t) {\n    this._cursor.id = t;\n  }\n\n  get materialKey() {\n    return this._cursor.materialKey;\n  }\n\n  set materialKey(t) {\n    this._cursor.materialKey = t;\n  }\n\n  get insertAfter() {\n    return this._cursor.insertAfter;\n  }\n\n  get indexFrom() {\n    return this._cursor.indexFrom;\n  }\n\n  set indexFrom(t) {\n    this._cursor.indexFrom = t;\n  }\n\n  get indexCount() {\n    return this._cursor.indexCount;\n  }\n\n  set indexCount(t) {\n    this._cursor.indexCount = t;\n  }\n\n  get vertexFrom() {\n    return this._cursor.vertexFrom;\n  }\n\n  set vertexFrom(t) {\n    this._cursor.vertexFrom = t;\n  }\n\n  get vertexCount() {\n    return this._cursor.vertexCount;\n  }\n\n  set vertexCount(t) {\n    this._cursor.vertexCount = t;\n  }\n\n  get sortKey() {\n    return this._cursor.sortKey;\n  }\n\n  set sortKey(t) {\n    this._cursor.sortKey = t;\n  }\n\n  get index() {\n    return this._cursor._indexStart + this._cursor._index;\n  }\n\n  seekIndex(t) {\n    let e = t;\n\n    for (this._cursor = this._head; this._cursor;) {\n      const t = this._cursor.size();\n\n      if (e < t) return this._cursor._index = e, !0;\n      e -= t, this._cursor = this._cursor._link;\n    }\n\n    return !1;\n  }\n\n  forEach(t) {\n    const e = this.getCursor();\n\n    for (; e.next();) t(e);\n  }\n\n  link(t) {\n    if (!this._head) return void (this._head = t._head);\n    let e = this._head;\n\n    for (; e._link;) e = e._link;\n\n    e._link = t._head, e._link._indexStart = e._indexStart + e.size();\n  }\n\n  getCursor() {\n    return this.copy();\n  }\n\n  lookup(t) {\n    for (this._cursor = this._head; this._cursor && !this._cursor.lookup(t);) {\n      if (!this._cursor._link) return !1;\n      this._cursor = this._cursor._link;\n    }\n\n    return !!this._cursor;\n  }\n\n  copy() {\n    var t;\n    const e = new i(null == (t = this._head) ? void 0 : t.copy());\n    if (!e._head) return e;\n    let s = e._head,\n        r = e._head._link;\n\n    for (; r;) s._link = r.copy(), s = r, r = s._link;\n\n    return e;\n  }\n\n  next() {\n    return !!this._cursor && (!!this._cursor.next() || !!this._cursor._link && (this._cursor = this._cursor._link, this.next()));\n  }\n\n  peekId() {\n    var t;\n    return null != (t = this._cursor.peekId()) ? t : this._cursor._link.peekId();\n  }\n\n  delete(e) {\n    let s = this._head,\n        r = null;\n\n    for (; s;) {\n      if (s.delete(e)) return s.isEmpty() && (t(r) && (r._link = s._link), s === this._head && (this._head = s._link), s === this._cursor && (this._cursor = s._link)), !0;\n      r = s, s = s._link;\n    }\n\n    return !1;\n  }\n\n}\n\ni.ELEMENTS_PER_RECORD = s, i.BYTES_PER_RECORD = i.ELEMENTS_PER_RECORD * Int32Array.BYTES_PER_ELEMENT;\n\nclass _ {\n  constructor(t) {\n    this._link = null, this._index = -1, this._indexStart = 0, this._deletedCount = 0, this._offsets = {\n      instance: null\n    }, this._packedRecords = t;\n  }\n\n  static from(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : t.byteLength / this.BYTES_PER_RECORD - e;\n    return new _(new Int32Array(t, e * this.BYTES_PER_RECORD, s * this.ELEMENTS_PER_RECORD));\n  }\n\n  delete(t) {\n    const e = this._index,\n          s = this.lookup(t);\n    if (s) for (this.id = r, ++this._deletedCount; this.next() && this.id === t;) this.id = r, ++this._deletedCount;\n    return this._index = e, s;\n  }\n\n  isEmpty() {\n    return this._deletedCount === this.size();\n  }\n\n  link(t) {\n    this._link ? this._link.link(t) : this._link = t;\n  }\n\n  lookup(t) {\n    if (e(this._offsets.instance)) {\n      this._offsets.instance = new Map();\n      const t = this.copy();\n      t._index = -1;\n      let e = 0;\n\n      for (; t.next();) t.id !== e && (this._offsets.instance.set(t.id, t._index), e = t.id);\n    }\n\n    if (!this._offsets.instance.has(t)) return !1;\n    const s = this._index;\n    return this._index = this._offsets.instance.get(t), this.id !== r || (this._index = s, !1);\n  }\n\n  get id() {\n    return this._packedRecords[this._index * _.ELEMENTS_PER_RECORD];\n  }\n\n  set id(t) {\n    this._packedRecords[this._index * _.ELEMENTS_PER_RECORD] = t;\n  }\n\n  get materialKey() {\n    return this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 1];\n  }\n\n  set materialKey(t) {\n    this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 1] = t;\n  }\n\n  get insertAfter() {\n    return this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 2];\n  }\n\n  get indexFrom() {\n    return this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 3];\n  }\n\n  set indexFrom(t) {\n    this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 3] = t;\n  }\n\n  get indexCount() {\n    return this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 4];\n  }\n\n  set indexCount(t) {\n    this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 4] = t;\n  }\n\n  get vertexFrom() {\n    return this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 5];\n  }\n\n  set vertexFrom(t) {\n    this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 5] = t;\n  }\n\n  get vertexCount() {\n    return this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 6];\n  }\n\n  set vertexCount(t) {\n    this._packedRecords[this._index * _.ELEMENTS_PER_RECORD + 6] = t;\n  }\n\n  get sortKey() {\n    return this._packedRecordsF32 || (this._packedRecordsF32 = new Float32Array(this._packedRecords.buffer)), this._packedRecordsF32[this._index * _.ELEMENTS_PER_RECORD + 7];\n  }\n\n  set sortKey(t) {\n    this._packedRecordsF32 || (this._packedRecordsF32 = new Float32Array(this._packedRecords.buffer)), this._packedRecordsF32[this._index * _.ELEMENTS_PER_RECORD + 7] = t;\n  }\n\n  get index() {\n    return this._index;\n  }\n\n  size() {\n    return this._packedRecords.length / _.ELEMENTS_PER_RECORD;\n  }\n\n  next() {\n    for (; ++this._index < this.size() && this.id === r;);\n\n    return this._index < this.size();\n  }\n\n  peekId() {\n    const t = (this._index + 1) * _.ELEMENTS_PER_RECORD;\n    return t >= this._packedRecords.length ? 0 : this._packedRecords[t];\n  }\n\n  getCursor() {\n    return this.copy();\n  }\n\n  copy() {\n    const t = new _(this._packedRecords);\n    return t._indexStart = this._indexStart, t._link = this._link, t._index = this._index, t._offsets = this._offsets, t._deletedCount = this._deletedCount, t;\n  }\n\n}\n\n_.ELEMENTS_PER_RECORD = s, _.BYTES_PER_RECORD = _.ELEMENTS_PER_RECORD * Int32Array.BYTES_PER_ELEMENT;\nexport { i as DisplayRecordReader };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/DisplayRecordReader.js"],"names":["isSome","t","isNone","e","DISPLAY_RECORD_INT_PER_ELEMENT","s","r","i","constructor","_head","_cursor","from","byteLength","_","BYTES_PER_RECORD","Int32Array","ELEMENTS_PER_RECORD","size","_link","id","materialKey","insertAfter","indexFrom","indexCount","vertexFrom","vertexCount","sortKey","index","_indexStart","_index","seekIndex","forEach","getCursor","next","link","copy","lookup","peekId","delete","isEmpty","BYTES_PER_ELEMENT","_deletedCount","_offsets","instance","_packedRecords","Map","set","has","get","_packedRecordsF32","Float32Array","buffer","length","DisplayRecordReader"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{isSome as t,isNone as e}from\"../../../../../core/maybe.js\";import{DISPLAY_RECORD_INT_PER_ELEMENT as s}from\"../definitions.js\";const r=2147483647;class i{constructor(t){this._head=t,this._cursor=t}static from(t,e=0,s=t.byteLength/_.BYTES_PER_RECORD-e){const r=new _(new Int32Array(t,e*_.BYTES_PER_RECORD,s*_.ELEMENTS_PER_RECORD));return new i(r)}size(){let t=this._cursor,e=0;for(;t;)e+=t.size(),t=t._link;return e}get id(){return this._cursor.id}set id(t){this._cursor.id=t}get materialKey(){return this._cursor.materialKey}set materialKey(t){this._cursor.materialKey=t}get insertAfter(){return this._cursor.insertAfter}get indexFrom(){return this._cursor.indexFrom}set indexFrom(t){this._cursor.indexFrom=t}get indexCount(){return this._cursor.indexCount}set indexCount(t){this._cursor.indexCount=t}get vertexFrom(){return this._cursor.vertexFrom}set vertexFrom(t){this._cursor.vertexFrom=t}get vertexCount(){return this._cursor.vertexCount}set vertexCount(t){this._cursor.vertexCount=t}get sortKey(){return this._cursor.sortKey}set sortKey(t){this._cursor.sortKey=t}get index(){return this._cursor._indexStart+this._cursor._index}seekIndex(t){let e=t;for(this._cursor=this._head;this._cursor;){const t=this._cursor.size();if(e<t)return this._cursor._index=e,!0;e-=t,this._cursor=this._cursor._link}return!1}forEach(t){const e=this.getCursor();for(;e.next();)t(e)}link(t){if(!this._head)return void(this._head=t._head);let e=this._head;for(;e._link;)e=e._link;e._link=t._head,e._link._indexStart=e._indexStart+e.size()}getCursor(){return this.copy()}lookup(t){for(this._cursor=this._head;this._cursor&&!this._cursor.lookup(t);){if(!this._cursor._link)return!1;this._cursor=this._cursor._link}return!!this._cursor}copy(){var t;const e=new i(null==(t=this._head)?void 0:t.copy());if(!e._head)return e;let s=e._head,r=e._head._link;for(;r;)s._link=r.copy(),s=r,r=s._link;return e}next(){return!!this._cursor&&(!!this._cursor.next()||!!this._cursor._link&&(this._cursor=this._cursor._link,this.next()))}peekId(){var t;return null!=(t=this._cursor.peekId())?t:this._cursor._link.peekId()}delete(e){let s=this._head,r=null;for(;s;){if(s.delete(e))return s.isEmpty()&&(t(r)&&(r._link=s._link),s===this._head&&(this._head=s._link),s===this._cursor&&(this._cursor=s._link)),!0;r=s,s=s._link}return!1}}i.ELEMENTS_PER_RECORD=s,i.BYTES_PER_RECORD=i.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;class _{constructor(t){this._link=null,this._index=-1,this._indexStart=0,this._deletedCount=0,this._offsets={instance:null},this._packedRecords=t}static from(t,e=0,s=t.byteLength/this.BYTES_PER_RECORD-e){return new _(new Int32Array(t,e*this.BYTES_PER_RECORD,s*this.ELEMENTS_PER_RECORD))}delete(t){const e=this._index,s=this.lookup(t);if(s)for(this.id=r,++this._deletedCount;this.next()&&this.id===t;)this.id=r,++this._deletedCount;return this._index=e,s}isEmpty(){return this._deletedCount===this.size()}link(t){this._link?this._link.link(t):this._link=t}lookup(t){if(e(this._offsets.instance)){this._offsets.instance=new Map;const t=this.copy();t._index=-1;let e=0;for(;t.next();)t.id!==e&&(this._offsets.instance.set(t.id,t._index),e=t.id)}if(!this._offsets.instance.has(t))return!1;const s=this._index;return this._index=this._offsets.instance.get(t),this.id!==r||(this._index=s,!1)}get id(){return this._packedRecords[this._index*_.ELEMENTS_PER_RECORD]}set id(t){this._packedRecords[this._index*_.ELEMENTS_PER_RECORD]=t}get materialKey(){return this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+1]}set materialKey(t){this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+1]=t}get insertAfter(){return this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+2]}get indexFrom(){return this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+3]}set indexFrom(t){this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+3]=t}get indexCount(){return this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+4]}set indexCount(t){this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+4]=t}get vertexFrom(){return this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+5]}set vertexFrom(t){this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+5]=t}get vertexCount(){return this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+6]}set vertexCount(t){this._packedRecords[this._index*_.ELEMENTS_PER_RECORD+6]=t}get sortKey(){return this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*_.ELEMENTS_PER_RECORD+7]}set sortKey(t){this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*_.ELEMENTS_PER_RECORD+7]=t}get index(){return this._index}size(){return this._packedRecords.length/_.ELEMENTS_PER_RECORD}next(){for(;++this._index<this.size()&&this.id===r;);return this._index<this.size()}peekId(){const t=(this._index+1)*_.ELEMENTS_PER_RECORD;return t>=this._packedRecords.length?0:this._packedRecords[t]}getCursor(){return this.copy()}copy(){const t=new _(this._packedRecords);return t._indexStart=this._indexStart,t._link=this._link,t._index=this._index,t._offsets=this._offsets,t._deletedCount=this._deletedCount,t}}_.ELEMENTS_PER_RECORD=s,_.BYTES_PER_RECORD=_.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;export{i as DisplayRecordReader};\n"]},"metadata":{},"sourceType":"module"}