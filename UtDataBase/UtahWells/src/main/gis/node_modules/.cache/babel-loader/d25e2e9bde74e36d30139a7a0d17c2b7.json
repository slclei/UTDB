{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { ViewingMode as o } from \"../../../../../ViewingMode.js\";\nimport { NormalAttributeType as r, NormalAttribute as a } from \"./NormalAttribute.glsl.js\";\nimport { VertexPosition as e } from \"./VertexPosition.glsl.js\";\nimport { glsl as l } from \"../../shaderModules/interfaces.js\";\n\nfunction m(m, d) {\n  d.normalType === r.Attribute || d.normalType === r.CompressedAttribute ? (m.include(a, d), m.varyings.add(\"vNormalWorld\", \"vec3\"), m.varyings.add(\"vNormalView\", \"vec3\"), m.vertex.uniforms.add(\"transformNormalGlobalFromModel\", \"mat3\"), m.vertex.uniforms.add(\"transformNormalViewFromGlobal\", \"mat3\"), m.vertex.code.add(l`void forwardNormal() {\nvNormalWorld = transformNormalGlobalFromModel * normalModel();\nvNormalView = transformNormalViewFromGlobal * vNormalWorld;\n}`)) : d.normalType === r.Ground ? (m.include(e, d), m.varyings.add(\"vNormalWorld\", \"vec3\"), m.vertex.code.add(l`\n    void forwardNormal() {\n      vNormalWorld = ${d.viewingMode === o.Global ? l`normalize(vPositionWorldCameraRelative);` : l`vec3(0.0, 0.0, 1.0);`}\n    }\n    `)) : m.vertex.code.add(l`void forwardNormal() {}`);\n}\n\nfunction d(o, r) {\n  o.setUniformMatrix4fv(\"viewNormal\", r);\n}\n\nexport { m as VertexNormal, d as bindVertexNormalUniforms };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js"],"names":["ViewingMode","o","NormalAttributeType","r","NormalAttribute","a","VertexPosition","e","glsl","l","m","d","normalType","Attribute","CompressedAttribute","include","varyings","add","vertex","uniforms","code","Ground","viewingMode","Global","setUniformMatrix4fv","VertexNormal","bindVertexNormalUniforms"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,WAAW,IAAIC,CAAtB,QAA4B,+BAA5B;AAA4D,SAAOC,mBAAmB,IAAIC,CAA9B,EAAgCC,eAAe,IAAIC,CAAnD,QAAyD,2BAAzD;AAAqF,SAAOC,cAAc,IAAIC,CAAzB,QAA+B,0BAA/B;AAA0D,SAAOC,IAAI,IAAIC,CAAf,QAAqB,mCAArB;;AAAyD,SAASC,CAAT,CAAWA,CAAX,EAAaC,CAAb,EAAe;AAACA,EAAAA,CAAC,CAACC,UAAF,KAAeT,CAAC,CAACU,SAAjB,IAA4BF,CAAC,CAACC,UAAF,KAAeT,CAAC,CAACW,mBAA7C,IAAkEJ,CAAC,CAACK,OAAF,CAAUV,CAAV,EAAYM,CAAZ,GAAeD,CAAC,CAACM,QAAF,CAAWC,GAAX,CAAe,cAAf,EAA8B,MAA9B,CAAf,EAAqDP,CAAC,CAACM,QAAF,CAAWC,GAAX,CAAe,aAAf,EAA6B,MAA7B,CAArD,EAA0FP,CAAC,CAACQ,MAAF,CAASC,QAAT,CAAkBF,GAAlB,CAAsB,gCAAtB,EAAuD,MAAvD,CAA1F,EAAyJP,CAAC,CAACQ,MAAF,CAASC,QAAT,CAAkBF,GAAlB,CAAsB,+BAAtB,EAAsD,MAAtD,CAAzJ,EAAuNP,CAAC,CAACQ,MAAF,CAASE,IAAT,CAAcH,GAAd,CAAkBR,CAAE;AACjkB;AACA;AACA,EAH6iB,CAAzR,IAG/QE,CAAC,CAACC,UAAF,KAAeT,CAAC,CAACkB,MAAjB,IAAyBX,CAAC,CAACK,OAAF,CAAUR,CAAV,EAAYI,CAAZ,GAAeD,CAAC,CAACM,QAAF,CAAWC,GAAX,CAAe,cAAf,EAA8B,MAA9B,CAAf,EAAqDP,CAAC,CAACQ,MAAF,CAASE,IAAT,CAAcH,GAAd,CAAkBR,CAAE;AACvG;AACA,uBAAuBE,CAAC,CAACW,WAAF,KAAgBrB,CAAC,CAACsB,MAAlB,GAAyBd,CAAE,0CAA3B,GAAqEA,CAAE,sBAAsB;AACpH;AACA,KAJmF,CAA9E,IAIGC,CAAC,CAACQ,MAAF,CAASE,IAAT,CAAcH,GAAd,CAAkBR,CAAE,yBAApB,CAP4Q;AAO9N;;AAAA,SAASE,CAAT,CAAWV,CAAX,EAAaE,CAAb,EAAe;AAACF,EAAAA,CAAC,CAACuB,mBAAF,CAAsB,YAAtB,EAAmCrB,CAAnC;AAAsC;;AAAA,SAAOO,CAAC,IAAIe,YAAZ,EAAyBd,CAAC,IAAIe,wBAA9B","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{ViewingMode as o}from\"../../../../../ViewingMode.js\";import{NormalAttributeType as r,NormalAttribute as a}from\"./NormalAttribute.glsl.js\";import{VertexPosition as e}from\"./VertexPosition.glsl.js\";import{glsl as l}from\"../../shaderModules/interfaces.js\";function m(m,d){d.normalType===r.Attribute||d.normalType===r.CompressedAttribute?(m.include(a,d),m.varyings.add(\"vNormalWorld\",\"vec3\"),m.varyings.add(\"vNormalView\",\"vec3\"),m.vertex.uniforms.add(\"transformNormalGlobalFromModel\",\"mat3\"),m.vertex.uniforms.add(\"transformNormalViewFromGlobal\",\"mat3\"),m.vertex.code.add(l`void forwardNormal() {\nvNormalWorld = transformNormalGlobalFromModel * normalModel();\nvNormalView = transformNormalViewFromGlobal * vNormalWorld;\n}`)):d.normalType===r.Ground?(m.include(e,d),m.varyings.add(\"vNormalWorld\",\"vec3\"),m.vertex.code.add(l`\n    void forwardNormal() {\n      vNormalWorld = ${d.viewingMode===o.Global?l`normalize(vPositionWorldCameraRelative);`:l`vec3(0.0, 0.0, 1.0);`}\n    }\n    `)):m.vertex.code.add(l`void forwardNormal() {}`)}function d(o,r){o.setUniformMatrix4fv(\"viewNormal\",r)}export{m as VertexNormal,d as bindVertexNormalUniforms};\n"]},"metadata":{},"sourceType":"module"}