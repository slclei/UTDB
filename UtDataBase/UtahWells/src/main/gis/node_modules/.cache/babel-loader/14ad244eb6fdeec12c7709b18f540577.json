{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { isNone as t, isSome as e } from \"../../../../../core/maybe.js\";\nimport { convertFromFeatures as r, convertFromFeatureSet as s, convertToFeature as i, convertToGeometry as n, getQuantizedArea as o, unquantizeOptimizedGeometry as u } from \"../../../../../layers/graphics/featureConversionUtils.js\";\nimport { hasGeometry as a } from \"../../../../../layers/graphics/OptimizedFeature.js\";\nimport { FeatureSetReader as h } from \"./FeatureSetReader.js\";\n\nfunction c(_ref) {\n  let {\n    coords: t,\n    lengths: e\n  } = _ref;\n  let r = 0;\n\n  for (const s of e) {\n    for (let e = 1; e < s; e++) t[2 * (r + e)] += t[2 * (r + e) - 2], t[2 * (r + e) + 1] += t[2 * (r + e) - 1];\n\n    r += s;\n  }\n}\n\nclass d extends h {\n  constructor(t, e, r) {\n    super(t, r), this._featureIndex = -1, this._dateFields = new Set(), this._geometryType = null == r ? void 0 : r.geometryType, this._features = e;\n  }\n\n  static fromFeatures(t, e) {\n    const {\n      objectIdField: s,\n      geometryType: i\n    } = e,\n          n = r([], t, i, !1, !1, s);\n\n    for (let r = 0; r < n.length; r++) n[r].displayId = t[r].displayId;\n\n    return d.fromOptimizedFeatures(n, e);\n  }\n\n  static fromFeatureSet(t, e) {\n    const r = s(t, e.objectIdField);\n    return d.fromOptimizedFeatureSet(r, e);\n  }\n\n  static fromOptimizedFeatureSet(t, e) {\n    const {\n      features: r\n    } = t,\n          s = d.fromOptimizedFeatures(r, e);\n    s._exceededTransferLimit = t.exceededTransferLimit, s._transform = t.transform;\n\n    for (const i of t.fields) \"esriFieldTypeDate\" === i.type && s._dateFields.add(i.name);\n\n    return s;\n  }\n\n  static fromOptimizedFeatures(t, e, r) {\n    const s = h.createInstance(),\n          i = new d(s, t, e);\n    return i._transform = r, i;\n  }\n\n  get _current() {\n    return this._features[this._featureIndex];\n  }\n\n  get geometryType() {\n    return this._geometryType;\n  }\n\n  get hasFeatures() {\n    return !!this._features.length;\n  }\n\n  get hasNext() {\n    return this._featureIndex + 1 < this._features.length;\n  }\n\n  get exceededTransferLimit() {\n    return this._exceededTransferLimit;\n  }\n\n  get hasZ() {\n    return !1;\n  }\n\n  get hasM() {\n    return !1;\n  }\n\n  removeIds(t) {\n    const e = new Set(t);\n    this._features = this._features.filter(t => !e.has(t.objectId));\n  }\n\n  append(t) {\n    for (const e of t) this._features.push(e);\n  }\n\n  getSize() {\n    return this._features.length;\n  }\n\n  getCursor() {\n    return this.copy();\n  }\n\n  getQuantizationTransform() {\n    return this._transform;\n  }\n\n  getAttributeHash() {\n    let t = \"\";\n\n    for (const e in this._current.attributes) t += this._current.attributes[e];\n\n    return t;\n  }\n\n  getIndex() {\n    return this._featureIndex;\n  }\n\n  setIndex(t) {\n    this._featureIndex = t;\n  }\n\n  getObjectId() {\n    return this._current.objectId;\n  }\n\n  getDisplayId() {\n    return this._current.displayId;\n  }\n\n  setDisplayId(t) {\n    this._current.displayId = t;\n  }\n\n  getGroupId() {\n    return this._current.groupId;\n  }\n\n  setGroupId(t) {\n    this._current.groupId = t;\n  }\n\n  copy() {\n    const t = new d(this.instance, this._features, this.fullSchema());\n    return this.copyInto(t), t;\n  }\n\n  next() {\n    for (; ++this._featureIndex < this._features.length && !this._getExists(););\n\n    return this._featureIndex < this._features.length;\n  }\n\n  readLegacyFeature() {\n    return i(this._current, this.geometryType, this.hasZ, this.hasM);\n  }\n\n  readOptimizedFeature() {\n    return this._current;\n  }\n\n  readLegacyPointGeometry() {\n    return this.readGeometry() ? {\n      x: this.getX(),\n      y: this.getY()\n    } : null;\n  }\n\n  readLegacyGeometry() {\n    const t = this.readGeometry();\n    return n(t, this.geometryType, this.hasZ, this.hasM);\n  }\n\n  readLegacyCentroid() {\n    const e = this.readCentroid();\n    return t(e) ? null : {\n      x: e.coords[0] * this._sx + this._tx,\n      y: e.coords[1] * this._sy + this._ty\n    };\n  }\n\n  readGeometryArea() {\n    return a(this._current) ? o(this._current.geometry, 2) : 0;\n  }\n\n  readUnquantizedGeometry() {\n    const t = this.readGeometry();\n    if (\"esriGeometryPoint\" === this.geometryType || !t) return t;\n    const e = t.clone();\n    return c(e), e;\n  }\n\n  readHydratedGeometry() {\n    const r = this._current.geometry;\n    if (t(r)) return null;\n    const s = r.clone();\n    return e(this._transform) && u(s, s, this.hasZ, this.hasM, this._transform), s;\n  }\n\n  getXHydrated() {\n    if (!a(this._current)) return 0;\n    const e = this._current.geometry.coords[0],\n          r = this.getQuantizationTransform();\n    return t(r) ? e : e * r.scale[0] + r.translate[0];\n  }\n\n  getYHydrated() {\n    if (!a(this._current)) return 0;\n    const e = this._current.geometry.coords[1],\n          r = this.getQuantizationTransform();\n    return t(r) ? e : r.translate[1] - e * r.scale[1];\n  }\n\n  getX() {\n    return a(this._current) ? this._current.geometry.coords[0] * this._sx + this._tx : 0;\n  }\n\n  getY() {\n    return a(this._current) ? this._current.geometry.coords[1] * this._sy + this._ty : 0;\n  }\n\n  readGeometry() {\n    if (!a(this._current)) return null;\n\n    const t = this._current.geometry.clone();\n\n    if (t.isPoint) return t.coords[0] = t.coords[0] * this._sx + this._tx, t.coords[1] = t.coords[1] * this._sy + this._ty, t;\n    let e = 0;\n\n    for (const r of t.lengths) t.coords[2 * e] = t.coords[2 * e] * this._sx + this._tx, t.coords[2 * e + 1] = t.coords[2 * e + 1] * this._sy + this._ty, e += r;\n\n    return t;\n  }\n\n  readCentroid() {\n    if (!a(this._current)) return null;\n\n    if (t(this._current.centroid)) {\n      const e = this._computeCentroid();\n\n      if (t(e)) return null;\n      e.coords[0] = (e.coords[0] - this._tx) / this._sx, e.coords[1] = (e.coords[1] - this._ty) / this._sy, this._current.centroid = e;\n    }\n\n    const e = this._current.centroid.clone();\n\n    return e.coords[0] = e.coords[0] * this._sx + this._tx, e.coords[1] = e.coords[1] * this._sx + this._ty, e;\n  }\n\n  hasField(t) {\n    if (t in this._current.attributes) return !0;\n    return this.getFieldNames().map(t => t.toLowerCase()).includes(t.toLowerCase());\n  }\n\n  getFieldNames() {\n    return Object.keys(this._current.attributes);\n  }\n\n  _readAttribute(t, e) {\n    const r = this._current.attributes[t];\n    if (void 0 !== r) return null != r && e && this._dateFields.has(t) ? new Date(r) : r;\n    const s = this.readAttributes(),\n          i = t.toLocaleLowerCase().trim();\n\n    for (const n in s) if (n.toLocaleLowerCase().trim() === i) {\n      const t = this._current.attributes[n];\n      return null != t && e && this._dateFields.has(n) ? new Date(t) : t;\n    }\n  }\n\n  copyInto(t) {\n    super.copyInto(t), t._featureIndex = this._featureIndex, t._transform = this._transform, t._dateFields = this._dateFields;\n  }\n\n  _readAttributes() {\n    return this._current.attributes;\n  }\n\n}\n\nexport { d as FeatureSetReaderJSON };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/layers/features/support/FeatureSetReaderJSON.js"],"names":["isNone","t","isSome","e","convertFromFeatures","r","convertFromFeatureSet","s","convertToFeature","i","convertToGeometry","n","getQuantizedArea","o","unquantizeOptimizedGeometry","u","hasGeometry","a","FeatureSetReader","h","c","coords","lengths","d","constructor","_featureIndex","_dateFields","Set","_geometryType","geometryType","_features","fromFeatures","objectIdField","length","displayId","fromOptimizedFeatures","fromFeatureSet","fromOptimizedFeatureSet","features","_exceededTransferLimit","exceededTransferLimit","_transform","transform","fields","type","add","name","createInstance","_current","hasFeatures","hasNext","hasZ","hasM","removeIds","filter","has","objectId","append","push","getSize","getCursor","copy","getQuantizationTransform","getAttributeHash","attributes","getIndex","setIndex","getObjectId","getDisplayId","setDisplayId","getGroupId","groupId","setGroupId","instance","fullSchema","copyInto","next","_getExists","readLegacyFeature","readOptimizedFeature","readLegacyPointGeometry","readGeometry","x","getX","y","getY","readLegacyGeometry","readLegacyCentroid","readCentroid","_sx","_tx","_sy","_ty","readGeometryArea","geometry","readUnquantizedGeometry","clone","readHydratedGeometry","getXHydrated","scale","translate","getYHydrated","isPoint","centroid","_computeCentroid","hasField","getFieldNames","map","toLowerCase","includes","Object","keys","_readAttribute","Date","readAttributes","toLocaleLowerCase","trim","_readAttributes","FeatureSetReaderJSON"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{isNone as t,isSome as e}from\"../../../../../core/maybe.js\";import{convertFromFeatures as r,convertFromFeatureSet as s,convertToFeature as i,convertToGeometry as n,getQuantizedArea as o,unquantizeOptimizedGeometry as u}from\"../../../../../layers/graphics/featureConversionUtils.js\";import{hasGeometry as a}from\"../../../../../layers/graphics/OptimizedFeature.js\";import{FeatureSetReader as h}from\"./FeatureSetReader.js\";function c({coords:t,lengths:e}){let r=0;for(const s of e){for(let e=1;e<s;e++)t[2*(r+e)]+=t[2*(r+e)-2],t[2*(r+e)+1]+=t[2*(r+e)-1];r+=s}}class d extends h{constructor(t,e,r){super(t,r),this._featureIndex=-1,this._dateFields=new Set,this._geometryType=null==r?void 0:r.geometryType,this._features=e}static fromFeatures(t,e){const{objectIdField:s,geometryType:i}=e,n=r([],t,i,!1,!1,s);for(let r=0;r<n.length;r++)n[r].displayId=t[r].displayId;return d.fromOptimizedFeatures(n,e)}static fromFeatureSet(t,e){const r=s(t,e.objectIdField);return d.fromOptimizedFeatureSet(r,e)}static fromOptimizedFeatureSet(t,e){const{features:r}=t,s=d.fromOptimizedFeatures(r,e);s._exceededTransferLimit=t.exceededTransferLimit,s._transform=t.transform;for(const i of t.fields)\"esriFieldTypeDate\"===i.type&&s._dateFields.add(i.name);return s}static fromOptimizedFeatures(t,e,r){const s=h.createInstance(),i=new d(s,t,e);return i._transform=r,i}get _current(){return this._features[this._featureIndex]}get geometryType(){return this._geometryType}get hasFeatures(){return!!this._features.length}get hasNext(){return this._featureIndex+1<this._features.length}get exceededTransferLimit(){return this._exceededTransferLimit}get hasZ(){return!1}get hasM(){return!1}removeIds(t){const e=new Set(t);this._features=this._features.filter((t=>!e.has(t.objectId)))}append(t){for(const e of t)this._features.push(e)}getSize(){return this._features.length}getCursor(){return this.copy()}getQuantizationTransform(){return this._transform}getAttributeHash(){let t=\"\";for(const e in this._current.attributes)t+=this._current.attributes[e];return t}getIndex(){return this._featureIndex}setIndex(t){this._featureIndex=t}getObjectId(){return this._current.objectId}getDisplayId(){return this._current.displayId}setDisplayId(t){this._current.displayId=t}getGroupId(){return this._current.groupId}setGroupId(t){this._current.groupId=t}copy(){const t=new d(this.instance,this._features,this.fullSchema());return this.copyInto(t),t}next(){for(;++this._featureIndex<this._features.length&&!this._getExists(););return this._featureIndex<this._features.length}readLegacyFeature(){return i(this._current,this.geometryType,this.hasZ,this.hasM)}readOptimizedFeature(){return this._current}readLegacyPointGeometry(){return this.readGeometry()?{x:this.getX(),y:this.getY()}:null}readLegacyGeometry(){const t=this.readGeometry();return n(t,this.geometryType,this.hasZ,this.hasM)}readLegacyCentroid(){const e=this.readCentroid();return t(e)?null:{x:e.coords[0]*this._sx+this._tx,y:e.coords[1]*this._sy+this._ty}}readGeometryArea(){return a(this._current)?o(this._current.geometry,2):0}readUnquantizedGeometry(){const t=this.readGeometry();if(\"esriGeometryPoint\"===this.geometryType||!t)return t;const e=t.clone();return c(e),e}readHydratedGeometry(){const r=this._current.geometry;if(t(r))return null;const s=r.clone();return e(this._transform)&&u(s,s,this.hasZ,this.hasM,this._transform),s}getXHydrated(){if(!a(this._current))return 0;const e=this._current.geometry.coords[0],r=this.getQuantizationTransform();return t(r)?e:e*r.scale[0]+r.translate[0]}getYHydrated(){if(!a(this._current))return 0;const e=this._current.geometry.coords[1],r=this.getQuantizationTransform();return t(r)?e:r.translate[1]-e*r.scale[1]}getX(){return a(this._current)?this._current.geometry.coords[0]*this._sx+this._tx:0}getY(){return a(this._current)?this._current.geometry.coords[1]*this._sy+this._ty:0}readGeometry(){if(!a(this._current))return null;const t=this._current.geometry.clone();if(t.isPoint)return t.coords[0]=t.coords[0]*this._sx+this._tx,t.coords[1]=t.coords[1]*this._sy+this._ty,t;let e=0;for(const r of t.lengths)t.coords[2*e]=t.coords[2*e]*this._sx+this._tx,t.coords[2*e+1]=t.coords[2*e+1]*this._sy+this._ty,e+=r;return t}readCentroid(){if(!a(this._current))return null;if(t(this._current.centroid)){const e=this._computeCentroid();if(t(e))return null;e.coords[0]=(e.coords[0]-this._tx)/this._sx,e.coords[1]=(e.coords[1]-this._ty)/this._sy,this._current.centroid=e}const e=this._current.centroid.clone();return e.coords[0]=e.coords[0]*this._sx+this._tx,e.coords[1]=e.coords[1]*this._sx+this._ty,e}hasField(t){if(t in this._current.attributes)return!0;return this.getFieldNames().map((t=>t.toLowerCase())).includes(t.toLowerCase())}getFieldNames(){return Object.keys(this._current.attributes)}_readAttribute(t,e){const r=this._current.attributes[t];if(void 0!==r)return null!=r&&e&&this._dateFields.has(t)?new Date(r):r;const s=this.readAttributes(),i=t.toLocaleLowerCase().trim();for(const n in s)if(n.toLocaleLowerCase().trim()===i){const t=this._current.attributes[n];return null!=t&&e&&this._dateFields.has(n)?new Date(t):t}}copyInto(t){super.copyInto(t),t._featureIndex=this._featureIndex,t._transform=this._transform,t._dateFields=this._dateFields}_readAttributes(){return this._current.attributes}}export{d as FeatureSetReaderJSON};\n"]},"metadata":{},"sourceType":"module"}