{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { MemCacheStorage as t } from \"./MemCache.js\";\n\nclass e {\n  constructor(e, s) {\n    this._storage = new t(), this._storage.maxSize = e, s && this._storage.registerRemoveFunc(\"\", s);\n  }\n\n  put(t, e) {\n    this._storage.put(t, e, 1, 1);\n  }\n\n  pop(t) {\n    return this._storage.pop(t);\n  }\n\n  get(t) {\n    return this._storage.get(t);\n  }\n\n  clear() {\n    this._storage.clearAll();\n  }\n\n  destroy() {\n    this._storage.destroy();\n  }\n\n}\n\nexport { e as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/core/ItemCache.js"],"names":["MemCacheStorage","t","e","constructor","s","_storage","maxSize","registerRemoveFunc","put","pop","get","clear","clearAll","destroy","default"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,eAAe,IAAIC,CAA1B,QAAgC,eAAhC;;AAAgD,MAAMC,CAAN,CAAO;AAACC,EAAAA,WAAW,CAACD,CAAD,EAAGE,CAAH,EAAK;AAAC,SAAKC,QAAL,GAAc,IAAIJ,CAAJ,EAAd,EAAoB,KAAKI,QAAL,CAAcC,OAAd,GAAsBJ,CAA1C,EAA4CE,CAAC,IAAE,KAAKC,QAAL,CAAcE,kBAAd,CAAiC,EAAjC,EAAoCH,CAApC,CAA/C;AAAsF;;AAAAI,EAAAA,GAAG,CAACP,CAAD,EAAGC,CAAH,EAAK;AAAC,SAAKG,QAAL,CAAcG,GAAd,CAAkBP,CAAlB,EAAoBC,CAApB,EAAsB,CAAtB,EAAwB,CAAxB;AAA2B;;AAAAO,EAAAA,GAAG,CAACR,CAAD,EAAG;AAAC,WAAO,KAAKI,QAAL,CAAcI,GAAd,CAAkBR,CAAlB,CAAP;AAA4B;;AAAAS,EAAAA,GAAG,CAACT,CAAD,EAAG;AAAC,WAAO,KAAKI,QAAL,CAAcK,GAAd,CAAkBT,CAAlB,CAAP;AAA4B;;AAAAU,EAAAA,KAAK,GAAE;AAAC,SAAKN,QAAL,CAAcO,QAAd;AAAyB;;AAAAC,EAAAA,OAAO,GAAE;AAAC,SAAKR,QAAL,CAAcQ,OAAd;AAAwB;;AAArR;;AAAsR,SAAOX,CAAC,IAAIY,OAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{MemCacheStorage as t}from\"./MemCache.js\";class e{constructor(e,s){this._storage=new t,this._storage.maxSize=e,s&&this._storage.registerRemoveFunc(\"\",s)}put(t,e){this._storage.put(t,e,1,1)}pop(t){return this._storage.pop(t)}get(t){return this._storage.get(t)}clear(){this._storage.clearAll()}destroy(){this._storage.destroy()}}export{e as default};\n"]},"metadata":{},"sourceType":"module"}