{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/tslib.es6.js\";\nimport \"../../geometry.js\";\nimport t from \"../../Graphic.js\";\nimport { read as r, rasterRendererTypes as i, websceneRasterRendererTypes as s } from \"../../rasterRenderers.js\";\nimport n from \"../../request.js\";\nimport a from \"../../core/Error.js\";\nimport { strict as o } from \"../../core/jsonMap.js\";\nimport { clone as l } from \"../../core/lang.js\";\nimport u from \"../../core/Logger.js\";\nimport { isSome as p, isNone as c, unwrap as m } from \"../../core/maybe.js\";\nimport { when as d } from \"../../core/promiseUtils.js\";\nimport { urlToObject as h } from \"../../core/urlUtils.js\";\nimport { aliasOf as f } from \"../../core/accessorSupport/decorators/aliasOf.js\";\nimport { ensureClass as y, Integer as g, ensureNumber as R } from \"../../core/accessorSupport/ensureType.js\";\nimport { property as v, ensureRange as x } from \"../../core/accessorSupport/decorators/property.js\";\nimport { reader as b } from \"../../core/accessorSupport/decorators/reader.js\";\nimport { subclass as S } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { writer as I } from \"../../core/accessorSupport/decorators/writer.js\";\nimport { opacity as _, url as w } from \"../support/commonProperties.js\";\nimport F from \"../support/DimensionalDefinition.js\";\nimport { ExportImageServiceParameters as O } from \"../support/ExportImageServiceParameters.js\";\nimport D from \"../support/Field.js\";\nimport P from \"../support/FieldsIndex.js\";\nimport { isSupportedRendererType as T } from \"../support/imageryRendererUtils.js\";\nimport j from \"../support/MosaicRule.js\";\nimport N from \"../support/PixelBlock.js\";\nimport { interpolationKebab as C, noDataInterpretationKebab as M } from \"../support/rasterEnums.js\";\nimport J from \"../support/RasterFunction.js\";\nimport q from \"../support/RasterInfo.js\";\nimport V from \"../support/RasterJobHandler.js\";\nimport { decode as A, getFormat as z } from \"../support/rasterFormats/RasterCodec.js\";\nimport { uvComponentToVector as E } from \"../support/rasterFunctions/vectorFieldUtils.js\";\nimport { getSupportedRendererTypes as Q, getDefaultBandCombination as U, createDefaultRenderer as H, normalizeRendererJSON as L } from \"../../renderers/support/rasterRendererHelper.js\";\nimport k from \"../../renderers/support/RasterSymbolizer.js\";\nimport { computeAngles as B, computePixelSpaceLocations as G, computeHistograms as W, computeStatisticsHistograms as X, getImageSpatialReferenceQueryParameter as Y, getSamples as K, identify as $ } from \"../../rest/imageService.js\";\nimport \"../../core/unitUtils.js\";\nimport \"../../kernel.js\";\nimport \"../../rest/query/support/AttachmentInfo.js\";\nimport \"../../rest/support/AttachmentQuery.js\";\nimport { executeForCount as Z } from \"../../rest/query/executeForCount.js\";\nimport ee from \"../../geometry/Extent.js\";\nimport \"../../geometry/Geometry.js\";\nimport \"../../geometry/Multipoint.js\";\nimport te from \"../../geometry/Point.js\";\nimport re from \"../../geometry/Polygon.js\";\nimport \"../../geometry/Polyline.js\";\nimport \"../../geometry/support/normalizeUtils.js\";\nimport \"../../core/pbf.js\";\nimport \"../../geometry/support/spatialReferenceUtils.js\";\nimport ie from \"../../rest/support/Query.js\";\nimport { executeForIds as se } from \"../../rest/query/executeForIds.js\";\nimport { executeQueryJSON as ne } from \"../../rest/query/executeQueryJSON.js\";\nimport \"../../core/has.js\";\nimport \"../graphics/featureConversionUtils.js\";\nimport ae from \"../../rest/support/FeatureSet.js\";\nimport \"../../rest/support/RelationshipQuery.js\";\nimport \"../../rest/support/TopFeaturesQuery.js\";\nimport oe from \"../../rest/support/ImageAngleParameters.js\";\nimport le from \"../../rest/support/ImageHistogramParameters.js\";\nimport ue from \"../../rest/support/ImageIdentifyParameters.js\";\nimport pe from \"../../rest/support/ImagePixelLocationParameters.js\";\nimport ce from \"../../rest/support/ImageSampleParameters.js\";\nimport { createStreamlinesMesh as me } from \"../../views/2d/engine/flow/dataUtils.js\";\nimport de from \"../../geometry/SpatialReference.js\";\nconst he = u.getLogger(\"esri.layers.mixins.ArcGISImageService\"),\n      fe = o()({\n  U1: \"u1\",\n  U2: \"u2\",\n  U4: \"u4\",\n  U8: \"u8\",\n  S8: \"s8\",\n  U16: \"u16\",\n  S16: \"s16\",\n  U32: \"u32\",\n  S32: \"s32\",\n  F32: \"f32\",\n  F64: \"f64\",\n  C64: \"c64\",\n  C128: \"c128\",\n  UNKNOWN: \"unknown\"\n}),\n      ye = new Set([\"png\", \"png8\", \"png24\", \"png32\", \"jpg\", \"bmp\", \"gif\", \"jpgpng\", \"lerc\", \"tiff\"]),\n      ge = x(R, {\n  min: 0,\n  max: 255\n});\n\nfunction Re(e) {\n  if (!e) return null;\n  const t = JSON.stringify(e).match(/\"rasterFunction\":\"(.*?\")/gi),\n        r = null == t ? void 0 : t.map(e => e.replace('\"rasterFunction\":\"', \"\").replace('\"', \"\"));\n  return r ? r.join(\"/\") : null;\n}\n\nconst ve = o => {\n  let u = class extends o {\n    constructor() {\n      super(...arguments), this._functionRasterInfos = {}, this._rasterJobHandler = {\n        instance: null,\n        refCount: 0,\n        connectionPromise: null\n      }, this._defaultServiceMosaicRule = null, this._serviceSourceType = null, this._serviceSupportsMosaicRule = null, this.rasterAttributeTableFieldPrefix = \"Raster.\", this.adjustAspectRatio = null, this.bandCount = null, this.bandIds = void 0, this.capabilities = null, this.compressionQuality = void 0, this.compressionTolerance = .01, this.copyright = null, this.definitionExpression = null, this.exportImageServiceParameters = null, this.rasterInfo = null, this.fields = null, this.fullExtent = null, this.hasMultidimensions = !1, this.imageMaxHeight = 4100, this.imageMaxWidth = 4100, this.interpolation = void 0, this.minScale = 0, this.maxScale = 0, this.multidimensionalInfo = null, this.noData = null, this.noDataInterpretation = void 0, this.objectIdField = null, this.geometryType = \"polygon\", this.typeIdField = null, this.types = [], this.pixelSizeX = null, this.pixelSizeY = null, this.pixelFilter = null, this.raster = void 0, this.viewId = void 0, this.symbolizer = null, this.rasterAttributeTable = null, this.rasterFunctionInfos = null, this.serviceDataType = null, this.spatialReference = null, this.pixelType = null, this.serviceRasterInfo = null, this.sourceJSON = null, this.url = null, this.version = void 0;\n    }\n\n    initialize() {\n      this._set(\"exportImageServiceParameters\", new O({\n        layer: this\n      }));\n    }\n\n    readDefaultServiceMosaicRule(e, t) {\n      return this._serviceSupportsMosaicRule ? j.fromJSON(t) : null;\n    }\n\n    readServiceSourceType(e, t) {\n      return this._isMosaicDataset(t) ? \"mosaic-dataset\" : \"raster-dataset\";\n    }\n\n    readServiceSupportsMosaicRule(e, t) {\n      return this._isMosaicRuleSupported(t);\n    }\n\n    get rasterFunctionNamesIndex() {\n      const e = new Map();\n      return !this.rasterFunctionInfos || p(this.rasterFunctionInfos) && this.rasterFunctionInfos.length < 1 || p(this.rasterFunctionInfos) && this.rasterFunctionInfos.forEach(t => {\n        e.set(t.name.toLowerCase().replace(/ /gi, \"_\"), t.name);\n      }), e;\n    }\n\n    readBandIds(e, t) {\n      if (Array.isArray(e) && e.length > 0 && e.every(e => \"number\" == typeof e)) return e;\n    }\n\n    readCapabilities(e, t) {\n      return this._readCapabilities(t);\n    }\n\n    writeCompressionQuality(e, t, r) {\n      null != e && \"lerc\" !== this.format && (t[r] = e);\n    }\n\n    writeCompressionTolerance(e, t, r) {\n      \"lerc\" === this.format && null != e && (t[r] = e);\n    }\n\n    get fieldsIndex() {\n      return this.fields ? new P(this.fields) : null;\n    }\n\n    set format(e) {\n      e && ye.has(e.toLowerCase()) && this._set(\"format\", e.toLowerCase());\n    }\n\n    readFormat(e, t) {\n      return \"esriImageServiceDataTypeVector-UV\" === t.serviceDataType || \"esriImageServiceDataTypeVector-MagDir\" === t.serviceDataType || null != this.pixelFilter ? \"lerc\" : \"jpgpng\";\n    }\n\n    readMinScale(e, t) {\n      return null != t.minLOD && null != t.maxLOD ? e : 0;\n    }\n\n    readMaxScale(e, t) {\n      return null != t.minLOD && null != t.maxLOD ? e : 0;\n    }\n\n    set mosaicRule(e) {\n      let t = e;\n      t && t.mosaicMethod && (t = j.fromJSON({ ...t.toJSON(),\n        mosaicMethod: t.mosaicMethod,\n        mosaicOperation: t.mosaicOperation\n      })), this._set(\"mosaicRule\", t);\n    }\n\n    readMosaicRule(e, t) {\n      const r = e || t.mosaicRule;\n      return r ? j.fromJSON(r) : this._isMosaicRuleSupported(t) ? j.fromJSON(t) : null;\n    }\n\n    writeMosaicRule(e, t, r) {\n      let i = this.mosaicRule;\n      const s = this.definitionExpression;\n      i ? s && s !== i.where && (i = i.clone(), i.where = s) : s && (i = new j({\n        where: s\n      })), this._isValidCustomizedMosaicRule(i) && (t[r] = i.toJSON());\n    }\n\n    writeNoData(e, t, r) {\n      null != e && \"number\" == typeof e && (t[r] = ge(e));\n    }\n\n    readObjectIdField(e, t) {\n      if (!e) {\n        const r = t.fields.filter(e => \"esriFieldTypeOID\" === e.type || \"oid\" === e.type);\n        e = r && r[0] && r[0].name;\n      }\n\n      return e;\n    }\n\n    get parsedUrl() {\n      return this.url ? h(this.url) : null;\n    }\n\n    set renderer(e) {\n      this.loaded && (e = this._configRenderer(e)), this._set(\"renderer\", e);\n    }\n\n    readRenderer(e, t, i) {\n      var s, n;\n      const a = null == t || null == (s = t.layerDefinition) || null == (n = s.drawingInfo) ? void 0 : n.renderer,\n            o = r(a, i);\n      return null == o ? null : (\"vector-field\" === o.type && t.symbolTileSize && !a.symbolTileSize && (o.symbolTileSize = t.symbolTileSize), T(o) || he.warn(\"ArcGISImageService\", \"Imagery layer doesn't support given renderer type.\"), o);\n    }\n\n    writeRenderer(e, t, r) {\n      t.layerDefinition = t.layerDefinition || {}, t.layerDefinition.drawingInfo = t.layerDefinition.drawingInfo || {}, t.layerDefinition.drawingInfo.renderer = e.toJSON(), \"vector-field\" === e.type && (t.symbolTileSize = e.symbolTileSize);\n    }\n\n    get rasterFields() {\n      const e = this.rasterAttributeTableFieldPrefix || \"Raster.\",\n            t = new D({\n        name: \"Raster.ItemPixelValue\",\n        alias: \"Item Pixel Value\",\n        domain: null,\n        editable: !1,\n        length: 50,\n        type: \"string\"\n      }),\n            r = new D({\n        name: \"Raster.ServicePixelValue\",\n        alias: \"Service Pixel Value\",\n        domain: null,\n        editable: !1,\n        length: 50,\n        type: \"string\"\n      }),\n            i = new D({\n        name: \"Raster.ServicePixelValue.Raw\",\n        alias: \"Raw Service Pixel Value\",\n        domain: null,\n        editable: !1,\n        length: 50,\n        type: \"string\"\n      });\n      let s = this.fields ? l(this.fields) : [];\n      s.push(r), this.capabilities.operations.supportsQuery && this.fields && this.fields.length > 0 && s.push(t), this.version >= 10.4 && p(this.rasterFunctionInfos) && this.rasterFunctionInfos.some(e => \"none\" === e.name.toLowerCase()) && s.push(i), p(this.rasterFunctionInfos) && this.rasterFunctionInfos.filter(e => \"none\" !== e.name.toLowerCase()).forEach(e => {\n        s.push(new D({\n          name: \"Raster.ServicePixelValue.\" + e.name,\n          alias: e.name,\n          domain: null,\n          editable: !1,\n          length: 50,\n          type: \"string\"\n        }));\n      }), null == this.pixelFilter || \"esriImageServiceDataTypeVector-UV\" !== this.serviceDataType && \"esriImageServiceDataTypeVector-MagDir\" !== this.serviceDataType || (s.push(new D({\n        name: \"Raster.Magnitude\",\n        alias: \"Magnitude\",\n        domain: null,\n        editable: !1,\n        type: \"double\"\n      })), s.push(new D({\n        name: \"Raster.Direction\",\n        alias: \"Direction\",\n        domain: null,\n        editable: !1,\n        type: \"double\"\n      })));\n      const n = this.rasterInfo.attributeTable && this.rasterInfo.attributeTable.fields || null;\n\n      if (n && n.length > 0) {\n        const t = n.filter(e => \"esriFieldTypeOID\" !== e.type && \"value\" !== e.name.toLowerCase()).map(t => {\n          const r = l(t);\n          return r.name = e + t.name, r;\n        });\n        s = s.concat(t);\n      }\n\n      return s;\n    }\n\n    set renderingRule(e) {\n      let t = e;\n      t && t.rasterFunction && (t = J.fromJSON({ ...t.toJSON(),\n        rasterFunction: t.rasterFunction,\n        rasterFunctionArguments: t.rasterFunctionArguments\n      })), this._set(\"renderingRule\", t);\n    }\n\n    readRenderingRule(e, t) {\n      const r = t.rasterFunctionInfos;\n      return t.renderingRule || r && r.length && \"None\" !== r[0].name ? this._isRFTJson(t.renderingRule) ? J.fromJSON({\n        rasterFunctionDefinition: t.renderingRule\n      }) : J.fromJSON(t.renderingRule || {\n        rasterFunctionInfos: t.rasterFunctionInfos\n      }) : null;\n    }\n\n    writeRenderingRule(e, t, r) {\n      const i = e.toJSON();\n      i.rasterFunctionDefinition ? t[r] = i.rasterFunctionDefinition : t[r] = i;\n    }\n\n    readSpatialReference(e, t) {\n      const r = e || t.extent.spatialReference;\n      return r ? de.fromJSON(r) : null;\n    }\n\n    readPixelType(e) {\n      return fe.fromJSON(e) || e;\n    }\n\n    writePixelType(e, t, r) {\n      (c(this.serviceRasterInfo) || this.pixelType !== this.serviceRasterInfo.pixelType) && (t[r] = fe.toJSON(e));\n    }\n\n    readVersion(e, t) {\n      let r = t.currentVersion;\n      return r || (r = t.hasOwnProperty(\"fields\") || t.hasOwnProperty(\"timeInfo\") ? 10 : 9.3), r;\n    }\n\n    applyFilter(e) {\n      let t = e;\n      return this.pixelFilter && (t = this._clonePixelData(e), this.pixelFilter(t)), t;\n    }\n\n    async applyRenderer(e, t) {\n      let r = e;\n\n      if (!this._isPicture() && this.renderer && this.symbolizer && !this.pixelFilter) {\n        const i = JSON.stringify(this._cachedRendererJson) !== JSON.stringify(this.renderer.toJSON()),\n              s = this._rasterJobHandler.instance,\n              {\n          bandIds: n\n        } = this;\n\n        if (s) {\n          i && (this.symbolizer.bind(), await s.updateSymbolizer(this.symbolizer, t), this._cachedRendererJson = this.renderer.toJSON());\n          const a = await s.symbolize({\n            bandIds: n,\n            ...e\n          }, t);\n          r = {\n            extent: e.extent,\n            pixelBlock: a\n          };\n        } else r = {\n          extent: e.extent,\n          pixelBlock: this.symbolizer.symbolize({\n            bandIds: n,\n            ...e\n          })\n        };\n      }\n\n      return r;\n    }\n\n    destroy() {\n      this._shutdownJobHandler();\n    }\n\n    increaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount++;\n    }\n\n    decreaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount--, this._rasterJobHandler.refCount <= 0 && this._shutdownJobHandler();\n    }\n\n    async computeAngles(e, t) {\n      if (await this._fetchCapabilities(null == t ? void 0 : t.signal), !this.capabilities.operations.supportsComputeAngles) throw new a(\"imagery-layer:compute-angles\", \"this operation is not supported on the input image service\");\n      return e = y(oe, e).clone(), B(this.url, e, this._getRequestOptions(t));\n    }\n\n    async computePixelSpaceLocations(e, t) {\n      if (await this._fetchCapabilities(null == t ? void 0 : t.signal), !this.capabilities.operations.supportsComputePixelLocation) throw new a(\"imagery-layer:compute-pixel-space-locations\", \"this operation is not supported on the input image service\");\n      return e = y(pe, e).clone(), G(this.url, e, this._getRequestOptions(t));\n    }\n\n    async computeHistograms(e, t) {\n      if (await this._fetchCapabilities(null == t ? void 0 : t.signal), !this.capabilities.operations.supportsComputeHistograms) throw new a(\"imagery-layer:compute-histograms\", \"this operation is not supported on the input image service\");\n      e = y(le, e).clone();\n      const {\n        raster: r,\n        mosaicRule: i,\n        renderingRule: s\n      } = this;\n      return s && null == e.renderingRule && (e.renderingRule = s), i && null == e.mosaicRule && (e.mosaicRule = i), r && null == e.raster && (e.raster = r), W(this.url, e, this._getRequestOptions(t));\n    }\n\n    async computeStatisticsHistograms(e, t) {\n      if (await this._fetchCapabilities(null == t ? void 0 : t.signal), !this.capabilities.operations.supportsComputeStatisticsHistograms) throw new a(\"imagery-layer:compute-statistics-histograms\", \"this operation is not supported on the input image service\");\n      e = y(le, e).clone();\n      const {\n        raster: r,\n        mosaicRule: i,\n        renderingRule: s\n      } = this;\n      return s && null == e.renderingRule && (e.renderingRule = s), i && null == e.mosaicRule && (e.mosaicRule = i), r && null == e.raster && (e.raster = r), X(this.url, e, this._getRequestOptions(t));\n    }\n\n    getField(e) {\n      const {\n        fieldsIndex: t\n      } = this;\n      return p(t) ? t.get(e) : void 0;\n    }\n\n    getFieldDomain(e, t) {\n      const r = this.getField(e);\n      return r ? r.domain : null;\n    }\n\n    fetchImage(e, t, r) {\n      let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (null == e || null == t || null == r) return Promise.reject(new a(\"imagery-layer:fetch-image\", \"Insufficient parameters for requesting an image. A valid extent, width and height values are required.\"));\n      const s = this.renderer || this.symbolizer ? this.generateRasterInfo(this.renderingRule, {\n        signal: i.signal\n      }) : null;\n      return d(s).then(s => {\n        s && (this.rasterInfo = s);\n        const n = {\n          imageServiceParameters: this.getExportImageServiceParameters(e, t, r, i.timeExtent),\n          imageProps: {\n            extent: e,\n            width: t,\n            height: r,\n            format: this.format\n          },\n          requestAsImageElement: i.requestAsImageElement && !this.pixelFilter || !1,\n          signal: i.signal\n        };\n        return this._requestArrayBuffer(n);\n      });\n    }\n\n    fetchKeyProperties(e) {\n      return n(this.parsedUrl.path + \"/keyProperties\", {\n        query: this._getQueryParams({\n          renderingRule: this.version >= 10.3 ? null == e ? void 0 : e.renderingRule : null\n        })\n      }).then(e => e.data);\n    }\n\n    fetchRasterAttributeTable(e) {\n      return this.version < 10.1 ? Promise.reject(new a(\"#fetchRasterAttributeTable()\", \"Failed to get rasterAttributeTable\")) : n(this.parsedUrl.path + \"/rasterAttributeTable\", {\n        query: this._getQueryParams({\n          renderingRule: this.version >= 10.3 ? null == e ? void 0 : e.renderingRule : null\n        })\n      }).then(e => ae.fromJSON(e.data));\n    }\n\n    async getCatalogItemRasterInfo(e, t) {\n      const r = n(this.parsedUrl.path + \"/\" + e + \"/info\", {\n        query: this._getQueryParams(),\n        ...t\n      }).then(e => e.data),\n            i = n(this.parsedUrl.path + \"/\" + e + \"/info/keyProperties\", {\n        query: this._getQueryParams(),\n        ...t\n      }).then(e => e.data).catch(() => {}),\n            s = await Promise.all([r, i]);\n      if (!s[0]) return;\n      const a = ee.fromJSON(s[0].extent),\n            o = s[0].statistics ? s[0].statistics.map(e => ({\n        min: e[0],\n        max: e[1],\n        avg: e[2],\n        stddev: e[3]\n      })) : null;\n      return new q({\n        bandCount: s[0].bandCount,\n        extent: a,\n        spatialReference: a.sr,\n        pixelSize: new te({\n          x: s[0].pixelSizeX,\n          y: s[0].pixelSizeY,\n          spatialReference: a.sr\n        }),\n        pixelType: s[0].pixelType.toLowerCase(),\n        statistics: o,\n        histograms: s[0].histograms,\n        keyProperties: s[1] || {}\n      });\n    }\n\n    async getCatalogItemICSInfo(e, t) {\n      const {\n        data: r\n      } = await n(this.parsedUrl.path + \"/\" + e + \"/info/ics\", {\n        query: this._getQueryParams(),\n        ...t\n      }),\n            i = r && r.ics;\n      if (!i) return;\n      let s = null;\n\n      try {\n        s = (await n(this.parsedUrl.path + \"/\" + e + \"/info\", {\n          query: this._getQueryParams(),\n          ...t\n        })).data.extent;\n      } catch {}\n\n      if (!s || !s.spatialReference) return {\n        ics: i,\n        icsToPixelTransform: null,\n        icsExtent: null,\n        northDirection: null\n      };\n      const a = this.version >= 10.7 ? n(this.parsedUrl.path + \"/\" + e + \"/info/icstopixel\", {\n        query: this._getQueryParams(),\n        ...t\n      }).then(e => e.data).catch(() => ({})) : {},\n            o = s.spatialReference,\n            l = {\n        geometries: JSON.stringify({\n          geometryType: \"esriGeometryEnvelope\",\n          geometries: [s]\n        }),\n        inSR: o.wkid || JSON.stringify(o),\n        outSR: \"0:\" + e\n      },\n            u = n(this.parsedUrl.path + \"/project\", {\n        query: this._getQueryParams(l),\n        ...t\n      }).then(e => e.data).catch(() => ({})),\n            p = 5,\n            c = (s.xmin + s.xmax) / 2,\n            m = (s.ymax - s.ymin) / (p + 1),\n            d = s.ymin + m,\n            h = [];\n\n      for (let n = 0; n < p; n++) h.push({\n        x: c,\n        y: d + m * n\n      });\n\n      const f = {\n        geometries: JSON.stringify({\n          geometryType: \"esriGeometryPoint\",\n          geometries: h\n        }),\n        inSR: o.wkid || JSON.stringify(o),\n        outSR: \"0:\" + e\n      },\n            y = n(this.parsedUrl.path + \"/project\", {\n        query: this._getQueryParams(f),\n        ...t\n      }).then(e => e.data).catch(() => ({})),\n            g = await Promise.all([a, u, y]);\n      let R = g[0].ipxf;\n\n      if (null == R) {\n        var v, x, b;\n        const e = null == (v = i.geodataXform) ? void 0 : v.xf_0;\n        \"topup\" === (null == e || null == (x = e.name) ? void 0 : x.toLowerCase()) && 6 === (null == e || null == (b = e.coefficients) ? void 0 : b.length) && (R = {\n          affine: {\n            name: \"ics [sensor: Frame] to pixel (column, row) transformation\",\n            coefficients: e.coefficients,\n            cellsizeRatio: 0,\n            type: \"GeometricXform\"\n          }\n        });\n      }\n\n      const S = ee.fromJSON(g[1] && g[1].geometries && g[1].geometries[0]);\n      S && (S.spatialReference = new de({\n        wkid: 0,\n        imageCoordinateSystem: i\n      }));\n      const I = g[2].geometries ? g[2].geometries.filter(e => null != e && null != e.x && null != e.y && \"NaN\" !== e.x && \"NaN\" !== e.y) : [],\n            _ = I.length;\n      if (_ < 3) return {\n        ics: i,\n        icsToPixelTransform: R,\n        icsExtent: S,\n        northDirection: null\n      };\n      let w = 0,\n          F = 0,\n          O = 0,\n          D = 0;\n\n      for (let n = 0; n < _; n++) w += I[n].x, F += I[n].y, O += I[n].x * I[n].x, D += I[n].x * I[n].y;\n\n      const P = (_ * D - w * F) / (_ * O - w * w);\n      let T = 0;\n      const j = I[p - 1].x > I[0].x,\n            N = I[p - 1].y > I[0].y;\n      return P === 1 / 0 ? T = N ? 90 : 270 : 0 === P ? T = j ? 0 : 180 : P > 0 ? T = j ? 180 * Math.atan(P) / Math.PI : 180 * Math.atan(P) / Math.PI + 180 : P < 0 && (T = N ? 180 + 180 * Math.atan(P) / Math.PI : 360 + 180 * Math.atan(P) / Math.PI), {\n        ics: i,\n        icsToPixelTransform: R,\n        icsExtent: S,\n        northDirection: T\n      };\n    }\n\n    async generateRasterInfo(e, t) {\n      var r;\n      if ((!e || \"none\" === (null == e || null == (r = e.functionName) ? void 0 : r.toLowerCase()) || this._isVectorFieldResampleFunction(e)) && p(this.serviceRasterInfo)) return this.serviceRasterInfo;\n      const i = Re(e);\n      if (this._functionRasterInfos[i]) return this._functionRasterInfos[i];\n\n      const s = this._generateRasterInfo(e, t);\n\n      this._functionRasterInfos[i] = s;\n\n      try {\n        return await s;\n      } catch {\n        return this._functionRasterInfos[i] = null, null;\n      }\n    }\n\n    getExportImageServiceParameters(e, t, r, i) {\n      var s;\n      e = e.clone().shiftCentralMeridian();\n      const n = Y(e.spatialReference, this.parsedUrl.path);\n      p(this.serviceRasterInfo) && this.pixelType !== this.serviceRasterInfo.pixelType && (this.exportImageServiceParameters.pixelType = this.pixelType);\n      const a = this.exportImageServiceParameters.toJSON(),\n            {\n        bandIds: o,\n        noData: l\n      } = a;\n      let {\n        renderingRule: u\n      } = a;\n      const c = null == (s = this.renderingRule) ? void 0 : s.rasterFunctionDefinition,\n            m = !this.renderer || \"raster-stretch\" === this.renderer.type;\n\n      if (null != o && o.length && this._hasRenderingRule(this.renderingRule) && !c && m) {\n        const e = {\n          rasterFunction: \"ExtractBand\",\n          rasterFunctionArguments: {\n            BandIds: o\n          }\n        };\n        if (\"Stretch\" === u.rasterFunction) e.rasterFunctionArguments.Raster = u.rasterFunctionArguments.Raster, u.rasterFunctionArguments.Raster = e;else if (\"Colormap\" === u.rasterFunction) {\n          const t = u.rasterFunctionArguments.Raster;\n          \"Stretch\" === (null == t ? void 0 : t.rasterFunction) ? (e.rasterFunctionArguments.Raster = t.rasterFunctionArguments.Raster, t.rasterFunctionArguments.Raster = e) : (e.rasterFunctionArguments.Raster = t, u.rasterFunctionArguments.Raster = e);\n        } else e.rasterFunctionArguments.Raster = u, u = e;\n        a.bandIds = void 0;\n      } else a.bandIds = null == o ? void 0 : o.join(\",\");\n\n      l instanceof Array && l.length > 0 && (a.noData = l.join(\",\"));\n      const d = this._serviceSupportsMosaicRule ? this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule, i) : null;\n      a.mosaicRule = d && JSON.stringify(d), a.renderingRule = this._getRenderingRuleString(J.fromJSON(u));\n      const h = {};\n\n      if (i) {\n        const {\n          start: e,\n          end: t\n        } = i.toJSON();\n        e && t && e === t ? h.time = \"\" + e : null == e && null == t || (h.time = `${null == e ? \"null\" : e},${null == t ? \"null\" : t}`);\n      }\n\n      return {\n        bbox: e.xmin + \",\" + e.ymin + \",\" + e.xmax + \",\" + e.ymax,\n        bboxSR: n,\n        imageSR: n,\n        size: t + \",\" + r,\n        ...a,\n        ...h\n      };\n    }\n\n    async getSamples(e, t) {\n      if (await this._fetchCapabilities(null == t ? void 0 : t.signal), !this.capabilities.operations.supportsGetSamples) throw new a(\"imagery-layer:get-samples\", \"getSamples operation is not supported on the input image service\");\n      e = y(ce, e).clone();\n      const {\n        raster: r\n      } = this;\n      return r && null == e.raster && (e.raster = r), K(this.url, e, this._getRequestOptions(t));\n    }\n\n    async identify(e, t) {\n      if (await this._fetchCapabilities(null == t ? void 0 : t.signal), !this.capabilities.operations.supportsIdentify) throw new a(\"imagery-layer:query-rasters\", \"query operation is not supported on the input image service\");\n      e = y(ue, e).clone();\n      const {\n        raster: r,\n        mosaicRule: i,\n        renderingRule: s\n      } = this;\n\n      if (s && null == e.renderingRule && (e.renderingRule = s), i && null == e.mosaicRule) {\n        const t = this._combineMosaicRuleWithTimeExtent(i, e.timeExtent);\n\n        e.mosaicRule = m(t);\n      }\n\n      return r && null == e.raster && (e.raster = r), $(this.url, e, this._getRequestOptions(t));\n    }\n\n    createQuery() {\n      const e = new ie();\n      return e.outFields = [\"*\"], e.returnGeometry = !0, e.where = this.definitionExpression || \"1=1\", e;\n    }\n\n    async queryRasters(e, t) {\n      return ({\n        query: e,\n        requestOptions: t\n      } = await this._prepareForQuery(e, t)), ne(this.url, e, t);\n    }\n\n    async queryObjectIds(e, t) {\n      return ({\n        query: e,\n        requestOptions: t\n      } = await this._prepareForQuery(e, t)), se(this.url, e, t);\n    }\n\n    async queryRasterCount(e, t) {\n      return ({\n        query: e,\n        requestOptions: t\n      } = await this._prepareForQuery(e, t)), Z(this.url, e, t);\n    }\n\n    async queryVisibleRasters(e, t) {\n      if (!e) throw new a(\"imagery-layer: query-visible-rasters\", \"missing query parameter\");\n      const {\n        pixelSize: r,\n        returnDomainValues: i,\n        returnTopmostRaster: s,\n        showNoDataRecords: n\n      } = t || {\n        pixelSize: null,\n        returnDomainValues: !1,\n        returnTopmostRaster: !1,\n        showNoDataRecords: !1\n      };\n      let o = !1,\n          l = null,\n          u = null;\n      const m = \"raster.servicepixelvalue\",\n            d = this.rasterFunctionNamesIndex;\n\n      if (p(e.outFields) && (o = e.outFields.some(e => -1 === e.toLowerCase().indexOf(m)), this.version >= 10.4)) {\n        const t = e.outFields.filter(e => e.toLowerCase().indexOf(m) > -1 && e.length > m.length).map(e => {\n          const t = e.slice(m.length + 1);\n          return [this._updateRenderingRulesFunctionName(t, d), t];\n        });\n        l = t.map(e => new J({\n          functionName: e[0]\n        })), u = t.map(e => e[1]), 0 === l.length ? this.renderingRule ? (l.push(this.renderingRule), u.push(this.renderingRule.functionName)) : l = null : this.renderingRule && !l.some(e => e.functionName === this.renderingRule.functionName) && (l.push(this.renderingRule), u.push(this.renderingRule.functionName));\n      }\n\n      const h = c(e.outSpatialReference) || e.outSpatialReference.equals(this.spatialReference),\n            f = e.timeExtent || this.timeExtent,\n            y = this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule, f),\n            g = this._getQueryParams({\n        geometry: e.geometry,\n        timeExtent: f,\n        mosaicRule: y,\n        renderingRule: this.version < 10.4 ? this.renderingRule : null,\n        renderingRules: l,\n        pixelSize: r,\n        returnCatalogItems: o,\n        returnGeometry: h,\n        raster: this.raster,\n        maxItemCount: s ? 1 : null\n      });\n\n      delete g.f;\n      const R = new ue(g);\n\n      try {\n        var v, x;\n        await this.generateRasterInfo(this.renderingRule);\n        const r = await $(this.url, R, {\n          signal: null == t ? void 0 : t.signal,\n          query: { ...this.customParameters\n          }\n        }),\n              s = e.outFields,\n              a = r.value.toLowerCase().indexOf(\"nodata\") > -1;\n        if (!(o && !h && (null == r || null == (v = r.catalogItems) ? void 0 : v.features.length) && (n || !a))) return this._processVisibleRastersResponse(r, {\n          returnDomainValues: i,\n          templateRRFunctionNames: u,\n          showNoDataRecords: n,\n          templateFields: s\n        });\n        const l = this.objectIdField || \"ObjectId\",\n              c = r.catalogItems.features,\n              m = c.map(e => {\n          var t;\n          return null == (t = e.attributes) ? void 0 : t[l];\n        }),\n              d = new ie({\n          objectIds: m,\n          returnGeometry: !0,\n          outSpatialReference: e.outSpatialReference,\n          outFields: [l]\n        }),\n              f = await this.queryRasters(d);\n        return null != f && null != (x = f.features) && x.length && f.features.forEach(t => {\n          c.forEach(r => {\n            r.attributes[l] === t.attributes[l] && (r.geometry = new re(t.geometry), p(e.outSpatialReference) && (r.geometry.spatialReference = e.outSpatialReference));\n          });\n        }), this._processVisibleRastersResponse(r, {\n          returnDomainValues: i,\n          templateRRFunctionNames: u,\n          showNoDataRecords: n,\n          templateFields: s\n        });\n      } catch {\n        throw new a(\"imagery-layer:query-visible-rasters\", \"encountered error when querying visible rasters\");\n      }\n    }\n\n    async fetchVariableStatisticsHistograms(e, t) {\n      const r = n(this.parsedUrl.path + \"/statistics\", {\n        query: this._getQueryParams({\n          variable: e\n        }),\n        signal: t\n      }).then(e => {\n        var t;\n        return null == (t = e.data) ? void 0 : t.statistics;\n      }),\n            i = n(this.parsedUrl.path + \"/histograms\", {\n        query: this._getQueryParams({\n          variable: e\n        }),\n        signal: t\n      }).then(e => {\n        var t;\n        return null == (t = e.data) ? void 0 : t.histograms;\n      }),\n            s = await Promise.all([r, i]);\n      return s[0] && s[0].forEach(e => {\n        e.avg = e.mean, e.stddev = e.standardDeviation;\n      }), {\n        statistics: s[0] || null,\n        histograms: s[1] || null\n      };\n    }\n\n    async createStreamlinesMesh(e, t) {\n      const r = this._rasterJobHandler.instance;\n      return r ? r.createStreamlinesMesh(e, t) : me(e.rendererSettings, e.flowData, p(t.signal) ? t.signal : new AbortController().signal);\n    }\n\n    async _fetchService(e) {\n      await this._fetchServiceInfo(e), p(this.serviceRasterInfo) && !this.rasterInfo && (this.rasterInfo = this.serviceRasterInfo);\n\n      const t = this.sourceJSON,\n            r = p(this.serviceRasterInfo) ? Promise.resolve(this.serviceRasterInfo) : this._fetchAuxiliaryRasterInfo({\n        serviceInfo: t,\n        signal: e\n      }).then(e => (this._set(\"serviceRasterInfo\", e), e)),\n            i = this._hasRenderingRule(this.renderingRule) ? this.generateRasterInfo(this.renderingRule, {\n        signal: e\n      }) : null,\n            s = this._getRasterFunctionInfos();\n\n      return Promise.all([r, i, s]).then(e => {\n        e[1] ? this._set(\"rasterInfo\", e[1]) : this._set(\"rasterInfo\", e[0]), e[2] && this._set(\"rasterFunctionInfos\", e[2]), this.renderer && !this._isSupportedRenderer(this.renderer) && (this._set(\"renderer\", null), he.warn(\"ArcGISImageService\", \"Switching to the default renderer. Renderer applied is not valid for this Imagery Layer\")), this._set(\"renderer\", this._configRenderer(this.renderer)), this.watch(\"renderingRule\", e => {\n          (this.renderer || this.symbolizer || this.popupEnabled && this.popupTemplate) && this.generateRasterInfo(e).then(e => {\n            e && (this.rasterInfo = e);\n          });\n        });\n        const t = p(this.serviceRasterInfo) && this.serviceRasterInfo.multidimensionalInfo;\n        t && this._updateMultidimensionalDefinition(t);\n      });\n    }\n\n    _combineMosaicRuleWithTimeExtent(e, t) {\n      const r = this.timeInfo;\n      if (c(e) || c(this.multidimensionalInfo) || c(t) || c(null == r ? void 0 : r.startField)) return e;\n      const {\n        startField: i\n      } = r;\n      var s;\n      if (e = e.clone(), \"mosaic-dataset\" === this._serviceSourceType) return e.multidimensionalDefinition = null == (s = e.multidimensionalDefinition) ? void 0 : s.filter(e => e.dimensionName !== i), this._cleanupMultidimensionalDefinition(e);\n      e.multidimensionalDefinition = e.multidimensionalDefinition || [];\n      const n = e.multidimensionalDefinition.filter(e => e.dimensionName === i),\n            a = p(t.start) ? t.start.getTime() : null,\n            o = p(t.end) ? t.end.getTime() : null,\n            l = null == a || null == o || a === o,\n            u = l ? [a || o] : [[a, o]],\n            m = this.version >= 10.8;\n      if (n.length) n.forEach(e => {\n        e.dimensionName === i && (m ? (e.dimensionName = null, e.isSlice = null, e.values = null) : (e.isSlice = l, e.values = u));\n      });else if (!m) {\n        const t = e.multidimensionalDefinition.filter(e => null != e.variableName && null == e.dimensionName);\n        t.length ? t.forEach(e => {\n          e.dimensionName = i, e.isSlice = l, e.values = u;\n        }) : e.multidimensionalDefinition.push(new F({\n          variableName: \"\",\n          dimensionName: i,\n          isSlice: l,\n          values: u\n        }));\n      }\n      return this._cleanupMultidimensionalDefinition(e);\n    }\n\n    _cleanupMultidimensionalDefinition(e) {\n      return c(e) ? null : (e.multidimensionalDefinition && (e.multidimensionalDefinition = e.multidimensionalDefinition.filter(e => !(!e.variableName && !e.dimensionName)), 0 === e.multidimensionalDefinition.length && (e.multidimensionalDefinition = null)), \"mosaic-dataset\" !== this._serviceSourceType && null == e.multidimensionalDefinition ? null : e);\n    }\n\n    async _prepareForQuery(e, t) {\n      var r;\n      if (await this._fetchCapabilities(null == (r = t) ? void 0 : r.signal), !this.capabilities.operations.supportsQuery) throw new a(\"imagery-layer:query-rasters\", \"query operation is not supported on the input image service\");\n      return e = p(e) ? y(ie, e) : this.createQuery(), t = this._getRequestOptions(t), this.raster && (t.query = { ...t.query,\n        raster: this.raster\n      }), {\n        query: e,\n        requestOptions: t\n      };\n    }\n\n    async _initJobHandler() {\n      if (null != this._rasterJobHandler.connectionPromise) return this._rasterJobHandler.connectionPromise;\n      const e = new V();\n      this._rasterJobHandler.connectionPromise = e.initialize().then(() => {\n        this._rasterJobHandler.instance = e;\n      }, () => null), await this._rasterJobHandler.connectionPromise;\n    }\n\n    _shutdownJobHandler() {\n      this._rasterJobHandler.instance && this._rasterJobHandler.instance.destroy(), this._rasterJobHandler.instance = null, this._rasterJobHandler.connectionPromise = null, this._rasterJobHandler.refCount = 0;\n    }\n\n    _isSupportedRenderer(e) {\n      const {\n        rasterInfo: t,\n        renderingRule: r\n      } = this;\n      return \"unique-value\" === e.type && this._hasRenderingRule(r) && 1 === t.bandCount && [\"u8\", \"s8\"].includes(t.pixelType) || Q(this.rasterInfo).includes(this.renderer.type);\n    }\n\n    async _fetchCapabilities(e) {\n      return this.capabilities || (await this._fetchServiceInfo(e)), this.capabilities;\n    }\n\n    async _fetchServiceInfo(e) {\n      var t;\n      let r = this.sourceJSON;\n\n      if (!r) {\n        const {\n          data: t,\n          ssl: i\n        } = await n(this.parsedUrl.path, {\n          query: this._getQueryParams(),\n          signal: e\n        });\n        r = t, this.sourceJSON = r, i && (this.url = this.url.replace(/^http:/i, \"https:\"));\n      }\n\n      if ((null == (t = r.capabilities) ? void 0 : t.toLowerCase().split(\",\").map(e => e.trim()).indexOf(\"tilesonly\")) > -1) throw new a(\"imagery-layer:fetch-service-info\", \"use ImageryTileLayer to open tiles-only image services\");\n      this.read(r, {\n        origin: \"service\",\n        url: this.parsedUrl\n      });\n    }\n\n    _isMosaicDataset(e) {\n      var t;\n      return e.serviceSourceType ? \"esriImageServiceSourceTypeMosaicDataset\" === e.serviceSourceType : (null == (t = e.fields) ? void 0 : t.length) > 0;\n    }\n\n    _isMosaicRuleSupported(e) {\n      var t;\n      if (!e) return !1;\n\n      const r = this._isMosaicDataset(e),\n            i = e.currentVersion >= 10.71 && e.hasMultidimensions && e.timeInfo && !(e.objectIdField && (null == (t = e.fields) ? void 0 : t.length) > 1);\n\n      return r || i;\n    }\n\n    _isVectorFieldResampleFunction(e) {\n      if (!p(e)) return !1;\n      const {\n        functionName: t,\n        functionArguments: r\n      } = e,\n            i = \"resample\" === (null == t ? void 0 : t.toLowerCase()),\n            s = (null == r ? void 0 : r.ResampleType) || (null == r ? void 0 : r.resampleType);\n      return i && (7 === s || 10 === s);\n    }\n\n    _isPicture() {\n      return !this.format || this.format.indexOf(\"jpg\") > -1 || this.format.indexOf(\"png\") > -1;\n    }\n\n    _configRenderer(e) {\n      if (!this._isPicture() && !this.pixelFilter) {\n        if (!this.bandIds && this.rasterInfo.bandCount >= 3) {\n          const e = U(this.rasterInfo);\n          !e || 3 === this.rasterInfo.bandCount && 0 === e[0] && 1 === e[1] && 2 === e[2] || (this.bandIds = e);\n        }\n\n        var t, r;\n        if (!e) e = H(this.rasterInfo, {\n          bandIds: this.bandIds,\n          variableName: this.renderingRule ? null : null == (t = this.mosaicRule) || null == (r = t.multidimensionalDefinition) ? void 0 : r[0].variableName\n        });\n        const i = L(e.toJSON());\n        this.symbolizer ? (this.symbolizer.rendererJSON = i, this.symbolizer.rasterInfo = this.rasterInfo) : this.symbolizer = new k({\n          rendererJSON: i,\n          rasterInfo: this.rasterInfo\n        }), this.symbolizer.bind().success || (this.symbolizer = null);\n      }\n\n      return e;\n    }\n\n    _clonePixelData(e) {\n      return null == e ? e : {\n        extent: e.extent && e.extent.clone(),\n        pixelBlock: p(e.pixelBlock) && e.pixelBlock.clone()\n      };\n    }\n\n    _getQueryParams(e) {\n      p(null == e ? void 0 : e.renderingRule) && \"string\" != typeof e.renderingRule && (e.renderingRule = this._getRenderingRuleString(e.renderingRule));\n      const {\n        raster: t,\n        viewId: r\n      } = this;\n      return {\n        raster: t,\n        viewId: r,\n        f: \"json\",\n        ...e,\n        ...this.customParameters\n      };\n    }\n\n    _getRequestOptions(e) {\n      return { ...e,\n        query: { ...(null == e ? void 0 : e.query),\n          ...this.customParameters\n        }\n      };\n    }\n\n    _decodePixelBlock(e, t, r) {\n      return this._rasterJobHandler.instance ? this._rasterJobHandler.instance.decode({\n        data: e,\n        options: t\n      }) : A(e, t, r);\n    }\n\n    async _fetchMultidimensionalInfo(e) {\n      var t;\n      const r = await n(this.parsedUrl.path + \"/multidimensionalInfo\", {\n        query: this._getQueryParams(),\n        signal: e\n      }).then(e => {\n        var t;\n        return null == (t = e.data) ? void 0 : t.multidimensionalInfo;\n      });\n      return null != (t = r.variables) && t.length && r.variables.forEach(e => {\n        var t;\n        null != (t = e.statistics) && t.length && e.statistics.forEach(e => {\n          e.avg = e.mean, e.stddev = e.standardDeviation;\n        });\n      }), r;\n    }\n\n    async _getRasterFunctionInfos(e) {\n      const t = this.sourceJSON.rasterFunctionInfos;\n      if (this.serviceRasterInfo) return t;\n\n      if (t && this.version >= 10.3) {\n        var r;\n        if (1 === t.length && \"none\" === t[0].name.toLowerCase()) return t;\n        return null == (r = (await n(this.parsedUrl.path + \"/rasterFunctionInfos\", {\n          query: this._getQueryParams(),\n          signal: e\n        })).data) ? void 0 : r.rasterFunctionInfos;\n      }\n\n      return null;\n    }\n\n    async _fetchAuxiliaryRasterInfo(e) {\n      const t = e && e.serviceInfo;\n      if (!t) return Promise.reject(new a(\"imagery-layer:fetch-metadata\", \"valid serviceInfo is required\"));\n\n      const r = e.signal,\n            i = !!(t.hasRasterAttributeTable && this.version >= 10.1) && n(this.parsedUrl.path + \"/rasterAttributeTable\", {\n        query: this._getQueryParams({\n          renderingRule: this.version >= 10.1 ? null == e ? void 0 : e.renderingRule : null\n        }),\n        signal: r\n      }).then(e => ae.fromJSON(e.data)).catch(() => null),\n            s = !!(t.hasColormap && this.version >= 10.1) && n(this.parsedUrl.path + \"/colormap\", {\n        query: this._getQueryParams({\n          renderingRule: this.version >= 10.6 ? null == e ? void 0 : e.renderingRule : null\n        }),\n        signal: r\n      }).then(e => {\n        var t;\n        return null == (t = e.data) ? void 0 : t.colormap;\n      }),\n            o = !!(t.hasHistograms && this.version >= 10.1) && n(this.parsedUrl.path + \"/histograms\", {\n        query: this._getQueryParams({\n          renderingRule: this.version >= 10.1 ? null == e ? void 0 : e.renderingRule : null\n        }),\n        signal: r\n      }).then(e => {\n        var t;\n        return null == (t = e.data) ? void 0 : t.histograms;\n      }),\n            l = this.version >= 10.3 && n(this.parsedUrl.path + \"/keyProperties\", {\n        query: this._getQueryParams({\n          renderingRule: null == e ? void 0 : e.renderingRule\n        }),\n        signal: r\n      }).then(e => e.data).catch(() => {}),\n            u = !!(t.hasMultidimensions && this.version >= 10.3) && this._fetchMultidimensionalInfo(),\n            p = await Promise.all([i, s, o, l, u]);\n\n      let c = null;\n\n      if (t.minValues && t.minValues.length === t.bandCount) {\n        c = [];\n\n        for (let e = 0; e < t.minValues.length; e++) c.push({\n          min: t.minValues[e],\n          max: t.maxValues[e],\n          avg: t.meanValues[e],\n          stddev: t.stdvValues[e]\n        });\n      }\n\n      const m = Math.ceil((t.extent.xmax - t.extent.xmin) / t.pixelSizeX - .1),\n            d = Math.ceil((t.extent.ymax - t.extent.ymin) / t.pixelSizeY - .1),\n            h = de.fromJSON(t.spatialReference || t.extent.spatialReference);\n      return new q({\n        width: m,\n        height: d,\n        bandCount: t.bandCount,\n        extent: ee.fromJSON(t.extent),\n        spatialReference: h,\n        pixelSize: new te({\n          x: t.pixelSizeX,\n          y: t.pixelSizeY,\n          spatialReference: h\n        }),\n        pixelType: t.pixelType.toLowerCase(),\n        statistics: c,\n        attributeTable: p[0] || null,\n        colormap: p[1] || null,\n        histograms: p[2] || null,\n        keyProperties: p[3] || {},\n        multidimensionalInfo: p[4] || null\n      });\n    }\n\n    async _requestArrayBuffer(e) {\n      var t;\n      const {\n        imageProps: r,\n        requestAsImageElement: i,\n        signal: s\n      } = e;\n\n      if (i && !this.pixelFilter && (null == (t = r.format) ? void 0 : t.indexOf(\"png\")) > -1) {\n        return {\n          imageElement: (await n(this.parsedUrl.path + \"/exportImage\", {\n            responseType: \"image\",\n            query: this._getQueryParams({\n              f: \"image\",\n              ...e.imageServiceParameters\n            }),\n            signal: s\n          })).data,\n          params: r\n        };\n      }\n\n      const o = this._initJobHandler(),\n            l = n(this.parsedUrl.path + \"/exportImage\", {\n        responseType: \"array-buffer\",\n        query: this._getQueryParams({\n          f: \"image\",\n          ...e.imageServiceParameters\n        }),\n        signal: s\n      }),\n            u = (await Promise.all([l, o]))[0].data,\n            p = r.format || \"jpgpng\";\n\n      let c = p;\n      if (\"bsq\" !== c && \"bip\" !== c && (c = z(u)), !c) throw new a(\"imagery-layer:fetch-image\", \"unsupported format signature \" + String.fromCharCode.apply(null, new Uint8Array(u)));\n      const m = {\n        signal: s\n      },\n            d = \"gif\" === p || \"bmp\" === p || p.indexOf(\"png\") > -1 && (\"png\" === c || \"jpg\" === c) ? A(u, {\n        useCanvas: !0,\n        ...r\n      }, m) : this._decodePixelBlock(u, {\n        width: r.width,\n        height: r.height,\n        planes: null,\n        pixelType: null,\n        noDataValue: null,\n        format: p\n      }, m);\n      return {\n        pixelData: {\n          pixelBlock: await d,\n          extent: r.extent\n        },\n        params: r\n      };\n    }\n\n    async _generateRasterInfo(e, t) {\n      const {\n        data: r\n      } = await n(this.parsedUrl.path, {\n        query: this._getQueryParams({\n          renderingRule: e\n        }),\n        ...t\n      });\n      return await this._fetchAuxiliaryRasterInfo({\n        serviceInfo: r,\n        renderingRule: e,\n        ...t\n      });\n    }\n\n    _isValidCustomizedMosaicRule(e) {\n      var t;\n      return e && JSON.stringify(e.toJSON()) !== JSON.stringify(null == (t = this._defaultServiceMosaicRule) ? void 0 : t.toJSON());\n    }\n\n    _updateMultidimensionalDefinition(e) {\n      if (this._isValidCustomizedMosaicRule(this.mosaicRule)) return;\n      const t = e.variables[0].dimensions,\n            r = \"\",\n            i = [];\n\n      for (const s in t) if (t.hasOwnProperty(s)) {\n        const e = t[s],\n              n = e.extent;\n        let a = !0,\n            o = [n[0]];\n        e.hasRanges && !0 === e.hasRanges ? (a = !1, o = [e.values[0]]) : \"stdz\" === e.name.toLowerCase() && Math.abs(n[1]) <= Math.abs(n[0]) && (o = [n[1]]), i.push(new F({\n          variableName: r,\n          dimensionName: t[s].name,\n          isSlice: a,\n          values: o\n        }));\n      }\n\n      if (i.length > 0) {\n        this.mosaicRule = this.mosaicRule || new j();\n        const e = this.mosaicRule.multidimensionalDefinition;\n        (!e || e && e.length <= 0) && (this.mosaicRule.multidimensionalDefinition = i);\n      }\n    }\n\n    _formatAttributeValue(e, t) {\n      if (\"string\" == typeof e) {\n        const r = this.popupTemplate && this.popupTemplate.fieldInfos,\n              i = this._getFieldInfo(r, t),\n              s = i && i.format;\n\n        if (s) {\n          let t, r;\n          return e.trim().indexOf(\",\") > -1 ? (t = \",\", r = t + \" \", this._formatDelimitedString(e, t, r, s)) : e.trim().indexOf(\";\") > -1 ? (t = \";\", r = t + \" \", this._formatDelimitedString(e, t, r, s)) : e.trim().indexOf(\" \") > -1 ? (t = r = \" \", this._formatDelimitedString(e, t, r, s)) : this._formatNumberFromString(e, s);\n        }\n      }\n\n      return e;\n    }\n\n    _getFieldInfo(e, t) {\n      if (!e || !e.length || !t) return;\n      const r = t.toLowerCase();\n      let i;\n      return e.some(e => !(!e.fieldName || e.fieldName.toLowerCase() !== r && e.fieldName.toLowerCase() !== r.replace(/ /g, \"_\")) && (i = e, !0)), i;\n    }\n\n    _formatDelimitedString(e, t, r, i) {\n      return e && t && r && i ? e.trim().split(t).map(e => this._formatNumberFromString(e, i)).join(r) : e;\n    }\n\n    _formatNumberFromString(e, t) {\n      if (!e || !t) return e;\n      const r = Number(e);\n      return isNaN(r) ? e : t.format(r);\n    }\n\n    _processVisibleRastersResponse(e, r) {\n      r = r || {};\n      const i = e.value,\n            {\n        templateRRFunctionNames: s,\n        showNoDataRecords: n,\n        returnDomainValues: a,\n        templateFields: o\n      } = r,\n            l = e.processedValues;\n      let u = e.catalogItems && e.catalogItems.features,\n          c = e.properties && e.properties.Values && e.properties.Values.map(e => e.replace(/ /gi, \", \")) || [];\n      const m = this.objectIdField || \"ObjectId\",\n            d = \"string\" == typeof i && i.toLowerCase().indexOf(\"nodata\") > -1,\n            h = [];\n\n      if (i && !u && !d) {\n        const e = {};\n        e[m] = 0;\n        c = [i], u = [new t(this.fullExtent, null, e)];\n      }\n\n      if (!u) return [];\n      let f, y, g;\n      this._updateResponseFieldNames(u, o), d && !n && (u = []);\n\n      for (let t = 0; t < u.length; t++) {\n        if (f = u[t], null != i) {\n          if (y = c[t], g = this.renderingRule && l && l.length > 0 && s && s.length > 0 && s.indexOf(this.renderingRule.functionName) > -1 ? l[s.indexOf(this.renderingRule.functionName)] : i, \"nodata\" === y.toLowerCase() && !n) continue;\n          const e = \"Raster.ItemPixelValue\",\n                r = \"Raster.ServicePixelValue\";\n          f.attributes[e] = this._formatAttributeValue(y, e), f.attributes[r] = this._formatAttributeValue(g, r), this._updateFeatureWithMagDirValues(f, y);\n          const a = this.fields && this.fields.length > 0;\n          let o = this.renderingRule && p(this.serviceRasterInfo) && this.serviceRasterInfo.attributeTable ? a ? y : i : g;\n          this.renderingRule || (o = a ? y : i), this._updateFeatureWithRasterAttributeTableValues(f, o);\n        }\n\n        if (f.sourceLayer = f.layer = this, a && this._updateFeatureWithDomainValues(f), s && l && s.length === l.length) for (let e = 0; e < s.length; e++) {\n          const t = \"Raster.ServicePixelValue.\" + s[e];\n          f.attributes[t] = this._formatAttributeValue(l[e], t);\n        }\n        h.push(u[t]);\n      }\n\n      return h;\n    }\n\n    _updateFeatureWithRasterAttributeTableValues(e, t) {\n      const r = this.rasterInfo && this.rasterInfo.attributeTable || p(this.serviceRasterInfo) && this.serviceRasterInfo.attributeTable,\n            i = r && r.features;\n      if (!i) return;\n      const s = r.fields,\n            n = s.map(e => e.name).filter(e => \"value\" === e.toLowerCase()),\n            a = n && n[0];\n      if (!a) return;\n      const o = i.filter(e => e.attributes[a] === (null != t ? parseInt(t, 10) : null));\n      o && o[0] && s.forEach(t => {\n        const r = this.rasterAttributeTableFieldPrefix + t.name;\n        e.attributes[r] = this._formatAttributeValue(o[0].attributes[t.name], r);\n      });\n    }\n\n    _updateFeatureWithMagDirValues(e, t) {\n      if (\"esriImageServiceDataTypeVector-UV\" !== this.serviceDataType && \"esriImageServiceDataTypeVector-MagDir\" !== this.serviceDataType) return;\n      const r = t.split(/,\\s*/).map(e => parseFloat(e)),\n            i = r.map(e => [e]),\n            s = r.map(e => ({\n        minValue: e,\n        maxValue: e,\n        noDataValue: null\n      })),\n            n = new N({\n        height: 1,\n        width: 1,\n        pixelType: \"f32\",\n        pixels: i,\n        statistics: s\n      });\n      null != this.pixelFilter && this.pixelFilter({\n        pixelBlock: n,\n        extent: new ee(0, 0, 0, 0, this.spatialReference)\n      });\n      const a = \"esriImageServiceDataTypeVector-MagDir\" === this.serviceDataType ? [n.pixels[0][0], n.pixels[1][0]] : E([n.pixels[0][0], n.pixels[1][0]]);\n      e.attributes[\"Raster.Magnitude\"] = a[0], e.attributes[\"Raster.Direction\"] = a[1];\n    }\n\n    _updateFeatureWithDomainValues(e) {\n      const t = this.fields && this.fields.filter(e => e.domain && \"coded-value\" === e.domain.type);\n      null != t && t.forEach(t => {\n        const r = e.attributes[t.name];\n\n        if (null != r) {\n          const i = t.domain.codedValues.find(e => e.code === r);\n          i && (e.attributes[t.name] = i.name);\n        }\n      });\n    }\n\n    _updateResponseFieldNames(e, t) {\n      if (!t || t.length < 1) return;\n      const r = this.fieldsIndex;\n      p(r) && e.forEach(e => {\n        if (e && e.attributes) for (const i of t) if (r.has(i)) {\n          const t = r.get(i).name;\n          t !== i && (e.attributes[i] = e.attributes[t], delete e.attributes[t]);\n        }\n      });\n    }\n\n    _getRenderingRuleString(e) {\n      if (this._hasRenderingRule(e)) {\n        var t;\n        let r = e.toJSON();\n        return r = null != (t = r.rasterFunctionDefinition) ? t : r, (r.thumbnail || r.thumbnailEx) && (r.thumbnail = r.thumbnailEx = null), JSON.stringify(r);\n      }\n\n      return null;\n    }\n\n    _hasRenderingRule(e) {\n      return e && e.functionName && \"none\" !== e.functionName.toLowerCase();\n    }\n\n    _updateRenderingRulesFunctionName(e, t) {\n      if (!e || e.length < 1) return;\n      if (\"Raw\" === e) return e.replace(\"Raw\", \"None\");\n      const r = e.toLowerCase().replace(/ /gi, \"_\");\n      return t.has(r) ? t.get(r) : e;\n    }\n\n    _isRFTJson(e) {\n      return e && e.name && e.arguments && e.function && e.hasOwnProperty(\"functionType\");\n    }\n\n    _readCapabilities(e) {\n      const t = e.capabilities ? e.capabilities.toLowerCase().split(\",\").map(e => e.trim()) : [\"image\", \"catalog\"],\n            {\n        currentVersion: r,\n        advancedQueryCapabilities: i,\n        maxRecordCount: s\n      } = e,\n            n = t.indexOf(\"image\") > -1,\n            a = \"esriImageServiceDataTypeElevation\" === e.serviceDataType,\n            o = !!(e.spatialReference || e.extent && e.extent.spatialReference),\n            l = t.includes(\"edit\");\n      return {\n        data: {\n          supportsAttachment: !1\n        },\n        operations: {\n          supportsComputeHistograms: n,\n          supportsExportImage: n,\n          supportsIdentify: n,\n          supportsMeasure: t.indexOf(\"mensuration\") > -1 && o,\n          supportsDownload: t.indexOf(\"download\") > -1,\n          supportsQuery: t.indexOf(\"catalog\") > -1 && e.fields && e.fields.length > 0,\n          supportsGetSamples: r >= 10.2 && n,\n          supportsProject: r >= 10.3 && n,\n          supportsComputeStatisticsHistograms: r >= 10.4 && n,\n          supportsQueryBoundary: r >= 10.6 && n,\n          supportsCalculateVolume: r >= 10.7 && a,\n          supportsComputePixelLocation: r >= 10.7 && t.indexOf(\"catalog\") > -1,\n          supportsComputeAngles: r >= 10.91,\n          supportsAdd: l,\n          supportsDelete: l,\n          supportsEditing: l,\n          supportsUpdate: l,\n          supportsCalculate: !1,\n          supportsTruncate: !1,\n          supportsValidateSql: !1,\n          supportsChangeTracking: !1,\n          supportsQueryAttachments: !1,\n          supportsResizeAttachments: !1,\n          supportsSync: !1,\n          supportsExceedsLimitStatistics: !1\n        },\n        query: {\n          maxRecordCount: s,\n          maxRecordCountFactor: void 0,\n          supportsStatistics: !(null == i || !i.supportsStatistics),\n          supportsOrderBy: !(null == i || !i.supportsOrderBy),\n          supportsDistinct: !(null == i || !i.supportsDistinct),\n          supportsPagination: !(null == i || !i.supportsPagination),\n          supportsStandardizedQueriesOnly: !(null == i || !i.useStandardizedQueries),\n          supportsPercentileStatistics: !(null == i || !i.supportsPercentileStatistics),\n          supportsCentroid: !(null == i || !i.supportsReturningGeometryCentroid),\n          supportsDistance: !(null == i || !i.supportsQueryWithDistance),\n          supportsExtent: !(null == i || !i.supportsReturningQueryExtent),\n          supportsGeometryProperties: !(null == i || !i.supportsReturningGeometryProperties),\n          supportsHavingClause: !(null == i || !i.supportsHavingClause),\n          supportsQuantization: !1,\n          supportsQuantizationEditMode: !1,\n          supportsQueryGeometry: !1,\n          supportsResultType: !1,\n          supportsMaxRecordCountFactor: !1,\n          supportsSqlExpression: !1,\n          supportsTopFeaturesQuery: !1,\n          supportsQueryByOthers: !1,\n          supportsHistoricMoment: !1,\n          supportsFormatPBF: !1,\n          supportsDisjointSpatialRelationship: !1,\n          supportsCacheHint: !1,\n          supportsSpatialAggregationStatistics: !1,\n          supportedSpatialAggregationStatistics: {\n            envelope: !1,\n            centroid: !1,\n            convexHull: !1\n          },\n          supportsDefaultSpatialReference: !(null == i || !i.supportsDefaultSR),\n          supportsCompactGeometry: !1,\n          standardMaxRecordCount: void 0,\n          tileMaxRecordCount: void 0\n        }\n      };\n    }\n\n  };\n  return e([v()], u.prototype, \"_functionRasterInfos\", void 0), e([v()], u.prototype, \"_rasterJobHandler\", void 0), e([v({\n    dependsOn: [\"_serviceSupportsMosaicRule\"]\n  })], u.prototype, \"_defaultServiceMosaicRule\", void 0), e([b(\"_defaultServiceMosaicRule\", [\"defaultMosaicMethod\"])], u.prototype, \"readDefaultServiceMosaicRule\", null), e([v()], u.prototype, \"_cachedRendererJson\", void 0), e([v({\n    readOnly: !0\n  })], u.prototype, \"_serviceSourceType\", void 0), e([b(\"_serviceSourceType\", [\"serviceSourceType\", \"fields\"])], u.prototype, \"readServiceSourceType\", null), e([v({\n    readOnly: !0\n  })], u.prototype, \"_serviceSupportsMosaicRule\", void 0), e([b(\"_serviceSupportsMosaicRule\", [\"currentVersion\", \"fields\"])], u.prototype, \"readServiceSupportsMosaicRule\", null), e([v()], u.prototype, \"rasterAttributeTableFieldPrefix\", void 0), e([v({\n    readOnly: !0\n  })], u.prototype, \"rasterFunctionNamesIndex\", null), e([v()], u.prototype, \"adjustAspectRatio\", void 0), e([v({\n    readOnly: !0\n  }), f(\"serviceRasterInfo.bandCount\")], u.prototype, \"bandCount\", void 0), e([v({\n    type: [g],\n    json: {\n      write: !0\n    }\n  })], u.prototype, \"bandIds\", void 0), e([b(\"bandIds\")], u.prototype, \"readBandIds\", null), e([v({\n    readOnly: !0,\n    json: {\n      read: !1\n    }\n  })], u.prototype, \"capabilities\", void 0), e([b(\"service\", \"capabilities\", [\"capabilities\", \"currentVersion\", \"serviceDataType\"])], u.prototype, \"readCapabilities\", null), e([v({\n    type: Number\n  })], u.prototype, \"compressionQuality\", void 0), e([I(\"compressionQuality\")], u.prototype, \"writeCompressionQuality\", null), e([v({\n    type: Number\n  })], u.prototype, \"compressionTolerance\", void 0), e([I(\"compressionTolerance\")], u.prototype, \"writeCompressionTolerance\", null), e([v({\n    json: {\n      read: {\n        source: \"copyrightText\"\n      }\n    }\n  })], u.prototype, \"copyright\", void 0), e([v({\n    type: String,\n    json: {\n      name: \"layerDefinition.definitionExpression\",\n      write: {\n        enabled: !0,\n        allowNull: !0\n      }\n    }\n  })], u.prototype, \"definitionExpression\", void 0), e([v({\n    readOnly: !0,\n    constructOnly: !0\n  })], u.prototype, \"exportImageServiceParameters\", void 0), e([v()], u.prototype, \"rasterInfo\", void 0), e([v({\n    readOnly: !0,\n    type: [D]\n  })], u.prototype, \"fields\", void 0), e([v({\n    readOnly: !0\n  })], u.prototype, \"fieldsIndex\", null), e([v({\n    type: [\"png\", \"png8\", \"png24\", \"png32\", \"jpg\", \"bmp\", \"gif\", \"jpgpng\", \"lerc\", \"tiff\"],\n    json: {\n      write: !0\n    }\n  })], u.prototype, \"format\", null), e([b(\"service\", \"format\", [\"serviceDataType\"])], u.prototype, \"readFormat\", null), e([v({\n    type: ee\n  })], u.prototype, \"fullExtent\", void 0), e([v({\n    readOnly: !0\n  })], u.prototype, \"hasMultidimensions\", void 0), e([v({\n    json: {\n      read: {\n        source: \"maxImageHeight\"\n      }\n    }\n  })], u.prototype, \"imageMaxHeight\", void 0), e([v({\n    json: {\n      read: {\n        source: \"maxImageWidth\"\n      }\n    }\n  })], u.prototype, \"imageMaxWidth\", void 0), e([v({\n    type: String,\n    json: {\n      type: C.jsonValues,\n      read: C.read,\n      write: C.write\n    }\n  })], u.prototype, \"interpolation\", void 0), e([v()], u.prototype, \"minScale\", void 0), e([b(\"service\", \"minScale\")], u.prototype, \"readMinScale\", null), e([v()], u.prototype, \"maxScale\", void 0), e([b(\"service\", \"maxScale\")], u.prototype, \"readMaxScale\", null), e([v({\n    type: j\n  })], u.prototype, \"mosaicRule\", null), e([b(\"mosaicRule\", [\"mosaicRule\", \"defaultMosaicMethod\"])], u.prototype, \"readMosaicRule\", null), e([I(\"mosaicRule\")], u.prototype, \"writeMosaicRule\", null), e([v({\n    readOnly: !0\n  }), f(\"serviceRasterInfo.multidimensionalInfo\")], u.prototype, \"multidimensionalInfo\", void 0), e([v({\n    json: {\n      type: g\n    }\n  })], u.prototype, \"noData\", void 0), e([I(\"noData\")], u.prototype, \"writeNoData\", null), e([v({\n    type: String,\n    json: {\n      type: M.jsonValues,\n      read: M.read,\n      write: M.write\n    }\n  })], u.prototype, \"noDataInterpretation\", void 0), e([v({\n    type: String,\n    readOnly: !0,\n    json: {\n      read: {\n        source: [\"fields\"]\n      }\n    }\n  })], u.prototype, \"objectIdField\", void 0), e([b(\"objectIdField\")], u.prototype, \"readObjectIdField\", null), e([v({})], u.prototype, \"geometryType\", void 0), e([v({})], u.prototype, \"typeIdField\", void 0), e([v({})], u.prototype, \"types\", void 0), e([v({\n    readOnly: !0\n  })], u.prototype, \"parsedUrl\", null), e([v({\n    readOnly: !0\n  }), f(\"serviceRasterInfo.pixelSize.x\")], u.prototype, \"pixelSizeX\", void 0), e([v({\n    readOnly: !0\n  }), f(\"serviceRasterInfo.pixelSize.y\")], u.prototype, \"pixelSizeY\", void 0), e([v({\n    type: Function\n  })], u.prototype, \"pixelFilter\", void 0), e([v()], u.prototype, \"raster\", void 0), e([v()], u.prototype, \"viewId\", void 0), e([v({\n    types: i,\n    json: {\n      name: \"layerDefinition.drawingInfo.renderer\",\n      origins: {\n        \"web-scene\": {\n          types: s,\n          name: \"layerDefinition.drawingInfo.renderer\",\n          write: {\n            overridePolicy: e => ({\n              enabled: e && \"vector-field\" !== e.type && \"flow\" !== e.type\n            })\n          }\n        }\n      }\n    }\n  })], u.prototype, \"renderer\", null), e([b(\"renderer\")], u.prototype, \"readRenderer\", null), e([I(\"renderer\")], u.prototype, \"writeRenderer\", null), e([v()], u.prototype, \"symbolizer\", void 0), e([v(_)], u.prototype, \"opacity\", void 0), e([v({\n    readOnly: !0\n  }), f(\"serviceRasterInfo.attributeTable\")], u.prototype, \"rasterAttributeTable\", void 0), e([v({\n    readOnly: !0\n  })], u.prototype, \"rasterFields\", null), e([v({\n    constructOnly: !0\n  })], u.prototype, \"rasterFunctionInfos\", void 0), e([v({\n    type: J\n  })], u.prototype, \"renderingRule\", null), e([b(\"renderingRule\", [\"renderingRule\", \"rasterFunctionInfos\"])], u.prototype, \"readRenderingRule\", null), e([I(\"renderingRule\")], u.prototype, \"writeRenderingRule\", null), e([v()], u.prototype, \"serviceDataType\", void 0), e([v({\n    readOnly: !0,\n    type: de\n  })], u.prototype, \"spatialReference\", void 0), e([b(\"spatialReference\", [\"spatialReference\", \"extent\"])], u.prototype, \"readSpatialReference\", null), e([v({\n    json: {\n      type: fe.jsonValues\n    }\n  })], u.prototype, \"pixelType\", void 0), e([b(\"pixelType\")], u.prototype, \"readPixelType\", null), e([I(\"pixelType\")], u.prototype, \"writePixelType\", null), e([v({\n    constructOnly: !0,\n    type: q\n  })], u.prototype, \"serviceRasterInfo\", void 0), e([v()], u.prototype, \"sourceJSON\", void 0), e([v(w)], u.prototype, \"url\", void 0), e([v({\n    readOnly: !0\n  })], u.prototype, \"version\", void 0), e([b(\"version\", [\"currentVersion\", \"fields\", \"timeInfo\"])], u.prototype, \"readVersion\", null), u = e([S(\"esri.layers.mixins.ArcGISImageService\")], u), u;\n};\n\nexport { ve as ArcGISImageService };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/layers/mixins/ArcGISImageService.js"],"names":["_","e","t","read","r","rasterRendererTypes","i","websceneRasterRendererTypes","s","n","a","strict","o","clone","l","u","isSome","p","isNone","c","unwrap","m","when","d","urlToObject","h","aliasOf","f","ensureClass","y","Integer","g","ensureNumber","R","property","v","ensureRange","x","reader","b","subclass","S","writer","I","opacity","url","w","F","ExportImageServiceParameters","O","D","P","isSupportedRendererType","T","j","N","interpolationKebab","C","noDataInterpretationKebab","M","J","q","V","decode","A","getFormat","z","uvComponentToVector","E","getSupportedRendererTypes","Q","getDefaultBandCombination","U","createDefaultRenderer","H","normalizeRendererJSON","L","k","computeAngles","B","computePixelSpaceLocations","G","computeHistograms","W","computeStatisticsHistograms","X","getImageSpatialReferenceQueryParameter","Y","getSamples","K","identify","$","executeForCount","Z","ee","te","re","ie","executeForIds","se","executeQueryJSON","ne","ae","oe","le","ue","pe","ce","createStreamlinesMesh","me","de","he","getLogger","fe","U1","U2","U4","U8","S8","U16","S16","U32","S32","F32","F64","C64","C128","UNKNOWN","ye","Set","ge","min","max","Re","JSON","stringify","match","map","replace","join","ve","constructor","arguments","_functionRasterInfos","_rasterJobHandler","instance","refCount","connectionPromise","_defaultServiceMosaicRule","_serviceSourceType","_serviceSupportsMosaicRule","rasterAttributeTableFieldPrefix","adjustAspectRatio","bandCount","bandIds","capabilities","compressionQuality","compressionTolerance","copyright","definitionExpression","exportImageServiceParameters","rasterInfo","fields","fullExtent","hasMultidimensions","imageMaxHeight","imageMaxWidth","interpolation","minScale","maxScale","multidimensionalInfo","noData","noDataInterpretation","objectIdField","geometryType","typeIdField","types","pixelSizeX","pixelSizeY","pixelFilter","raster","viewId","symbolizer","rasterAttributeTable","rasterFunctionInfos","serviceDataType","spatialReference","pixelType","serviceRasterInfo","sourceJSON","version","initialize","_set","layer","readDefaultServiceMosaicRule","fromJSON","readServiceSourceType","_isMosaicDataset","readServiceSupportsMosaicRule","_isMosaicRuleSupported","rasterFunctionNamesIndex","Map","length","forEach","set","name","toLowerCase","readBandIds","Array","isArray","every","readCapabilities","_readCapabilities","writeCompressionQuality","format","writeCompressionTolerance","fieldsIndex","has","readFormat","readMinScale","minLOD","maxLOD","readMaxScale","mosaicRule","mosaicMethod","toJSON","mosaicOperation","readMosaicRule","writeMosaicRule","where","_isValidCustomizedMosaicRule","writeNoData","readObjectIdField","filter","type","parsedUrl","renderer","loaded","_configRenderer","readRenderer","layerDefinition","drawingInfo","symbolTileSize","warn","writeRenderer","rasterFields","alias","domain","editable","push","operations","supportsQuery","some","attributeTable","concat","renderingRule","rasterFunction","rasterFunctionArguments","readRenderingRule","_isRFTJson","rasterFunctionDefinition","writeRenderingRule","readSpatialReference","extent","readPixelType","writePixelType","readVersion","currentVersion","hasOwnProperty","applyFilter","_clonePixelData","applyRenderer","_isPicture","_cachedRendererJson","bind","updateSymbolizer","symbolize","pixelBlock","destroy","_shutdownJobHandler","increaseRasterJobHandlerUsage","decreaseRasterJobHandlerUsage","_fetchCapabilities","signal","supportsComputeAngles","_getRequestOptions","supportsComputePixelLocation","supportsComputeHistograms","supportsComputeStatisticsHistograms","getField","get","getFieldDomain","fetchImage","Promise","reject","generateRasterInfo","then","imageServiceParameters","getExportImageServiceParameters","timeExtent","imageProps","width","height","requestAsImageElement","_requestArrayBuffer","fetchKeyProperties","path","query","_getQueryParams","data","fetchRasterAttributeTable","getCatalogItemRasterInfo","catch","all","statistics","avg","stddev","sr","pixelSize","histograms","keyProperties","getCatalogItemICSInfo","ics","icsToPixelTransform","icsExtent","northDirection","geometries","inSR","wkid","outSR","xmin","xmax","ymax","ymin","ipxf","geodataXform","xf_0","coefficients","affine","cellsizeRatio","imageCoordinateSystem","Math","atan","PI","functionName","_isVectorFieldResampleFunction","_generateRasterInfo","shiftCentralMeridian","_hasRenderingRule","BandIds","Raster","_combineMosaicRuleWithTimeExtent","_getRenderingRuleString","start","end","time","bbox","bboxSR","imageSR","size","supportsGetSamples","supportsIdentify","createQuery","outFields","returnGeometry","queryRasters","requestOptions","_prepareForQuery","queryObjectIds","queryRasterCount","queryVisibleRasters","returnDomainValues","returnTopmostRaster","showNoDataRecords","indexOf","slice","_updateRenderingRulesFunctionName","outSpatialReference","equals","geometry","renderingRules","returnCatalogItems","maxItemCount","customParameters","value","catalogItems","features","_processVisibleRastersResponse","templateRRFunctionNames","templateFields","attributes","objectIds","fetchVariableStatisticsHistograms","variable","mean","standardDeviation","rendererSettings","flowData","AbortController","_fetchService","_fetchServiceInfo","resolve","_fetchAuxiliaryRasterInfo","serviceInfo","_getRasterFunctionInfos","_isSupportedRenderer","watch","popupEnabled","popupTemplate","_updateMultidimensionalDefinition","timeInfo","startField","multidimensionalDefinition","dimensionName","_cleanupMultidimensionalDefinition","getTime","isSlice","values","variableName","_initJobHandler","includes","ssl","split","trim","origin","serviceSourceType","functionArguments","ResampleType","resampleType","rendererJSON","success","_decodePixelBlock","options","_fetchMultidimensionalInfo","variables","hasRasterAttributeTable","hasColormap","colormap","hasHistograms","minValues","maxValues","meanValues","stdvValues","ceil","imageElement","responseType","params","String","fromCharCode","apply","Uint8Array","useCanvas","planes","noDataValue","pixelData","dimensions","hasRanges","abs","_formatAttributeValue","fieldInfos","_getFieldInfo","_formatDelimitedString","_formatNumberFromString","fieldName","Number","isNaN","processedValues","properties","Values","_updateResponseFieldNames","_updateFeatureWithMagDirValues","_updateFeatureWithRasterAttributeTableValues","sourceLayer","_updateFeatureWithDomainValues","parseInt","parseFloat","minValue","maxValue","pixels","codedValues","find","code","thumbnail","thumbnailEx","function","advancedQueryCapabilities","maxRecordCount","supportsAttachment","supportsExportImage","supportsMeasure","supportsDownload","supportsProject","supportsQueryBoundary","supportsCalculateVolume","supportsAdd","supportsDelete","supportsEditing","supportsUpdate","supportsCalculate","supportsTruncate","supportsValidateSql","supportsChangeTracking","supportsQueryAttachments","supportsResizeAttachments","supportsSync","supportsExceedsLimitStatistics","maxRecordCountFactor","supportsStatistics","supportsOrderBy","supportsDistinct","supportsPagination","supportsStandardizedQueriesOnly","useStandardizedQueries","supportsPercentileStatistics","supportsCentroid","supportsReturningGeometryCentroid","supportsDistance","supportsQueryWithDistance","supportsExtent","supportsReturningQueryExtent","supportsGeometryProperties","supportsReturningGeometryProperties","supportsHavingClause","supportsQuantization","supportsQuantizationEditMode","supportsQueryGeometry","supportsResultType","supportsMaxRecordCountFactor","supportsSqlExpression","supportsTopFeaturesQuery","supportsQueryByOthers","supportsHistoricMoment","supportsFormatPBF","supportsDisjointSpatialRelationship","supportsCacheHint","supportsSpatialAggregationStatistics","supportedSpatialAggregationStatistics","envelope","centroid","convexHull","supportsDefaultSpatialReference","supportsDefaultSR","supportsCompactGeometry","standardMaxRecordCount","tileMaxRecordCount","prototype","dependsOn","readOnly","json","write","source","enabled","allowNull","constructOnly","jsonValues","Function","origins","overridePolicy","ArcGISImageService"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../chunks/tslib.es6.js\";import\"../../geometry.js\";import t from\"../../Graphic.js\";import{read as r,rasterRendererTypes as i,websceneRasterRendererTypes as s}from\"../../rasterRenderers.js\";import n from\"../../request.js\";import a from\"../../core/Error.js\";import{strict as o}from\"../../core/jsonMap.js\";import{clone as l}from\"../../core/lang.js\";import u from\"../../core/Logger.js\";import{isSome as p,isNone as c,unwrap as m}from\"../../core/maybe.js\";import{when as d}from\"../../core/promiseUtils.js\";import{urlToObject as h}from\"../../core/urlUtils.js\";import{aliasOf as f}from\"../../core/accessorSupport/decorators/aliasOf.js\";import{ensureClass as y,Integer as g,ensureNumber as R}from\"../../core/accessorSupport/ensureType.js\";import{property as v,ensureRange as x}from\"../../core/accessorSupport/decorators/property.js\";import{reader as b}from\"../../core/accessorSupport/decorators/reader.js\";import{subclass as S}from\"../../core/accessorSupport/decorators/subclass.js\";import{writer as I}from\"../../core/accessorSupport/decorators/writer.js\";import{opacity as _,url as w}from\"../support/commonProperties.js\";import F from\"../support/DimensionalDefinition.js\";import{ExportImageServiceParameters as O}from\"../support/ExportImageServiceParameters.js\";import D from\"../support/Field.js\";import P from\"../support/FieldsIndex.js\";import{isSupportedRendererType as T}from\"../support/imageryRendererUtils.js\";import j from\"../support/MosaicRule.js\";import N from\"../support/PixelBlock.js\";import{interpolationKebab as C,noDataInterpretationKebab as M}from\"../support/rasterEnums.js\";import J from\"../support/RasterFunction.js\";import q from\"../support/RasterInfo.js\";import V from\"../support/RasterJobHandler.js\";import{decode as A,getFormat as z}from\"../support/rasterFormats/RasterCodec.js\";import{uvComponentToVector as E}from\"../support/rasterFunctions/vectorFieldUtils.js\";import{getSupportedRendererTypes as Q,getDefaultBandCombination as U,createDefaultRenderer as H,normalizeRendererJSON as L}from\"../../renderers/support/rasterRendererHelper.js\";import k from\"../../renderers/support/RasterSymbolizer.js\";import{computeAngles as B,computePixelSpaceLocations as G,computeHistograms as W,computeStatisticsHistograms as X,getImageSpatialReferenceQueryParameter as Y,getSamples as K,identify as $}from\"../../rest/imageService.js\";import\"../../core/unitUtils.js\";import\"../../kernel.js\";import\"../../rest/query/support/AttachmentInfo.js\";import\"../../rest/support/AttachmentQuery.js\";import{executeForCount as Z}from\"../../rest/query/executeForCount.js\";import ee from\"../../geometry/Extent.js\";import\"../../geometry/Geometry.js\";import\"../../geometry/Multipoint.js\";import te from\"../../geometry/Point.js\";import re from\"../../geometry/Polygon.js\";import\"../../geometry/Polyline.js\";import\"../../geometry/support/normalizeUtils.js\";import\"../../core/pbf.js\";import\"../../geometry/support/spatialReferenceUtils.js\";import ie from\"../../rest/support/Query.js\";import{executeForIds as se}from\"../../rest/query/executeForIds.js\";import{executeQueryJSON as ne}from\"../../rest/query/executeQueryJSON.js\";import\"../../core/has.js\";import\"../graphics/featureConversionUtils.js\";import ae from\"../../rest/support/FeatureSet.js\";import\"../../rest/support/RelationshipQuery.js\";import\"../../rest/support/TopFeaturesQuery.js\";import oe from\"../../rest/support/ImageAngleParameters.js\";import le from\"../../rest/support/ImageHistogramParameters.js\";import ue from\"../../rest/support/ImageIdentifyParameters.js\";import pe from\"../../rest/support/ImagePixelLocationParameters.js\";import ce from\"../../rest/support/ImageSampleParameters.js\";import{createStreamlinesMesh as me}from\"../../views/2d/engine/flow/dataUtils.js\";import de from\"../../geometry/SpatialReference.js\";const he=u.getLogger(\"esri.layers.mixins.ArcGISImageService\"),fe=o()({U1:\"u1\",U2:\"u2\",U4:\"u4\",U8:\"u8\",S8:\"s8\",U16:\"u16\",S16:\"s16\",U32:\"u32\",S32:\"s32\",F32:\"f32\",F64:\"f64\",C64:\"c64\",C128:\"c128\",UNKNOWN:\"unknown\"}),ye=new Set([\"png\",\"png8\",\"png24\",\"png32\",\"jpg\",\"bmp\",\"gif\",\"jpgpng\",\"lerc\",\"tiff\"]),ge=x(R,{min:0,max:255});function Re(e){if(!e)return null;const t=JSON.stringify(e).match(/\"rasterFunction\":\"(.*?\")/gi),r=null==t?void 0:t.map((e=>e.replace('\"rasterFunction\":\"',\"\").replace('\"',\"\")));return r?r.join(\"/\"):null}const ve=o=>{let u=class extends o{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._defaultServiceMosaicRule=null,this._serviceSourceType=null,this._serviceSupportsMosaicRule=null,this.rasterAttributeTableFieldPrefix=\"Raster.\",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType=\"polygon\",this.typeIdField=null,this.types=[],this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.symbolizer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set(\"exportImageServiceParameters\",new O({layer:this}))}readDefaultServiceMosaicRule(e,t){return this._serviceSupportsMosaicRule?j.fromJSON(t):null}readServiceSourceType(e,t){return this._isMosaicDataset(t)?\"mosaic-dataset\":\"raster-dataset\"}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||p(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||p(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,\"_\"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>\"number\"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&\"lerc\"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){\"lerc\"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new P(this.fields):null}set format(e){e&&ye.has(e.toLowerCase())&&this._set(\"format\",e.toLowerCase())}readFormat(e,t){return\"esriImageServiceDataTypeVector-UV\"===t.serviceDataType||\"esriImageServiceDataTypeVector-MagDir\"===t.serviceDataType||null!=this.pixelFilter?\"lerc\":\"jpgpng\"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=j.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set(\"mosaicRule\",t)}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?j.fromJSON(r):this._isMosaicRuleSupported(t)?j.fromJSON(t):null}writeMosaicRule(e,t,r){let i=this.mosaicRule;const s=this.definitionExpression;i?s&&s!==i.where&&(i=i.clone(),i.where=s):s&&(i=new j({where:s})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&\"number\"==typeof e&&(t[r]=ge(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter((e=>\"esriFieldTypeOID\"===e.type||\"oid\"===e.type));e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?h(this.url):null}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set(\"renderer\",e)}readRenderer(e,t,i){var s,n;const a=null==t||null==(s=t.layerDefinition)||null==(n=s.drawingInfo)?void 0:n.renderer,o=r(a,i);return null==o?null:(\"vector-field\"===o.type&&t.symbolTileSize&&!a.symbolTileSize&&(o.symbolTileSize=t.symbolTileSize),T(o)||he.warn(\"ArcGISImageService\",\"Imagery layer doesn't support given renderer type.\"),o)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),\"vector-field\"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||\"Raster.\",t=new D({name:\"Raster.ItemPixelValue\",alias:\"Item Pixel Value\",domain:null,editable:!1,length:50,type:\"string\"}),r=new D({name:\"Raster.ServicePixelValue\",alias:\"Service Pixel Value\",domain:null,editable:!1,length:50,type:\"string\"}),i=new D({name:\"Raster.ServicePixelValue.Raw\",alias:\"Raw Service Pixel Value\",domain:null,editable:!1,length:50,type:\"string\"});let s=this.fields?l(this.fields):[];s.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&s.push(t),this.version>=10.4&&p(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some((e=>\"none\"===e.name.toLowerCase()))&&s.push(i),p(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter((e=>\"none\"!==e.name.toLowerCase())).forEach((e=>{s.push(new D({name:\"Raster.ServicePixelValue.\"+e.name,alias:e.name,domain:null,editable:!1,length:50,type:\"string\"}))})),null==this.pixelFilter||\"esriImageServiceDataTypeVector-UV\"!==this.serviceDataType&&\"esriImageServiceDataTypeVector-MagDir\"!==this.serviceDataType||(s.push(new D({name:\"Raster.Magnitude\",alias:\"Magnitude\",domain:null,editable:!1,type:\"double\"})),s.push(new D({name:\"Raster.Direction\",alias:\"Direction\",domain:null,editable:!1,type:\"double\"})));const n=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(n&&n.length>0){const t=n.filter((e=>\"esriFieldTypeOID\"!==e.type&&\"value\"!==e.name.toLowerCase())).map((t=>{const r=l(t);return r.name=e+t.name,r}));s=s.concat(t)}return s}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=J.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set(\"renderingRule\",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&\"None\"!==r[0].name?this._isRFTJson(t.renderingRule)?J.fromJSON({rasterFunctionDefinition:t.renderingRule}):J.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){const i=e.toJSON();i.rasterFunctionDefinition?t[r]=i.rasterFunctionDefinition:t[r]=i}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?de.fromJSON(r):null}readPixelType(e){return fe.fromJSON(e)||e}writePixelType(e,t,r){(c(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=fe.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty(\"fields\")||t.hasOwnProperty(\"timeInfo\")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this.symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),s=this._rasterJobHandler.instance,{bandIds:n}=this;if(s){i&&(this.symbolizer.bind(),await s.updateSymbolizer(this.symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const a=await s.symbolize({bandIds:n,...e},t);r={extent:e.extent,pixelBlock:a}}else r={extent:e.extent,pixelBlock:this.symbolizer.symbolize({bandIds:n,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeAngles)throw new a(\"imagery-layer:compute-angles\",\"this operation is not supported on the input image service\");return e=y(oe,e).clone(),B(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputePixelLocation)throw new a(\"imagery-layer:compute-pixel-space-locations\",\"this operation is not supported on the input image service\");return e=y(pe,e).clone(),G(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeHistograms)throw new a(\"imagery-layer:compute-histograms\",\"this operation is not supported on the input image service\");e=y(le,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),W(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new a(\"imagery-layer:compute-statistics-histograms\",\"this operation is not supported on the input image service\");e=y(le,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),X(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return p(t)?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return Promise.reject(new a(\"imagery-layer:fetch-image\",\"Insufficient parameters for requesting an image. A valid extent, width and height values are required.\"));const s=this.renderer||this.symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return d(s).then((s=>{s&&(this.rasterInfo=s);const n={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(n)}))}fetchKeyProperties(e){return n(this.parsedUrl.path+\"/keyProperties\",{query:this._getQueryParams({renderingRule:this.version>=10.3?null==e?void 0:e.renderingRule:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new a(\"#fetchRasterAttributeTable()\",\"Failed to get rasterAttributeTable\")):n(this.parsedUrl.path+\"/rasterAttributeTable\",{query:this._getQueryParams({renderingRule:this.version>=10.3?null==e?void 0:e.renderingRule:null})}).then((e=>ae.fromJSON(e.data)))}async getCatalogItemRasterInfo(e,t){const r=n(this.parsedUrl.path+\"/\"+e+\"/info\",{query:this._getQueryParams(),...t}).then((e=>e.data)),i=n(this.parsedUrl.path+\"/\"+e+\"/info/keyProperties\",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>{})),s=await Promise.all([r,i]);if(!s[0])return;const a=ee.fromJSON(s[0].extent),o=s[0].statistics?s[0].statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))):null;return new q({bandCount:s[0].bandCount,extent:a,spatialReference:a.sr,pixelSize:new te({x:s[0].pixelSizeX,y:s[0].pixelSizeY,spatialReference:a.sr}),pixelType:s[0].pixelType.toLowerCase(),statistics:o,histograms:s[0].histograms,keyProperties:s[1]||{}})}async getCatalogItemICSInfo(e,t){const{data:r}=await n(this.parsedUrl.path+\"/\"+e+\"/info/ics\",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let s=null;try{s=(await n(this.parsedUrl.path+\"/\"+e+\"/info\",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!s||!s.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const a=this.version>=10.7?n(this.parsedUrl.path+\"/\"+e+\"/info/icstopixel\",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},o=s.spatialReference,l={geometries:JSON.stringify({geometryType:\"esriGeometryEnvelope\",geometries:[s]}),inSR:o.wkid||JSON.stringify(o),outSR:\"0:\"+e},u=n(this.parsedUrl.path+\"/project\",{query:this._getQueryParams(l),...t}).then((e=>e.data)).catch((()=>({}))),p=5,c=(s.xmin+s.xmax)/2,m=(s.ymax-s.ymin)/(p+1),d=s.ymin+m,h=[];for(let n=0;n<p;n++)h.push({x:c,y:d+m*n});const f={geometries:JSON.stringify({geometryType:\"esriGeometryPoint\",geometries:h}),inSR:o.wkid||JSON.stringify(o),outSR:\"0:\"+e},y=n(this.parsedUrl.path+\"/project\",{query:this._getQueryParams(f),...t}).then((e=>e.data)).catch((()=>({}))),g=await Promise.all([a,u,y]);let R=g[0].ipxf;if(null==R){var v,x,b;const e=null==(v=i.geodataXform)?void 0:v.xf_0;\"topup\"===(null==e||null==(x=e.name)?void 0:x.toLowerCase())&&6===(null==e||null==(b=e.coefficients)?void 0:b.length)&&(R={affine:{name:\"ics [sensor: Frame] to pixel (column, row) transformation\",coefficients:e.coefficients,cellsizeRatio:0,type:\"GeometricXform\"}})}const S=ee.fromJSON(g[1]&&g[1].geometries&&g[1].geometries[0]);S&&(S.spatialReference=new de({wkid:0,imageCoordinateSystem:i}));const I=g[2].geometries?g[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&\"NaN\"!==e.x&&\"NaN\"!==e.y)):[],_=I.length;if(_<3)return{ics:i,icsToPixelTransform:R,icsExtent:S,northDirection:null};let w=0,F=0,O=0,D=0;for(let n=0;n<_;n++)w+=I[n].x,F+=I[n].y,O+=I[n].x*I[n].x,D+=I[n].x*I[n].y;const P=(_*D-w*F)/(_*O-w*w);let T=0;const j=I[p-1].x>I[0].x,N=I[p-1].y>I[0].y;return P===1/0?T=N?90:270:0===P?T=j?0:180:P>0?T=j?180*Math.atan(P)/Math.PI:180*Math.atan(P)/Math.PI+180:P<0&&(T=N?180+180*Math.atan(P)/Math.PI:360+180*Math.atan(P)/Math.PI),{ics:i,icsToPixelTransform:R,icsExtent:S,northDirection:T}}async generateRasterInfo(e,t){var r;if((!e||\"none\"===(null==e||null==(r=e.functionName)?void 0:r.toLowerCase())||this._isVectorFieldResampleFunction(e))&&p(this.serviceRasterInfo))return this.serviceRasterInfo;const i=Re(e);if(this._functionRasterInfos[i])return this._functionRasterInfos[i];const s=this._generateRasterInfo(e,t);this._functionRasterInfos[i]=s;try{return await s}catch{return this._functionRasterInfos[i]=null,null}}getExportImageServiceParameters(e,t,r,i){var s;e=e.clone().shiftCentralMeridian();const n=Y(e.spatialReference,this.parsedUrl.path);p(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const a=this.exportImageServiceParameters.toJSON(),{bandIds:o,noData:l}=a;let{renderingRule:u}=a;const c=null==(s=this.renderingRule)?void 0:s.rasterFunctionDefinition,m=!this.renderer||\"raster-stretch\"===this.renderer.type;if(null!=o&&o.length&&this._hasRenderingRule(this.renderingRule)&&!c&&m){const e={rasterFunction:\"ExtractBand\",rasterFunctionArguments:{BandIds:o}};if(\"Stretch\"===u.rasterFunction)e.rasterFunctionArguments.Raster=u.rasterFunctionArguments.Raster,u.rasterFunctionArguments.Raster=e;else if(\"Colormap\"===u.rasterFunction){const t=u.rasterFunctionArguments.Raster;\"Stretch\"===(null==t?void 0:t.rasterFunction)?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,u.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=u,u=e;a.bandIds=void 0}else a.bandIds=null==o?void 0:o.join(\",\");l instanceof Array&&l.length>0&&(a.noData=l.join(\",\"));const d=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,i):null;a.mosaicRule=d&&JSON.stringify(d),a.renderingRule=this._getRenderingRuleString(J.fromJSON(u));const h={};if(i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?h.time=\"\"+e:null==e&&null==t||(h.time=`${null==e?\"null\":e},${null==t?\"null\":t}`)}return{bbox:e.xmin+\",\"+e.ymin+\",\"+e.xmax+\",\"+e.ymax,bboxSR:n,imageSR:n,size:t+\",\"+r,...a,...h}}async getSamples(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsGetSamples)throw new a(\"imagery-layer:get-samples\",\"getSamples operation is not supported on the input image service\");e=y(ce,e).clone();const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),K(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new a(\"imagery-layer:query-rasters\",\"query operation is not supported on the input image service\");e=y(ue,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;if(s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule){const t=this._combineMosaicRuleWithTimeExtent(i,e.timeExtent);e.mosaicRule=m(t)}return r&&null==e.raster&&(e.raster=r),$(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new ie;return e.outFields=[\"*\"],e.returnGeometry=!0,e.where=this.definitionExpression||\"1=1\",e}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),ne(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),se(this.url,e,t)}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),Z(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new a(\"imagery-layer: query-visible-rasters\",\"missing query parameter\");const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:s,showNoDataRecords:n}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,u=null;const m=\"raster.servicepixelvalue\",d=this.rasterFunctionNamesIndex;if(p(e.outFields)&&(o=e.outFields.some((e=>-1===e.toLowerCase().indexOf(m))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().indexOf(m)>-1&&e.length>m.length)).map((e=>{const t=e.slice(m.length+1);return[this._updateRenderingRulesFunctionName(t,d),t]}));l=t.map((e=>new J({functionName:e[0]}))),u=t.map((e=>e[1])),0===l.length?this.renderingRule?(l.push(this.renderingRule),u.push(this.renderingRule.functionName)):l=null:this.renderingRule&&!l.some((e=>e.functionName===this.renderingRule.functionName))&&(l.push(this.renderingRule),u.push(this.renderingRule.functionName))}const h=c(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),f=e.timeExtent||this.timeExtent,y=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,f),g=this._getQueryParams({geometry:e.geometry,timeExtent:f,mosaicRule:y,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:r,returnCatalogItems:o,returnGeometry:h,raster:this.raster,maxItemCount:s?1:null});delete g.f;const R=new ue(g);try{var v,x;await this.generateRasterInfo(this.renderingRule);const r=await $(this.url,R,{signal:null==t?void 0:t.signal,query:{...this.customParameters}}),s=e.outFields,a=r.value.toLowerCase().indexOf(\"nodata\")>-1;if(!(o&&!h&&(null==r||null==(v=r.catalogItems)?void 0:v.features.length)&&(n||!a)))return this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s});const l=this.objectIdField||\"ObjectId\",c=r.catalogItems.features,m=c.map((e=>{var t;return null==(t=e.attributes)?void 0:t[l]})),d=new ie({objectIds:m,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[l]}),f=await this.queryRasters(d);return null!=f&&null!=(x=f.features)&&x.length&&f.features.forEach((t=>{c.forEach((r=>{r.attributes[l]===t.attributes[l]&&(r.geometry=new re(t.geometry),p(e.outSpatialReference)&&(r.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s})}catch{throw new a(\"imagery-layer:query-visible-rasters\",\"encountered error when querying visible rasters\")}}async fetchVariableStatisticsHistograms(e,t){const r=n(this.parsedUrl.path+\"/statistics\",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),i=n(this.parsedUrl.path+\"/histograms\",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),s=await Promise.all([r,i]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:s[0]||null,histograms:s[1]||null}}async createStreamlinesMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createStreamlinesMesh(e,t):me(e.rendererSettings,e.flowData,p(t.signal)?t.signal:(new AbortController).signal)}async _fetchService(e){await this._fetchServiceInfo(e),p(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=p(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:t,signal:e}).then((e=>(this._set(\"serviceRasterInfo\",e),e))),i=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:e}):null,s=this._getRasterFunctionInfos();return Promise.all([r,i,s]).then((e=>{e[1]?this._set(\"rasterInfo\",e[1]):this._set(\"rasterInfo\",e[0]),e[2]&&this._set(\"rasterFunctionInfos\",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set(\"renderer\",null),he.warn(\"ArcGISImageService\",\"Switching to the default renderer. Renderer applied is not valid for this Imagery Layer\")),this._set(\"renderer\",this._configRenderer(this.renderer)),this.watch(\"renderingRule\",(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}));const t=p(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){const r=this.timeInfo;if(c(e)||c(this.multidimensionalInfo)||c(t)||c(null==r?void 0:r.startField))return e;const{startField:i}=r;var s;if(e=e.clone(),\"mosaic-dataset\"===this._serviceSourceType)return e.multidimensionalDefinition=null==(s=e.multidimensionalDefinition)?void 0:s.filter((e=>e.dimensionName!==i)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const n=e.multidimensionalDefinition.filter((e=>e.dimensionName===i)),a=p(t.start)?t.start.getTime():null,o=p(t.end)?t.end.getTime():null,l=null==a||null==o||a===o,u=l?[a||o]:[[a,o]],m=this.version>=10.8;if(n.length)n.forEach((e=>{e.dimensionName===i&&(m?(e.dimensionName=null,e.isSlice=null,e.values=null):(e.isSlice=l,e.values=u))}));else if(!m){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=i,e.isSlice=l,e.values=u})):e.multidimensionalDefinition.push(new F({variableName:\"\",dimensionName:i,isSlice:l,values:u}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return c(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),\"mosaic-dataset\"!==this._serviceSourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){var r;if(await this._fetchCapabilities(null==(r=t)?void 0:r.signal),!this.capabilities.operations.supportsQuery)throw new a(\"imagery-layer:query-rasters\",\"query operation is not supported on the input image service\");return e=p(e)?y(ie,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new V;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>null)),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:r}=this;return\"unique-value\"===e.type&&this._hasRenderingRule(r)&&1===t.bandCount&&[\"u8\",\"s8\"].includes(t.pixelType)||Q(this.rasterInfo).includes(this.renderer.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=await n(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,\"https:\"))}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(\",\").map((e=>e.trim())).indexOf(\"tilesonly\"))>-1)throw new a(\"imagery-layer:fetch-service-info\",\"use ImageryTileLayer to open tiles-only image services\");this.read(r,{origin:\"service\",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?\"esriImageServiceSourceTypeMosaicDataset\"===e.serviceSourceType:(null==(t=e.fields)?void 0:t.length)>0}_isMosaicRuleSupported(e){var t;if(!e)return!1;const r=this._isMosaicDataset(e),i=e.currentVersion>=10.71&&e.hasMultidimensions&&e.timeInfo&&!(e.objectIdField&&(null==(t=e.fields)?void 0:t.length)>1);return r||i}_isVectorFieldResampleFunction(e){if(!p(e))return!1;const{functionName:t,functionArguments:r}=e,i=\"resample\"===(null==t?void 0:t.toLowerCase()),s=(null==r?void 0:r.ResampleType)||(null==r?void 0:r.resampleType);return i&&(7===s||10===s)}_isPicture(){return!this.format||this.format.indexOf(\"jpg\")>-1||this.format.indexOf(\"png\")>-1}_configRenderer(e){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=U(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}var t,r;if(!e)e=H(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(t=this.mosaicRule)||null==(r=t.multidimensionalDefinition)?void 0:r[0].variableName});const i=L(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=i,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new k({rendererJSON:i,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:p(e.pixelBlock)&&e.pixelBlock.clone()}}_getQueryParams(e){p(null==e?void 0:e.renderingRule)&&\"string\"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:\"json\",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...null==e?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):A(e,t,r)}async _fetchMultidimensionalInfo(e){var t;const r=await n(this.parsedUrl.path+\"/multidimensionalInfo\",{query:this._getQueryParams(),signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=r.variables)&&t.length&&r.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),r}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.serviceRasterInfo)return t;if(t&&this.version>=10.3){var r;if(1===t.length&&\"none\"===t[0].name.toLowerCase())return t;return null==(r=(await n(this.parsedUrl.path+\"/rasterFunctionInfos\",{query:this._getQueryParams(),signal:e})).data)?void 0:r.rasterFunctionInfos}return null}async _fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return Promise.reject(new a(\"imagery-layer:fetch-metadata\",\"valid serviceInfo is required\"));const r=e.signal,i=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&n(this.parsedUrl.path+\"/rasterAttributeTable\",{query:this._getQueryParams({renderingRule:this.version>=10.1?null==e?void 0:e.renderingRule:null}),signal:r}).then((e=>ae.fromJSON(e.data))).catch((()=>null)),s=!!(t.hasColormap&&this.version>=10.1)&&n(this.parsedUrl.path+\"/colormap\",{query:this._getQueryParams({renderingRule:this.version>=10.6?null==e?void 0:e.renderingRule:null}),signal:r}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),o=!!(t.hasHistograms&&this.version>=10.1)&&n(this.parsedUrl.path+\"/histograms\",{query:this._getQueryParams({renderingRule:this.version>=10.1?null==e?void 0:e.renderingRule:null}),signal:r}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),l=this.version>=10.3&&n(this.parsedUrl.path+\"/keyProperties\",{query:this._getQueryParams({renderingRule:null==e?void 0:e.renderingRule}),signal:r}).then((e=>e.data)).catch((()=>{})),u=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo(),p=await Promise.all([i,s,o,l,u]);let c=null;if(t.minValues&&t.minValues.length===t.bandCount){c=[];for(let e=0;e<t.minValues.length;e++)c.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}const m=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),d=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),h=de.fromJSON(t.spatialReference||t.extent.spatialReference);return new q({width:m,height:d,bandCount:t.bandCount,extent:ee.fromJSON(t.extent),spatialReference:h,pixelSize:new te({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:h}),pixelType:t.pixelType.toLowerCase(),statistics:c,attributeTable:p[0]||null,colormap:p[1]||null,histograms:p[2]||null,keyProperties:p[3]||{},multidimensionalInfo:p[4]||null})}async _requestArrayBuffer(e){var t;const{imageProps:r,requestAsImageElement:i,signal:s}=e;if(i&&!this.pixelFilter&&(null==(t=r.format)?void 0:t.indexOf(\"png\"))>-1){return{imageElement:(await n(this.parsedUrl.path+\"/exportImage\",{responseType:\"image\",query:this._getQueryParams({f:\"image\",...e.imageServiceParameters}),signal:s})).data,params:r}}const o=this._initJobHandler(),l=n(this.parsedUrl.path+\"/exportImage\",{responseType:\"array-buffer\",query:this._getQueryParams({f:\"image\",...e.imageServiceParameters}),signal:s}),u=(await Promise.all([l,o]))[0].data,p=r.format||\"jpgpng\";let c=p;if(\"bsq\"!==c&&\"bip\"!==c&&(c=z(u)),!c)throw new a(\"imagery-layer:fetch-image\",\"unsupported format signature \"+String.fromCharCode.apply(null,new Uint8Array(u)));const m={signal:s},d=\"gif\"===p||\"bmp\"===p||p.indexOf(\"png\")>-1&&(\"png\"===c||\"jpg\"===c)?A(u,{useCanvas:!0,...r},m):this._decodePixelBlock(u,{width:r.width,height:r.height,planes:null,pixelType:null,noDataValue:null,format:p},m);return{pixelData:{pixelBlock:await d,extent:r.extent},params:r}}async _generateRasterInfo(e,t){const{data:r}=await n(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:e}),...t});return await this._fetchAuxiliaryRasterInfo({serviceInfo:r,renderingRule:e,...t})}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify(null==(t=this._defaultServiceMosaicRule)?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,r=\"\",i=[];for(const s in t)if(t.hasOwnProperty(s)){const e=t[s],n=e.extent;let a=!0,o=[n[0]];e.hasRanges&&!0===e.hasRanges?(a=!1,o=[e.values[0]]):\"stdz\"===e.name.toLowerCase()&&Math.abs(n[1])<=Math.abs(n[0])&&(o=[n[1]]),i.push(new F({variableName:r,dimensionName:t[s].name,isSlice:a,values:o}))}if(i.length>0){this.mosaicRule=this.mosaicRule||new j;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=i)}}_formatAttributeValue(e,t){if(\"string\"==typeof e){const r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),s=i&&i.format;if(s){let t,r;return e.trim().indexOf(\",\")>-1?(t=\",\",r=t+\" \",this._formatDelimitedString(e,t,r,s)):e.trim().indexOf(\";\")>-1?(t=\";\",r=t+\" \",this._formatDelimitedString(e,t,r,s)):e.trim().indexOf(\" \")>-1?(t=r=\" \",this._formatDelimitedString(e,t,r,s)):this._formatNumberFromString(e,s)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let i;return e.some((e=>!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,\"_\"))&&(i=e,!0))),i}_formatDelimitedString(e,t,r,i){return e&&t&&r&&i?e.trim().split(t).map((e=>this._formatNumberFromString(e,i))).join(r):e}_formatNumberFromString(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)}_processVisibleRastersResponse(e,r){r=r||{};const i=e.value,{templateRRFunctionNames:s,showNoDataRecords:n,returnDomainValues:a,templateFields:o}=r,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,c=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,\", \")))||[];const m=this.objectIdField||\"ObjectId\",d=\"string\"==typeof i&&i.toLowerCase().indexOf(\"nodata\")>-1,h=[];if(i&&!u&&!d){const e={};e[m]=0;c=[i],u=[new t(this.fullExtent,null,e)]}if(!u)return[];let f,y,g;this._updateResponseFieldNames(u,o),d&&!n&&(u=[]);for(let t=0;t<u.length;t++){if(f=u[t],null!=i){if(y=c[t],g=this.renderingRule&&l&&l.length>0&&s&&s.length>0&&s.indexOf(this.renderingRule.functionName)>-1?l[s.indexOf(this.renderingRule.functionName)]:i,\"nodata\"===y.toLowerCase()&&!n)continue;const e=\"Raster.ItemPixelValue\",r=\"Raster.ServicePixelValue\";f.attributes[e]=this._formatAttributeValue(y,e),f.attributes[r]=this._formatAttributeValue(g,r),this._updateFeatureWithMagDirValues(f,y);const a=this.fields&&this.fields.length>0;let o=this.renderingRule&&p(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?a?y:i:g;this.renderingRule||(o=a?y:i),this._updateFeatureWithRasterAttributeTableValues(f,o)}if(f.sourceLayer=f.layer=this,a&&this._updateFeatureWithDomainValues(f),s&&l&&s.length===l.length)for(let e=0;e<s.length;e++){const t=\"Raster.ServicePixelValue.\"+s[e];f.attributes[t]=this._formatAttributeValue(l[e],t)}h.push(u[t])}return h}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||p(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,i=r&&r.features;if(!i)return;const s=r.fields,n=s.map((e=>e.name)).filter((e=>\"value\"===e.toLowerCase())),a=n&&n[0];if(!a)return;const o=i.filter((e=>e.attributes[a]===(null!=t?parseInt(t,10):null)));o&&o[0]&&s.forEach((t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=this._formatAttributeValue(o[0].attributes[t.name],r)}))}_updateFeatureWithMagDirValues(e,t){if(\"esriImageServiceDataTypeVector-UV\"!==this.serviceDataType&&\"esriImageServiceDataTypeVector-MagDir\"!==this.serviceDataType)return;const r=t.split(/,\\s*/).map((e=>parseFloat(e))),i=r.map((e=>[e])),s=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),n=new N({height:1,width:1,pixelType:\"f32\",pixels:i,statistics:s});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:n,extent:new ee(0,0,0,0,this.spatialReference)});const a=\"esriImageServiceDataTypeVector-MagDir\"===this.serviceDataType?[n.pixels[0][0],n.pixels[1][0]]:E([n.pixels[0][0],n.pixels[1][0]]);e.attributes[\"Raster.Magnitude\"]=a[0],e.attributes[\"Raster.Direction\"]=a[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&\"coded-value\"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.find((e=>e.code===r));i&&(e.attributes[t.name]=i.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;p(r)&&e.forEach((e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(this._hasRenderingRule(e)){var t;let r=e.toJSON();return r=null!=(t=r.rasterFunctionDefinition)?t:r,(r.thumbnail||r.thumbnailEx)&&(r.thumbnail=r.thumbnailEx=null),JSON.stringify(r)}return null}_hasRenderingRule(e){return e&&e.functionName&&\"none\"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if(\"Raw\"===e)return e.replace(\"Raw\",\"None\");const r=e.toLowerCase().replace(/ /gi,\"_\");return t.has(r)?t.get(r):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty(\"functionType\")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(\",\").map((e=>e.trim())):[\"image\",\"catalog\"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:s}=e,n=t.indexOf(\"image\")>-1,a=\"esriImageServiceDataTypeElevation\"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes(\"edit\");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:t.indexOf(\"mensuration\")>-1&&o,supportsDownload:t.indexOf(\"download\")>-1,supportsQuery:t.indexOf(\"catalog\")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&n,supportsProject:r>=10.3&&n,supportsComputeStatisticsHistograms:r>=10.4&&n,supportsQueryBoundary:r>=10.6&&n,supportsCalculateVolume:r>=10.7&&a,supportsComputePixelLocation:r>=10.7&&t.indexOf(\"catalog\")>-1,supportsComputeAngles:r>=10.91,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1},query:{maxRecordCount:s,maxRecordCountFactor:void 0,supportsStatistics:!(null==i||!i.supportsStatistics),supportsOrderBy:!(null==i||!i.supportsOrderBy),supportsDistinct:!(null==i||!i.supportsDistinct),supportsPagination:!(null==i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(null==i||!i.useStandardizedQueries),supportsPercentileStatistics:!(null==i||!i.supportsPercentileStatistics),supportsCentroid:!(null==i||!i.supportsReturningGeometryCentroid),supportsDistance:!(null==i||!i.supportsQueryWithDistance),supportsExtent:!(null==i||!i.supportsReturningQueryExtent),supportsGeometryProperties:!(null==i||!i.supportsReturningGeometryProperties),supportsHavingClause:!(null==i||!i.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!(null==i||!i.supportsDefaultSR),supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};return e([v()],u.prototype,\"_functionRasterInfos\",void 0),e([v()],u.prototype,\"_rasterJobHandler\",void 0),e([v({dependsOn:[\"_serviceSupportsMosaicRule\"]})],u.prototype,\"_defaultServiceMosaicRule\",void 0),e([b(\"_defaultServiceMosaicRule\",[\"defaultMosaicMethod\"])],u.prototype,\"readDefaultServiceMosaicRule\",null),e([v()],u.prototype,\"_cachedRendererJson\",void 0),e([v({readOnly:!0})],u.prototype,\"_serviceSourceType\",void 0),e([b(\"_serviceSourceType\",[\"serviceSourceType\",\"fields\"])],u.prototype,\"readServiceSourceType\",null),e([v({readOnly:!0})],u.prototype,\"_serviceSupportsMosaicRule\",void 0),e([b(\"_serviceSupportsMosaicRule\",[\"currentVersion\",\"fields\"])],u.prototype,\"readServiceSupportsMosaicRule\",null),e([v()],u.prototype,\"rasterAttributeTableFieldPrefix\",void 0),e([v({readOnly:!0})],u.prototype,\"rasterFunctionNamesIndex\",null),e([v()],u.prototype,\"adjustAspectRatio\",void 0),e([v({readOnly:!0}),f(\"serviceRasterInfo.bandCount\")],u.prototype,\"bandCount\",void 0),e([v({type:[g],json:{write:!0}})],u.prototype,\"bandIds\",void 0),e([b(\"bandIds\")],u.prototype,\"readBandIds\",null),e([v({readOnly:!0,json:{read:!1}})],u.prototype,\"capabilities\",void 0),e([b(\"service\",\"capabilities\",[\"capabilities\",\"currentVersion\",\"serviceDataType\"])],u.prototype,\"readCapabilities\",null),e([v({type:Number})],u.prototype,\"compressionQuality\",void 0),e([I(\"compressionQuality\")],u.prototype,\"writeCompressionQuality\",null),e([v({type:Number})],u.prototype,\"compressionTolerance\",void 0),e([I(\"compressionTolerance\")],u.prototype,\"writeCompressionTolerance\",null),e([v({json:{read:{source:\"copyrightText\"}}})],u.prototype,\"copyright\",void 0),e([v({type:String,json:{name:\"layerDefinition.definitionExpression\",write:{enabled:!0,allowNull:!0}}})],u.prototype,\"definitionExpression\",void 0),e([v({readOnly:!0,constructOnly:!0})],u.prototype,\"exportImageServiceParameters\",void 0),e([v()],u.prototype,\"rasterInfo\",void 0),e([v({readOnly:!0,type:[D]})],u.prototype,\"fields\",void 0),e([v({readOnly:!0})],u.prototype,\"fieldsIndex\",null),e([v({type:[\"png\",\"png8\",\"png24\",\"png32\",\"jpg\",\"bmp\",\"gif\",\"jpgpng\",\"lerc\",\"tiff\"],json:{write:!0}})],u.prototype,\"format\",null),e([b(\"service\",\"format\",[\"serviceDataType\"])],u.prototype,\"readFormat\",null),e([v({type:ee})],u.prototype,\"fullExtent\",void 0),e([v({readOnly:!0})],u.prototype,\"hasMultidimensions\",void 0),e([v({json:{read:{source:\"maxImageHeight\"}}})],u.prototype,\"imageMaxHeight\",void 0),e([v({json:{read:{source:\"maxImageWidth\"}}})],u.prototype,\"imageMaxWidth\",void 0),e([v({type:String,json:{type:C.jsonValues,read:C.read,write:C.write}})],u.prototype,\"interpolation\",void 0),e([v()],u.prototype,\"minScale\",void 0),e([b(\"service\",\"minScale\")],u.prototype,\"readMinScale\",null),e([v()],u.prototype,\"maxScale\",void 0),e([b(\"service\",\"maxScale\")],u.prototype,\"readMaxScale\",null),e([v({type:j})],u.prototype,\"mosaicRule\",null),e([b(\"mosaicRule\",[\"mosaicRule\",\"defaultMosaicMethod\"])],u.prototype,\"readMosaicRule\",null),e([I(\"mosaicRule\")],u.prototype,\"writeMosaicRule\",null),e([v({readOnly:!0}),f(\"serviceRasterInfo.multidimensionalInfo\")],u.prototype,\"multidimensionalInfo\",void 0),e([v({json:{type:g}})],u.prototype,\"noData\",void 0),e([I(\"noData\")],u.prototype,\"writeNoData\",null),e([v({type:String,json:{type:M.jsonValues,read:M.read,write:M.write}})],u.prototype,\"noDataInterpretation\",void 0),e([v({type:String,readOnly:!0,json:{read:{source:[\"fields\"]}}})],u.prototype,\"objectIdField\",void 0),e([b(\"objectIdField\")],u.prototype,\"readObjectIdField\",null),e([v({})],u.prototype,\"geometryType\",void 0),e([v({})],u.prototype,\"typeIdField\",void 0),e([v({})],u.prototype,\"types\",void 0),e([v({readOnly:!0})],u.prototype,\"parsedUrl\",null),e([v({readOnly:!0}),f(\"serviceRasterInfo.pixelSize.x\")],u.prototype,\"pixelSizeX\",void 0),e([v({readOnly:!0}),f(\"serviceRasterInfo.pixelSize.y\")],u.prototype,\"pixelSizeY\",void 0),e([v({type:Function})],u.prototype,\"pixelFilter\",void 0),e([v()],u.prototype,\"raster\",void 0),e([v()],u.prototype,\"viewId\",void 0),e([v({types:i,json:{name:\"layerDefinition.drawingInfo.renderer\",origins:{\"web-scene\":{types:s,name:\"layerDefinition.drawingInfo.renderer\",write:{overridePolicy:e=>({enabled:e&&\"vector-field\"!==e.type&&\"flow\"!==e.type})}}}}})],u.prototype,\"renderer\",null),e([b(\"renderer\")],u.prototype,\"readRenderer\",null),e([I(\"renderer\")],u.prototype,\"writeRenderer\",null),e([v()],u.prototype,\"symbolizer\",void 0),e([v(_)],u.prototype,\"opacity\",void 0),e([v({readOnly:!0}),f(\"serviceRasterInfo.attributeTable\")],u.prototype,\"rasterAttributeTable\",void 0),e([v({readOnly:!0})],u.prototype,\"rasterFields\",null),e([v({constructOnly:!0})],u.prototype,\"rasterFunctionInfos\",void 0),e([v({type:J})],u.prototype,\"renderingRule\",null),e([b(\"renderingRule\",[\"renderingRule\",\"rasterFunctionInfos\"])],u.prototype,\"readRenderingRule\",null),e([I(\"renderingRule\")],u.prototype,\"writeRenderingRule\",null),e([v()],u.prototype,\"serviceDataType\",void 0),e([v({readOnly:!0,type:de})],u.prototype,\"spatialReference\",void 0),e([b(\"spatialReference\",[\"spatialReference\",\"extent\"])],u.prototype,\"readSpatialReference\",null),e([v({json:{type:fe.jsonValues}})],u.prototype,\"pixelType\",void 0),e([b(\"pixelType\")],u.prototype,\"readPixelType\",null),e([I(\"pixelType\")],u.prototype,\"writePixelType\",null),e([v({constructOnly:!0,type:q})],u.prototype,\"serviceRasterInfo\",void 0),e([v()],u.prototype,\"sourceJSON\",void 0),e([v(w)],u.prototype,\"url\",void 0),e([v({readOnly:!0})],u.prototype,\"version\",void 0),e([b(\"version\",[\"currentVersion\",\"fields\",\"timeInfo\"])],u.prototype,\"readVersion\",null),u=e([S(\"esri.layers.mixins.ArcGISImageService\")],u),u};export{ve as ArcGISImageService};\n"]},"metadata":{},"sourceType":"module"}