{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport o from \"../../Color.js\";\nimport { toRGB as r, toHSV as e, toLAB as l } from \"../../core/colorUtils.js\";\nconst t = [{\n  id: \"aspect_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [190, 190, 190],\n    toColor: [255, 45, 8]\n  }, {\n    fromColor: [255, 45, 8],\n    toColor: [255, 181, 61]\n  }, {\n    fromColor: [255, 181, 61],\n    toColor: [255, 254, 52]\n  }, {\n    fromColor: [255, 254, 52],\n    toColor: [0, 251, 50]\n  }, {\n    fromColor: [0, 251, 50],\n    toColor: [255, 254, 52]\n  }, {\n    fromColor: [0, 253, 255],\n    toColor: [0, 181, 255]\n  }, {\n    fromColor: [0, 181, 255],\n    toColor: [26, 35, 253]\n  }, {\n    fromColor: [26, 35, 253],\n    toColor: [255, 57, 251]\n  }, {\n    fromColor: [255, 57, 251],\n    toColor: [255, 45, 8]\n  }]\n}, {\n  id: \"blackToWhite_predefined\",\n  fromColor: [0, 0, 0],\n  toColor: [255, 255, 255]\n}, {\n  id: \"blueBright_predefined\",\n  fromColor: [204, 204, 255],\n  toColor: [0, 0, 224]\n}, {\n  id: \"blueLightToDark_predefined\",\n  fromColor: [211, 229, 232],\n  toColor: [46, 100, 140]\n}, {\n  id: \"blueGreenBright_predefined\",\n  fromColor: [203, 245, 234],\n  toColor: [48, 207, 146]\n}, {\n  id: \"blueGreenLightToDark_predefined\",\n  fromColor: [216, 242, 237],\n  toColor: [21, 79, 74]\n}, {\n  id: \"brownLightToDark_predefined\",\n  fromColor: [240, 236, 170],\n  toColor: [102, 72, 48]\n}, {\n  id: \"brownToBlueGreenDivergingBright_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [156, 85, 31],\n    toColor: [255, 255, 191]\n  }, {\n    fromColor: [255, 255, 191],\n    toColor: [33, 130, 145]\n  }]\n}, {\n  id: \"brownToBlueGreenDivergingDark_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [110, 70, 45],\n    toColor: [204, 204, 102]\n  }, {\n    fromColor: [204, 204, 102],\n    toColor: [48, 100, 102]\n  }]\n}, {\n  id: \"coefficientBias_predefined\",\n  fromColor: [214, 214, 255],\n  toColor: [0, 57, 148]\n}, {\n  id: \"coldToHotDiverging_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [69, 117, 181],\n    toColor: [255, 255, 191]\n  }, {\n    fromColor: [255, 255, 191],\n    toColor: [214, 47, 39]\n  }]\n}, {\n  id: \"conditionNumber_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [0, 97, 0],\n    toColor: [255, 255, 0]\n  }, {\n    fromColor: [255, 255, 0],\n    toColor: [255, 34, 0]\n  }]\n}, {\n  id: \"cyanToPurple_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [0, 245, 245],\n    toColor: [0, 0, 245]\n  }, {\n    fromColor: [0, 0, 245],\n    toColor: [245, 0, 245]\n  }]\n}, {\n  id: \"cyanLightToBlueDark_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [182, 237, 240],\n    toColor: [31, 131, 224]\n  }, {\n    fromColor: [31, 131, 224],\n    toColor: [9, 9, 145]\n  }]\n}, {\n  id: \"distance_predefined\",\n  fromColor: [255, 200, 0],\n  toColor: [0, 0, 255]\n}, {\n  id: \"elevation1_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [175, 240, 233],\n    toColor: [255, 255, 179]\n  }, {\n    fromColor: [255, 255, 179],\n    toColor: [0, 128, 64]\n  }, {\n    fromColor: [0, 128, 64],\n    toColor: [252, 186, 3]\n  }, {\n    fromColor: [252, 186, 3],\n    toColor: [128, 0, 0]\n  }, {\n    fromColor: [120, 0, 0],\n    toColor: [105, 48, 13]\n  }, {\n    fromColor: [105, 48, 13],\n    toColor: [171, 171, 171]\n  }, {\n    fromColor: [171, 171, 171],\n    toColor: [255, 252, 255]\n  }]\n}, {\n  id: \"elevation2_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [118, 219, 211],\n    toColor: [255, 255, 199]\n  }, {\n    fromColor: [255, 255, 199],\n    toColor: [255, 255, 128]\n  }, {\n    fromColor: [255, 255, 128],\n    toColor: [217, 194, 121]\n  }, {\n    fromColor: [217, 194, 121],\n    toColor: [135, 96, 38]\n  }, {\n    fromColor: [135, 96, 38],\n    toColor: [150, 150, 181]\n  }, {\n    fromColor: [150, 150, 181],\n    toColor: [181, 150, 181]\n  }, {\n    fromColor: [181, 150, 181],\n    toColor: [255, 252, 255]\n  }]\n}, {\n  id: \"errors_predefined\",\n  fromColor: [255, 235, 214],\n  toColor: [196, 10, 10]\n}, {\n  id: \"grayLightToDark_predefined\",\n  fromColor: [219, 219, 219],\n  toColor: [69, 69, 69]\n}, {\n  id: \"greenBright_predefined\",\n  fromColor: [204, 255, 204],\n  toColor: [14, 204, 14]\n}, {\n  id: \"greenLightToDark_predefined\",\n  fromColor: [220, 245, 233],\n  toColor: [34, 102, 51]\n}, {\n  id: \"greenToBlue_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [32, 204, 16],\n    toColor: [0, 242, 242]\n  }, {\n    fromColor: [0, 242, 242],\n    toColor: [2, 33, 227]\n  }]\n}, {\n  id: \"orangeBright_predefined\",\n  fromColor: [255, 235, 204],\n  toColor: [240, 118, 5]\n}, {\n  id: \"orangeLightToDark_predefined\",\n  fromColor: [250, 233, 212],\n  toColor: [171, 65, 36]\n}, {\n  id: \"partialSpectrum_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [242, 241, 162],\n    toColor: [255, 255, 0]\n  }, {\n    fromColor: [255, 255, 0],\n    toColor: [255, 0, 0]\n  }, {\n    fromColor: [252, 3, 69],\n    toColor: [176, 7, 237]\n  }, {\n    fromColor: [176, 7, 237],\n    toColor: [2, 29, 173]\n  }]\n}, {\n  id: \"partialSpectrum1Diverging_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [135, 38, 38],\n    toColor: [240, 149, 12]\n  }, {\n    fromColor: [240, 149, 12],\n    toColor: [255, 255, 191]\n  }, {\n    fromColor: [255, 255, 191],\n    toColor: [74, 80, 181]\n  }, {\n    fromColor: [74, 80, 181],\n    toColor: [39, 32, 122]\n  }]\n}, {\n  id: \"partialSpectrum2Diverging_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [115, 77, 42],\n    toColor: [201, 137, 52]\n  }, {\n    fromColor: [201, 137, 52],\n    toColor: [255, 255, 191]\n  }, {\n    fromColor: [255, 255, 191],\n    toColor: [91, 63, 176]\n  }, {\n    fromColor: [91, 63, 176],\n    toColor: [81, 13, 97]\n  }]\n}, {\n  id: \"pinkToYellowGreenDivergingBright_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [158, 30, 113],\n    toColor: [255, 255, 191]\n  }, {\n    fromColor: [255, 255, 191],\n    toColor: [99, 110, 45]\n  }]\n}, {\n  id: \"pinkToYellowGreenDivergingDark_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [97, 47, 73],\n    toColor: [204, 204, 102]\n  }, {\n    fromColor: [204, 204, 102],\n    toColor: [22, 59, 15]\n  }]\n}, {\n  id: \"precipitation_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [194, 82, 60],\n    toColor: [237, 161, 19]\n  }, {\n    fromColor: [237, 161, 19],\n    toColor: [255, 255, 0]\n  }, {\n    fromColor: [255, 255, 0],\n    toColor: [0, 219, 0]\n  }, {\n    fromColor: [0, 219, 0],\n    toColor: [32, 153, 143]\n  }, {\n    fromColor: [32, 153, 143],\n    toColor: [11, 44, 122]\n  }]\n}, {\n  id: \"prediction_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [40, 146, 199],\n    toColor: [250, 250, 100]\n  }, {\n    fromColor: [250, 250, 100],\n    toColor: [232, 16, 20]\n  }]\n}, {\n  id: \"purpleBright_predefined\",\n  fromColor: [255, 204, 255],\n  toColor: [199, 0, 199]\n}, {\n  id: \"purpleToGreenDivergingBright_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [77, 32, 150],\n    toColor: [255, 255, 191]\n  }, {\n    fromColor: [255, 255, 191],\n    toColor: [20, 122, 11]\n  }]\n}, {\n  id: \"purpleToGreenDivergingDark_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [67, 14, 89],\n    toColor: [204, 204, 102]\n  }, {\n    fromColor: [204, 204, 102],\n    toColor: [24, 79, 15]\n  }]\n}, {\n  id: \"purpleBlueBright_predefined\",\n  fromColor: [223, 184, 230],\n  toColor: [112, 12, 242]\n}, {\n  id: \"purpleBlueLightToDark_predefined\",\n  fromColor: [229, 213, 242],\n  toColor: [93, 44, 112]\n}, {\n  id: \"purpleRedBright_predefined\",\n  fromColor: [255, 204, 225],\n  toColor: [199, 0, 99]\n}, {\n  id: \"purpleRedLightToDark_predefined\",\n  fromColor: [250, 215, 246],\n  toColor: [143, 17, 57]\n}, {\n  id: \"redBright_predefined\",\n  fromColor: [255, 204, 204],\n  toColor: [219, 0, 0]\n}, {\n  id: \"redLightToDark_predefined\",\n  fromColor: [255, 224, 224],\n  toColor: [143, 10, 10]\n}, {\n  id: \"redToBlueDivergingBright_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [196, 69, 57],\n    toColor: [255, 255, 191]\n  }, {\n    fromColor: [255, 255, 191],\n    toColor: [48, 95, 207]\n  }]\n}, {\n  id: \"redToBlueDivergingDark_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [107, 13, 13],\n    toColor: [204, 204, 102]\n  }, {\n    fromColor: [204, 204, 102],\n    toColor: [13, 53, 97]\n  }]\n}, {\n  id: \"redToGreen_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [245, 0, 0],\n    toColor: [245, 245, 0]\n  }, {\n    fromColor: [245, 245, 0],\n    toColor: [0, 245, 0]\n  }]\n}, {\n  id: \"redToGreenDivergingBright_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [186, 20, 20],\n    toColor: [255, 255, 191]\n  }, {\n    fromColor: [255, 255, 191],\n    toColor: [54, 145, 33]\n  }]\n}, {\n  id: \"redToGreenDivergingDark_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [97, 21, 13],\n    toColor: [204, 204, 102]\n  }, {\n    fromColor: [204, 204, 102],\n    toColor: [16, 69, 16]\n  }]\n}, {\n  id: \"slope_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [56, 168, 0],\n    toColor: [255, 255, 0]\n  }, {\n    fromColor: [255, 255, 0],\n    toColor: [255, 0, 0]\n  }]\n}, {\n  id: \"spectrumFullBright_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [255, 0, 0],\n    toColor: [255, 255, 0]\n  }, {\n    fromColor: [255, 255, 0],\n    toColor: [0, 255, 255]\n  }, {\n    fromColor: [0, 255, 255],\n    toColor: [0, 0, 255]\n  }]\n}, {\n  id: \"spectrumFullDark_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [153, 0, 0],\n    toColor: [153, 153, 0]\n  }, {\n    fromColor: [153, 153, 0],\n    toColor: [0, 153, 153]\n  }, {\n    fromColor: [0, 153, 153],\n    toColor: [0, 0, 153]\n  }]\n}, {\n  id: \"spectrumFullLight_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [255, 153, 153],\n    toColor: [255, 255, 153]\n  }, {\n    fromColor: [255, 255, 153],\n    toColor: [153, 255, 255]\n  }, {\n    fromColor: [153, 255, 255],\n    toColor: [153, 153, 255]\n  }]\n}, {\n  id: \"surface_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [112, 153, 89],\n    toColor: [242, 238, 162]\n  }, {\n    fromColor: [242, 238, 162],\n    toColor: [242, 206, 133]\n  }, {\n    fromColor: [242, 206, 133],\n    toColor: [194, 140, 124]\n  }, {\n    fromColor: [194, 140, 124],\n    toColor: [255, 242, 255]\n  }]\n}, {\n  id: \"temperature_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [255, 252, 255],\n    toColor: [255, 0, 255]\n  }, {\n    fromColor: [255, 0, 255],\n    toColor: [0, 0, 255]\n  }, {\n    fromColor: [0, 0, 255],\n    toColor: [0, 255, 255]\n  }, {\n    fromColor: [0, 255, 255],\n    toColor: [0, 255, 0]\n  }, {\n    fromColor: [0, 255, 0],\n    toColor: [255, 255, 0]\n  }, {\n    fromColor: [255, 255, 0],\n    toColor: [255, 128, 0]\n  }, {\n    fromColor: [255, 128, 0],\n    toColor: [128, 0, 0]\n  }]\n}, {\n  id: \"whiteToBlack_predefined\",\n  fromColor: [255, 255, 255],\n  toColor: [0, 0, 0]\n}, {\n  id: \"yellowToDarkRed_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [255, 255, 128],\n    toColor: [242, 167, 46]\n  }, {\n    fromColor: [242, 167, 46],\n    toColor: [107, 0, 0]\n  }]\n}, {\n  id: \"yellowToGreenToDarkBlue_predefined\",\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [255, 255, 128],\n    toColor: [56, 224, 9]\n  }, {\n    fromColor: [56, 224, 9],\n    toColor: [26, 147, 171]\n  }, {\n    fromColor: [26, 147, 171],\n    toColor: [12, 16, 120]\n  }]\n}, {\n  id: \"yellowToRed_predefined\",\n  fromColor: [245, 245, 0],\n  toColor: [255, 0, 0]\n}, {\n  id: \"yellowGreenBright_predefined\",\n  fromColor: [236, 252, 204],\n  toColor: [157, 204, 16]\n}, {\n  id: \"yellowGreenLightToDark_predefined\",\n  fromColor: [215, 240, 175],\n  toColor: [96, 107, 45]\n}],\n      i = {\n  aspect_predefined: \"Aspect\",\n  blackToWhite_predefined: \"Black to White\",\n  blueBright_predefined: \"Blue Bright\",\n  blueLightToDark_predefined: \"Blue Light to Dark\",\n  blueGreenBright_predefined: \"Blue-Green Bright\",\n  blueGreenLightToDark_predefined: \"Blue-Green Light to Dark\",\n  brownLightToDark_predefined: \"Brown Light to Dark\",\n  brownToBlueGreenDivergingBright_predefined: \"Brown to Blue Green Diverging, Bright\",\n  brownToBlueGreenDivergingDark_predefined: \"Brown to Blue Green Diverging, Dark\",\n  coefficientBias_predefined: \"Coefficient Bias\",\n  coldToHotDiverging_predefined: \"Cold to Hot Diverging\",\n  conditionNumber_predefined: \"Condition Number\",\n  cyanToPurple_predefined: \"Cyan to Purple\",\n  cyanLightToBlueDark_predefined: \"Cyan-Light to Blue-Dark\",\n  distance_predefined: \"Distance\",\n  elevation1_predefined: \"Elevation #1\",\n  elevation2_predefined: \"Elevation #2\",\n  errors_predefined: \"Errors\",\n  grayLightToDark_predefined: \"Gray Light to Dark\",\n  greenBright_predefined: \"Green Bright\",\n  greenLightToDark_predefined: \"Green Light to Dark\",\n  greenToBlue_predefined: \"Green to Blue\",\n  orangeBright_predefined: \"Orange Bright\",\n  orangeLightToDark_predefined: \"Orange Light to Dark\",\n  partialSpectrum_predefined: \"Partial Spectrum\",\n  partialSpectrum1Diverging_predefined: \"Partial Spectrum 1 Diverging\",\n  partialSpectrum2Diverging_predefined: \"Partial Spectrum 2 Diverging\",\n  pinkToYellowGreenDivergingBright_predefined: \"Pink to YellowGreen Diverging, Bright\",\n  pinkToYellowGreenDivergingDark_predefined: \"Pink to YellowGreen Diverging, Dark\",\n  precipitation_predefined: \"Precipitation\",\n  prediction_predefined: \"Prediction\",\n  purpleBright_predefined: \"Purple Bright\",\n  purpleToGreenDivergingBright_predefined: \"Purple to Green Diverging, Bright\",\n  purpleToGreenDivergingDark_predefined: \"Purple to Green Diverging, Dark\",\n  purpleBlueBright_predefined: \"Purple-Blue Bright\",\n  purpleBlueLightToDark_predefined: \"Purple-Blue Light to Dark\",\n  purpleRedBright_predefined: \"Purple-Red Bright\",\n  purpleRedLightToDark_predefined: \"Purple-Red Light to Dark\",\n  redBright_predefined: \"Red Bright\",\n  redLightToDark_predefined: \"Red Light to Dark\",\n  redToBlueDivergingBright_predefined: \"Red to Blue Diverging, Bright\",\n  redToBlueDivergingDark_predefined: \"Red to Blue Diverging, Dark\",\n  redToGreen_predefined: \"Red to Green\",\n  redToGreenDivergingBright_predefined: \"Red to Green Diverging, Bright\",\n  redToGreenDivergingDark_predefined: \"Red to Green Diverging, Dark\",\n  slope_predefined: \"Slope\",\n  spectrumFullBright_predefined: \"Spectrum-Full Bright\",\n  spectrumFullDark_predefined: \"Spectrum-Full Dark\",\n  spectrumFullLight_predefined: \"Spectrum-Full Light\",\n  surface_predefined: \"Surface\",\n  temperature_predefined: \"Temperature\",\n  whiteToBlack_predefined: \"White to Black\",\n  yellowToDarkRed_predefined: \"Yellow to Dark Red\",\n  yellowToGreenToDarkBlue_predefined: \"Yellow to Green to Dark Blue\",\n  yellowToRed_predefined: \"Yellow to Red\",\n  yellowGreenBright_predefined: \"Yellow-Green Bright\",\n  yellowGreenLightToDark_predefined: \"Yellow-Green Light to Dark\"\n};\n\nfunction d(o, r) {\n  if (!o || !r || o.length !== r.length) return !1;\n\n  for (let e = 0; e < o.length; e++) if (o[e] > r[e] + 2 || o[e] < r[e] - 2) return !1;\n\n  return !0;\n}\n\nfunction n(o, e, t) {\n  const i = l(o),\n        d = l(e),\n        n = {\n    l: i.l * (1 - t) + t * d.l,\n    a: i.a * (1 - t) + t * d.a,\n    b: i.b * (1 - t) + t * d.b\n  };\n  return r(n);\n}\n\nfunction p(r, e) {\n  if (!r) return;\n  const l = e || t;\n  let i,\n      n = null;\n  return \"algorithmic\" === r.type ? l.some(o => {\n    if (d(r.fromColor.toRgb(), o.fromColor) && d(r.toColor.toRgb(), o.toColor)) return n = o.id, !0;\n  }) : \"multipart\" === r.type && l.some(e => {\n    if (r.colorRamps && e.colorRamps && r.colorRamps.length === e.colorRamps.length && (i = r.colorRamps, !e.colorRamps.some((r, e) => {\n      if (!d(i[e].fromColor.toRgb(), new o(r.fromColor).toRgb()) || !d(i[e].toColor.toRgb(), new o(r.toColor).toRgb())) return !0;\n    }))) {\n      if (n) return !0;\n      n = e.id;\n    }\n  }), n;\n}\n\nfunction f(o) {\n  const r = p(o);\n  return r ? i[r] : null;\n}\n\nfunction C(o, r) {\n  let e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n  if (!o || !r || r < 1) return;\n  const l = \"toJSON\" in o ? o.toJSON() : o,\n        t = \"multipart\" === l.type ? l.colorRamps.length : 1,\n        i = [],\n        d = [];\n  let p,\n      f,\n      C,\n      m,\n      a,\n      g = 0;\n  if (1 === r) return p = \"multipart\" === l.type ? l.colorRamps[0].fromColor : l.fromColor, d.push([0].concat(p)), d;\n\n  for (let n = 0; n < t; n++) i[n] = {\n    start: null,\n    end: null\n  }, i[n].start = g, i[n].end = g + 1 / t, g = i[n].end;\n\n  for (let u = 0; u < r; u++) m = u / (r - 1), i.forEach((o, i) => {\n    if (m >= o.start && (m < o.end || u === r - 1 && i === t - 1)) {\n      a = (m - o.start) / (o.end - o.start), \"multipart\" === l.type ? (p = l.colorRamps[i].fromColor, f = l.colorRamps[i].toColor) : (p = l.fromColor, f = l.toColor), 0 === u ? d.push([u].concat(p.slice(0, 3))) : u === r - 1 ? d.push([u].concat(f.slice(0, 3))) : (C = n({\n        r: p[0],\n        g: p[1],\n        b: p[2]\n      }, {\n        r: f[0],\n        g: f[1],\n        b: f[2]\n      }, a), d.push([u, C.r, C.g, C.b]));\n      const t = null != p[3] ? p[3] > 1 ? p[3] / 255 : p[3] : 1,\n            g = null != f[3] ? f[3] > 1 ? f[3] / 255 : f[3] : 1;\n      e && d[u].push(Math.min(255, Math.round(255 * (t * (1 - a) + g * a))));\n    }\n  });\n\n  return d;\n}\n\nfunction m(o) {\n  const r = f(o);\n\n  if (o) {\n    if (\"algorithmic\" === o.type) return { ...a(o),\n      Name: r\n    };\n\n    if (o.colorRamps) {\n      const e = o.colorRamps.map(a);\n      return {\n        type: \"MultiPartColorRamp\",\n        NumColorRamps: e.length,\n        ArrayOfColorRamp: e,\n        Name: r\n      };\n    }\n  }\n}\n\nfunction a(o) {\n  if (!o) return;\n  const r = o.toJSON();\n  return {\n    Algorithm: (null == r ? void 0 : r.Algorithm) || \"esriHSVAlgorithm\",\n    type: \"AlgorithmicColorRamp\",\n    FromColor: g(o.fromColor),\n    ToColor: g(o.toColor)\n  };\n}\n\nfunction g(o) {\n  const r = e(o);\n  return {\n    type: \"HsvColor\",\n    Hue: r.h,\n    Saturation: r.s,\n    Value: r.v,\n    AlphaValue: 255\n  };\n}\n\nfunction u(o) {\n  const r = o.reverse().map(o => {\n    const r = o.toString(16);\n    return r.length < 2 ? \"0\" + r : r;\n  });\n  return 4294967295 & Number.parseInt(r.join(\"\"), 16);\n}\n\nexport { i as PREDEFINED_COLOR_RAMP_NAME_MAP, t as PREDEFINED_JSON_COLOR_RAMPS, C as convertColorRampToColormap, p as getColorRampId, f as getColorRampName, m as getRFxArgColorRampValue, u as rgbaConvertTo32Bit };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/renderers/support/colorRampUtils.js"],"names":["o","toRGB","r","toHSV","e","toLAB","l","t","id","type","colorRamps","fromColor","toColor","i","aspect_predefined","blackToWhite_predefined","blueBright_predefined","blueLightToDark_predefined","blueGreenBright_predefined","blueGreenLightToDark_predefined","brownLightToDark_predefined","brownToBlueGreenDivergingBright_predefined","brownToBlueGreenDivergingDark_predefined","coefficientBias_predefined","coldToHotDiverging_predefined","conditionNumber_predefined","cyanToPurple_predefined","cyanLightToBlueDark_predefined","distance_predefined","elevation1_predefined","elevation2_predefined","errors_predefined","grayLightToDark_predefined","greenBright_predefined","greenLightToDark_predefined","greenToBlue_predefined","orangeBright_predefined","orangeLightToDark_predefined","partialSpectrum_predefined","partialSpectrum1Diverging_predefined","partialSpectrum2Diverging_predefined","pinkToYellowGreenDivergingBright_predefined","pinkToYellowGreenDivergingDark_predefined","precipitation_predefined","prediction_predefined","purpleBright_predefined","purpleToGreenDivergingBright_predefined","purpleToGreenDivergingDark_predefined","purpleBlueBright_predefined","purpleBlueLightToDark_predefined","purpleRedBright_predefined","purpleRedLightToDark_predefined","redBright_predefined","redLightToDark_predefined","redToBlueDivergingBright_predefined","redToBlueDivergingDark_predefined","redToGreen_predefined","redToGreenDivergingBright_predefined","redToGreenDivergingDark_predefined","slope_predefined","spectrumFullBright_predefined","spectrumFullDark_predefined","spectrumFullLight_predefined","surface_predefined","temperature_predefined","whiteToBlack_predefined","yellowToDarkRed_predefined","yellowToGreenToDarkBlue_predefined","yellowToRed_predefined","yellowGreenBright_predefined","yellowGreenLightToDark_predefined","d","length","n","a","b","p","some","toRgb","f","C","toJSON","m","g","push","concat","start","end","u","forEach","slice","Math","min","round","Name","map","NumColorRamps","ArrayOfColorRamp","Algorithm","FromColor","ToColor","Hue","h","Saturation","s","Value","v","AlphaValue","reverse","toString","Number","parseInt","join","PREDEFINED_COLOR_RAMP_NAME_MAP","PREDEFINED_JSON_COLOR_RAMPS","convertColorRampToColormap","getColorRampId","getColorRampName","getRFxArgColorRampValue","rgbaConvertTo32Bit"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport o from\"../../Color.js\";import{toRGB as r,toHSV as e,toLAB as l}from\"../../core/colorUtils.js\";const t=[{id:\"aspect_predefined\",type:\"multipart\",colorRamps:[{fromColor:[190,190,190],toColor:[255,45,8]},{fromColor:[255,45,8],toColor:[255,181,61]},{fromColor:[255,181,61],toColor:[255,254,52]},{fromColor:[255,254,52],toColor:[0,251,50]},{fromColor:[0,251,50],toColor:[255,254,52]},{fromColor:[0,253,255],toColor:[0,181,255]},{fromColor:[0,181,255],toColor:[26,35,253]},{fromColor:[26,35,253],toColor:[255,57,251]},{fromColor:[255,57,251],toColor:[255,45,8]}]},{id:\"blackToWhite_predefined\",fromColor:[0,0,0],toColor:[255,255,255]},{id:\"blueBright_predefined\",fromColor:[204,204,255],toColor:[0,0,224]},{id:\"blueLightToDark_predefined\",fromColor:[211,229,232],toColor:[46,100,140]},{id:\"blueGreenBright_predefined\",fromColor:[203,245,234],toColor:[48,207,146]},{id:\"blueGreenLightToDark_predefined\",fromColor:[216,242,237],toColor:[21,79,74]},{id:\"brownLightToDark_predefined\",fromColor:[240,236,170],toColor:[102,72,48]},{id:\"brownToBlueGreenDivergingBright_predefined\",type:\"multipart\",colorRamps:[{fromColor:[156,85,31],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[33,130,145]}]},{id:\"brownToBlueGreenDivergingDark_predefined\",type:\"multipart\",colorRamps:[{fromColor:[110,70,45],toColor:[204,204,102]},{fromColor:[204,204,102],toColor:[48,100,102]}]},{id:\"coefficientBias_predefined\",fromColor:[214,214,255],toColor:[0,57,148]},{id:\"coldToHotDiverging_predefined\",type:\"multipart\",colorRamps:[{fromColor:[69,117,181],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[214,47,39]}]},{id:\"conditionNumber_predefined\",type:\"multipart\",colorRamps:[{fromColor:[0,97,0],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,34,0]}]},{id:\"cyanToPurple_predefined\",type:\"multipart\",colorRamps:[{fromColor:[0,245,245],toColor:[0,0,245]},{fromColor:[0,0,245],toColor:[245,0,245]}]},{id:\"cyanLightToBlueDark_predefined\",type:\"multipart\",colorRamps:[{fromColor:[182,237,240],toColor:[31,131,224]},{fromColor:[31,131,224],toColor:[9,9,145]}]},{id:\"distance_predefined\",fromColor:[255,200,0],toColor:[0,0,255]},{id:\"elevation1_predefined\",type:\"multipart\",colorRamps:[{fromColor:[175,240,233],toColor:[255,255,179]},{fromColor:[255,255,179],toColor:[0,128,64]},{fromColor:[0,128,64],toColor:[252,186,3]},{fromColor:[252,186,3],toColor:[128,0,0]},{fromColor:[120,0,0],toColor:[105,48,13]},{fromColor:[105,48,13],toColor:[171,171,171]},{fromColor:[171,171,171],toColor:[255,252,255]}]},{id:\"elevation2_predefined\",type:\"multipart\",colorRamps:[{fromColor:[118,219,211],toColor:[255,255,199]},{fromColor:[255,255,199],toColor:[255,255,128]},{fromColor:[255,255,128],toColor:[217,194,121]},{fromColor:[217,194,121],toColor:[135,96,38]},{fromColor:[135,96,38],toColor:[150,150,181]},{fromColor:[150,150,181],toColor:[181,150,181]},{fromColor:[181,150,181],toColor:[255,252,255]}]},{id:\"errors_predefined\",fromColor:[255,235,214],toColor:[196,10,10]},{id:\"grayLightToDark_predefined\",fromColor:[219,219,219],toColor:[69,69,69]},{id:\"greenBright_predefined\",fromColor:[204,255,204],toColor:[14,204,14]},{id:\"greenLightToDark_predefined\",fromColor:[220,245,233],toColor:[34,102,51]},{id:\"greenToBlue_predefined\",type:\"multipart\",colorRamps:[{fromColor:[32,204,16],toColor:[0,242,242]},{fromColor:[0,242,242],toColor:[2,33,227]}]},{id:\"orangeBright_predefined\",fromColor:[255,235,204],toColor:[240,118,5]},{id:\"orangeLightToDark_predefined\",fromColor:[250,233,212],toColor:[171,65,36]},{id:\"partialSpectrum_predefined\",type:\"multipart\",colorRamps:[{fromColor:[242,241,162],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]},{fromColor:[252,3,69],toColor:[176,7,237]},{fromColor:[176,7,237],toColor:[2,29,173]}]},{id:\"partialSpectrum1Diverging_predefined\",type:\"multipart\",colorRamps:[{fromColor:[135,38,38],toColor:[240,149,12]},{fromColor:[240,149,12],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[74,80,181]},{fromColor:[74,80,181],toColor:[39,32,122]}]},{id:\"partialSpectrum2Diverging_predefined\",type:\"multipart\",colorRamps:[{fromColor:[115,77,42],toColor:[201,137,52]},{fromColor:[201,137,52],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[91,63,176]},{fromColor:[91,63,176],toColor:[81,13,97]}]},{id:\"pinkToYellowGreenDivergingBright_predefined\",type:\"multipart\",colorRamps:[{fromColor:[158,30,113],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[99,110,45]}]},{id:\"pinkToYellowGreenDivergingDark_predefined\",type:\"multipart\",colorRamps:[{fromColor:[97,47,73],toColor:[204,204,102]},{fromColor:[204,204,102],toColor:[22,59,15]}]},{id:\"precipitation_predefined\",type:\"multipart\",colorRamps:[{fromColor:[194,82,60],toColor:[237,161,19]},{fromColor:[237,161,19],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[0,219,0]},{fromColor:[0,219,0],toColor:[32,153,143]},{fromColor:[32,153,143],toColor:[11,44,122]}]},{id:\"prediction_predefined\",type:\"multipart\",colorRamps:[{fromColor:[40,146,199],toColor:[250,250,100]},{fromColor:[250,250,100],toColor:[232,16,20]}]},{id:\"purpleBright_predefined\",fromColor:[255,204,255],toColor:[199,0,199]},{id:\"purpleToGreenDivergingBright_predefined\",type:\"multipart\",colorRamps:[{fromColor:[77,32,150],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[20,122,11]}]},{id:\"purpleToGreenDivergingDark_predefined\",type:\"multipart\",colorRamps:[{fromColor:[67,14,89],toColor:[204,204,102]},{fromColor:[204,204,102],toColor:[24,79,15]}]},{id:\"purpleBlueBright_predefined\",fromColor:[223,184,230],toColor:[112,12,242]},{id:\"purpleBlueLightToDark_predefined\",fromColor:[229,213,242],toColor:[93,44,112]},{id:\"purpleRedBright_predefined\",fromColor:[255,204,225],toColor:[199,0,99]},{id:\"purpleRedLightToDark_predefined\",fromColor:[250,215,246],toColor:[143,17,57]},{id:\"redBright_predefined\",fromColor:[255,204,204],toColor:[219,0,0]},{id:\"redLightToDark_predefined\",fromColor:[255,224,224],toColor:[143,10,10]},{id:\"redToBlueDivergingBright_predefined\",type:\"multipart\",colorRamps:[{fromColor:[196,69,57],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[48,95,207]}]},{id:\"redToBlueDivergingDark_predefined\",type:\"multipart\",colorRamps:[{fromColor:[107,13,13],toColor:[204,204,102]},{fromColor:[204,204,102],toColor:[13,53,97]}]},{id:\"redToGreen_predefined\",type:\"multipart\",colorRamps:[{fromColor:[245,0,0],toColor:[245,245,0]},{fromColor:[245,245,0],toColor:[0,245,0]}]},{id:\"redToGreenDivergingBright_predefined\",type:\"multipart\",colorRamps:[{fromColor:[186,20,20],toColor:[255,255,191]},{fromColor:[255,255,191],toColor:[54,145,33]}]},{id:\"redToGreenDivergingDark_predefined\",type:\"multipart\",colorRamps:[{fromColor:[97,21,13],toColor:[204,204,102]},{fromColor:[204,204,102],toColor:[16,69,16]}]},{id:\"slope_predefined\",type:\"multipart\",colorRamps:[{fromColor:[56,168,0],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]},{id:\"spectrumFullBright_predefined\",type:\"multipart\",colorRamps:[{fromColor:[255,0,0],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[0,0,255]}]},{id:\"spectrumFullDark_predefined\",type:\"multipart\",colorRamps:[{fromColor:[153,0,0],toColor:[153,153,0]},{fromColor:[153,153,0],toColor:[0,153,153]},{fromColor:[0,153,153],toColor:[0,0,153]}]},{id:\"spectrumFullLight_predefined\",type:\"multipart\",colorRamps:[{fromColor:[255,153,153],toColor:[255,255,153]},{fromColor:[255,255,153],toColor:[153,255,255]},{fromColor:[153,255,255],toColor:[153,153,255]}]},{id:\"surface_predefined\",type:\"multipart\",colorRamps:[{fromColor:[112,153,89],toColor:[242,238,162]},{fromColor:[242,238,162],toColor:[242,206,133]},{fromColor:[242,206,133],toColor:[194,140,124]},{fromColor:[194,140,124],toColor:[255,242,255]}]},{id:\"temperature_predefined\",type:\"multipart\",colorRamps:[{fromColor:[255,252,255],toColor:[255,0,255]},{fromColor:[255,0,255],toColor:[0,0,255]},{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[0,255,0]},{fromColor:[0,255,0],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,128,0]},{fromColor:[255,128,0],toColor:[128,0,0]}]},{id:\"whiteToBlack_predefined\",fromColor:[255,255,255],toColor:[0,0,0]},{id:\"yellowToDarkRed_predefined\",type:\"multipart\",colorRamps:[{fromColor:[255,255,128],toColor:[242,167,46]},{fromColor:[242,167,46],toColor:[107,0,0]}]},{id:\"yellowToGreenToDarkBlue_predefined\",type:\"multipart\",colorRamps:[{fromColor:[255,255,128],toColor:[56,224,9]},{fromColor:[56,224,9],toColor:[26,147,171]},{fromColor:[26,147,171],toColor:[12,16,120]}]},{id:\"yellowToRed_predefined\",fromColor:[245,245,0],toColor:[255,0,0]},{id:\"yellowGreenBright_predefined\",fromColor:[236,252,204],toColor:[157,204,16]},{id:\"yellowGreenLightToDark_predefined\",fromColor:[215,240,175],toColor:[96,107,45]}],i={aspect_predefined:\"Aspect\",blackToWhite_predefined:\"Black to White\",blueBright_predefined:\"Blue Bright\",blueLightToDark_predefined:\"Blue Light to Dark\",blueGreenBright_predefined:\"Blue-Green Bright\",blueGreenLightToDark_predefined:\"Blue-Green Light to Dark\",brownLightToDark_predefined:\"Brown Light to Dark\",brownToBlueGreenDivergingBright_predefined:\"Brown to Blue Green Diverging, Bright\",brownToBlueGreenDivergingDark_predefined:\"Brown to Blue Green Diverging, Dark\",coefficientBias_predefined:\"Coefficient Bias\",coldToHotDiverging_predefined:\"Cold to Hot Diverging\",conditionNumber_predefined:\"Condition Number\",cyanToPurple_predefined:\"Cyan to Purple\",cyanLightToBlueDark_predefined:\"Cyan-Light to Blue-Dark\",distance_predefined:\"Distance\",elevation1_predefined:\"Elevation #1\",elevation2_predefined:\"Elevation #2\",errors_predefined:\"Errors\",grayLightToDark_predefined:\"Gray Light to Dark\",greenBright_predefined:\"Green Bright\",greenLightToDark_predefined:\"Green Light to Dark\",greenToBlue_predefined:\"Green to Blue\",orangeBright_predefined:\"Orange Bright\",orangeLightToDark_predefined:\"Orange Light to Dark\",partialSpectrum_predefined:\"Partial Spectrum\",partialSpectrum1Diverging_predefined:\"Partial Spectrum 1 Diverging\",partialSpectrum2Diverging_predefined:\"Partial Spectrum 2 Diverging\",pinkToYellowGreenDivergingBright_predefined:\"Pink to YellowGreen Diverging, Bright\",pinkToYellowGreenDivergingDark_predefined:\"Pink to YellowGreen Diverging, Dark\",precipitation_predefined:\"Precipitation\",prediction_predefined:\"Prediction\",purpleBright_predefined:\"Purple Bright\",purpleToGreenDivergingBright_predefined:\"Purple to Green Diverging, Bright\",purpleToGreenDivergingDark_predefined:\"Purple to Green Diverging, Dark\",purpleBlueBright_predefined:\"Purple-Blue Bright\",purpleBlueLightToDark_predefined:\"Purple-Blue Light to Dark\",purpleRedBright_predefined:\"Purple-Red Bright\",purpleRedLightToDark_predefined:\"Purple-Red Light to Dark\",redBright_predefined:\"Red Bright\",redLightToDark_predefined:\"Red Light to Dark\",redToBlueDivergingBright_predefined:\"Red to Blue Diverging, Bright\",redToBlueDivergingDark_predefined:\"Red to Blue Diverging, Dark\",redToGreen_predefined:\"Red to Green\",redToGreenDivergingBright_predefined:\"Red to Green Diverging, Bright\",redToGreenDivergingDark_predefined:\"Red to Green Diverging, Dark\",slope_predefined:\"Slope\",spectrumFullBright_predefined:\"Spectrum-Full Bright\",spectrumFullDark_predefined:\"Spectrum-Full Dark\",spectrumFullLight_predefined:\"Spectrum-Full Light\",surface_predefined:\"Surface\",temperature_predefined:\"Temperature\",whiteToBlack_predefined:\"White to Black\",yellowToDarkRed_predefined:\"Yellow to Dark Red\",yellowToGreenToDarkBlue_predefined:\"Yellow to Green to Dark Blue\",yellowToRed_predefined:\"Yellow to Red\",yellowGreenBright_predefined:\"Yellow-Green Bright\",yellowGreenLightToDark_predefined:\"Yellow-Green Light to Dark\"};function d(o,r){if(!o||!r||o.length!==r.length)return!1;for(let e=0;e<o.length;e++)if(o[e]>r[e]+2||o[e]<r[e]-2)return!1;return!0}function n(o,e,t){const i=l(o),d=l(e),n={l:i.l*(1-t)+t*d.l,a:i.a*(1-t)+t*d.a,b:i.b*(1-t)+t*d.b};return r(n)}function p(r,e){if(!r)return;const l=e||t;let i,n=null;return\"algorithmic\"===r.type?l.some((o=>{if(d(r.fromColor.toRgb(),o.fromColor)&&d(r.toColor.toRgb(),o.toColor))return n=o.id,!0})):\"multipart\"===r.type&&l.some((e=>{if(r.colorRamps&&e.colorRamps&&r.colorRamps.length===e.colorRamps.length&&(i=r.colorRamps,!e.colorRamps.some(((r,e)=>{if(!d(i[e].fromColor.toRgb(),new o(r.fromColor).toRgb())||!d(i[e].toColor.toRgb(),new o(r.toColor).toRgb()))return!0})))){if(n)return!0;n=e.id}})),n}function f(o){const r=p(o);return r?i[r]:null}function C(o,r,e=!1){if(!o||!r||r<1)return;const l=\"toJSON\"in o?o.toJSON():o,t=\"multipart\"===l.type?l.colorRamps.length:1,i=[],d=[];let p,f,C,m,a,g=0;if(1===r)return p=\"multipart\"===l.type?l.colorRamps[0].fromColor:l.fromColor,d.push([0].concat(p)),d;for(let n=0;n<t;n++)i[n]={start:null,end:null},i[n].start=g,i[n].end=g+1/t,g=i[n].end;for(let u=0;u<r;u++)m=u/(r-1),i.forEach(((o,i)=>{if(m>=o.start&&(m<o.end||u===r-1&&i===t-1)){a=(m-o.start)/(o.end-o.start),\"multipart\"===l.type?(p=l.colorRamps[i].fromColor,f=l.colorRamps[i].toColor):(p=l.fromColor,f=l.toColor),0===u?d.push([u].concat(p.slice(0,3))):u===r-1?d.push([u].concat(f.slice(0,3))):(C=n({r:p[0],g:p[1],b:p[2]},{r:f[0],g:f[1],b:f[2]},a),d.push([u,C.r,C.g,C.b]));const t=null!=p[3]?p[3]>1?p[3]/255:p[3]:1,g=null!=f[3]?f[3]>1?f[3]/255:f[3]:1;e&&d[u].push(Math.min(255,Math.round(255*(t*(1-a)+g*a))))}}));return d}function m(o){const r=f(o);if(o){if(\"algorithmic\"===o.type)return{...a(o),Name:r};if(o.colorRamps){const e=o.colorRamps.map(a);return{type:\"MultiPartColorRamp\",NumColorRamps:e.length,ArrayOfColorRamp:e,Name:r}}}}function a(o){if(!o)return;const r=o.toJSON();return{Algorithm:(null==r?void 0:r.Algorithm)||\"esriHSVAlgorithm\",type:\"AlgorithmicColorRamp\",FromColor:g(o.fromColor),ToColor:g(o.toColor)}}function g(o){const r=e(o);return{type:\"HsvColor\",Hue:r.h,Saturation:r.s,Value:r.v,AlphaValue:255}}function u(o){const r=o.reverse().map((o=>{const r=o.toString(16);return r.length<2?\"0\"+r:r}));return 4294967295&Number.parseInt(r.join(\"\"),16)}export{i as PREDEFINED_COLOR_RAMP_NAME_MAP,t as PREDEFINED_JSON_COLOR_RAMPS,C as convertColorRampToColormap,p as getColorRampId,f as getColorRampName,m as getRFxArgColorRampValue,u as rgbaConvertTo32Bit};\n"]},"metadata":{},"sourceType":"module"}