{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { isNone as t, isSome as e } from \"../../../../core/maybe.js\";\nimport r from \"../../../../core/PooledArray.js\";\nimport { webglDebugEnabled as i } from \"../../../webgl/checkWebGLError.js\";\n\nclass s {\n  constructor(t, e, s) {\n    this._context = t, this._locations = s, this._textures = new Map(), this._freeTextureUnits = new r({\n      deallocator: null\n    }), this._glProgram = t.programCache.acquire(e.generateSource(\"vertex\"), e.generateSource(\"fragment\"), s), this._glProgram.stop = () => {\n      throw new Error(\"Wrapped _glProgram used directly\");\n    }, this._fragmentUniforms = i() ? e.fragmentUniforms.entries : null;\n  }\n\n  dispose() {\n    this._glProgram.dispose();\n  }\n\n  get glName() {\n    return this._glProgram.glName;\n  }\n\n  get isCompiled() {\n    return this._glProgram.isCompiled;\n  }\n\n  setUniform1b(t, e) {\n    this._glProgram.setUniform1i(t, e ? 1 : 0);\n  }\n\n  setUniform1i(t, e) {\n    this._glProgram.setUniform1i(t, e);\n  }\n\n  setUniform1f(t, e) {\n    this._glProgram.setUniform1f(t, e);\n  }\n\n  setUniform1fv(t, e) {\n    this._glProgram.setUniform1fv(t, e);\n  }\n\n  setUniform1iv(t, e) {\n    this._glProgram.setUniform1iv(t, e);\n  }\n\n  setUniform2f(t, e, r) {\n    this._glProgram.setUniform2f(t, e, r);\n  }\n\n  setUniform2fv(t, e) {\n    this._glProgram.setUniform2fv(t, e);\n  }\n\n  setUniform2iv(t, e) {\n    this._glProgram.setUniform2iv(t, e);\n  }\n\n  setUniform3f(t, e, r, i) {\n    this._glProgram.setUniform3f(t, e, r, i);\n  }\n\n  setUniform3fv(t, e) {\n    this._glProgram.setUniform3fv(t, e);\n  }\n\n  setUniform3iv(t, e) {\n    this._glProgram.setUniform3iv(t, e);\n  }\n\n  setUniform4f(t, e, r, i, s) {\n    this._glProgram.setUniform4f(t, e, r, i, s);\n  }\n\n  setUniform4fv(t, e) {\n    this._glProgram.setUniform4fv(t, e);\n  }\n\n  setUniform4iv(t, e) {\n    this._glProgram.setUniform4iv(t, e);\n  }\n\n  setUniformMatrix3fv(t, e) {\n    this._glProgram.setUniformMatrix3fv(t, e);\n  }\n\n  setUniformMatrix4fv(t, e) {\n    this._glProgram.setUniformMatrix4fv(t, e);\n  }\n\n  assertCompatibleVertexAttributeLocations(t) {\n    t.locations !== this._locations && console.error(\"VertexAttributeLocations are incompatible\");\n  }\n\n  stop() {\n    this._textures.clear(), this._freeTextureUnits.clear();\n  }\n\n  bindTexture(e, r) {\n    if (t(e) || null == e.glName) {\n      const t = this._textures.get(r);\n\n      return t && (this._context.bindTexture(null, t.unit), this._freeTextureUnit(t), this._textures.delete(r)), null;\n    }\n\n    let i = this._textures.get(r);\n\n    return null == i ? (i = this._allocTextureUnit(e), this._textures.set(r, i)) : i.texture = e, this._context.useProgram(this), this.setUniform1i(r, i.unit), this._context.bindTexture(e, i.unit), i.unit;\n  }\n\n  rebindTextures() {\n    this._context.useProgram(this), this._textures.forEach((t, e) => {\n      this._context.bindTexture(t.texture, t.unit), this.setUniform1i(e, t.unit);\n    }), e(this._fragmentUniforms) && this._fragmentUniforms.forEach(t => {\n      if ((\"sampler2D\" === t.type || \"samplerCube\" === t.type) && !this._textures.has(t.name)) throw new Error(`Texture sampler ${t.name} has no bound texture`);\n    });\n  }\n\n  _allocTextureUnit(t) {\n    return {\n      texture: t,\n      unit: 0 === this._freeTextureUnits.length ? this._textures.size : this._freeTextureUnits.pop()\n    };\n  }\n\n  _freeTextureUnit(t) {\n    this._freeTextureUnits.push(t.unit);\n  }\n\n}\n\nexport { s as Program };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/3d/webgl-engine/lib/Program.js"],"names":["isNone","t","isSome","e","r","webglDebugEnabled","i","s","constructor","_context","_locations","_textures","Map","_freeTextureUnits","deallocator","_glProgram","programCache","acquire","generateSource","stop","Error","_fragmentUniforms","fragmentUniforms","entries","dispose","glName","isCompiled","setUniform1b","setUniform1i","setUniform1f","setUniform1fv","setUniform1iv","setUniform2f","setUniform2fv","setUniform2iv","setUniform3f","setUniform3fv","setUniform3iv","setUniform4f","setUniform4fv","setUniform4iv","setUniformMatrix3fv","setUniformMatrix4fv","assertCompatibleVertexAttributeLocations","locations","console","error","clear","bindTexture","get","unit","_freeTextureUnit","delete","_allocTextureUnit","set","texture","useProgram","rebindTextures","forEach","type","has","name","length","size","pop","push","Program"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{isNone as t,isSome as e}from\"../../../../core/maybe.js\";import r from\"../../../../core/PooledArray.js\";import{webglDebugEnabled as i}from\"../../../webgl/checkWebGLError.js\";class s{constructor(t,e,s){this._context=t,this._locations=s,this._textures=new Map,this._freeTextureUnits=new r({deallocator:null}),this._glProgram=t.programCache.acquire(e.generateSource(\"vertex\"),e.generateSource(\"fragment\"),s),this._glProgram.stop=()=>{throw new Error(\"Wrapped _glProgram used directly\")},this._fragmentUniforms=i()?e.fragmentUniforms.entries:null}dispose(){this._glProgram.dispose()}get glName(){return this._glProgram.glName}get isCompiled(){return this._glProgram.isCompiled}setUniform1b(t,e){this._glProgram.setUniform1i(t,e?1:0)}setUniform1i(t,e){this._glProgram.setUniform1i(t,e)}setUniform1f(t,e){this._glProgram.setUniform1f(t,e)}setUniform1fv(t,e){this._glProgram.setUniform1fv(t,e)}setUniform1iv(t,e){this._glProgram.setUniform1iv(t,e)}setUniform2f(t,e,r){this._glProgram.setUniform2f(t,e,r)}setUniform2fv(t,e){this._glProgram.setUniform2fv(t,e)}setUniform2iv(t,e){this._glProgram.setUniform2iv(t,e)}setUniform3f(t,e,r,i){this._glProgram.setUniform3f(t,e,r,i)}setUniform3fv(t,e){this._glProgram.setUniform3fv(t,e)}setUniform3iv(t,e){this._glProgram.setUniform3iv(t,e)}setUniform4f(t,e,r,i,s){this._glProgram.setUniform4f(t,e,r,i,s)}setUniform4fv(t,e){this._glProgram.setUniform4fv(t,e)}setUniform4iv(t,e){this._glProgram.setUniform4iv(t,e)}setUniformMatrix3fv(t,e){this._glProgram.setUniformMatrix3fv(t,e)}setUniformMatrix4fv(t,e){this._glProgram.setUniformMatrix4fv(t,e)}assertCompatibleVertexAttributeLocations(t){t.locations!==this._locations&&console.error(\"VertexAttributeLocations are incompatible\")}stop(){this._textures.clear(),this._freeTextureUnits.clear()}bindTexture(e,r){if(t(e)||null==e.glName){const t=this._textures.get(r);return t&&(this._context.bindTexture(null,t.unit),this._freeTextureUnit(t),this._textures.delete(r)),null}let i=this._textures.get(r);return null==i?(i=this._allocTextureUnit(e),this._textures.set(r,i)):i.texture=e,this._context.useProgram(this),this.setUniform1i(r,i.unit),this._context.bindTexture(e,i.unit),i.unit}rebindTextures(){this._context.useProgram(this),this._textures.forEach(((t,e)=>{this._context.bindTexture(t.texture,t.unit),this.setUniform1i(e,t.unit)})),e(this._fragmentUniforms)&&this._fragmentUniforms.forEach((t=>{if((\"sampler2D\"===t.type||\"samplerCube\"===t.type)&&!this._textures.has(t.name))throw new Error(`Texture sampler ${t.name} has no bound texture`)}))}_allocTextureUnit(t){return{texture:t,unit:0===this._freeTextureUnits.length?this._textures.size:this._freeTextureUnits.pop()}}_freeTextureUnit(t){this._freeTextureUnits.push(t.unit)}}export{s as Program};\n"]},"metadata":{},"sourceType":"module"}