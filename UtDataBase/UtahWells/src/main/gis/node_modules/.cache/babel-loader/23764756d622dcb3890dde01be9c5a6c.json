{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { isSome as e } from \"../../../../core/maybe.js\";\nimport t from \"./MemoryRequirements.js\";\nimport r from \"./TileBufferData.js\";\nimport s, { groupRecordsByGeometryType as i } from \"./TileDisplayData.js\";\nimport { allocateTypedArrayBuffer as a, copyMeshData as o, forEachGeometryType as f } from \"./Utils.js\";\nimport n from \"./WGLDisplayRecord.js\";\nimport { DisplayRecordReader as l } from \"./cpuMapped/DisplayRecordReader.js\";\nimport { VertexBuffers as u } from \"./mesh/VertexBuffer.js\";\nimport { VertexVectors as c } from \"./mesh/VertexVector.js\";\nimport m from \"./util/Writer.js\";\nconst D = new t(),\n      d = new t(),\n      p = 1.5,\n      h = 5;\n\nfunction x(e, t) {\n  const r = {};\n\n  for (const s in e) {\n    const i = {\n      data: a(t, e[s]),\n      stride: e[s]\n    };\n    r[s] = i;\n  }\n\n  return r;\n}\n\nfunction B(e) {\n  return [e.fill || {}, e.line || {}, e.icon || {}, e.text || {}, e.label || {}];\n}\n\nclass y {\n  constructor() {\n    this.tileDisplayData = null, this.tileBufferData = null;\n  }\n\n  reshuffle() {\n    D.reset();\n    const e = i(this.tileDisplayData.displayObjects);\n\n    for (const r of e) for (const e of r) e && D.needMore(e.geometryType, e.meshData ? e.meshData.vertexCount : e.vertexCount, e.meshData ? e.meshData.indexData.length : e.indexCount);\n\n    const t = e.length,\n          s = new r();\n\n    for (let r = 0; r < t; ++r) {\n      s.geometries[r].indexBuffer = new Uint32Array(Math.round(p * D.indicesFor(r)));\n      const e = [];\n\n      for (const s in this.tileBufferData.geometries[r].vertexBuffer) e.push(this.tileBufferData.geometries[r].vertexBuffer[s].stride);\n\n      const t = y._computeVertexAlignment(e),\n            i = Math.round(p * D.verticesFor(r)),\n            o = y._align(i, t);\n\n      for (const f in this.tileBufferData.geometries[r].vertexBuffer) {\n        const e = this.tileBufferData.geometries[r].vertexBuffer[f].stride;\n        s.geometries[r].vertexBuffer[f] = {\n          stride: e,\n          data: a(o, e)\n        };\n      }\n    }\n\n    d.reset(), this.tileDisplayData.displayList.clear();\n\n    for (let r = 0; r < t; ++r) {\n      const t = e[r];\n\n      for (const e of t) {\n        if (e.meshData) e.writeMeshDataToBuffers(d.verticesFor(r), s.geometries[r].vertexBuffer, d.indicesFor(r), s.geometries[r].indexBuffer), e.meshData = null;else {\n          const t = this.tileBufferData.geometries[r].vertexBuffer,\n                i = this.tileBufferData.geometries[r].indexBuffer,\n                a = s.geometries[r].vertexBuffer,\n                f = s.geometries[r].indexBuffer,\n                n = d.verticesFor(r),\n                l = d.indicesFor(r);\n          o(n, l, a, f, e, t, i), e.vertexFrom = n, e.indexFrom = l;\n        }\n        d.needMore(r, e.vertexCount, e.indexCount);\n      }\n    }\n\n    for (const r of this.tileDisplayData.displayObjects) this.tileDisplayData.displayList.addToList(r.displayRecords);\n\n    this.tileBufferData = s;\n  }\n\n  getStrides() {\n    const e = [];\n\n    for (let t = 0; t < this.tileBufferData.geometries.length; ++t) {\n      const r = this.tileBufferData.geometries[t];\n      e[t] = {};\n\n      for (const s in r.vertexBuffer) e[t][s] = r.vertexBuffer[s].stride;\n    }\n\n    return e;\n  }\n\n  clone() {\n    const e = new y();\n    return e.tileBufferData = this.tileBufferData.clone(), e.tileDisplayData = this.tileDisplayData.clone(), e;\n  }\n\n  _guessSize() {\n    const {\n      displayObjects: e\n    } = this.tileDisplayData,\n          t = Math.min(e.length, 4),\n          r = 12,\n          s = 40;\n    let i = 0;\n\n    for (let a = 0; a < t; a++) i = Math.max(i, e[a].displayRecords.length);\n\n    return 2 * (e.length * r + e.length * i * s);\n  }\n\n  serialize() {\n    const e = this.tileBufferData.serialize(),\n          t = this.tileBufferData.getBuffers(),\n          r = this.tileDisplayData.serialize(new m(Int32Array, this._guessSize())).buffer();\n    return t.push(r), {\n      result: {\n        displayData: r,\n        bufferData: e\n      },\n      transferList: t\n    };\n  }\n\n  static fromVertexData(t, r) {\n    const s = {},\n          i = new Map();\n\n    for (const e of r) i.set(e.id, e);\n\n    return f(r => {\n      const a = t.data[r];\n\n      if (e(a)) {\n        const e = l.from(a.records).getCursor();\n\n        for (; e.next();) {\n          const t = e.id,\n                s = e.materialKey,\n                a = e.indexFrom,\n                o = e.indexCount,\n                f = e.vertexFrom,\n                l = e.vertexCount,\n                u = i.get(t),\n                c = new n(t, r, s);\n          c.indexFrom = a, c.indexCount = o, c.vertexFrom = f, c.vertexCount = l, u.displayRecords.push(c);\n        }\n\n        s[r] = u.fromVertexData(a, r);\n      } else s[r] = new c(r, 0, {\n        fill: \"default\"\n      }).intoBuffers();\n    }), y.fromMeshData({\n      displayObjects: r,\n      vertexBuffersMap: s\n    });\n  }\n\n  static fromMeshData(e) {\n    const t = new y(),\n          i = new s(),\n          a = new r();\n    i.displayObjects = e.displayObjects;\n\n    for (const r in e.vertexBuffersMap) {\n      const t = e.vertexBuffersMap[r];\n      a.geometries[r].indexBuffer = t.indexBuffer, a.geometries[r].vertexBuffer = t.namedBuffers;\n    }\n\n    return t.tileDisplayData = i, t.tileBufferData = a, t;\n  }\n\n  static bind(e, t) {\n    const r = new y();\n    return r.tileDisplayData = e, r.tileBufferData = t, r;\n  }\n\n  static create(e, t) {\n    const i = new y();\n    i.tileDisplayData = new s(), i.tileDisplayData.displayObjects = e;\n    const a = [0, 0, 0, 0, 0],\n          o = [0, 0, 0, 0, 0],\n          f = [[], [], [], [], []];\n\n    for (const r of e) for (const e of r.displayRecords) f[e.geometryType].push(e), a[e.geometryType] += e.meshData.vertexCount, o[e.geometryType] += e.meshData.indexData.length;\n\n    const l = new r(),\n          u = B(t);\n\n    for (let r = 0; r < h; r++) {\n      const e = new Uint32Array(o[r]),\n            t = x(u[r], a[r]);\n      n.writeAllMeshDataToBuffers(f[r], t, e), l.geometries[r] = {\n        indexBuffer: e,\n        vertexBuffer: t\n      };\n    }\n\n    return i.tileBufferData = l, i;\n  }\n\n  static _align(e, t) {\n    const r = e % t;\n    return 0 === r ? e : e + (t - r);\n  }\n\n  static _computeVertexAlignment(e) {\n    let t = !1,\n        r = !1;\n\n    for (const s of e) s % 4 == 2 ? t = !0 : s % 4 != 0 && (r = !0);\n\n    return r ? 4 : t ? 2 : 1;\n  }\n\n}\n\nexport { y as TileData };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/webgl/TileData.js"],"names":["isSome","e","t","r","s","groupRecordsByGeometryType","i","allocateTypedArrayBuffer","a","copyMeshData","o","forEachGeometryType","f","n","DisplayRecordReader","l","VertexBuffers","u","VertexVectors","c","m","D","d","p","h","x","data","stride","B","fill","line","icon","text","label","y","constructor","tileDisplayData","tileBufferData","reshuffle","reset","displayObjects","needMore","geometryType","meshData","vertexCount","indexData","length","indexCount","geometries","indexBuffer","Uint32Array","Math","round","indicesFor","vertexBuffer","push","_computeVertexAlignment","verticesFor","_align","displayList","clear","writeMeshDataToBuffers","vertexFrom","indexFrom","addToList","displayRecords","getStrides","clone","_guessSize","min","max","serialize","getBuffers","Int32Array","buffer","result","displayData","bufferData","transferList","fromVertexData","Map","set","id","from","records","getCursor","next","materialKey","get","intoBuffers","fromMeshData","vertexBuffersMap","namedBuffers","bind","create","writeAllMeshDataToBuffers","TileData"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../../core/maybe.js\";import t from\"./MemoryRequirements.js\";import r from\"./TileBufferData.js\";import s,{groupRecordsByGeometryType as i}from\"./TileDisplayData.js\";import{allocateTypedArrayBuffer as a,copyMeshData as o,forEachGeometryType as f}from\"./Utils.js\";import n from\"./WGLDisplayRecord.js\";import{DisplayRecordReader as l}from\"./cpuMapped/DisplayRecordReader.js\";import{VertexBuffers as u}from\"./mesh/VertexBuffer.js\";import{VertexVectors as c}from\"./mesh/VertexVector.js\";import m from\"./util/Writer.js\";const D=new t,d=new t,p=1.5,h=5;function x(e,t){const r={};for(const s in e){const i={data:a(t,e[s]),stride:e[s]};r[s]=i}return r}function B(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}class y{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){D.reset();const e=i(this.tileDisplayData.displayObjects);for(const r of e)for(const e of r)e&&D.needMore(e.geometryType,e.meshData?e.meshData.vertexCount:e.vertexCount,e.meshData?e.meshData.indexData.length:e.indexCount);const t=e.length,s=new r;for(let r=0;r<t;++r){s.geometries[r].indexBuffer=new Uint32Array(Math.round(p*D.indicesFor(r)));const e=[];for(const s in this.tileBufferData.geometries[r].vertexBuffer)e.push(this.tileBufferData.geometries[r].vertexBuffer[s].stride);const t=y._computeVertexAlignment(e),i=Math.round(p*D.verticesFor(r)),o=y._align(i,t);for(const f in this.tileBufferData.geometries[r].vertexBuffer){const e=this.tileBufferData.geometries[r].vertexBuffer[f].stride;s.geometries[r].vertexBuffer[f]={stride:e,data:a(o,e)}}}d.reset(),this.tileDisplayData.displayList.clear();for(let r=0;r<t;++r){const t=e[r];for(const e of t){if(e.meshData)e.writeMeshDataToBuffers(d.verticesFor(r),s.geometries[r].vertexBuffer,d.indicesFor(r),s.geometries[r].indexBuffer),e.meshData=null;else{const t=this.tileBufferData.geometries[r].vertexBuffer,i=this.tileBufferData.geometries[r].indexBuffer,a=s.geometries[r].vertexBuffer,f=s.geometries[r].indexBuffer,n=d.verticesFor(r),l=d.indicesFor(r);o(n,l,a,f,e,t,i),e.vertexFrom=n,e.indexFrom=l}d.needMore(r,e.vertexCount,e.indexCount)}}for(const r of this.tileDisplayData.displayObjects)this.tileDisplayData.displayList.addToList(r.displayRecords);this.tileBufferData=s}getStrides(){const e=[];for(let t=0;t<this.tileBufferData.geometries.length;++t){const r=this.tileBufferData.geometries[t];e[t]={};for(const s in r.vertexBuffer)e[t][s]=r.vertexBuffer[s].stride}return e}clone(){const e=new y;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e}_guessSize(){const{displayObjects:e}=this.tileDisplayData,t=Math.min(e.length,4),r=12,s=40;let i=0;for(let a=0;a<t;a++)i=Math.max(i,e[a].displayRecords.length);return 2*(e.length*r+e.length*i*s)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),r=this.tileDisplayData.serialize(new m(Int32Array,this._guessSize())).buffer();return t.push(r),{result:{displayData:r,bufferData:e},transferList:t}}static fromVertexData(t,r){const s={},i=new Map;for(const e of r)i.set(e.id,e);return f((r=>{const a=t.data[r];if(e(a)){const e=l.from(a.records).getCursor();for(;e.next();){const t=e.id,s=e.materialKey,a=e.indexFrom,o=e.indexCount,f=e.vertexFrom,l=e.vertexCount,u=i.get(t),c=new n(t,r,s);c.indexFrom=a,c.indexCount=o,c.vertexFrom=f,c.vertexCount=l,u.displayRecords.push(c)}s[r]=u.fromVertexData(a,r)}else s[r]=new c(r,0,{fill:\"default\"}).intoBuffers()})),y.fromMeshData({displayObjects:r,vertexBuffersMap:s})}static fromMeshData(e){const t=new y,i=new s,a=new r;i.displayObjects=e.displayObjects;for(const r in e.vertexBuffersMap){const t=e.vertexBuffersMap[r];a.geometries[r].indexBuffer=t.indexBuffer,a.geometries[r].vertexBuffer=t.namedBuffers}return t.tileDisplayData=i,t.tileBufferData=a,t}static bind(e,t){const r=new y;return r.tileDisplayData=e,r.tileBufferData=t,r}static create(e,t){const i=new y;i.tileDisplayData=new s,i.tileDisplayData.displayObjects=e;const a=[0,0,0,0,0],o=[0,0,0,0,0],f=[[],[],[],[],[]];for(const r of e)for(const e of r.displayRecords)f[e.geometryType].push(e),a[e.geometryType]+=e.meshData.vertexCount,o[e.geometryType]+=e.meshData.indexData.length;const l=new r,u=B(t);for(let r=0;r<h;r++){const e=new Uint32Array(o[r]),t=x(u[r],a[r]);n.writeAllMeshDataToBuffers(f[r],t,e),l.geometries[r]={indexBuffer:e,vertexBuffer:t}}return i.tileBufferData=l,i}static _align(e,t){const r=e%t;return 0===r?e:e+(t-r)}static _computeVertexAlignment(e){let t=!1,r=!1;for(const s of e)s%4==2?t=!0:s%4!=0&&(r=!0);return r?4:t?2:1}}export{y as TileData};\n"]},"metadata":{},"sourceType":"module"}