{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { ByteSizeUnit as t } from \"./byteSizeEstimations.js\";\nimport { clamp as n } from \"./mathUtils.js\";\nimport { replace as i } from \"./string.js\";\nimport { preferredMetricLengthUnit as r, convertUnit as o, preferredMetricVerticalLengthUnit as e, preferredImperialLengthUnit as u, preferredImperialVerticalLengthUnit as s, preferredMetricAreaUnit as m, preferredImperialAreaUnit as c } from \"./unitUtils.js\";\nimport { formatNumber as a } from \"../intl/number.js\";\n\nfunction f(t, n, i) {\n  return t.units[n][i];\n}\n\nfunction b(t, n, i) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n  let o = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"abbr\";\n  return `${a(n, {\n    minimumFractionDigits: r,\n    maximumFractionDigits: r\n  })} ${f(t, i, o)}`;\n}\n\nfunction l(t, n, i) {\n  let e = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n  let u = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"abbr\";\n  const s = r(n, i);\n  return b(t, o(n, i, s), s, e, u);\n}\n\nfunction g(t, n, i) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n  let u = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"abbr\";\n  const s = e(n, i);\n  return b(t, o(n, i, s), s, r, u);\n}\n\nfunction F(t, n, i) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n  let e = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"abbr\";\n  const s = u(n, i);\n  return b(t, o(n, i, s), s, r, e);\n}\n\nfunction h(t, n, i) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n  let e = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"abbr\";\n  const u = s(n, i);\n  return b(t, o(n, i, u), u, r, e);\n}\n\nfunction p(t, n, i) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n  let e = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"abbr\";\n  const u = m(n, i);\n  return b(t, o(n, i, u), u, r, e);\n}\n\nfunction x(t, n, i) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n  let e = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"abbr\";\n  const u = c(n, i);\n  return b(t, o(n, i, u), u, r, e);\n}\n\nfunction B(t, n) {\n  let i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n  let r = o(t, n, \"degrees\"),\n      e = r - Math.floor(r);\n  r -= e, e *= 60;\n  let u = e - Math.floor(e);\n  return e -= u, u *= 60, `${r.toFixed()}Â° ${e.toFixed()}' ${u.toFixed(i)}\"`;\n}\n\nfunction d(t, n) {\n  let i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n  const r = o(t, n, \"degrees\");\n  return a(r, {\n    style: \"unit\",\n    unitDisplay: \"narrow\",\n    unit: \"degree\",\n    maximumFractionDigits: i,\n    minimumFractionDigits: i\n  });\n}\n\nconst D = [\"B\", \"kB\", \"MB\", \"GB\", \"TB\"];\n\nfunction M(r, o) {\n  let e = 0 === o ? 0 : Math.floor(Math.log(o) / Math.log(t.KILOBYTES));\n  e = n(e, 0, D.length - 1);\n  const u = a(o / t.KILOBYTES ** e, {\n    maximumFractionDigits: 2\n  });\n  return i(r.units.bytes[D[e]], {\n    fileSize: u\n  });\n}\n\nexport { d as formatAngleDegrees, B as formatDMS, b as formatDecimal, M as formatFileSize, x as formatImperialArea, F as formatImperialLength, h as formatImperialVerticalLength, p as formatMetricArea, l as formatMetricLength, g as formatMetricVerticalLength, f as unitName };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/core/unitFormatUtils.js"],"names":["ByteSizeUnit","t","clamp","n","replace","i","preferredMetricLengthUnit","r","convertUnit","o","preferredMetricVerticalLengthUnit","e","preferredImperialLengthUnit","u","preferredImperialVerticalLengthUnit","s","preferredMetricAreaUnit","m","preferredImperialAreaUnit","c","formatNumber","a","f","units","b","minimumFractionDigits","maximumFractionDigits","l","g","F","h","p","x","B","Math","floor","toFixed","d","style","unitDisplay","unit","D","M","log","KILOBYTES","length","bytes","fileSize","formatAngleDegrees","formatDMS","formatDecimal","formatFileSize","formatImperialArea","formatImperialLength","formatImperialVerticalLength","formatMetricArea","formatMetricLength","formatMetricVerticalLength","unitName"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,YAAY,IAAIC,CAAvB,QAA6B,0BAA7B;AAAwD,SAAOC,KAAK,IAAIC,CAAhB,QAAsB,gBAAtB;AAAuC,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,aAAxB;AAAsC,SAAOC,yBAAyB,IAAIC,CAApC,EAAsCC,WAAW,IAAIC,CAArD,EAAuDC,iCAAiC,IAAIC,CAA5F,EAA8FC,2BAA2B,IAAIC,CAA7H,EAA+HC,mCAAmC,IAAIC,CAAtK,EAAwKC,uBAAuB,IAAIC,CAAnM,EAAqMC,yBAAyB,IAAIC,CAAlO,QAAwO,gBAAxO;AAAyP,SAAOC,YAAY,IAAIC,CAAvB,QAA6B,mBAA7B;;AAAiD,SAASC,CAAT,CAAWrB,CAAX,EAAaE,CAAb,EAAeE,CAAf,EAAiB;AAAC,SAAOJ,CAAC,CAACsB,KAAF,CAAQpB,CAAR,EAAWE,CAAX,CAAP;AAAqB;;AAAA,SAASmB,CAAT,CAAWvB,CAAX,EAAaE,CAAb,EAAeE,CAAf,EAA8B;AAAA,MAAbE,CAAa,uEAAX,CAAW;AAAA,MAATE,CAAS,uEAAP,MAAO;AAAC,SAAO,GAAEY,CAAC,CAAClB,CAAD,EAAG;AAACsB,IAAAA,qBAAqB,EAAClB,CAAvB;AAAyBmB,IAAAA,qBAAqB,EAACnB;AAA/C,GAAH,CAAsD,IAAGe,CAAC,CAACrB,CAAD,EAAGI,CAAH,EAAKI,CAAL,CAAQ,EAA5E;AAA8E;;AAAA,SAASkB,CAAT,CAAW1B,CAAX,EAAaE,CAAb,EAAeE,CAAf,EAA8B;AAAA,MAAbM,CAAa,uEAAX,CAAW;AAAA,MAATE,CAAS,uEAAP,MAAO;AAAC,QAAME,CAAC,GAACR,CAAC,CAACJ,CAAD,EAAGE,CAAH,CAAT;AAAe,SAAOmB,CAAC,CAACvB,CAAD,EAAGQ,CAAC,CAACN,CAAD,EAAGE,CAAH,EAAKU,CAAL,CAAJ,EAAYA,CAAZ,EAAcJ,CAAd,EAAgBE,CAAhB,CAAR;AAA2B;;AAAA,SAASe,CAAT,CAAW3B,CAAX,EAAaE,CAAb,EAAeE,CAAf,EAA8B;AAAA,MAAbE,CAAa,uEAAX,CAAW;AAAA,MAATM,CAAS,uEAAP,MAAO;AAAC,QAAME,CAAC,GAACJ,CAAC,CAACR,CAAD,EAAGE,CAAH,CAAT;AAAe,SAAOmB,CAAC,CAACvB,CAAD,EAAGQ,CAAC,CAACN,CAAD,EAAGE,CAAH,EAAKU,CAAL,CAAJ,EAAYA,CAAZ,EAAcR,CAAd,EAAgBM,CAAhB,CAAR;AAA2B;;AAAA,SAASgB,CAAT,CAAW5B,CAAX,EAAaE,CAAb,EAAeE,CAAf,EAA8B;AAAA,MAAbE,CAAa,uEAAX,CAAW;AAAA,MAATI,CAAS,uEAAP,MAAO;AAAC,QAAMI,CAAC,GAACF,CAAC,CAACV,CAAD,EAAGE,CAAH,CAAT;AAAe,SAAOmB,CAAC,CAACvB,CAAD,EAAGQ,CAAC,CAACN,CAAD,EAAGE,CAAH,EAAKU,CAAL,CAAJ,EAAYA,CAAZ,EAAcR,CAAd,EAAgBI,CAAhB,CAAR;AAA2B;;AAAA,SAASmB,CAAT,CAAW7B,CAAX,EAAaE,CAAb,EAAeE,CAAf,EAA8B;AAAA,MAAbE,CAAa,uEAAX,CAAW;AAAA,MAATI,CAAS,uEAAP,MAAO;AAAC,QAAME,CAAC,GAACE,CAAC,CAACZ,CAAD,EAAGE,CAAH,CAAT;AAAe,SAAOmB,CAAC,CAACvB,CAAD,EAAGQ,CAAC,CAACN,CAAD,EAAGE,CAAH,EAAKQ,CAAL,CAAJ,EAAYA,CAAZ,EAAcN,CAAd,EAAgBI,CAAhB,CAAR;AAA2B;;AAAA,SAASoB,CAAT,CAAW9B,CAAX,EAAaE,CAAb,EAAeE,CAAf,EAA8B;AAAA,MAAbE,CAAa,uEAAX,CAAW;AAAA,MAATI,CAAS,uEAAP,MAAO;AAAC,QAAME,CAAC,GAACI,CAAC,CAACd,CAAD,EAAGE,CAAH,CAAT;AAAe,SAAOmB,CAAC,CAACvB,CAAD,EAAGQ,CAAC,CAACN,CAAD,EAAGE,CAAH,EAAKQ,CAAL,CAAJ,EAAYA,CAAZ,EAAcN,CAAd,EAAgBI,CAAhB,CAAR;AAA2B;;AAAA,SAASqB,CAAT,CAAW/B,CAAX,EAAaE,CAAb,EAAeE,CAAf,EAA8B;AAAA,MAAbE,CAAa,uEAAX,CAAW;AAAA,MAATI,CAAS,uEAAP,MAAO;AAAC,QAAME,CAAC,GAACM,CAAC,CAAChB,CAAD,EAAGE,CAAH,CAAT;AAAe,SAAOmB,CAAC,CAACvB,CAAD,EAAGQ,CAAC,CAACN,CAAD,EAAGE,CAAH,EAAKQ,CAAL,CAAJ,EAAYA,CAAZ,EAAcN,CAAd,EAAgBI,CAAhB,CAAR;AAA2B;;AAAA,SAASsB,CAAT,CAAWhC,CAAX,EAAaE,CAAb,EAAmB;AAAA,MAAJE,CAAI,uEAAF,CAAE;AAAC,MAAIE,CAAC,GAACE,CAAC,CAACR,CAAD,EAAGE,CAAH,EAAK,SAAL,CAAP;AAAA,MAAuBQ,CAAC,GAACJ,CAAC,GAAC2B,IAAI,CAACC,KAAL,CAAW5B,CAAX,CAA3B;AAAyCA,EAAAA,CAAC,IAAEI,CAAH,EAAKA,CAAC,IAAE,EAAR;AAAW,MAAIE,CAAC,GAACF,CAAC,GAACuB,IAAI,CAACC,KAAL,CAAWxB,CAAX,CAAR;AAAsB,SAAOA,CAAC,IAAEE,CAAH,EAAKA,CAAC,IAAE,EAAR,EAAY,GAAEN,CAAC,CAAC6B,OAAF,EAAY,KAAIzB,CAAC,CAACyB,OAAF,EAAY,KAAIvB,CAAC,CAACuB,OAAF,CAAU/B,CAAV,CAAa,GAAlE;AAAqE;;AAAA,SAASgC,CAAT,CAAWpC,CAAX,EAAaE,CAAb,EAAmB;AAAA,MAAJE,CAAI,uEAAF,CAAE;AAAC,QAAME,CAAC,GAACE,CAAC,CAACR,CAAD,EAAGE,CAAH,EAAK,SAAL,CAAT;AAAyB,SAAOkB,CAAC,CAACd,CAAD,EAAG;AAAC+B,IAAAA,KAAK,EAAC,MAAP;AAAcC,IAAAA,WAAW,EAAC,QAA1B;AAAmCC,IAAAA,IAAI,EAAC,QAAxC;AAAiDd,IAAAA,qBAAqB,EAACrB,CAAvE;AAAyEoB,IAAAA,qBAAqB,EAACpB;AAA/F,GAAH,CAAR;AAA8G;;AAAA,MAAMoC,CAAC,GAAC,CAAC,GAAD,EAAK,IAAL,EAAU,IAAV,EAAe,IAAf,EAAoB,IAApB,CAAR;;AAAkC,SAASC,CAAT,CAAWnC,CAAX,EAAaE,CAAb,EAAe;AAAC,MAAIE,CAAC,GAAC,MAAIF,CAAJ,GAAM,CAAN,GAAQyB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACS,GAAL,CAASlC,CAAT,IAAYyB,IAAI,CAACS,GAAL,CAAS1C,CAAC,CAAC2C,SAAX,CAAvB,CAAd;AAA4DjC,EAAAA,CAAC,GAACR,CAAC,CAACQ,CAAD,EAAG,CAAH,EAAK8B,CAAC,CAACI,MAAF,GAAS,CAAd,CAAH;AAAoB,QAAMhC,CAAC,GAACQ,CAAC,CAACZ,CAAC,GAACR,CAAC,CAAC2C,SAAF,IAAajC,CAAhB,EAAkB;AAACe,IAAAA,qBAAqB,EAAC;AAAvB,GAAlB,CAAT;AAAsD,SAAOrB,CAAC,CAACE,CAAC,CAACgB,KAAF,CAAQuB,KAAR,CAAcL,CAAC,CAAC9B,CAAD,CAAf,CAAD,EAAqB;AAACoC,IAAAA,QAAQ,EAAClC;AAAV,GAArB,CAAR;AAA2C;;AAAA,SAAOwB,CAAC,IAAIW,kBAAZ,EAA+Bf,CAAC,IAAIgB,SAApC,EAA8CzB,CAAC,IAAI0B,aAAnD,EAAiER,CAAC,IAAIS,cAAtE,EAAqFnB,CAAC,IAAIoB,kBAA1F,EAA6GvB,CAAC,IAAIwB,oBAAlH,EAAuIvB,CAAC,IAAIwB,4BAA5I,EAAyKvB,CAAC,IAAIwB,gBAA9K,EAA+L5B,CAAC,IAAI6B,kBAApM,EAAuN5B,CAAC,IAAI6B,0BAA5N,EAAuPnC,CAAC,IAAIoC,QAA5P","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{ByteSizeUnit as t}from\"./byteSizeEstimations.js\";import{clamp as n}from\"./mathUtils.js\";import{replace as i}from\"./string.js\";import{preferredMetricLengthUnit as r,convertUnit as o,preferredMetricVerticalLengthUnit as e,preferredImperialLengthUnit as u,preferredImperialVerticalLengthUnit as s,preferredMetricAreaUnit as m,preferredImperialAreaUnit as c}from\"./unitUtils.js\";import{formatNumber as a}from\"../intl/number.js\";function f(t,n,i){return t.units[n][i]}function b(t,n,i,r=2,o=\"abbr\"){return`${a(n,{minimumFractionDigits:r,maximumFractionDigits:r})} ${f(t,i,o)}`}function l(t,n,i,e=2,u=\"abbr\"){const s=r(n,i);return b(t,o(n,i,s),s,e,u)}function g(t,n,i,r=2,u=\"abbr\"){const s=e(n,i);return b(t,o(n,i,s),s,r,u)}function F(t,n,i,r=2,e=\"abbr\"){const s=u(n,i);return b(t,o(n,i,s),s,r,e)}function h(t,n,i,r=2,e=\"abbr\"){const u=s(n,i);return b(t,o(n,i,u),u,r,e)}function p(t,n,i,r=2,e=\"abbr\"){const u=m(n,i);return b(t,o(n,i,u),u,r,e)}function x(t,n,i,r=2,e=\"abbr\"){const u=c(n,i);return b(t,o(n,i,u),u,r,e)}function B(t,n,i=2){let r=o(t,n,\"degrees\"),e=r-Math.floor(r);r-=e,e*=60;let u=e-Math.floor(e);return e-=u,u*=60,`${r.toFixed()}Â° ${e.toFixed()}' ${u.toFixed(i)}\"`}function d(t,n,i=2){const r=o(t,n,\"degrees\");return a(r,{style:\"unit\",unitDisplay:\"narrow\",unit:\"degree\",maximumFractionDigits:i,minimumFractionDigits:i})}const D=[\"B\",\"kB\",\"MB\",\"GB\",\"TB\"];function M(r,o){let e=0===o?0:Math.floor(Math.log(o)/Math.log(t.KILOBYTES));e=n(e,0,D.length-1);const u=a(o/t.KILOBYTES**e,{maximumFractionDigits:2});return i(r.units.bytes[D[e]],{fileSize:u})}export{d as formatAngleDegrees,B as formatDMS,b as formatDecimal,M as formatFileSize,x as formatImperialArea,F as formatImperialLength,h as formatImperialVerticalLength,p as formatMetricArea,l as formatMetricLength,g as formatMetricVerticalLength,f as unitName};\n"]},"metadata":{},"sourceType":"module"}