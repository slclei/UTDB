{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../../../../core/has.js\";\nimport { WGLDrawPhase as r } from \"./enums.js\";\nimport s from \"./WGLContainer.js\";\nimport t from \"./brushes/WGLBrushInfo.js\";\nimport n from \"./brushes/WGLBrushStencil.js\";\n\nconst i = (e, r) => e.key.level - r.key.level != 0 ? e.key.level - r.key.level : e.key.row - r.key.row != 0 ? e.key.row - r.key.row : e.key.col - r.key.col;\n\nclass o extends s {\n  constructor(e) {\n    super(), this._tileInfoView = e;\n  }\n\n  get requiresDedicatedFBO() {\n    return !1;\n  }\n\n  renderChildren(e) {\n    this.sortChildren(i), this.setStencilReference(e), super.renderChildren(e);\n  }\n\n  createRenderParams(e) {\n    const {\n      state: r\n    } = e,\n          s = super.createRenderParams(e);\n    return s.requiredLevel = this._tileInfoView.getClosestInfoForScale(r.scale).level, s.displayLevel = this._tileInfoView.tileInfo.scaleToZoom(r.scale), s;\n  }\n\n  prepareRenderPasses(s) {\n    const i = super.prepareRenderPasses(s);\n    return i.push(s.registerRenderPass({\n      name: \"stencil\",\n      brushes: [n],\n      drawPhase: r.DEBUG | r.MAP | r.HIGHLIGHT,\n      target: () => this.getStencilTarget()\n    })), e(\"esri-tiles-debug\") && i.push(s.registerRenderPass({\n      name: \"tileInfo\",\n      brushes: [t],\n      drawPhase: r.DEBUG,\n      target: () => this.children\n    })), i;\n  }\n\n  getStencilTarget() {\n    return this.children;\n  }\n\n  updateTransforms(e) {\n    for (const r of this.children) {\n      const s = this._tileInfoView.getTileResolution(r.key);\n\n      r.setTransform(e, s);\n    }\n  }\n\n  setStencilReference(e) {\n    let r = 1;\n\n    for (const s of this.children) s.stencilRef = r++;\n  }\n\n}\n\nexport { o as default, i as sortByLevel };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/webgl/TileContainer.js"],"names":["e","WGLDrawPhase","r","s","t","n","i","key","level","row","col","o","constructor","_tileInfoView","requiresDedicatedFBO","renderChildren","sortChildren","setStencilReference","createRenderParams","state","requiredLevel","getClosestInfoForScale","scale","displayLevel","tileInfo","scaleToZoom","prepareRenderPasses","push","registerRenderPass","name","brushes","drawPhase","DEBUG","MAP","HIGHLIGHT","target","getStencilTarget","children","updateTransforms","getTileResolution","setTransform","stencilRef","default","sortByLevel"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/has.js\";import{WGLDrawPhase as r}from\"./enums.js\";import s from\"./WGLContainer.js\";import t from\"./brushes/WGLBrushInfo.js\";import n from\"./brushes/WGLBrushStencil.js\";const i=(e,r)=>e.key.level-r.key.level!=0?e.key.level-r.key.level:e.key.row-r.key.row!=0?e.key.row-r.key.row:e.key.col-r.key.col;class o extends s{constructor(e){super(),this._tileInfoView=e}get requiresDedicatedFBO(){return!1}renderChildren(e){this.sortChildren(i),this.setStencilReference(e),super.renderChildren(e)}createRenderParams(e){const{state:r}=e,s=super.createRenderParams(e);return s.requiredLevel=this._tileInfoView.getClosestInfoForScale(r.scale).level,s.displayLevel=this._tileInfoView.tileInfo.scaleToZoom(r.scale),s}prepareRenderPasses(s){const i=super.prepareRenderPasses(s);return i.push(s.registerRenderPass({name:\"stencil\",brushes:[n],drawPhase:r.DEBUG|r.MAP|r.HIGHLIGHT,target:()=>this.getStencilTarget()})),e(\"esri-tiles-debug\")&&i.push(s.registerRenderPass({name:\"tileInfo\",brushes:[t],drawPhase:r.DEBUG,target:()=>this.children})),i}getStencilTarget(){return this.children}updateTransforms(e){for(const r of this.children){const s=this._tileInfoView.getTileResolution(r.key);r.setTransform(e,s)}}setStencilReference(e){let r=1;for(const s of this.children)s.stencilRef=r++}}export{o as default,i as sortByLevel};\n"]},"metadata":{},"sourceType":"module"}