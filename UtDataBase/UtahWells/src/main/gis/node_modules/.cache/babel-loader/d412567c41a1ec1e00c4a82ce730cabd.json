{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { JSONMap as t } from \"../../../core/jsonMap.js\";\nimport { isNone as e, unwrap as n, isSome as r } from \"../../../core/maybe.js\";\nimport o from \"../PixelBlock.js\";\nimport { isValidPixelBlock as a } from \"./pixelUtils.js\";\nconst s = new Map();\ns.set(\"meter-per-second\", 1), s.set(\"kilometer-per-hour\", .277778), s.set(\"knots\", .514444), s.set(\"feet-per-second\", .3048), s.set(\"mile-per-hour\", .44704);\nconst i = 180 / Math.PI,\n      h = 5,\n      l = new t({\n  esriMetersPerSecond: \"meter-per-second\",\n  esriKilometersPerHour: \"kilometer-per-hour\",\n  esriKnots: \"knots\",\n  esriFeetPerSecond: \"feet-per-second\",\n  esriMilesPerHour: \"mile-per-hour\"\n});\n\nfunction c(t, e) {\n  return s.get(t) / s.get(e) || 1;\n}\n\nfunction u(t) {\n  return (450 - t) % 360;\n}\n\nfunction f(t) {\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"geographic\";\n  const [n, r] = t,\n        o = Math.sqrt(n * n + r * r);\n  let a = Math.atan2(r, n) * i;\n  return a = (360 + a) % 360, \"geographic\" === e && (a = u(a)), [o, a];\n}\n\nfunction p(t) {\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"geographic\";\n  let n = t[1];\n  \"geographic\" === e && (n = u(n)), n %= 360;\n  const r = t[0];\n  return [r * Math.cos(n / i), r * Math.sin(n / i)];\n}\n\nfunction m(t, r, o) {\n  let s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"geographic\";\n  if (!a(t) || e(o)) return t;\n  const i = \"vector-magdir\" === r ? t.clone() : n(d(t, r)),\n        h = i.pixels[1];\n\n  for (let e = 0; e < h.length; e++) h[e] = \"geographic\" === s ? (h[e] + o[e] + 270) % 360 : (h[e] + 360 - o[e]) % 360;\n\n  return \"vector-magdir\" === r ? i : d(i, \"vector-magdir\");\n}\n\nfunction d(t, e) {\n  let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"geographic\";\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  if (!a(t)) return t;\n  const {\n    pixels: s,\n    width: i,\n    height: h\n  } = t,\n        l = i * h,\n        c = s[0],\n        u = s[1],\n        m = t.pixelType.startsWith(\"f\") ? t.pixelType : \"f32\",\n        d = o.createEmptyBand(m, l),\n        M = o.createEmptyBand(m, l);\n  let g = 0;\n\n  for (let o = 0; o < h; o++) for (let t = 0; t < i; t++) \"vector-uv\" === e ? ([d[g], M[g]] = f([c[g], u[g]], n), d[g] *= r) : ([d[g], M[g]] = p([c[g], u[g]], n), d[g] *= r, M[g] *= r), g++;\n\n  const x = new o({\n    pixelType: m,\n    width: t.width,\n    height: t.height,\n    mask: t.mask,\n    validPixelCount: t.validPixelCount,\n    maskIsAlpha: t.maskIsAlpha,\n    pixels: [d, M]\n  });\n  return x.updateStatistics(), x;\n}\n\nfunction M(t, e) {\n  let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  if (1 === n || !a(t)) return t;\n  const r = t.clone(),\n        {\n    pixels: o,\n    width: s,\n    height: i\n  } = r,\n        h = o[0],\n        l = o[1];\n  let c = 0;\n\n  for (let a = 0; a < i; a++) for (let t = 0; t < s; t++) \"vector-uv\" === e ? (h[c] *= n, l[c] *= n) : h[c] *= n, c++;\n\n  return r.updateStatistics(), r;\n}\n\nfunction g(t, e, n, o, a) {\n  if (!r(a) || !a.spatialReference.equals(t.spatialReference)) return {\n    extent: t,\n    width: Math.round(e / o),\n    height: Math.round(n / o),\n    resolution: t.width / e\n  };\n  const s = a.xmin,\n        i = a.ymax,\n        h = (t.xmax - t.xmin) / e * o,\n        l = (t.ymax - t.ymin) / n * o,\n        c = (h + l) / 2;\n  return t.xmin = s + Math.floor((t.xmin - s) / h) * h, t.xmax = s + Math.ceil((t.xmax - s) / h) * h, t.ymin = i + Math.floor((t.ymin - i) / l) * l, t.ymax = i + Math.ceil((t.ymax - i) / l) * l, {\n    extent: t,\n    width: Math.round(t.width / h),\n    height: Math.round(t.height / l),\n    resolution: c\n  };\n}\n\nconst x = k(0, 0, 0);\n\nfunction k() {\n  let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Math.PI;\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !0;\n  r && (n = (2 * Math.PI - n) % (2 * Math.PI));\n  const o = r ? -1 : 1,\n        a = 13 * o,\n        s = -7 * o,\n        i = -2 * o,\n        h = -16 * o,\n        l = 21.75,\n        [c, u] = y(0, e + a, n, l),\n        [f, p] = y(t - 5.5, e + s, n, l),\n        [m, d] = y(t + 5.5, e + s, n, l),\n        [M, g] = y(t - 1.5, e + i, n, l),\n        [x, k] = y(t + 1.5, e + i, n, l),\n        [w, P] = y(t - 1.5, e + h, n, l),\n        [b, I] = y(t + 1.5, e + h, n, l);\n  return [c, u, f, p, M, g, x, k, m, d, w, P, b, I];\n}\n\nfunction w() {\n  let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Math.PI;\n  let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;\n  n && (e = (2 * Math.PI - e) % (2 * Math.PI));\n  const r = 10,\n        o = n ? -1 : 1,\n        a = 5 * o,\n        s = 20 * o,\n        i = 25 * o,\n        l = 45,\n        c = 0,\n        u = 0,\n        f = 2,\n        p = 0,\n        m = f * o;\n\n  let [d, M] = [c + r / 2, u - s],\n      [g, x] = [d + f, M],\n      [k, w] = [g - p, x + m],\n      [P, b] = [c - r / 2, u - i],\n      [I, v] = [P + p, b - m],\n      A = Math.ceil(t / h),\n      _ = Math.floor(A / 10);\n\n  A -= 8 * _;\n  const U = [],\n        S = [];\n\n  for (let h = 0; h < A / 2; h++, _--) {\n    _ <= 0 && A % 2 == 1 && h === (A - 1) / 2 && (P = c, I = P + p, b = (b + M) / 2, v = b - m);\n    const [t, n] = y(P, b, e, l);\n\n    if (_ > 0) {\n      const [r, o] = y(g, b, e, l),\n            [a, s] = y(d, M, e, l);\n      U.push(r), U.push(o), U.push(t), U.push(n), U.push(a), U.push(s);\n    } else {\n      const [r, o] = y(g, x, e, l),\n            [a, s] = y(k, w, e, l),\n            [i, h] = y(I, v, e, l);\n      S.push(t), S.push(n), S.push(i), S.push(h), S.push(a), S.push(s), S.push(r), S.push(o);\n    }\n\n    b += a, M += a, x += a, w += a, v += a;\n  }\n\n  const [D, F] = y(c + r / 2, u + s, e, l),\n        j = r / 2 + f,\n        [N, J] = y(c + j, u + s, e, l),\n        [O, q] = y(c + r / 2, u - i, e, l),\n        [B, E] = y(c + j, u - i, e, l);\n  return {\n    pennants: U,\n    barbs: S,\n    shaft: [D, F, N, J, O, q, B, E]\n  };\n}\n\nfunction y(t, e, n) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  const o = Math.sqrt(t * t + e * e) / r,\n        a = (2 * Math.PI + Math.atan2(e, t)) % (2 * Math.PI);\n  return [o, (2 * Math.PI + a - n) % (2 * Math.PI)];\n}\n\nconst P = [0, 1, 3, 6, 10, 16, 21, 27, 33, 40, 47, 55, 63],\n      b = [0, .5, 1, 1.5, 2],\n      I = [0, .25, .5, 1, 1.5, 2, 2.5, 3, 3.5, 4];\n\nfunction v(t, e, n, r) {\n  const o = c(r || \"knots\", n);\n  let a;\n\n  for (a = 1; a < e.length; a++) if (a === e.length - 1) {\n    if (t < e[a] * o) break;\n  } else if (t <= e[a] * o) break;\n\n  return Math.min(a - 1, e.length - 2);\n}\n\nfunction A(t, e, n, r, o) {\n  let a = 0;\n\n  switch (e) {\n    case \"beaufort_kn\":\n      a = v(t, P, \"knots\", n);\n      break;\n\n    case \"beaufort_km\":\n      a = v(t, P, \"kilometer-per-hour\", n);\n      break;\n\n    case \"beaufort_ft\":\n      a = v(t, P, \"feet-per-second\", n);\n      break;\n\n    case \"beaufort_m\":\n      a = v(t, P, \"meter-per-second\", n);\n      break;\n\n    case \"classified_arrow\":\n      a = v(t, o, r, n);\n      break;\n\n    case \"ocean_current_m\":\n      a = v(t, b, \"meter-per-second\", n);\n      break;\n\n    case \"ocean_current_kn\":\n      a = v(t, I, \"knots\", n);\n  }\n\n  return a;\n}\n\nfunction _(t, e) {\n  const {\n    style: n,\n    inputUnit: r,\n    outputUnit: o,\n    breakValues: a\n  } = e,\n        s = l.fromJSON(r),\n        i = l.fromJSON(o),\n        h = 7 * 6,\n        c = 15;\n  let u = 0,\n      f = 0;\n  const {\n    width: p,\n    height: m,\n    mask: d\n  } = t,\n        M = t.pixels[0],\n        g = t.pixels[1],\n        k = d ? d.filter(t => t > 0).length : p * m,\n        w = new Float32Array(k * h),\n        y = new Uint32Array(c * k);\n\n  for (let l = 0; l < m; l++) for (let t = 0; t < p; t++) {\n    const e = l * p + t;\n\n    if (!d || d[l * p + t]) {\n      var P;\n      const r = null != (P = (g[e] + 360) % 360 / 180 * Math.PI) ? P : 2 * Math.PI * Math.random(),\n            o = A(M[e], n, s, i, a);\n\n      for (let n = 0; n < x.length; n += 2) w[u++] = (t + .5) / p, w[u++] = (l + .5) / m, w[u++] = x[n], w[u++] = x[n + 1] + r, w[u++] = o, w[u++] = M[e];\n\n      const c = 7 * (u / h - 1);\n      y[f++] = c, y[f++] = c + 1, y[f++] = c + 2, y[f++] = c + 0, y[f++] = c + 4, y[f++] = c + 3, y[f++] = c + 0, y[f++] = c + 2, y[f++] = c + 3, y[f++] = c + 2, y[f++] = c + 5, y[f++] = c + 3, y[f++] = c + 5, y[f++] = c + 6, y[f++] = c + 3;\n    }\n  }\n\n  return {\n    vertexData: w,\n    indexData: y\n  };\n}\n\nconst U = [];\n\nfunction S(t, e) {\n  if (0 === U.length) for (let h = 0; h < 30; h++) U.push(w(5 * h, 0));\n  const n = c(l.fromJSON(e.inputUnit), \"knots\"),\n        {\n    width: r,\n    height: o,\n    mask: a\n  } = t,\n        s = t.pixels[0],\n        i = t.pixels[1],\n        u = 6,\n        f = [],\n        p = [];\n  let m = 0,\n      d = 0;\n\n  for (let l = 0; l < o; l++) for (let t = 0; t < r; t++) {\n    const e = l * r + t,\n          c = s[e] * n;\n\n    if ((!a || a[l * r + t]) && c >= h) {\n      var M;\n      const n = null != (M = (i[e] + 360) % 360 / 180 * Math.PI) ? M : 2 * Math.PI * Math.random(),\n            {\n        pennants: a,\n        barbs: s,\n        shaft: h\n      } = U[Math.min(Math.floor(c / 5), 29)];\n      if (a.length + s.length === 0) continue;\n      let g = f.length / u;\n      const x = (t + .5) / r,\n            k = (l + .5) / o;\n\n      for (let t = 0; t < a.length; t += 2) f[m++] = x, f[m++] = k, f[m++] = a[t], f[m++] = a[t + 1] + n, f[m++] = 0, f[m++] = c;\n\n      for (let t = 0; t < s.length; t += 2) f[m++] = x, f[m++] = k, f[m++] = s[t], f[m++] = s[t + 1] + n, f[m++] = 0, f[m++] = c;\n\n      for (let t = 0; t < h.length; t += 2) f[m++] = x, f[m++] = k, f[m++] = h[t], f[m++] = h[t + 1] + n, f[m++] = 0, f[m++] = c;\n\n      for (let t = 0; t < a.length / 6; t++) p[d++] = g, p[d++] = g + 1, p[d++] = g + 2, g += 3;\n\n      for (let t = 0; t < s.length / 8; t++) p[d++] = g, p[d++] = g + 1, p[d++] = g + 2, p[d++] = g + 1, p[d++] = g + 2, p[d++] = g + 3, g += 4;\n\n      p[d++] = g + 0, p[d++] = g + 1, p[d++] = g + 2, p[d++] = g + 1, p[d++] = g + 3, p[d++] = g + 2, g += 4;\n    }\n  }\n\n  return {\n    vertexData: new Float32Array(f),\n    indexData: new Uint32Array(p)\n  };\n}\n\nfunction D(t, e) {\n  const n = 4 * 6;\n  let r = 0,\n      o = 0;\n  const {\n    width: a,\n    height: s,\n    mask: i\n  } = t,\n        u = t.pixels[0],\n        f = [],\n        p = [],\n        m = c(l.fromJSON(e.inputUnit), \"knots\"),\n        d = \"wind_speed\" === e.style ? h : Number.MAX_VALUE;\n\n  for (let h = 0; h < s; h++) for (let t = 0; t < a; t++) {\n    const e = u[h * a + t] * m;\n\n    if ((!i || i[h * a + t]) && e < d) {\n      for (let n = 0; n < 4; n++) f[r++] = (t + .5) / a, f[r++] = (h + .5) / s, f[r++] = n < 2 ? -.5 : .5, f[r++] = n % 2 == 0 ? -.5 : .5, f[r++] = 0, f[r++] = e;\n\n      const i = 4 * (r / n - 1);\n      p[o++] = i, p[o++] = i + 1, p[o++] = i + 2, p[o++] = i + 1, p[o++] = i + 2, p[o++] = i + 3;\n    }\n  }\n\n  return {\n    vertexData: new Float32Array(f),\n    indexData: new Uint32Array(p)\n  };\n}\n\nfunction F(t, e) {\n  return \"simple_scalar\" === e.style ? D(t, e) : \"wind_speed\" === e.style ? S(t, e) : _(t, e);\n}\n\nfunction j(t, e, n) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [0, 0];\n  let a = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : .5;\n  const {\n    width: s,\n    height: i,\n    mask: h\n  } = t,\n        [l, c] = t.pixels,\n        [u, m] = r,\n        d = Math.round((s - u) / n),\n        M = Math.round((i - m) / n),\n        g = d * M,\n        x = new Float32Array(g),\n        k = new Float32Array(g),\n        w = new Uint8Array(g),\n        y = \"vector-uv\" === e;\n\n  for (let o = 0; o < M; o++) for (let t = 0; t < d; t++) {\n    let e = 0;\n    const r = o * d + t,\n          M = Math.max(0, o * n + m),\n          g = Math.max(0, t * n + u),\n          P = Math.min(i, M + n),\n          b = Math.min(s, g + n);\n\n    for (let t = M; t < P; t++) for (let n = g; n < b; n++) {\n      const o = t * s + n;\n\n      if (!h || h[o]) {\n        e++;\n        const t = y ? [l[o], c[o]] : [l[o], (360 + c[o]) % 360],\n              [n, a] = y ? t : p(t);\n        x[r] += n, k[r] += a;\n      }\n    }\n\n    if (e >= (P - M) * (b - g) * (1 - a)) {\n      w[r] = 1;\n      const [t, n] = f([x[r] / e, k[r] / e]);\n      x[r] = t, k[r] = n;\n    } else w[r] = 0, x[r] = 0, k[r] = 0;\n  }\n\n  const P = new o({\n    width: d,\n    height: M,\n    pixels: [x, k],\n    mask: w\n  });\n  return P.updateStatistics(), P;\n}\n\nexport { m as convertToLocalDirections, d as convertVectorFieldData, M as convertVectorFieldUnit, F as createVFMesh, D as createVFMeshScalar, c as getUnitConversionFactor, j as sampleVectorField, g as snapImageToSymbolTile, l as unitKebabDict, f as uvComponentToVector };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/layers/support/rasterFunctions/vectorFieldUtils.js"],"names":["JSONMap","t","isNone","e","unwrap","n","isSome","r","o","isValidPixelBlock","a","s","Map","set","i","Math","PI","h","l","esriMetersPerSecond","esriKilometersPerHour","esriKnots","esriFeetPerSecond","esriMilesPerHour","c","get","u","f","sqrt","atan2","p","cos","sin","m","clone","d","pixels","length","width","height","pixelType","startsWith","createEmptyBand","M","g","x","mask","validPixelCount","maskIsAlpha","updateStatistics","spatialReference","equals","extent","round","resolution","xmin","ymax","xmax","ymin","floor","ceil","k","y","w","P","b","I","v","A","_","U","S","push","D","F","j","N","J","O","q","B","E","pennants","barbs","shaft","min","style","inputUnit","outputUnit","breakValues","fromJSON","filter","Float32Array","Uint32Array","random","vertexData","indexData","Number","MAX_VALUE","Uint8Array","max","convertToLocalDirections","convertVectorFieldData","convertVectorFieldUnit","createVFMesh","createVFMeshScalar","getUnitConversionFactor","sampleVectorField","snapImageToSymbolTile","unitKebabDict","uvComponentToVector"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{JSONMap as t}from\"../../../core/jsonMap.js\";import{isNone as e,unwrap as n,isSome as r}from\"../../../core/maybe.js\";import o from\"../PixelBlock.js\";import{isValidPixelBlock as a}from\"./pixelUtils.js\";const s=new Map;s.set(\"meter-per-second\",1),s.set(\"kilometer-per-hour\",.277778),s.set(\"knots\",.514444),s.set(\"feet-per-second\",.3048),s.set(\"mile-per-hour\",.44704);const i=180/Math.PI,h=5,l=new t({esriMetersPerSecond:\"meter-per-second\",esriKilometersPerHour:\"kilometer-per-hour\",esriKnots:\"knots\",esriFeetPerSecond:\"feet-per-second\",esriMilesPerHour:\"mile-per-hour\"});function c(t,e){return s.get(t)/s.get(e)||1}function u(t){return(450-t)%360}function f(t,e=\"geographic\"){const[n,r]=t,o=Math.sqrt(n*n+r*r);let a=Math.atan2(r,n)*i;return a=(360+a)%360,\"geographic\"===e&&(a=u(a)),[o,a]}function p(t,e=\"geographic\"){let n=t[1];\"geographic\"===e&&(n=u(n)),n%=360;const r=t[0];return[r*Math.cos(n/i),r*Math.sin(n/i)]}function m(t,r,o,s=\"geographic\"){if(!a(t)||e(o))return t;const i=\"vector-magdir\"===r?t.clone():n(d(t,r)),h=i.pixels[1];for(let e=0;e<h.length;e++)h[e]=\"geographic\"===s?(h[e]+o[e]+270)%360:(h[e]+360-o[e])%360;return\"vector-magdir\"===r?i:d(i,\"vector-magdir\")}function d(t,e,n=\"geographic\",r=1){if(!a(t))return t;const{pixels:s,width:i,height:h}=t,l=i*h,c=s[0],u=s[1],m=t.pixelType.startsWith(\"f\")?t.pixelType:\"f32\",d=o.createEmptyBand(m,l),M=o.createEmptyBand(m,l);let g=0;for(let o=0;o<h;o++)for(let t=0;t<i;t++)\"vector-uv\"===e?([d[g],M[g]]=f([c[g],u[g]],n),d[g]*=r):([d[g],M[g]]=p([c[g],u[g]],n),d[g]*=r,M[g]*=r),g++;const x=new o({pixelType:m,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[d,M]});return x.updateStatistics(),x}function M(t,e,n=1){if(1===n||!a(t))return t;const r=t.clone(),{pixels:o,width:s,height:i}=r,h=o[0],l=o[1];let c=0;for(let a=0;a<i;a++)for(let t=0;t<s;t++)\"vector-uv\"===e?(h[c]*=n,l[c]*=n):h[c]*=n,c++;return r.updateStatistics(),r}function g(t,e,n,o,a){if(!r(a)||!a.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/o),height:Math.round(n/o),resolution:t.width/e};const s=a.xmin,i=a.ymax,h=(t.xmax-t.xmin)/e*o,l=(t.ymax-t.ymin)/n*o,c=(h+l)/2;return t.xmin=s+Math.floor((t.xmin-s)/h)*h,t.xmax=s+Math.ceil((t.xmax-s)/h)*h,t.ymin=i+Math.floor((t.ymin-i)/l)*l,t.ymax=i+Math.ceil((t.ymax-i)/l)*l,{extent:t,width:Math.round(t.width/h),height:Math.round(t.height/l),resolution:c}}const x=k(0,0,0);function k(t=0,e=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const o=r?-1:1,a=13*o,s=-7*o,i=-2*o,h=-16*o,l=21.75,[c,u]=y(0,e+a,n,l),[f,p]=y(t-5.5,e+s,n,l),[m,d]=y(t+5.5,e+s,n,l),[M,g]=y(t-1.5,e+i,n,l),[x,k]=y(t+1.5,e+i,n,l),[w,P]=y(t-1.5,e+h,n,l),[b,I]=y(t+1.5,e+h,n,l);return[c,u,f,p,M,g,x,k,m,d,w,P,b,I]}function w(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=10,o=n?-1:1,a=5*o,s=20*o,i=25*o,l=45,c=0,u=0,f=2,p=0,m=f*o;let[d,M]=[c+r/2,u-s],[g,x]=[d+f,M],[k,w]=[g-p,x+m],[P,b]=[c-r/2,u-i],[I,v]=[P+p,b-m],A=Math.ceil(t/h),_=Math.floor(A/10);A-=8*_;const U=[],S=[];for(let h=0;h<A/2;h++,_--){_<=0&&A%2==1&&h===(A-1)/2&&(P=c,I=P+p,b=(b+M)/2,v=b-m);const[t,n]=y(P,b,e,l);if(_>0){const[r,o]=y(g,b,e,l),[a,s]=y(d,M,e,l);U.push(r),U.push(o),U.push(t),U.push(n),U.push(a),U.push(s)}else{const[r,o]=y(g,x,e,l),[a,s]=y(k,w,e,l),[i,h]=y(I,v,e,l);S.push(t),S.push(n),S.push(i),S.push(h),S.push(a),S.push(s),S.push(r),S.push(o)}b+=a,M+=a,x+=a,w+=a,v+=a}const[D,F]=y(c+r/2,u+s,e,l),j=r/2+f,[N,J]=y(c+j,u+s,e,l),[O,q]=y(c+r/2,u-i,e,l),[B,E]=y(c+j,u-i,e,l);return{pennants:U,barbs:S,shaft:[D,F,N,J,O,q,B,E]}}function y(t,e,n,r=1){const o=Math.sqrt(t*t+e*e)/r,a=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[o,(2*Math.PI+a-n)%(2*Math.PI)]}const P=[0,1,3,6,10,16,21,27,33,40,47,55,63],b=[0,.5,1,1.5,2],I=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function v(t,e,n,r){const o=c(r||\"knots\",n);let a;for(a=1;a<e.length;a++)if(a===e.length-1){if(t<e[a]*o)break}else if(t<=e[a]*o)break;return Math.min(a-1,e.length-2)}function A(t,e,n,r,o){let a=0;switch(e){case\"beaufort_kn\":a=v(t,P,\"knots\",n);break;case\"beaufort_km\":a=v(t,P,\"kilometer-per-hour\",n);break;case\"beaufort_ft\":a=v(t,P,\"feet-per-second\",n);break;case\"beaufort_m\":a=v(t,P,\"meter-per-second\",n);break;case\"classified_arrow\":a=v(t,o,r,n);break;case\"ocean_current_m\":a=v(t,b,\"meter-per-second\",n);break;case\"ocean_current_kn\":a=v(t,I,\"knots\",n)}return a}function _(t,e){const{style:n,inputUnit:r,outputUnit:o,breakValues:a}=e,s=l.fromJSON(r),i=l.fromJSON(o),h=7*6,c=15;let u=0,f=0;const{width:p,height:m,mask:d}=t,M=t.pixels[0],g=t.pixels[1],k=d?d.filter((t=>t>0)).length:p*m,w=new Float32Array(k*h),y=new Uint32Array(c*k);for(let l=0;l<m;l++)for(let t=0;t<p;t++){const e=l*p+t;if(!d||d[l*p+t]){var P;const r=null!=(P=(g[e]+360)%360/180*Math.PI)?P:2*Math.PI*Math.random(),o=A(M[e],n,s,i,a);for(let n=0;n<x.length;n+=2)w[u++]=(t+.5)/p,w[u++]=(l+.5)/m,w[u++]=x[n],w[u++]=x[n+1]+r,w[u++]=o,w[u++]=M[e];const c=7*(u/h-1);y[f++]=c,y[f++]=c+1,y[f++]=c+2,y[f++]=c+0,y[f++]=c+4,y[f++]=c+3,y[f++]=c+0,y[f++]=c+2,y[f++]=c+3,y[f++]=c+2,y[f++]=c+5,y[f++]=c+3,y[f++]=c+5,y[f++]=c+6,y[f++]=c+3}}return{vertexData:w,indexData:y}}const U=[];function S(t,e){if(0===U.length)for(let h=0;h<30;h++)U.push(w(5*h,0));const n=c(l.fromJSON(e.inputUnit),\"knots\"),{width:r,height:o,mask:a}=t,s=t.pixels[0],i=t.pixels[1],u=6,f=[],p=[];let m=0,d=0;for(let l=0;l<o;l++)for(let t=0;t<r;t++){const e=l*r+t,c=s[e]*n;if((!a||a[l*r+t])&&c>=h){var M;const n=null!=(M=(i[e]+360)%360/180*Math.PI)?M:2*Math.PI*Math.random(),{pennants:a,barbs:s,shaft:h}=U[Math.min(Math.floor(c/5),29)];if(a.length+s.length===0)continue;let g=f.length/u;const x=(t+.5)/r,k=(l+.5)/o;for(let t=0;t<a.length;t+=2)f[m++]=x,f[m++]=k,f[m++]=a[t],f[m++]=a[t+1]+n,f[m++]=0,f[m++]=c;for(let t=0;t<s.length;t+=2)f[m++]=x,f[m++]=k,f[m++]=s[t],f[m++]=s[t+1]+n,f[m++]=0,f[m++]=c;for(let t=0;t<h.length;t+=2)f[m++]=x,f[m++]=k,f[m++]=h[t],f[m++]=h[t+1]+n,f[m++]=0,f[m++]=c;for(let t=0;t<a.length/6;t++)p[d++]=g,p[d++]=g+1,p[d++]=g+2,g+=3;for(let t=0;t<s.length/8;t++)p[d++]=g,p[d++]=g+1,p[d++]=g+2,p[d++]=g+1,p[d++]=g+2,p[d++]=g+3,g+=4;p[d++]=g+0,p[d++]=g+1,p[d++]=g+2,p[d++]=g+1,p[d++]=g+3,p[d++]=g+2,g+=4}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(p)}}function D(t,e){const n=4*6;let r=0,o=0;const{width:a,height:s,mask:i}=t,u=t.pixels[0],f=[],p=[],m=c(l.fromJSON(e.inputUnit),\"knots\"),d=\"wind_speed\"===e.style?h:Number.MAX_VALUE;for(let h=0;h<s;h++)for(let t=0;t<a;t++){const e=u[h*a+t]*m;if((!i||i[h*a+t])&&e<d){for(let n=0;n<4;n++)f[r++]=(t+.5)/a,f[r++]=(h+.5)/s,f[r++]=n<2?-.5:.5,f[r++]=n%2==0?-.5:.5,f[r++]=0,f[r++]=e;const i=4*(r/n-1);p[o++]=i,p[o++]=i+1,p[o++]=i+2,p[o++]=i+1,p[o++]=i+2,p[o++]=i+3}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(p)}}function F(t,e){return\"simple_scalar\"===e.style?D(t,e):\"wind_speed\"===e.style?S(t,e):_(t,e)}function j(t,e,n,r=[0,0],a=.5){const{width:s,height:i,mask:h}=t,[l,c]=t.pixels,[u,m]=r,d=Math.round((s-u)/n),M=Math.round((i-m)/n),g=d*M,x=new Float32Array(g),k=new Float32Array(g),w=new Uint8Array(g),y=\"vector-uv\"===e;for(let o=0;o<M;o++)for(let t=0;t<d;t++){let e=0;const r=o*d+t,M=Math.max(0,o*n+m),g=Math.max(0,t*n+u),P=Math.min(i,M+n),b=Math.min(s,g+n);for(let t=M;t<P;t++)for(let n=g;n<b;n++){const o=t*s+n;if(!h||h[o]){e++;const t=y?[l[o],c[o]]:[l[o],(360+c[o])%360],[n,a]=y?t:p(t);x[r]+=n,k[r]+=a}}if(e>=(P-M)*(b-g)*(1-a)){w[r]=1;const[t,n]=f([x[r]/e,k[r]/e]);x[r]=t,k[r]=n}else w[r]=0,x[r]=0,k[r]=0}const P=new o({width:d,height:M,pixels:[x,k],mask:w});return P.updateStatistics(),P}export{m as convertToLocalDirections,d as convertVectorFieldData,M as convertVectorFieldUnit,F as createVFMesh,D as createVFMeshScalar,c as getUnitConversionFactor,j as sampleVectorField,g as snapImageToSymbolTile,l as unitKebabDict,f as uvComponentToVector};\n"]},"metadata":{},"sourceType":"module"}