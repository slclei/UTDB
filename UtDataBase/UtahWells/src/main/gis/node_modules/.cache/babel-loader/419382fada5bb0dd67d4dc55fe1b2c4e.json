{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { clone as e } from \"../../core/lang.js\";\nimport n from \"./RasterFunction.js\";\nimport { schema as t } from \"./rasterFunctionUtils.js\";\nimport { getRFxArgColorRampValue as r, convertColorRampToColormap as o, getColorRampName as a, rgbaConvertTo32Bit as i } from \"../../renderers/support/colorRampUtils.js\";\nimport { stretchTypeJSONDict as s } from \"../../renderers/support/stretchRendererUtils.js\";\nimport u from \"../../renderers/visualVariables/SizeVariable.js\";\nconst c = {\n  u1: [0, 1],\n  u2: [0, 3],\n  u4: [0, 15],\n  u8: [0, 255],\n  s8: [-128, 127],\n  u16: [0, 65535],\n  s16: [-32768, 32767]\n},\n      l = {\n  simple_scalar: \"Simple Scalar\",\n  wind_barb: \"Wind Barb\",\n  single_arrow: \"Single Arrow\",\n  beaufort_kn: \"Beaufort Wind (Knots)\",\n  beaufort_m: \"Beaufort Wind (MetersPerSecond)\",\n  ocean_current_m: \"Ocean Current (MetersPerSecond)\",\n  ocean_current_kn: \"Ocean Current (Knots)\"\n},\n      m = new Set([\"raster-stretch\", \"unique-value\", \"class-breaks\", \"raster-shaded-relief\", \"vector-field\", \"raster-colormap\"]);\n\nfunction f(e) {\n  return m.has(e.type);\n}\n\nfunction p(n, t) {\n  if (!n || !t) return e(n || t);\n  const r = e(n);\n\n  if (t.rasterFunctionDefinition) {\n    const e = t.rasterFunctionDefinition;\n    (e.thumbnail || e.thumbnailEx) && (e.thumbnail = e.thumbnailEx = null), d(r.rasterFunctionDefinition.arguments, t);\n  } else if (\"none\" !== t.functionName.toLowerCase()) {\n    b(r.functionArguments).Raster = t;\n  }\n\n  return r;\n}\n\nfunction d(e, n) {\n  for (const t in e) \"raster\" === t.toLowerCase() && (\"RasterFunctionVariable\" === e[t].type ? (e[t] = n.rasterFunctionDefinition, e[t].type = \"RasterFunctionTemplate\") : \"RasterFunctionTemplate\" === e[t].type && d(e[t].arguments, n));\n}\n\nfunction g(n) {\n  const r = e(t[n.functionName + \"Function\"]),\n        o = n.functionArguments;\n\n  for (const e in o) \"raster\" === e.toLowerCase() ? (r.arguments[e] = g(o[e]), r.arguments[e].type = \"RasterFunctionTemplate\") : \"colormap\" === e.toLowerCase() ? (r.arguments[e].value = N(o[e]), r.arguments.ColorSchemeType.value = 0) : r.arguments[e].value = o[e];\n\n  return r;\n}\n\nfunction h(e, n) {\n  switch (n = n || {}, e.type) {\n    case \"raster-stretch\":\n      return w(e, n);\n\n    case \"class-breaks\":\n      return T(e, n);\n\n    case \"unique-value\":\n      return F(e, n);\n\n    case \"raster-colormap\":\n      return A(e, n);\n\n    case \"vector-field\":\n      return y(e, n);\n\n    case \"raster-shaded-relief\":\n      return v(e, n);\n\n    case \"flow\":\n      throw new Error(\"Unsupported rendering rule.\");\n  }\n}\n\nfunction b(e) {\n  const n = e.Raster;\n  return n && \"esri.layers.support.RasterFunction\" === n.declaredClass ? b(n.functionArguments) : e;\n}\n\nconst R = {\n  none: 0,\n  standardDeviation: 3,\n  histogramEqualization: 4,\n  minMax: 5,\n  percentClip: 6,\n  sigmoid: 9\n};\n\nfunction y(e, t) {\n  const r = new n();\n  r.functionName = \"VectorFieldRenderer\";\n  const {\n    dataType: o,\n    bandProperties: a\n  } = t,\n        i = \"vector-uv\" === o;\n  let s, c;\n  a && 2 === a.length && (s = a.map(e => e.BandName.toLowerCase()).indexOf(\"magnitude\"), c = a.map(e => e.BandName.toLowerCase()).indexOf(\"direction\")), -1 !== s && null !== s || (s = 0, c = 1);\n  const m = \"arithmetic\" === e.rotationType ? 1 : 2,\n        f = \"flow-from\" === e.flowRepresentation ? 0 : 1,\n        p = e.visualVariables ? e.visualVariables.find(e => \"Magnitude\" === e.field) : new u(),\n        d = {\n    magnitudeBandID: s,\n    directionBandID: c,\n    isUVComponents: i,\n    referenceSystem: m,\n    massFlowAngleRepresentation: f,\n    symbolTileSize: 50,\n    symbolTileSizeUnits: 100,\n    calculationMethod: \"Vector Average\",\n    symbologyName: l[e.style.toLowerCase().replace(\"-\", \"_\")],\n    minimumMagnitude: p.minDataValue,\n    maximumMagnitude: p.maxDataValue,\n    minimumSymbolSize: p.minSize,\n    maximumSymbolSize: p.maxSize\n  };\n  return r.functionArguments = d, t.convertToRFT ? new n({\n    rasterFunctionDefinition: g(r)\n  }) : r;\n}\n\nfunction v(e, t) {\n  const a = t.convertToRFT;\n  if (\"elevation\" !== t.dataType) return new n();\n  const i = new n();\n  i.functionName = \"Hillshade\";\n  const s = \"traditional\" === e.hillshadeType ? 0 : 1,\n        u = \"none\" === e.scalingType ? 1 : 3,\n        c = {\n    HillshadeType: s,\n    SlopeType: u,\n    ZFactor: e.zFactor\n  };\n  return 0 === s && (c.Azimuth = e.azimuth, c.Altitude = e.altitude), 3 === u && (c.PSPower = e.pixelSizePower, c.PSZFactor = e.pixelSizeFactor), i.functionArguments = c, i.variableName = \"Raster\", e.colorRamp && (i.functionName = \"ShadedRelief\", a ? c.ColorRamp = r(e.colorRamp) : c.Colormap = o(e.colorRamp, 256)), a ? new n({\n    rasterFunctionDefinition: g(i)\n  }) : i;\n}\n\nfunction w(e, t) {\n  const i = t.convertToRFT,\n        u = new n();\n  u.functionName = \"Stretch\";\n  const c = R[s.toJSON(e.stretchType)],\n        l = \"u8\",\n        m = {\n    StretchType: c,\n    Statistics: x(e.statistics),\n    DRA: e.dynamicRangeAdjustment,\n    UseGamma: e.useGamma,\n    Gamma: e.gamma,\n    ComputeGamma: e.computeGamma\n  };\n\n  if (null != e.outputMin && (m.Min = e.outputMin), null != e.outputMax && (m.Max = e.outputMax), c === R.standardDeviation ? (m.NumberOfStandardDeviations = e.numberOfStandardDeviations, u.outputPixelType = l) : c === R.percentClip ? (m.MinPercent = e.minPercent, m.MaxPercent = e.maxPercent, u.outputPixelType = l) : c === R.minMax ? u.outputPixelType = l : c === R.sigmoid && (m.SigmoidStrengthLevel = e.sigmoidStrengthLevel), u.functionArguments = m, u.variableName = \"Raster\", e.colorRamp) {\n    const s = e.colorRamp,\n          c = new n();\n    if (i) c.functionArguments = {\n      ColorRamp: r(s)\n    };else {\n      const n = a(s);\n      n ? c.functionArguments = {\n        colorRamp: n\n      } : !t.convertColorRampToColormap || \"algorithmic\" !== s.type && \"multipart\" !== s.type ? c.functionArguments = {\n        colorRamp: e.colorRamp.toJSON()\n      } : c.functionArguments = {\n        Colormap: o(s, 256)\n      };\n    }\n    return c.variableName = \"Raster\", c.functionName = \"Colormap\", c.functionArguments.Raster = u, i ? new n({\n      rasterFunctionDefinition: g(c)\n    }) : c;\n  }\n\n  return i ? new n({\n    rasterFunctionDefinition: g(u)\n  }) : u;\n}\n\nfunction T(e, t) {\n  const r = [],\n        o = [],\n        a = [],\n        i = [],\n        s = 1e-6,\n        {\n    pixelType: u,\n    rasterAttributeTable: c\n  } = t,\n        l = c && c.features,\n        m = C(c);\n\n  if (l && Array.isArray(l) && e.classBreakInfos) {\n    e.classBreakInfos.forEach((n, t) => {\n      const r = n.symbol.color;\n      let o;\n      r.a && l.forEach(a => {\n        o = a.attributes[e.field], (o >= n.minValue && o < n.maxValue || t === e.classBreakInfos.length - 1 && o >= n.minValue) && i.push([a.attributes[m], r.r, r.g, r.b]);\n      });\n    });\n    const r = u ? S(i, u) : i,\n          o = new n();\n    return o.functionName = \"Colormap\", o.functionArguments = {}, o.functionArguments.Colormap = r, o.variableName = \"Raster\", t.convertToRFT ? new n({\n      rasterFunctionDefinition: g(o)\n    }) : o;\n  }\n\n  e.classBreakInfos.forEach((e, n) => {\n    const t = e.symbol && e.symbol.color;\n    t.a ? (0 === n ? r.push(e.minValue, e.maxValue + s) : r.push(e.minValue + s, e.maxValue + s), o.push(n), i.push([n, t.r, t.g, t.b])) : a.push(e.minValue, e.maxValue);\n  });\n  const f = u ? S(i, u) : i,\n        p = new n();\n  p.functionName = \"Remap\", p.functionArguments = {\n    InputRanges: r,\n    OutputValues: o,\n    NoDataRanges: a\n  }, p.variableName = \"Raster\";\n  const d = new n();\n  return d.functionName = \"Colormap\", d.functionArguments = {\n    Colormap: f,\n    Raster: p\n  }, t.convertToRFT ? new n({\n    rasterFunctionDefinition: g(d)\n  }) : d;\n}\n\nfunction S(e, n) {\n  const t = c[String(n).toLowerCase()];\n  return t && e.push([Math.floor(t[0] - 1), 0, 0, 0], [Math.ceil(t[1] + 1), 0, 0, 0]), e;\n}\n\nfunction C(e) {\n  if (!e) return;\n  const {\n    fields: n\n  } = e,\n        t = n && n.find(e => e && e.name && \"value\" === e.name.toLowerCase());\n  return t && t.name;\n}\n\nfunction F(e, t) {\n  var r, o;\n  const a = [],\n        {\n    pixelType: i,\n    rasterAttributeTable: s\n  } = t,\n        u = s && s.features,\n        c = C(s),\n        l = null == (r = e.defaultSymbol) || null == (o = r.color) ? void 0 : o.toRgb(),\n        m = e.uniqueValueInfos;\n  if (m) if (u) {\n    const n = new Map();\n    m.forEach(e => {\n      var t;\n      const r = e.value,\n            o = null == (t = e.symbol.color) ? void 0 : t.toRgb();\n      null != r && o && n.set(String(r), o);\n    });\n    const t = e.field;\n    u.forEach(_ref => {\n      let {\n        attributes: e\n      } = _ref;\n      const r = String(e[t]),\n            o = e[c];\n\n      if (n.has(r)) {\n        const e = n.get(r);\n        a.push([o, ...e]);\n      } else l && a.push([o, ...l]);\n    });\n  } else for (let n = 0; n < m.length; n++) {\n    const e = m[n],\n          t = e.symbol.color,\n          r = +e.value;\n\n    if (null != t && t.a) {\n      if (isNaN(r)) return null;\n      a.push([r, t.r, t.g, t.b]);\n    }\n  }\n  const f = i && a.length > 0 ? S(a, i) : a,\n        p = new n();\n  return p.functionName = \"Colormap\", p.functionArguments = {}, p.functionArguments.Colormap = f, p.variableName = \"Raster\", t.convertToRFT ? new n({\n    rasterFunctionDefinition: g(p)\n  }) : p;\n}\n\nfunction A(e, t) {\n  const r = e.extractColormap();\n  if (!r || 0 === r.length) return;\n  const {\n    pixelType: o\n  } = t,\n        a = o ? S(r, o) : r,\n        i = new n();\n  return i.functionName = \"Colormap\", i.functionArguments = {}, i.functionArguments.Colormap = a, t.convertToRFT ? new n({\n    rasterFunctionDefinition: g(i)\n  }) : i;\n}\n\nfunction x(e) {\n  const n = [];\n  return e.forEach(e => {\n    const t = e;\n    if (Array.isArray(t)) n.push(t);else {\n      if (null == t.min || null == t.max) return;\n      const e = [t.min, t.max, t.avg || 0, t.stddev || 0];\n      n.push(e);\n    }\n  }), n;\n}\n\nfunction N(e) {\n  const n = [],\n        t = [];\n  return e.forEach(e => {\n    n.push(e[0]), t.push(i([...e.slice(1), 255]));\n  }), {\n    type: \"RasterColormap\",\n    values: n,\n    colors: t\n  };\n}\n\nexport { p as combineRenderingRules, h as convertRendererToRenderingRule, g as convertRenderingRuleToRFT, f as isSupportedRendererType, c as pixelTypeRanges };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/layers/support/imageryRendererUtils.js"],"names":["clone","e","n","schema","t","getRFxArgColorRampValue","r","convertColorRampToColormap","o","getColorRampName","a","rgbaConvertTo32Bit","i","stretchTypeJSONDict","s","u","c","u1","u2","u4","u8","s8","u16","s16","l","simple_scalar","wind_barb","single_arrow","beaufort_kn","beaufort_m","ocean_current_m","ocean_current_kn","m","Set","f","has","type","p","rasterFunctionDefinition","thumbnail","thumbnailEx","d","arguments","functionName","toLowerCase","b","functionArguments","Raster","g","value","N","ColorSchemeType","h","w","T","F","A","y","v","Error","declaredClass","R","none","standardDeviation","histogramEqualization","minMax","percentClip","sigmoid","dataType","bandProperties","length","map","BandName","indexOf","rotationType","flowRepresentation","visualVariables","find","field","magnitudeBandID","directionBandID","isUVComponents","referenceSystem","massFlowAngleRepresentation","symbolTileSize","symbolTileSizeUnits","calculationMethod","symbologyName","style","replace","minimumMagnitude","minDataValue","maximumMagnitude","maxDataValue","minimumSymbolSize","minSize","maximumSymbolSize","maxSize","convertToRFT","hillshadeType","scalingType","HillshadeType","SlopeType","ZFactor","zFactor","Azimuth","azimuth","Altitude","altitude","PSPower","pixelSizePower","PSZFactor","pixelSizeFactor","variableName","colorRamp","ColorRamp","Colormap","toJSON","stretchType","StretchType","Statistics","x","statistics","DRA","dynamicRangeAdjustment","UseGamma","useGamma","Gamma","gamma","ComputeGamma","computeGamma","outputMin","Min","outputMax","Max","NumberOfStandardDeviations","numberOfStandardDeviations","outputPixelType","MinPercent","minPercent","MaxPercent","maxPercent","SigmoidStrengthLevel","sigmoidStrengthLevel","pixelType","rasterAttributeTable","features","C","Array","isArray","classBreakInfos","forEach","symbol","color","attributes","minValue","maxValue","push","S","InputRanges","OutputValues","NoDataRanges","String","Math","floor","ceil","fields","name","defaultSymbol","toRgb","uniqueValueInfos","Map","set","get","isNaN","extractColormap","min","max","avg","stddev","slice","values","colors","combineRenderingRules","convertRendererToRenderingRule","convertRenderingRuleToRFT","isSupportedRendererType","pixelTypeRanges"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{clone as e}from\"../../core/lang.js\";import n from\"./RasterFunction.js\";import{schema as t}from\"./rasterFunctionUtils.js\";import{getRFxArgColorRampValue as r,convertColorRampToColormap as o,getColorRampName as a,rgbaConvertTo32Bit as i}from\"../../renderers/support/colorRampUtils.js\";import{stretchTypeJSONDict as s}from\"../../renderers/support/stretchRendererUtils.js\";import u from\"../../renderers/visualVariables/SizeVariable.js\";const c={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},l={simple_scalar:\"Simple Scalar\",wind_barb:\"Wind Barb\",single_arrow:\"Single Arrow\",beaufort_kn:\"Beaufort Wind (Knots)\",beaufort_m:\"Beaufort Wind (MetersPerSecond)\",ocean_current_m:\"Ocean Current (MetersPerSecond)\",ocean_current_kn:\"Ocean Current (Knots)\"},m=new Set([\"raster-stretch\",\"unique-value\",\"class-breaks\",\"raster-shaded-relief\",\"vector-field\",\"raster-colormap\"]);function f(e){return m.has(e.type)}function p(n,t){if(!n||!t)return e(n||t);const r=e(n);if(t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=null),d(r.rasterFunctionDefinition.arguments,t)}else if(\"none\"!==t.functionName.toLowerCase()){b(r.functionArguments).Raster=t}return r}function d(e,n){for(const t in e)\"raster\"===t.toLowerCase()&&(\"RasterFunctionVariable\"===e[t].type?(e[t]=n.rasterFunctionDefinition,e[t].type=\"RasterFunctionTemplate\"):\"RasterFunctionTemplate\"===e[t].type&&d(e[t].arguments,n))}function g(n){const r=e(t[n.functionName+\"Function\"]),o=n.functionArguments;for(const e in o)\"raster\"===e.toLowerCase()?(r.arguments[e]=g(o[e]),r.arguments[e].type=\"RasterFunctionTemplate\"):\"colormap\"===e.toLowerCase()?(r.arguments[e].value=N(o[e]),r.arguments.ColorSchemeType.value=0):r.arguments[e].value=o[e];return r}function h(e,n){switch(n=n||{},e.type){case\"raster-stretch\":return w(e,n);case\"class-breaks\":return T(e,n);case\"unique-value\":return F(e,n);case\"raster-colormap\":return A(e,n);case\"vector-field\":return y(e,n);case\"raster-shaded-relief\":return v(e,n);case\"flow\":throw new Error(\"Unsupported rendering rule.\")}}function b(e){const n=e.Raster;return n&&\"esri.layers.support.RasterFunction\"===n.declaredClass?b(n.functionArguments):e}const R={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function y(e,t){const r=new n;r.functionName=\"VectorFieldRenderer\";const{dataType:o,bandProperties:a}=t,i=\"vector-uv\"===o;let s,c;a&&2===a.length&&(s=a.map((e=>e.BandName.toLowerCase())).indexOf(\"magnitude\"),c=a.map((e=>e.BandName.toLowerCase())).indexOf(\"direction\")),-1!==s&&null!==s||(s=0,c=1);const m=\"arithmetic\"===e.rotationType?1:2,f=\"flow-from\"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.find((e=>\"Magnitude\"===e.field)):new u,d={magnitudeBandID:s,directionBandID:c,isUVComponents:i,referenceSystem:m,massFlowAngleRepresentation:f,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:\"Vector Average\",symbologyName:l[e.style.toLowerCase().replace(\"-\",\"_\")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};return r.functionArguments=d,t.convertToRFT?new n({rasterFunctionDefinition:g(r)}):r}function v(e,t){const a=t.convertToRFT;if(\"elevation\"!==t.dataType)return new n;const i=new n;i.functionName=\"Hillshade\";const s=\"traditional\"===e.hillshadeType?0:1,u=\"none\"===e.scalingType?1:3,c={HillshadeType:s,SlopeType:u,ZFactor:e.zFactor};return 0===s&&(c.Azimuth=e.azimuth,c.Altitude=e.altitude),3===u&&(c.PSPower=e.pixelSizePower,c.PSZFactor=e.pixelSizeFactor),i.functionArguments=c,i.variableName=\"Raster\",e.colorRamp&&(i.functionName=\"ShadedRelief\",a?c.ColorRamp=r(e.colorRamp):c.Colormap=o(e.colorRamp,256)),a?new n({rasterFunctionDefinition:g(i)}):i}function w(e,t){const i=t.convertToRFT,u=new n;u.functionName=\"Stretch\";const c=R[s.toJSON(e.stretchType)],l=\"u8\",m={StretchType:c,Statistics:x(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(m.Min=e.outputMin),null!=e.outputMax&&(m.Max=e.outputMax),c===R.standardDeviation?(m.NumberOfStandardDeviations=e.numberOfStandardDeviations,u.outputPixelType=l):c===R.percentClip?(m.MinPercent=e.minPercent,m.MaxPercent=e.maxPercent,u.outputPixelType=l):c===R.minMax?u.outputPixelType=l:c===R.sigmoid&&(m.SigmoidStrengthLevel=e.sigmoidStrengthLevel),u.functionArguments=m,u.variableName=\"Raster\",e.colorRamp){const s=e.colorRamp,c=new n;if(i)c.functionArguments={ColorRamp:r(s)};else{const n=a(s);n?c.functionArguments={colorRamp:n}:!t.convertColorRampToColormap||\"algorithmic\"!==s.type&&\"multipart\"!==s.type?c.functionArguments={colorRamp:e.colorRamp.toJSON()}:c.functionArguments={Colormap:o(s,256)}}return c.variableName=\"Raster\",c.functionName=\"Colormap\",c.functionArguments.Raster=u,i?new n({rasterFunctionDefinition:g(c)}):c}return i?new n({rasterFunctionDefinition:g(u)}):u}function T(e,t){const r=[],o=[],a=[],i=[],s=1e-6,{pixelType:u,rasterAttributeTable:c}=t,l=c&&c.features,m=C(c);if(l&&Array.isArray(l)&&e.classBreakInfos){e.classBreakInfos.forEach(((n,t)=>{const r=n.symbol.color;let o;r.a&&l.forEach((a=>{o=a.attributes[e.field],(o>=n.minValue&&o<n.maxValue||t===e.classBreakInfos.length-1&&o>=n.minValue)&&i.push([a.attributes[m],r.r,r.g,r.b])}))}));const r=u?S(i,u):i,o=new n;return o.functionName=\"Colormap\",o.functionArguments={},o.functionArguments.Colormap=r,o.variableName=\"Raster\",t.convertToRFT?new n({rasterFunctionDefinition:g(o)}):o}e.classBreakInfos.forEach(((e,n)=>{const t=e.symbol&&e.symbol.color;t.a?(0===n?r.push(e.minValue,e.maxValue+s):r.push(e.minValue+s,e.maxValue+s),o.push(n),i.push([n,t.r,t.g,t.b])):a.push(e.minValue,e.maxValue)}));const f=u?S(i,u):i,p=new n;p.functionName=\"Remap\",p.functionArguments={InputRanges:r,OutputValues:o,NoDataRanges:a},p.variableName=\"Raster\";const d=new n;return d.functionName=\"Colormap\",d.functionArguments={Colormap:f,Raster:p},t.convertToRFT?new n({rasterFunctionDefinition:g(d)}):d}function S(e,n){const t=c[String(n).toLowerCase()];return t&&e.push([Math.floor(t[0]-1),0,0,0],[Math.ceil(t[1]+1),0,0,0]),e}function C(e){if(!e)return;const{fields:n}=e,t=n&&n.find((e=>e&&e.name&&\"value\"===e.name.toLowerCase()));return t&&t.name}function F(e,t){var r,o;const a=[],{pixelType:i,rasterAttributeTable:s}=t,u=s&&s.features,c=C(s),l=null==(r=e.defaultSymbol)||null==(o=r.color)?void 0:o.toRgb(),m=e.uniqueValueInfos;if(m)if(u){const n=new Map;m.forEach((e=>{var t;const r=e.value,o=null==(t=e.symbol.color)?void 0:t.toRgb();null!=r&&o&&n.set(String(r),o)}));const t=e.field;u.forEach((({attributes:e})=>{const r=String(e[t]),o=e[c];if(n.has(r)){const e=n.get(r);a.push([o,...e])}else l&&a.push([o,...l])}))}else for(let n=0;n<m.length;n++){const e=m[n],t=e.symbol.color,r=+e.value;if(null!=t&&t.a){if(isNaN(r))return null;a.push([r,t.r,t.g,t.b])}}const f=i&&a.length>0?S(a,i):a,p=new n;return p.functionName=\"Colormap\",p.functionArguments={},p.functionArguments.Colormap=f,p.variableName=\"Raster\",t.convertToRFT?new n({rasterFunctionDefinition:g(p)}):p}function A(e,t){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:o}=t,a=o?S(r,o):r,i=new n;return i.functionName=\"Colormap\",i.functionArguments={},i.functionArguments.Colormap=a,t.convertToRFT?new n({rasterFunctionDefinition:g(i)}):i}function x(e){const n=[];return e.forEach((e=>{const t=e;if(Array.isArray(t))n.push(t);else{if(null==t.min||null==t.max)return;const e=[t.min,t.max,t.avg||0,t.stddev||0];n.push(e)}})),n}function N(e){const n=[],t=[];return e.forEach((e=>{n.push(e[0]),t.push(i([...e.slice(1),255]))})),{type:\"RasterColormap\",values:n,colors:t}}export{p as combineRenderingRules,h as convertRendererToRenderingRule,g as convertRenderingRuleToRFT,f as isSupportedRendererType,c as pixelTypeRanges};\n"]},"metadata":{},"sourceType":"module"}