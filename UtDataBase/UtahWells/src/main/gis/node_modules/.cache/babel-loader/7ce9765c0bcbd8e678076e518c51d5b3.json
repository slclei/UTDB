{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { getAssetUrl as e } from \"../../assets.js\";\nimport { isNone as t } from \"../../core/maybe.js\";\n\nfunction s() {\n  if (t(i)) {\n    const t = t => e(`esri/libs/basisu/${t}`);\n\n    i = import(\"../../chunks/basis_transcoder.js\").then(e => e.b).then(_ref => {\n      let {\n        default: e\n      } = _ref;\n      return e({\n        locateFile: t\n      }).then(e => (e.initializeBasis(), delete e.then, e));\n    });\n  }\n\n  return i;\n}\n\nlet i;\nexport { s as getBasisTranscoder };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/libs/basisu/BasisU.js"],"names":["getAssetUrl","e","isNone","t","s","i","then","b","default","locateFile","initializeBasis","getBasisTranscoder"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,WAAW,IAAIC,CAAtB,QAA4B,iBAA5B;AAA8C,SAAOC,MAAM,IAAIC,CAAjB,QAAuB,qBAAvB;;AAA6C,SAASC,CAAT,GAAY;AAAC,MAAGD,CAAC,CAACE,CAAD,CAAJ,EAAQ;AAAC,UAAMF,CAAC,GAACA,CAAC,IAAEF,CAAC,CAAE,oBAAmBE,CAAE,EAAvB,CAAZ;;AAAsCE,IAAAA,CAAC,GAAC,OAAO,kCAAP,EAA2CC,IAA3C,CAAiDL,CAAC,IAAEA,CAAC,CAACM,CAAtD,EAA0DD,IAA1D,CAAgE;AAAA,UAAC;AAACE,QAAAA,OAAO,EAACP;AAAT,OAAD;AAAA,aAAeA,CAAC,CAAC;AAACQ,QAAAA,UAAU,EAACN;AAAZ,OAAD,CAAD,CAAkBG,IAAlB,CAAwBL,CAAC,KAAGA,CAAC,CAACS,eAAF,IAAoB,OAAOT,CAAC,CAACK,IAA7B,EAAkCL,CAArC,CAAzB,CAAf;AAAA,KAAhE,CAAF;AAAsJ;;AAAA,SAAOI,CAAP;AAAS;;AAAA,IAAIA,CAAJ;AAAM,SAAOD,CAAC,IAAIO,kBAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{getAssetUrl as e}from\"../../assets.js\";import{isNone as t}from\"../../core/maybe.js\";function s(){if(t(i)){const t=t=>e(`esri/libs/basisu/${t}`);i=import(\"../../chunks/basis_transcoder.js\").then((e=>e.b)).then((({default:e})=>e({locateFile:t}).then((e=>(e.initializeBasis(),delete e.then,e)))))}return i}let i;export{s as getBasisTranscoder};\n"]},"metadata":{},"sourceType":"module"}