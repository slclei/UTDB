{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { FeatureServiceDatabaseType as e } from \"./shared.js\";\nimport { WhereClause as r } from \"../../../core/sql/WhereClause.js\";\nimport { DateTime as t } from \"luxon\";\n\nfunction n(e, r) {\n  return c(e.parseTree, r, e.parameters);\n}\n\nfunction a(e, r, t) {\n  return c(e, r, t);\n}\n\nfunction s(t, n, a, s) {\n  return r.create(c(t.parseTree, e.Standardised, t.parameters, n, a), s);\n}\n\nfunction o(t, a) {\n  let s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"AND\";\n  return r.create(\"((\" + n(t, e.Standardised) + \")\" + s + \"(\" + n(a, e.Standardised) + \"))\", t.fieldsIndex);\n}\n\nfunction c(e, r, t) {\n  let n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  let a = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  let s, o, f, d;\n\n  switch (e.type) {\n    case \"interval\":\n      return T(c(e.value, r, t, n, a), e.qualifier, e.op);\n\n    case \"case_expression\":\n      {\n        let s = \" CASE \";\n        \"simple\" === e.format && (s += c(e.operand, r, t, n, a));\n\n        for (let o = 0; o < e.clauses.length; o++) s += \" WHEN \" + c(e.clauses[o].operand, r, t, n, a) + \" THEN \" + c(e.clauses[o].value, r, t, n, a);\n\n        return null !== e.else && (s += \" ELSE \" + c(e.else, r, t, n, a)), s += \" END \", s;\n      }\n\n    case \"param\":\n      {\n        const n = t[e.value.toLowerCase()];\n\n        if (\"string\" == typeof n) {\n          return \"'\" + t[e.value.toLowerCase()].toString().replace(/'/g, \"''\") + \"'\";\n        }\n\n        if (n instanceof Date) return u(n, r);\n\n        if (n instanceof Array) {\n          const e = [];\n\n          for (let t = 0; t < n.length; t++) \"string\" == typeof n[t] ? e.push(\"'\" + n[t].toString().replace(/'/g, \"''\") + \"'\") : n[t] instanceof Date ? e.push(u(n[t], r)) : e.push(n[t].toString());\n\n          return e;\n        }\n\n        return n.toString();\n      }\n\n    case \"expr_list\":\n      o = [];\n\n      for (const s of e.value) o.push(c(s, r, t, n, a));\n\n      return o;\n\n    case \"unary_expr\":\n      return \" ( NOT \" + c(e.expr, r, t, n, a) + \" ) \";\n\n    case \"binary_expr\":\n      switch (e.operator) {\n        case \"AND\":\n          return \" (\" + c(e.left, r, t, n, a) + \" AND \" + c(e.right, r, t, n, a) + \") \";\n\n        case \"OR\":\n          return \" (\" + c(e.left, r, t, n, a) + \" OR \" + c(e.right, r, t, n, a) + \") \";\n\n        case \"IS\":\n          if (\"null\" !== e.right.type) throw new Error(\"Unsupported RHS for IS\");\n          return \" (\" + c(e.left, r, t, n, a) + \" IS NULL )\";\n\n        case \"ISNOT\":\n          if (\"null\" !== e.right.type) throw new Error(\"Unsupported RHS for IS\");\n          return \" (\" + c(e.left, r, t, n, a) + \" IS NOT NULL )\";\n\n        case \"IN\":\n          return s = [], \"expr_list\" === e.right.type ? (s = c(e.right, r, t, n, a), \" (\" + c(e.left, r, t, n, a) + \" IN (\" + s.join(\",\") + \")) \") : (d = c(e.right, r, t, n, a), d instanceof Array ? \" (\" + c(e.left, r, t, n, a) + \" IN (\" + d.join(\",\") + \")) \" : \" (\" + c(e.left, r, t, n, a) + \" IN (\" + d + \")) \");\n\n        case \"NOT IN\":\n          return s = [], \"expr_list\" === e.right.type ? (s = c(e.right, r, t, n, a), \" (\" + c(e.left, r, t, n, a) + \" NOT IN (\" + s.join(\",\") + \")) \") : (d = c(e.right, r, t, n, a), d instanceof Array ? \" (\" + c(e.left, r, t, n, a) + \" NOT IN (\" + d.join(\",\") + \")) \" : \" (\" + c(e.left, r, t, n, a) + \" NOT IN (\" + d + \")) \");\n\n        case \"BETWEEN\":\n          return f = c(e.right, r, t, n, a), \" (\" + c(e.left, r, t, n, a) + \" BETWEEN \" + f[0] + \" AND \" + f[1] + \" ) \";\n\n        case \"NOTBETWEEN\":\n          return f = c(e.right, r, t, n, a), \" (\" + c(e.left, r, t, n, a) + \" NOT BETWEEN \" + f[0] + \" AND \" + f[1] + \" ) \";\n\n        case \"LIKE\":\n          return \"\" !== e.escape ? \" (\" + c(e.left, r, t, n, a) + \" LIKE \" + c(e.right, r, t, n, a) + \" ESCAPE '\" + e.escape + \"') \" : \" (\" + c(e.left, r, t, n, a) + \" LIKE \" + c(e.right, r, t, n, a) + \") \";\n\n        case \"NOT LIKE\":\n          return \"\" !== e.escape ? \" (\" + c(e.left, r, t, n, a) + \" NOT LIKE \" + c(e.right, r, t, n, a) + \" ESCAPE '\" + e.escape + \"') \" : \" (\" + c(e.left, r, t, n, a) + \" NOT LIKE \" + c(e.right, r, t, n, a) + \") \";\n\n        case \"<>\":\n        case \"<\":\n        case \">\":\n        case \">=\":\n        case \"<=\":\n        case \"=\":\n        case \"*\":\n        case \"-\":\n        case \"+\":\n        case \"/\":\n          return \" (\" + c(e.left, r, t, n, a) + \" \" + e.operator + \" \" + c(e.right, r, t, n, a) + \") \";\n      }\n\n      throw new Error(\"Not Supported Operator \" + e.operator);\n\n    case \"null\":\n      return \"null\";\n\n    case \"bool\":\n      return !0 === e.value ? \"1\" : \"0\";\n\n    case \"string\":\n      return \"'\" + e.value.toString().replace(/'/g, \"''\") + \"'\";\n\n    case \"timestamp\":\n    case \"date\":\n      return u(e.value, r);\n\n    case \"number\":\n      return e.value.toString();\n\n    case \"current_time\":\n      return i(\"date\" === e.mode, r);\n\n    case \"column_ref\":\n      return n && n.toLowerCase() === e.column.toLowerCase() ? \"(\" + a + \")\" : e.column;\n\n    case \"function\":\n      {\n        const s = c(e.args, r, t, n, a);\n        return l(e.name, s, r);\n      }\n  }\n\n  throw new Error(\"Unsupported sql syntax \" + e.type);\n}\n\nfunction l(r, t, n) {\n  switch (r.toLowerCase().trim()) {\n    case \"abs\":\n      if (1 !== t.length) throw new Error(\"Invalid Parameter for call to ABS\");\n      return \"abs(\" + t[0] + \")\";\n\n    case \"ceiling\":\n    case \"ceil\":\n      if (1 !== t.length) throw new Error(\"Invalid Parameter for call to CEILING\");\n\n      switch (n) {\n        case e.Standardised:\n        case e.StandardisedNoInterval:\n      }\n\n      return \"CEILING(\" + t[0] + \")\";\n\n    case \"floor\":\n      if (1 !== t.length) throw new Error(\"Invalid Parameter for call to Floor\");\n      return \"FLOOR(\" + t[0] + \")\";\n\n    case \"log\":\n      if (1 !== t.length) throw new Error(\"Invalid Parameter for call to LOG\");\n      return \"LOG(\" + t[0] + \")\";\n\n    case \"log10\":\n      if (1 !== t.length) throw new Error(\"Invalid Parameter for call to LOG10\");\n      return \"LOG10(\" + t[0] + \")\";\n\n    case \"power\":\n      if (2 !== t.length) throw new Error(\"Invalid Parameter for call to POWER\");\n      return \"POWER(\" + t[0] + \",\" + t[1] + \")\";\n\n    case \"round\":\n      if (2 === t.length) return \"ROUND(\" + t[0] + \",\" + t[1] + \")\";\n      if (1 === t.length) return \"ROUND(\" + t[0] + \")\";\n      throw new Error(\"Invalid Parameter for call to ROUND\");\n\n    case \"truncate\":\n      if (t.length < 1 || t.length > 2) throw new Error(\"Invalid Parameter for TRUNCATE function\");\n      return n === e.SqlServer ? \"ROUND(\" + t[0] + (1 === t.length ? \"0\" : \",\" + t[1]) + \",1)\" : \"TRUNCATE(\" + t[0] + (1 === t.length ? \")\" : \",\" + t[1] + \")\");\n\n    case \"char_length\":\n    case \"len\":\n      if (1 !== t.length) throw new Error(\"Invalid Parameter for CHAR_LENGTH function\");\n\n      switch (n) {\n        case e.SqlServer:\n          return \"LEN(\" + t[0] + \")\";\n\n        case e.Oracle:\n          return \"LENGTH(\" + t[0] + \")\";\n\n        default:\n          return \"CHAR_LENGTH(\" + t[0] + \")\";\n      }\n\n    case \"concat\":\n      if (t.length < 1) throw new Error(\"Invalid Parameter for CONCAT function\");\n      {\n        let e = \"CONCAT(\";\n\n        for (let r = 0; r < t.length; r++) 0 !== r && (e += \",\"), e += t[r];\n\n        return e += \")\", e;\n      }\n\n    case \"lower\":\n    case \"lcase\":\n      if (1 !== t.length) throw new Error(\"Invalid Parameter for Lower function\");\n      return \"LOWER(\" + t[0] + \")\";\n\n    case \"upper\":\n    case \"ucase\":\n      if (1 !== t.length) throw new Error(\"Invalid Parameter for Upper function\");\n      return \"UPPER(\" + t[0] + \")\";\n\n    case \"substring\":\n      {\n        let r = \"\";\n\n        switch (n) {\n          case e.Oracle:\n            return r = \"SUBSTR(\" + t[0] + \",\" + t[1], 3 === t.length && (r += \",\" + t[2]), r += \")\", r;\n\n          case e.SqlServer:\n            return r = 3 === t.length ? \"SUBSTRING(\" + t[0] + \",\" + t[1] + \",\" + t[2] + \")\" : \"SUBSTRING(\" + t[0] + \",  \" + t[1] + \", LEN(\" + t[0] + \") - \" + t[1] + \")\", r;\n\n          default:\n            return r = \"SUBSTRING(\" + t[0] + \" FROM \" + t[1], 3 === t.length && (r += \" FOR \" + t[2]), r += \")\", r;\n        }\n      }\n\n    case \"extract\":\n      return \"EXTRACT(\" + t[0].replace(/\\'/g, \"\") + \" FROM \" + t[1] + \")\";\n  }\n\n  throw new Error(\"Function Not Recognised\");\n}\n\nfunction u(r, n) {\n  const a = t.fromJSDate(r),\n        s = 0 === a.hour && 0 === a.minute && 0 === a.second && 0 === a.millisecond;\n\n  switch (n) {\n    case e.FILEGDB:\n    case e.Standardised:\n    case e.StandardisedNoInterval:\n      return s ? `date '${a.toFormat(\"yyyy-LL-dd\")}'` : `date '${a.toFormat(\"yyyy-LL-dd HH:mm:ss\")}'`;\n\n    case e.Oracle:\n      return s ? `TO_DATE('${a.toFormat(\"yyyy-LL-dd\")}','YYYY-MM-DD')` : `TO_DATE('${a.toFormat(\"yyyy-LL-dd HH:mm:ss\")}','YYYY-MM-DD HH24:MI:SS')`;\n\n    case e.SqlServer:\n      return `'${a.toFormat(s ? \"yyyy-LL-dd\" : \"yyyy-LL-dd HH:mm:ss\")}'`;\n\n    case e.PGDB:\n      return `#${a.toFormat(s ? \"LL-dd-yyyy\" : \"LL-dd-yyyy HH:mm:ss\")}#`;\n\n    case e.Postgres:\n      return `TIMESTAMP '${a.toFormat(s ? \"yyyy-LL-dd\" : \"yyyy-LL-dd HH:mm:ss\")}'`;\n\n    default:\n      return `date '${a.toFormat(\"yyyy-LL-dd HH:mm:ss\")}'`;\n  }\n}\n\nfunction i(r, t) {\n  switch (t) {\n    case e.FILEGDB:\n    case e.Standardised:\n    case e.StandardisedNoInterval:\n    case e.Oracle:\n      return r ? \"CURRENT_DATE\" : \"CURRENT_TIMESTAMP\";\n\n    case e.SqlServer:\n      return r ? \"CAST(GETDATE() AS DATE)\" : \"GETDATE()\";\n\n    case e.PGDB:\n    case e.Postgres:\n    default:\n      return r ? \"CURRENT_DATE\" : \"CURRENT_TIMESTAMP\";\n  }\n}\n\nfunction f(e, r) {\n  let t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const n = {},\n        a = {},\n        s = {\n    esriFieldTypeSmallInteger: \"integer\",\n    esriFieldTypeInteger: \"integer\",\n    esriFieldTypeSingle: \"double\",\n    esriFieldTypeDouble: \"double\",\n    esriFieldTypeString: \"string\",\n    esriFieldTypeDate: \"date\",\n    esriFieldTypeOID: \"integer\",\n    oid: \"integer\",\n    long: \"integer\",\n    \"small-integer\": \"integer\",\n    integer: \"integer\",\n    single: \"double\",\n    double: \"double\",\n    date: \"date\",\n    string: \"string\"\n  };\n\n  for (const o of r) {\n    const e = s[o.type];\n    n[o.name.toLowerCase()] = void 0 === e ? \"\" : e;\n  }\n\n  for (const o in t) {\n    const e = s[t[o]];\n    a[o.toLowerCase()] = void 0 === e ? \"\" : e;\n  }\n\n  switch (d(n, e.parseTree, e.parameters, a)) {\n    case \"double\":\n      return \"double\";\n\n    case \"integer\":\n      return \"integer\";\n\n    case \"date\":\n      return \"date\";\n\n    case \"string\":\n      return \"string\";\n  }\n\n  return \"\";\n}\n\nfunction d(e, r, t, n) {\n  let a;\n\n  switch (r.type) {\n    case \"interval\":\n      return \"integer\";\n\n    case \"case_expression\":\n      {\n        const a = [];\n\n        if (\"simple\" === r.format) {\n          for (let s = 0; s < r.clauses.length; s++) a.push(d(e, r.clauses[s].value, t, n));\n\n          null !== r.else && a.push(d(e, r.else, t, n));\n        } else {\n          for (let s = 0; s < r.clauses.length; s++) a.push(d(e, r.else, t, n));\n\n          null !== r.else && a.push(d(e, r.else, t, n));\n        }\n\n        return g(a);\n      }\n\n    case \"param\":\n      {\n        const e = n[r.value.toLowerCase()];\n\n        if (void 0 === e && t) {\n          const e = t[r.value.toLowerCase()];\n          if (void 0 === e) return \"\";\n          if (null === e) return \"\";\n          if (\"string\" == typeof e || e instanceof String) return \"string\";\n          if (\"boolean\" == typeof e) return \"boolean\";\n          if (e instanceof Date) return \"date\";\n          if (\"number\" == typeof e) return e % 1 == 0 ? \"integer\" : \"double\";\n        }\n\n        return void 0 === e ? \"\" : e;\n      }\n\n    case \"expr_list\":\n      {\n        const a = [];\n\n        for (const s of r.value) a.push(d(e, s, t, n));\n\n        return a;\n      }\n\n    case \"unary_expr\":\n      return \"boolean\";\n\n    case \"binary_expr\":\n      switch (r.operator) {\n        case \"AND\":\n        case \"OR\":\n        case \"IN\":\n        case \"NOT IN\":\n        case \"BETWEEN\":\n        case \"NOTBETWEEN\":\n        case \"LIKE\":\n        case \"NOT LIKE\":\n        case \"<>\":\n        case \"<\":\n        case \">\":\n        case \">=\":\n        case \"<=\":\n        case \"=\":\n          return \"boolean\";\n\n        case \"IS\":\n        case \"ISNOT\":\n          if (\"null\" !== r.right.type) throw new Error(\"Unsupported RHS for IS\");\n          return \"boolean\";\n\n        case \"*\":\n        case \"-\":\n        case \"+\":\n        case \"/\":\n          return g([d(e, r.left, t, n), d(e, r.right, t, n)]);\n\n        default:\n          throw new Error(\"Not Supported Operator \" + r.operator);\n      }\n\n    case \"null\":\n      return \"\";\n\n    case \"bool\":\n      return \"boolean\";\n\n    case \"string\":\n      return \"string\";\n\n    case \"number\":\n      return null === r.value ? \"\" : r.value % 1 == 0 ? \"integer\" : \"double\";\n\n    case \"date\":\n    case \"timestamp\":\n    case \"current_time\":\n      return \"date\";\n\n    case \"column_ref\":\n      {\n        const t = e[r.column.toLowerCase()];\n        return void 0 === t ? \"\" : t;\n      }\n\n    case \"function\":\n      switch (r.name.toLowerCase()) {\n        case \"position\":\n        case \"extract\":\n        case \"char_length\":\n          return \"integer\";\n\n        case \"round\":\n          return a = d(e, r.args, t, n), a instanceof Array ? a.length > 0 ? a[0] : \"\" : a;\n\n        case \"sign\":\n          return a = d(e, r.args, t, n), a instanceof Array && (a = g(a)), \"integer\" === a || \"double\" === a ? a : \"double\";\n\n        case \"ceiling\":\n        case \"floor\":\n        case \"abs\":\n          {\n            const a = d(e, r.args, t, n);\n            return a instanceof Array ? g(a) : a;\n          }\n\n        case \"area\":\n        case \"length\":\n        case \"log\":\n        case \"log10\":\n        case \"sin\":\n        case \"cos\":\n        case \"tan\":\n        case \"asin\":\n        case \"acos\":\n        case \"atan\":\n        case \"power\":\n        case \"truncate\":\n          return \"double\";\n\n        case \"substring\":\n        case \"trim\":\n        case \"concat\":\n        case \"lower\":\n        case \"upper\":\n          return \"string\";\n      }\n\n      return \"\";\n  }\n\n  throw new Error(\"Unsupported sql syntax \" + r.type);\n}\n\nconst p = {\n  boolean: 1,\n  string: 2,\n  integer: 3,\n  double: 4,\n  date: 5\n};\n\nfunction g(e) {\n  if (e) {\n    let r = \"\";\n\n    for (const t of e) \"\" !== t && (r = \"\" === r || p[r] < p[t] ? t : r);\n\n    return r;\n  }\n\n  return \"\";\n}\n\nfunction h(e, r) {\n  return y(e.parseTree, r);\n}\n\nfunction E(e) {\n  return \"column_ref\" === e.parseTree.type;\n}\n\nfunction y(e, r) {\n  if (null == e) return !1;\n\n  switch (e.type) {\n    case \"when_clause\":\n      return y(e.operand, r) || y(e.value, r);\n\n    case \"case_expression\":\n      for (const t of e.clauses) if (y(t, r)) return !0;\n\n      return !(\"simple\" !== e.format || !y(e.operand, r)) || !(null === e.else || !y(e.else, r));\n\n    case \"param\":\n    case \"null\":\n    case \"bool\":\n    case \"date\":\n    case \"timestamp\":\n    case \"string\":\n    case \"number\":\n      return !1;\n\n    case \"expr_list\":\n      for (const t of e.value) if (y(t, r)) return !0;\n\n      return !1;\n\n    case \"unary_expr\":\n      return y(e.expr, r);\n\n    case \"binary_expr\":\n      return y(e.left, r) || y(e.right, r);\n\n    case \"column_ref\":\n      return r.toLowerCase() === e.column.toLowerCase();\n\n    case \"function\":\n      return y(e.args, r);\n  }\n\n  return !1;\n}\n\nfunction m(e) {\n  let r = \"\";\n  return r += e.period.toUpperCase(), r;\n}\n\nfunction T(e, r, t) {\n  let n = \"\";\n  return n = \"interval-period\" === r.type ? m(r) : m(r.start) + \" TO \" + m(r.end), \"INTERVAL \" + t + \" \" + e + \" \" + n;\n}\n\nexport { o as combine, T as convertIntervalToSql, E as isSingleField, u as makeDateString, i as makeToday, f as predictType, s as reformulateWithoutField, h as scanForField, n as toWhereClause, a as toWhereClauseFromTree, l as translateFunctionToDatabaseSpecific };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/arcade/featureset/support/sqlUtils.js"],"names":["FeatureServiceDatabaseType","e","WhereClause","r","DateTime","t","n","c","parseTree","parameters","a","s","create","Standardised","o","fieldsIndex","f","d","type","T","value","qualifier","op","format","operand","clauses","length","else","toLowerCase","toString","replace","Date","u","Array","push","expr","operator","left","right","Error","join","escape","i","mode","column","args","l","name","trim","StandardisedNoInterval","SqlServer","Oracle","fromJSDate","hour","minute","second","millisecond","FILEGDB","toFormat","PGDB","Postgres","esriFieldTypeSmallInteger","esriFieldTypeInteger","esriFieldTypeSingle","esriFieldTypeDouble","esriFieldTypeString","esriFieldTypeDate","esriFieldTypeOID","oid","long","integer","single","double","date","string","g","String","p","boolean","h","y","E","m","period","toUpperCase","start","end","combine","convertIntervalToSql","isSingleField","makeDateString","makeToday","predictType","reformulateWithoutField","scanForField","toWhereClause","toWhereClauseFromTree","translateFunctionToDatabaseSpecific"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,0BAA0B,IAAIC,CAArC,QAA2C,aAA3C;AAAyD,SAAOC,WAAW,IAAIC,CAAtB,QAA4B,kCAA5B;AAA+D,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,OAAzB;;AAAiC,SAASC,CAAT,CAAWL,CAAX,EAAaE,CAAb,EAAe;AAAC,SAAOI,CAAC,CAACN,CAAC,CAACO,SAAH,EAAaL,CAAb,EAAeF,CAAC,CAACQ,UAAjB,CAAR;AAAqC;;AAAA,SAASC,CAAT,CAAWT,CAAX,EAAaE,CAAb,EAAeE,CAAf,EAAiB;AAAC,SAAOE,CAAC,CAACN,CAAD,EAAGE,CAAH,EAAKE,CAAL,CAAR;AAAgB;;AAAA,SAASM,CAAT,CAAWN,CAAX,EAAaC,CAAb,EAAeI,CAAf,EAAiBC,CAAjB,EAAmB;AAAC,SAAOR,CAAC,CAACS,MAAF,CAASL,CAAC,CAACF,CAAC,CAACG,SAAH,EAAaP,CAAC,CAACY,YAAf,EAA4BR,CAAC,CAACI,UAA9B,EAAyCH,CAAzC,EAA2CI,CAA3C,CAAV,EAAwDC,CAAxD,CAAP;AAAkE;;AAAA,SAASG,CAAT,CAAWT,CAAX,EAAaK,CAAb,EAAuB;AAAA,MAARC,CAAQ,uEAAN,KAAM;AAAC,SAAOR,CAAC,CAACS,MAAF,CAAS,OAAKN,CAAC,CAACD,CAAD,EAAGJ,CAAC,CAACY,YAAL,CAAN,GAAyB,GAAzB,GAA6BF,CAA7B,GAA+B,GAA/B,GAAmCL,CAAC,CAACI,CAAD,EAAGT,CAAC,CAACY,YAAL,CAApC,GAAuD,IAAhE,EAAqER,CAAC,CAACU,WAAvE,CAAP;AAA2F;;AAAA,SAASR,CAAT,CAAWN,CAAX,EAAaE,CAAb,EAAeE,CAAf,EAA+B;AAAA,MAAdC,CAAc,uEAAZ,IAAY;AAAA,MAAPI,CAAO,uEAAL,IAAK;AAAC,MAAIC,CAAJ,EAAMG,CAAN,EAAQE,CAAR,EAAUC,CAAV;;AAAY,UAAOhB,CAAC,CAACiB,IAAT;AAAe,SAAI,UAAJ;AAAe,aAAOC,CAAC,CAACZ,CAAC,CAACN,CAAC,CAACmB,KAAH,EAASjB,CAAT,EAAWE,CAAX,EAAaC,CAAb,EAAeI,CAAf,CAAF,EAAoBT,CAAC,CAACoB,SAAtB,EAAgCpB,CAAC,CAACqB,EAAlC,CAAR;;AAA8C,SAAI,iBAAJ;AAAsB;AAAC,YAAIX,CAAC,GAAC,QAAN;AAAe,qBAAWV,CAAC,CAACsB,MAAb,KAAsBZ,CAAC,IAAEJ,CAAC,CAACN,CAAC,CAACuB,OAAH,EAAWrB,CAAX,EAAaE,CAAb,EAAeC,CAAf,EAAiBI,CAAjB,CAA1B;;AAA+C,aAAI,IAAII,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACb,CAAC,CAACwB,OAAF,CAAUC,MAAxB,EAA+BZ,CAAC,EAAhC,EAAmCH,CAAC,IAAE,WAASJ,CAAC,CAACN,CAAC,CAACwB,OAAF,CAAUX,CAAV,EAAaU,OAAd,EAAsBrB,CAAtB,EAAwBE,CAAxB,EAA0BC,CAA1B,EAA4BI,CAA5B,CAAV,GAAyC,QAAzC,GAAkDH,CAAC,CAACN,CAAC,CAACwB,OAAF,CAAUX,CAAV,EAAaM,KAAd,EAAoBjB,CAApB,EAAsBE,CAAtB,EAAwBC,CAAxB,EAA0BI,CAA1B,CAAtD;;AAAmF,eAAO,SAAOT,CAAC,CAAC0B,IAAT,KAAgBhB,CAAC,IAAE,WAASJ,CAAC,CAACN,CAAC,CAAC0B,IAAH,EAAQxB,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAA7B,GAA+CC,CAAC,IAAE,OAAlD,EAA0DA,CAAjE;AAAmE;;AAAA,SAAI,OAAJ;AAAY;AAAC,cAAML,CAAC,GAACD,CAAC,CAACJ,CAAC,CAACmB,KAAF,CAAQQ,WAAR,EAAD,CAAT;;AAAiC,YAAG,YAAU,OAAOtB,CAApB,EAAsB;AAAC,iBAAM,MAAID,CAAC,CAACJ,CAAC,CAACmB,KAAF,CAAQQ,WAAR,EAAD,CAAD,CAAyBC,QAAzB,GAAoCC,OAApC,CAA4C,IAA5C,EAAiD,IAAjD,CAAJ,GAA2D,GAAjE;AAAqE;;AAAA,YAAGxB,CAAC,YAAYyB,IAAhB,EAAqB,OAAOC,CAAC,CAAC1B,CAAD,EAAGH,CAAH,CAAR;;AAAc,YAAGG,CAAC,YAAY2B,KAAhB,EAAsB;AAAC,gBAAMhC,CAAC,GAAC,EAAR;;AAAW,eAAI,IAAII,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,CAAC,CAACoB,MAAhB,EAAuBrB,CAAC,EAAxB,EAA2B,YAAU,OAAOC,CAAC,CAACD,CAAD,CAAlB,GAAsBJ,CAAC,CAACiC,IAAF,CAAO,MAAI5B,CAAC,CAACD,CAAD,CAAD,CAAKwB,QAAL,GAAgBC,OAAhB,CAAwB,IAAxB,EAA6B,IAA7B,CAAJ,GAAuC,GAA9C,CAAtB,GAAyExB,CAAC,CAACD,CAAD,CAAD,YAAe0B,IAAf,GAAoB9B,CAAC,CAACiC,IAAF,CAAOF,CAAC,CAAC1B,CAAC,CAACD,CAAD,CAAF,EAAMF,CAAN,CAAR,CAApB,GAAsCF,CAAC,CAACiC,IAAF,CAAO5B,CAAC,CAACD,CAAD,CAAD,CAAKwB,QAAL,EAAP,CAA/G;;AAAuI,iBAAO5B,CAAP;AAAS;;AAAA,eAAOK,CAAC,CAACuB,QAAF,EAAP;AAAoB;;AAAA,SAAI,WAAJ;AAAgBf,MAAAA,CAAC,GAAC,EAAF;;AAAK,WAAI,MAAMH,CAAV,IAAeV,CAAC,CAACmB,KAAjB,EAAuBN,CAAC,CAACoB,IAAF,CAAO3B,CAAC,CAACI,CAAD,EAAGR,CAAH,EAAKE,CAAL,EAAOC,CAAP,EAASI,CAAT,CAAR;;AAAqB,aAAOI,CAAP;;AAAS,SAAI,YAAJ;AAAiB,aAAM,YAAUP,CAAC,CAACN,CAAC,CAACkC,IAAH,EAAQhC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAX,GAA4B,KAAlC;;AAAwC,SAAI,aAAJ;AAAkB,cAAOT,CAAC,CAACmC,QAAT;AAAmB,aAAI,KAAJ;AAAU,iBAAM,OAAK7B,CAAC,CAACN,CAAC,CAACoC,IAAH,EAAQlC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAN,GAAuB,OAAvB,GAA+BH,CAAC,CAACN,CAAC,CAACqC,KAAH,EAASnC,CAAT,EAAWE,CAAX,EAAaC,CAAb,EAAeI,CAAf,CAAhC,GAAkD,IAAxD;;AAA6D,aAAI,IAAJ;AAAS,iBAAM,OAAKH,CAAC,CAACN,CAAC,CAACoC,IAAH,EAAQlC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAN,GAAuB,MAAvB,GAA8BH,CAAC,CAACN,CAAC,CAACqC,KAAH,EAASnC,CAAT,EAAWE,CAAX,EAAaC,CAAb,EAAeI,CAAf,CAA/B,GAAiD,IAAvD;;AAA4D,aAAI,IAAJ;AAAS,cAAG,WAAST,CAAC,CAACqC,KAAF,CAAQpB,IAApB,EAAyB,MAAM,IAAIqB,KAAJ,CAAU,wBAAV,CAAN;AAA0C,iBAAM,OAAKhC,CAAC,CAACN,CAAC,CAACoC,IAAH,EAAQlC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAN,GAAuB,YAA7B;;AAA0C,aAAI,OAAJ;AAAY,cAAG,WAAST,CAAC,CAACqC,KAAF,CAAQpB,IAApB,EAAyB,MAAM,IAAIqB,KAAJ,CAAU,wBAAV,CAAN;AAA0C,iBAAM,OAAKhC,CAAC,CAACN,CAAC,CAACoC,IAAH,EAAQlC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAN,GAAuB,gBAA7B;;AAA8C,aAAI,IAAJ;AAAS,iBAAOC,CAAC,GAAC,EAAF,EAAK,gBAAcV,CAAC,CAACqC,KAAF,CAAQpB,IAAtB,IAA4BP,CAAC,GAACJ,CAAC,CAACN,CAAC,CAACqC,KAAH,EAASnC,CAAT,EAAWE,CAAX,EAAaC,CAAb,EAAeI,CAAf,CAAH,EAAqB,OAAKH,CAAC,CAACN,CAAC,CAACoC,IAAH,EAAQlC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAN,GAAuB,OAAvB,GAA+BC,CAAC,CAAC6B,IAAF,CAAO,GAAP,CAA/B,GAA2C,KAA5F,KAAoGvB,CAAC,GAACV,CAAC,CAACN,CAAC,CAACqC,KAAH,EAASnC,CAAT,EAAWE,CAAX,EAAaC,CAAb,EAAeI,CAAf,CAAH,EAAqBO,CAAC,YAAYgB,KAAb,GAAmB,OAAK1B,CAAC,CAACN,CAAC,CAACoC,IAAH,EAAQlC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAN,GAAuB,OAAvB,GAA+BO,CAAC,CAACuB,IAAF,CAAO,GAAP,CAA/B,GAA2C,KAA9D,GAAoE,OAAKjC,CAAC,CAACN,CAAC,CAACoC,IAAH,EAAQlC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAN,GAAuB,OAAvB,GAA+BO,CAA/B,GAAiC,KAA9N,CAAZ;;AAAiP,aAAI,QAAJ;AAAa,iBAAON,CAAC,GAAC,EAAF,EAAK,gBAAcV,CAAC,CAACqC,KAAF,CAAQpB,IAAtB,IAA4BP,CAAC,GAACJ,CAAC,CAACN,CAAC,CAACqC,KAAH,EAASnC,CAAT,EAAWE,CAAX,EAAaC,CAAb,EAAeI,CAAf,CAAH,EAAqB,OAAKH,CAAC,CAACN,CAAC,CAACoC,IAAH,EAAQlC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAN,GAAuB,WAAvB,GAAmCC,CAAC,CAAC6B,IAAF,CAAO,GAAP,CAAnC,GAA+C,KAAhG,KAAwGvB,CAAC,GAACV,CAAC,CAACN,CAAC,CAACqC,KAAH,EAASnC,CAAT,EAAWE,CAAX,EAAaC,CAAb,EAAeI,CAAf,CAAH,EAAqBO,CAAC,YAAYgB,KAAb,GAAmB,OAAK1B,CAAC,CAACN,CAAC,CAACoC,IAAH,EAAQlC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAN,GAAuB,WAAvB,GAAmCO,CAAC,CAACuB,IAAF,CAAO,GAAP,CAAnC,GAA+C,KAAlE,GAAwE,OAAKjC,CAAC,CAACN,CAAC,CAACoC,IAAH,EAAQlC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAN,GAAuB,WAAvB,GAAmCO,CAAnC,GAAqC,KAA1O,CAAZ;;AAA6P,aAAI,SAAJ;AAAc,iBAAOD,CAAC,GAACT,CAAC,CAACN,CAAC,CAACqC,KAAH,EAASnC,CAAT,EAAWE,CAAX,EAAaC,CAAb,EAAeI,CAAf,CAAH,EAAqB,OAAKH,CAAC,CAACN,CAAC,CAACoC,IAAH,EAAQlC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAN,GAAuB,WAAvB,GAAmCM,CAAC,CAAC,CAAD,CAApC,GAAwC,OAAxC,GAAgDA,CAAC,CAAC,CAAD,CAAjD,GAAqD,KAAjF;;AAAuF,aAAI,YAAJ;AAAiB,iBAAOA,CAAC,GAACT,CAAC,CAACN,CAAC,CAACqC,KAAH,EAASnC,CAAT,EAAWE,CAAX,EAAaC,CAAb,EAAeI,CAAf,CAAH,EAAqB,OAAKH,CAAC,CAACN,CAAC,CAACoC,IAAH,EAAQlC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAN,GAAuB,eAAvB,GAAuCM,CAAC,CAAC,CAAD,CAAxC,GAA4C,OAA5C,GAAoDA,CAAC,CAAC,CAAD,CAArD,GAAyD,KAArF;;AAA2F,aAAI,MAAJ;AAAW,iBAAM,OAAKf,CAAC,CAACwC,MAAP,GAAc,OAAKlC,CAAC,CAACN,CAAC,CAACoC,IAAH,EAAQlC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAN,GAAuB,QAAvB,GAAgCH,CAAC,CAACN,CAAC,CAACqC,KAAH,EAASnC,CAAT,EAAWE,CAAX,EAAaC,CAAb,EAAeI,CAAf,CAAjC,GAAmD,WAAnD,GAA+DT,CAAC,CAACwC,MAAjE,GAAwE,KAAtF,GAA4F,OAAKlC,CAAC,CAACN,CAAC,CAACoC,IAAH,EAAQlC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAN,GAAuB,QAAvB,GAAgCH,CAAC,CAACN,CAAC,CAACqC,KAAH,EAASnC,CAAT,EAAWE,CAAX,EAAaC,CAAb,EAAeI,CAAf,CAAjC,GAAmD,IAArJ;;AAA0J,aAAI,UAAJ;AAAe,iBAAM,OAAKT,CAAC,CAACwC,MAAP,GAAc,OAAKlC,CAAC,CAACN,CAAC,CAACoC,IAAH,EAAQlC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAN,GAAuB,YAAvB,GAAoCH,CAAC,CAACN,CAAC,CAACqC,KAAH,EAASnC,CAAT,EAAWE,CAAX,EAAaC,CAAb,EAAeI,CAAf,CAArC,GAAuD,WAAvD,GAAmET,CAAC,CAACwC,MAArE,GAA4E,KAA1F,GAAgG,OAAKlC,CAAC,CAACN,CAAC,CAACoC,IAAH,EAAQlC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAN,GAAuB,YAAvB,GAAoCH,CAAC,CAACN,CAAC,CAACqC,KAAH,EAASnC,CAAT,EAAWE,CAAX,EAAaC,CAAb,EAAeI,CAAf,CAArC,GAAuD,IAA7J;;AAAkK,aAAI,IAAJ;AAAS,aAAI,GAAJ;AAAQ,aAAI,GAAJ;AAAQ,aAAI,IAAJ;AAAS,aAAI,IAAJ;AAAS,aAAI,GAAJ;AAAQ,aAAI,GAAJ;AAAQ,aAAI,GAAJ;AAAQ,aAAI,GAAJ;AAAQ,aAAI,GAAJ;AAAQ,iBAAM,OAAKH,CAAC,CAACN,CAAC,CAACoC,IAAH,EAAQlC,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAN,GAAuB,GAAvB,GAA2BT,CAAC,CAACmC,QAA7B,GAAsC,GAAtC,GAA0C7B,CAAC,CAACN,CAAC,CAACqC,KAAH,EAASnC,CAAT,EAAWE,CAAX,EAAaC,CAAb,EAAeI,CAAf,CAA3C,GAA6D,IAAnE;AAAhhD;;AAAwlD,YAAM,IAAI6B,KAAJ,CAAU,4BAA0BtC,CAAC,CAACmC,QAAtC,CAAN;;AAAsD,SAAI,MAAJ;AAAW,aAAM,MAAN;;AAAa,SAAI,MAAJ;AAAW,aAAM,CAAC,CAAD,KAAKnC,CAAC,CAACmB,KAAP,GAAa,GAAb,GAAiB,GAAvB;;AAA2B,SAAI,QAAJ;AAAa,aAAM,MAAInB,CAAC,CAACmB,KAAF,CAAQS,QAAR,GAAmBC,OAAnB,CAA2B,IAA3B,EAAgC,IAAhC,CAAJ,GAA0C,GAAhD;;AAAoD,SAAI,WAAJ;AAAgB,SAAI,MAAJ;AAAW,aAAOE,CAAC,CAAC/B,CAAC,CAACmB,KAAH,EAASjB,CAAT,CAAR;;AAAoB,SAAI,QAAJ;AAAa,aAAOF,CAAC,CAACmB,KAAF,CAAQS,QAAR,EAAP;;AAA0B,SAAI,cAAJ;AAAmB,aAAOa,CAAC,CAAC,WAASzC,CAAC,CAAC0C,IAAZ,EAAiBxC,CAAjB,CAAR;;AAA4B,SAAI,YAAJ;AAAiB,aAAOG,CAAC,IAAEA,CAAC,CAACsB,WAAF,OAAkB3B,CAAC,CAAC2C,MAAF,CAAShB,WAAT,EAArB,GAA4C,MAAIlB,CAAJ,GAAM,GAAlD,GAAsDT,CAAC,CAAC2C,MAA/D;;AAAsE,SAAI,UAAJ;AAAe;AAAC,cAAMjC,CAAC,GAACJ,CAAC,CAACN,CAAC,CAAC4C,IAAH,EAAQ1C,CAAR,EAAUE,CAAV,EAAYC,CAAZ,EAAcI,CAAd,CAAT;AAA0B,eAAOoC,CAAC,CAAC7C,CAAC,CAAC8C,IAAH,EAAQpC,CAAR,EAAUR,CAAV,CAAR;AAAqB;AAAr6F;;AAAs6F,QAAM,IAAIoC,KAAJ,CAAU,4BAA0BtC,CAAC,CAACiB,IAAtC,CAAN;AAAkD;;AAAA,SAAS4B,CAAT,CAAW3C,CAAX,EAAaE,CAAb,EAAeC,CAAf,EAAiB;AAAC,UAAOH,CAAC,CAACyB,WAAF,GAAgBoB,IAAhB,EAAP;AAA+B,SAAI,KAAJ;AAAU,UAAG,MAAI3C,CAAC,CAACqB,MAAT,EAAgB,MAAM,IAAIa,KAAJ,CAAU,mCAAV,CAAN;AAAqD,aAAM,SAAOlC,CAAC,CAAC,CAAD,CAAR,GAAY,GAAlB;;AAAsB,SAAI,SAAJ;AAAc,SAAI,MAAJ;AAAW,UAAG,MAAIA,CAAC,CAACqB,MAAT,EAAgB,MAAM,IAAIa,KAAJ,CAAU,uCAAV,CAAN;;AAAyD,cAAOjC,CAAP;AAAU,aAAKL,CAAC,CAACY,YAAP;AAAoB,aAAKZ,CAAC,CAACgD,sBAAP;AAA9B;;AAA6D,aAAM,aAAW5C,CAAC,CAAC,CAAD,CAAZ,GAAgB,GAAtB;;AAA0B,SAAI,OAAJ;AAAY,UAAG,MAAIA,CAAC,CAACqB,MAAT,EAAgB,MAAM,IAAIa,KAAJ,CAAU,qCAAV,CAAN;AAAuD,aAAM,WAASlC,CAAC,CAAC,CAAD,CAAV,GAAc,GAApB;;AAAwB,SAAI,KAAJ;AAAU,UAAG,MAAIA,CAAC,CAACqB,MAAT,EAAgB,MAAM,IAAIa,KAAJ,CAAU,mCAAV,CAAN;AAAqD,aAAM,SAAOlC,CAAC,CAAC,CAAD,CAAR,GAAY,GAAlB;;AAAsB,SAAI,OAAJ;AAAY,UAAG,MAAIA,CAAC,CAACqB,MAAT,EAAgB,MAAM,IAAIa,KAAJ,CAAU,qCAAV,CAAN;AAAuD,aAAM,WAASlC,CAAC,CAAC,CAAD,CAAV,GAAc,GAApB;;AAAwB,SAAI,OAAJ;AAAY,UAAG,MAAIA,CAAC,CAACqB,MAAT,EAAgB,MAAM,IAAIa,KAAJ,CAAU,qCAAV,CAAN;AAAuD,aAAM,WAASlC,CAAC,CAAC,CAAD,CAAV,GAAc,GAAd,GAAkBA,CAAC,CAAC,CAAD,CAAnB,GAAuB,GAA7B;;AAAiC,SAAI,OAAJ;AAAY,UAAG,MAAIA,CAAC,CAACqB,MAAT,EAAgB,OAAM,WAASrB,CAAC,CAAC,CAAD,CAAV,GAAc,GAAd,GAAkBA,CAAC,CAAC,CAAD,CAAnB,GAAuB,GAA7B;AAAiC,UAAG,MAAIA,CAAC,CAACqB,MAAT,EAAgB,OAAM,WAASrB,CAAC,CAAC,CAAD,CAAV,GAAc,GAApB;AAAwB,YAAM,IAAIkC,KAAJ,CAAU,qCAAV,CAAN;;AAAuD,SAAI,UAAJ;AAAe,UAAGlC,CAAC,CAACqB,MAAF,GAAS,CAAT,IAAYrB,CAAC,CAACqB,MAAF,GAAS,CAAxB,EAA0B,MAAM,IAAIa,KAAJ,CAAU,yCAAV,CAAN;AAA2D,aAAOjC,CAAC,KAAGL,CAAC,CAACiD,SAAN,GAAgB,WAAS7C,CAAC,CAAC,CAAD,CAAV,IAAe,MAAIA,CAAC,CAACqB,MAAN,GAAa,GAAb,GAAiB,MAAIrB,CAAC,CAAC,CAAD,CAArC,IAA0C,KAA1D,GAAgE,cAAYA,CAAC,CAAC,CAAD,CAAb,IAAkB,MAAIA,CAAC,CAACqB,MAAN,GAAa,GAAb,GAAiB,MAAIrB,CAAC,CAAC,CAAD,CAAL,GAAS,GAA5C,CAAvE;;AAAwH,SAAI,aAAJ;AAAkB,SAAI,KAAJ;AAAU,UAAG,MAAIA,CAAC,CAACqB,MAAT,EAAgB,MAAM,IAAIa,KAAJ,CAAU,4CAAV,CAAN;;AAA8D,cAAOjC,CAAP;AAAU,aAAKL,CAAC,CAACiD,SAAP;AAAiB,iBAAM,SAAO7C,CAAC,CAAC,CAAD,CAAR,GAAY,GAAlB;;AAAsB,aAAKJ,CAAC,CAACkD,MAAP;AAAc,iBAAM,YAAU9C,CAAC,CAAC,CAAD,CAAX,GAAe,GAArB;;AAAyB;AAAQ,iBAAM,iBAAeA,CAAC,CAAC,CAAD,CAAhB,GAAoB,GAA1B;AAAhG;;AAA8H,SAAI,QAAJ;AAAa,UAAGA,CAAC,CAACqB,MAAF,GAAS,CAAZ,EAAc,MAAM,IAAIa,KAAJ,CAAU,uCAAV,CAAN;AAAyD;AAAC,YAAItC,CAAC,GAAC,SAAN;;AAAgB,aAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACE,CAAC,CAACqB,MAAhB,EAAuBvB,CAAC,EAAxB,EAA2B,MAAIA,CAAJ,KAAQF,CAAC,IAAE,GAAX,GAAgBA,CAAC,IAAEI,CAAC,CAACF,CAAD,CAApB;;AAAwB,eAAOF,CAAC,IAAE,GAAH,EAAOA,CAAd;AAAgB;;AAAA,SAAI,OAAJ;AAAY,SAAI,OAAJ;AAAY,UAAG,MAAII,CAAC,CAACqB,MAAT,EAAgB,MAAM,IAAIa,KAAJ,CAAU,sCAAV,CAAN;AAAwD,aAAM,WAASlC,CAAC,CAAC,CAAD,CAAV,GAAc,GAApB;;AAAwB,SAAI,OAAJ;AAAY,SAAI,OAAJ;AAAY,UAAG,MAAIA,CAAC,CAACqB,MAAT,EAAgB,MAAM,IAAIa,KAAJ,CAAU,sCAAV,CAAN;AAAwD,aAAM,WAASlC,CAAC,CAAC,CAAD,CAAV,GAAc,GAApB;;AAAwB,SAAI,WAAJ;AAAgB;AAAC,YAAIF,CAAC,GAAC,EAAN;;AAAS,gBAAOG,CAAP;AAAU,eAAKL,CAAC,CAACkD,MAAP;AAAc,mBAAOhD,CAAC,GAAC,YAAUE,CAAC,CAAC,CAAD,CAAX,GAAe,GAAf,GAAmBA,CAAC,CAAC,CAAD,CAAtB,EAA0B,MAAIA,CAAC,CAACqB,MAAN,KAAevB,CAAC,IAAE,MAAIE,CAAC,CAAC,CAAD,CAAvB,CAA1B,EAAsDF,CAAC,IAAE,GAAzD,EAA6DA,CAApE;;AAAsE,eAAKF,CAAC,CAACiD,SAAP;AAAiB,mBAAO/C,CAAC,GAAC,MAAIE,CAAC,CAACqB,MAAN,GAAa,eAAarB,CAAC,CAAC,CAAD,CAAd,GAAkB,GAAlB,GAAsBA,CAAC,CAAC,CAAD,CAAvB,GAA2B,GAA3B,GAA+BA,CAAC,CAAC,CAAD,CAAhC,GAAoC,GAAjD,GAAqD,eAAaA,CAAC,CAAC,CAAD,CAAd,GAAkB,KAAlB,GAAwBA,CAAC,CAAC,CAAD,CAAzB,GAA6B,QAA7B,GAAsCA,CAAC,CAAC,CAAD,CAAvC,GAA2C,MAA3C,GAAkDA,CAAC,CAAC,CAAD,CAAnD,GAAuD,GAA9G,EAAkHF,CAAzH;;AAA2H;AAAQ,mBAAOA,CAAC,GAAC,eAAaE,CAAC,CAAC,CAAD,CAAd,GAAkB,QAAlB,GAA2BA,CAAC,CAAC,CAAD,CAA9B,EAAkC,MAAIA,CAAC,CAACqB,MAAN,KAAevB,CAAC,IAAE,UAAQE,CAAC,CAAC,CAAD,CAA3B,CAAlC,EAAkEF,CAAC,IAAE,GAArE,EAAyEA,CAAhF;AAAlP;AAAqU;;AAAA,SAAI,SAAJ;AAAc,aAAM,aAAWE,CAAC,CAAC,CAAD,CAAD,CAAKyB,OAAL,CAAa,KAAb,EAAmB,EAAnB,CAAX,GAAkC,QAAlC,GAA2CzB,CAAC,CAAC,CAAD,CAA5C,GAAgD,GAAtD;AAAjlE;;AAA2oE,QAAM,IAAIkC,KAAJ,CAAU,yBAAV,CAAN;AAA2C;;AAAA,SAASP,CAAT,CAAW7B,CAAX,EAAaG,CAAb,EAAe;AAAC,QAAMI,CAAC,GAACL,CAAC,CAAC+C,UAAF,CAAajD,CAAb,CAAR;AAAA,QAAwBQ,CAAC,GAAC,MAAID,CAAC,CAAC2C,IAAN,IAAY,MAAI3C,CAAC,CAAC4C,MAAlB,IAA0B,MAAI5C,CAAC,CAAC6C,MAAhC,IAAwC,MAAI7C,CAAC,CAAC8C,WAAxE;;AAAoF,UAAOlD,CAAP;AAAU,SAAKL,CAAC,CAACwD,OAAP;AAAe,SAAKxD,CAAC,CAACY,YAAP;AAAoB,SAAKZ,CAAC,CAACgD,sBAAP;AAA8B,aAAOtC,CAAC,GAAE,SAAQD,CAAC,CAACgD,QAAF,CAAW,YAAX,CAAyB,GAAnC,GAAuC,SAAQhD,CAAC,CAACgD,QAAF,CAAW,qBAAX,CAAkC,GAAzF;;AAA4F,SAAKzD,CAAC,CAACkD,MAAP;AAAc,aAAOxC,CAAC,GAAE,YAAWD,CAAC,CAACgD,QAAF,CAAW,YAAX,CAAyB,iBAAtC,GAAwD,YAAWhD,CAAC,CAACgD,QAAF,CAAW,qBAAX,CAAkC,4BAA7G;;AAAyI,SAAKzD,CAAC,CAACiD,SAAP;AAAiB,aAAO,IAAGxC,CAAC,CAACgD,QAAF,CAAW/C,CAAC,GAAC,YAAD,GAAc,qBAA1B,CAAiD,GAA3D;;AAA8D,SAAKV,CAAC,CAAC0D,IAAP;AAAY,aAAO,IAAGjD,CAAC,CAACgD,QAAF,CAAW/C,CAAC,GAAC,YAAD,GAAc,qBAA1B,CAAiD,GAA3D;;AAA8D,SAAKV,CAAC,CAAC2D,QAAP;AAAgB,aAAO,cAAalD,CAAC,CAACgD,QAAF,CAAW/C,CAAC,GAAC,YAAD,GAAc,qBAA1B,CAAiD,GAArE;;AAAwE;AAAQ,aAAO,SAAQD,CAAC,CAACgD,QAAF,CAAW,qBAAX,CAAkC,GAAjD;AAAvjB;AAA4mB;;AAAA,SAAShB,CAAT,CAAWvC,CAAX,EAAaE,CAAb,EAAe;AAAC,UAAOA,CAAP;AAAU,SAAKJ,CAAC,CAACwD,OAAP;AAAe,SAAKxD,CAAC,CAACY,YAAP;AAAoB,SAAKZ,CAAC,CAACgD,sBAAP;AAA8B,SAAKhD,CAAC,CAACkD,MAAP;AAAc,aAAOhD,CAAC,GAAC,cAAD,GAAgB,mBAAxB;;AAA4C,SAAKF,CAAC,CAACiD,SAAP;AAAiB,aAAO/C,CAAC,GAAC,yBAAD,GAA2B,WAAnC;;AAA+C,SAAKF,CAAC,CAAC0D,IAAP;AAAY,SAAK1D,CAAC,CAAC2D,QAAP;AAAgB;AAAQ,aAAOzD,CAAC,GAAC,cAAD,GAAgB,mBAAxB;AAAzO;AAAsR;;AAAA,SAASa,CAAT,CAAWf,CAAX,EAAaE,CAAb,EAAoB;AAAA,MAALE,CAAK,uEAAH,EAAG;AAAC,QAAMC,CAAC,GAAC,EAAR;AAAA,QAAWI,CAAC,GAAC,EAAb;AAAA,QAAgBC,CAAC,GAAC;AAACkD,IAAAA,yBAAyB,EAAC,SAA3B;AAAqCC,IAAAA,oBAAoB,EAAC,SAA1D;AAAoEC,IAAAA,mBAAmB,EAAC,QAAxF;AAAiGC,IAAAA,mBAAmB,EAAC,QAArH;AAA8HC,IAAAA,mBAAmB,EAAC,QAAlJ;AAA2JC,IAAAA,iBAAiB,EAAC,MAA7K;AAAoLC,IAAAA,gBAAgB,EAAC,SAArM;AAA+MC,IAAAA,GAAG,EAAC,SAAnN;AAA6NC,IAAAA,IAAI,EAAC,SAAlO;AAA4O,qBAAgB,SAA5P;AAAsQC,IAAAA,OAAO,EAAC,SAA9Q;AAAwRC,IAAAA,MAAM,EAAC,QAA/R;AAAwSC,IAAAA,MAAM,EAAC,QAA/S;AAAwTC,IAAAA,IAAI,EAAC,MAA7T;AAAoUC,IAAAA,MAAM,EAAC;AAA3U,GAAlB;;AAAuW,OAAI,MAAM5D,CAAV,IAAeX,CAAf,EAAiB;AAAC,UAAMF,CAAC,GAACU,CAAC,CAACG,CAAC,CAACI,IAAH,CAAT;AAAkBZ,IAAAA,CAAC,CAACQ,CAAC,CAACiC,IAAF,CAAOnB,WAAP,EAAD,CAAD,GAAwB,KAAK,CAAL,KAAS3B,CAAT,GAAW,EAAX,GAAcA,CAAtC;AAAwC;;AAAA,OAAI,MAAMa,CAAV,IAAeT,CAAf,EAAiB;AAAC,UAAMJ,CAAC,GAACU,CAAC,CAACN,CAAC,CAACS,CAAD,CAAF,CAAT;AAAgBJ,IAAAA,CAAC,CAACI,CAAC,CAACc,WAAF,EAAD,CAAD,GAAmB,KAAK,CAAL,KAAS3B,CAAT,GAAW,EAAX,GAAcA,CAAjC;AAAmC;;AAAA,UAAOgB,CAAC,CAACX,CAAD,EAAGL,CAAC,CAACO,SAAL,EAAeP,CAAC,CAACQ,UAAjB,EAA4BC,CAA5B,CAAR;AAAwC,SAAI,QAAJ;AAAa,aAAM,QAAN;;AAAe,SAAI,SAAJ;AAAc,aAAM,SAAN;;AAAgB,SAAI,MAAJ;AAAW,aAAM,MAAN;;AAAa,SAAI,QAAJ;AAAa,aAAM,QAAN;AAAvI;;AAAsJ,SAAM,EAAN;AAAS;;AAAA,SAASO,CAAT,CAAWhB,CAAX,EAAaE,CAAb,EAAeE,CAAf,EAAiBC,CAAjB,EAAmB;AAAC,MAAII,CAAJ;;AAAM,UAAOP,CAAC,CAACe,IAAT;AAAe,SAAI,UAAJ;AAAe,aAAM,SAAN;;AAAgB,SAAI,iBAAJ;AAAsB;AAAC,cAAMR,CAAC,GAAC,EAAR;;AAAW,YAAG,aAAWP,CAAC,CAACoB,MAAhB,EAAuB;AAAC,eAAI,IAAIZ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACR,CAAC,CAACsB,OAAF,CAAUC,MAAxB,EAA+Bf,CAAC,EAAhC,EAAmCD,CAAC,CAACwB,IAAF,CAAOjB,CAAC,CAAChB,CAAD,EAAGE,CAAC,CAACsB,OAAF,CAAUd,CAAV,EAAaS,KAAhB,EAAsBf,CAAtB,EAAwBC,CAAxB,CAAR;;AAAoC,mBAAOH,CAAC,CAACwB,IAAT,IAAejB,CAAC,CAACwB,IAAF,CAAOjB,CAAC,CAAChB,CAAD,EAAGE,CAAC,CAACwB,IAAL,EAAUtB,CAAV,EAAYC,CAAZ,CAAR,CAAf;AAAuC,SAAtI,MAA0I;AAAC,eAAI,IAAIK,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACR,CAAC,CAACsB,OAAF,CAAUC,MAAxB,EAA+Bf,CAAC,EAAhC,EAAmCD,CAAC,CAACwB,IAAF,CAAOjB,CAAC,CAAChB,CAAD,EAAGE,CAAC,CAACwB,IAAL,EAAUtB,CAAV,EAAYC,CAAZ,CAAR;;AAAwB,mBAAOH,CAAC,CAACwB,IAAT,IAAejB,CAAC,CAACwB,IAAF,CAAOjB,CAAC,CAAChB,CAAD,EAAGE,CAAC,CAACwB,IAAL,EAAUtB,CAAV,EAAYC,CAAZ,CAAR,CAAf;AAAuC;;AAAA,eAAOqE,CAAC,CAACjE,CAAD,CAAR;AAAY;;AAAA,SAAI,OAAJ;AAAY;AAAC,cAAMT,CAAC,GAACK,CAAC,CAACH,CAAC,CAACiB,KAAF,CAAQQ,WAAR,EAAD,CAAT;;AAAiC,YAAG,KAAK,CAAL,KAAS3B,CAAT,IAAYI,CAAf,EAAiB;AAAC,gBAAMJ,CAAC,GAACI,CAAC,CAACF,CAAC,CAACiB,KAAF,CAAQQ,WAAR,EAAD,CAAT;AAAiC,cAAG,KAAK,CAAL,KAAS3B,CAAZ,EAAc,OAAM,EAAN;AAAS,cAAG,SAAOA,CAAV,EAAY,OAAM,EAAN;AAAS,cAAG,YAAU,OAAOA,CAAjB,IAAoBA,CAAC,YAAY2E,MAApC,EAA2C,OAAM,QAAN;AAAe,cAAG,aAAW,OAAO3E,CAArB,EAAuB,OAAM,SAAN;AAAgB,cAAGA,CAAC,YAAY8B,IAAhB,EAAqB,OAAM,MAAN;AAAa,cAAG,YAAU,OAAO9B,CAApB,EAAsB,OAAOA,CAAC,GAAC,CAAF,IAAK,CAAL,GAAO,SAAP,GAAiB,QAAxB;AAAiC;;AAAA,eAAO,KAAK,CAAL,KAASA,CAAT,GAAW,EAAX,GAAcA,CAArB;AAAuB;;AAAA,SAAI,WAAJ;AAAgB;AAAC,cAAMS,CAAC,GAAC,EAAR;;AAAW,aAAI,MAAMC,CAAV,IAAeR,CAAC,CAACiB,KAAjB,EAAuBV,CAAC,CAACwB,IAAF,CAAOjB,CAAC,CAAChB,CAAD,EAAGU,CAAH,EAAKN,CAAL,EAAOC,CAAP,CAAR;;AAAmB,eAAOI,CAAP;AAAS;;AAAA,SAAI,YAAJ;AAAiB,aAAM,SAAN;;AAAgB,SAAI,aAAJ;AAAkB,cAAOP,CAAC,CAACiC,QAAT;AAAmB,aAAI,KAAJ;AAAU,aAAI,IAAJ;AAAS,aAAI,IAAJ;AAAS,aAAI,QAAJ;AAAa,aAAI,SAAJ;AAAc,aAAI,YAAJ;AAAiB,aAAI,MAAJ;AAAW,aAAI,UAAJ;AAAe,aAAI,IAAJ;AAAS,aAAI,GAAJ;AAAQ,aAAI,GAAJ;AAAQ,aAAI,IAAJ;AAAS,aAAI,IAAJ;AAAS,aAAI,GAAJ;AAAQ,iBAAM,SAAN;;AAAgB,aAAI,IAAJ;AAAS,aAAI,OAAJ;AAAY,cAAG,WAASjC,CAAC,CAACmC,KAAF,CAAQpB,IAApB,EAAyB,MAAM,IAAIqB,KAAJ,CAAU,wBAAV,CAAN;AAA0C,iBAAM,SAAN;;AAAgB,aAAI,GAAJ;AAAQ,aAAI,GAAJ;AAAQ,aAAI,GAAJ;AAAQ,aAAI,GAAJ;AAAQ,iBAAOoC,CAAC,CAAC,CAAC1D,CAAC,CAAChB,CAAD,EAAGE,CAAC,CAACkC,IAAL,EAAUhC,CAAV,EAAYC,CAAZ,CAAF,EAAiBW,CAAC,CAAChB,CAAD,EAAGE,CAAC,CAACmC,KAAL,EAAWjC,CAAX,EAAaC,CAAb,CAAlB,CAAD,CAAR;;AAA6C;AAAQ,gBAAM,IAAIiC,KAAJ,CAAU,4BAA0BpC,CAAC,CAACiC,QAAtC,CAAN;AAArX;;AAA2a,SAAI,MAAJ;AAAW,aAAM,EAAN;;AAAS,SAAI,MAAJ;AAAW,aAAM,SAAN;;AAAgB,SAAI,QAAJ;AAAa,aAAM,QAAN;;AAAe,SAAI,QAAJ;AAAa,aAAO,SAAOjC,CAAC,CAACiB,KAAT,GAAe,EAAf,GAAkBjB,CAAC,CAACiB,KAAF,GAAQ,CAAR,IAAW,CAAX,GAAa,SAAb,GAAuB,QAAhD;;AAAyD,SAAI,MAAJ;AAAW,SAAI,WAAJ;AAAgB,SAAI,cAAJ;AAAmB,aAAM,MAAN;;AAAa,SAAI,YAAJ;AAAiB;AAAC,cAAMf,CAAC,GAACJ,CAAC,CAACE,CAAC,CAACyC,MAAF,CAAShB,WAAT,EAAD,CAAT;AAAkC,eAAO,KAAK,CAAL,KAASvB,CAAT,GAAW,EAAX,GAAcA,CAArB;AAAuB;;AAAA,SAAI,UAAJ;AAAe,cAAOF,CAAC,CAAC4C,IAAF,CAAOnB,WAAP,EAAP;AAA6B,aAAI,UAAJ;AAAe,aAAI,SAAJ;AAAc,aAAI,aAAJ;AAAkB,iBAAM,SAAN;;AAAgB,aAAI,OAAJ;AAAY,iBAAOlB,CAAC,GAACO,CAAC,CAAChB,CAAD,EAAGE,CAAC,CAAC0C,IAAL,EAAUxC,CAAV,EAAYC,CAAZ,CAAH,EAAkBI,CAAC,YAAYuB,KAAb,GAAmBvB,CAAC,CAACgB,MAAF,GAAS,CAAT,GAAWhB,CAAC,CAAC,CAAD,CAAZ,GAAgB,EAAnC,GAAsCA,CAA/D;;AAAiE,aAAI,MAAJ;AAAW,iBAAOA,CAAC,GAACO,CAAC,CAAChB,CAAD,EAAGE,CAAC,CAAC0C,IAAL,EAAUxC,CAAV,EAAYC,CAAZ,CAAH,EAAkBI,CAAC,YAAYuB,KAAb,KAAqBvB,CAAC,GAACiE,CAAC,CAACjE,CAAD,CAAxB,CAAlB,EAA+C,cAAYA,CAAZ,IAAe,aAAWA,CAA1B,GAA4BA,CAA5B,GAA8B,QAApF;;AAA6F,aAAI,SAAJ;AAAc,aAAI,OAAJ;AAAY,aAAI,KAAJ;AAAU;AAAC,kBAAMA,CAAC,GAACO,CAAC,CAAChB,CAAD,EAAGE,CAAC,CAAC0C,IAAL,EAAUxC,CAAV,EAAYC,CAAZ,CAAT;AAAwB,mBAAOI,CAAC,YAAYuB,KAAb,GAAmB0C,CAAC,CAACjE,CAAD,CAApB,GAAwBA,CAA/B;AAAiC;;AAAA,aAAI,MAAJ;AAAW,aAAI,QAAJ;AAAa,aAAI,KAAJ;AAAU,aAAI,OAAJ;AAAY,aAAI,KAAJ;AAAU,aAAI,KAAJ;AAAU,aAAI,KAAJ;AAAU,aAAI,MAAJ;AAAW,aAAI,MAAJ;AAAW,aAAI,MAAJ;AAAW,aAAI,OAAJ;AAAY,aAAI,UAAJ;AAAe,iBAAM,QAAN;;AAAe,aAAI,WAAJ;AAAgB,aAAI,MAAJ;AAAW,aAAI,QAAJ;AAAa,aAAI,OAAJ;AAAY,aAAI,OAAJ;AAAY,iBAAM,QAAN;AAAtkB;;AAAqlB,aAAM,EAAN;AAA/kE;;AAAwlE,QAAM,IAAI6B,KAAJ,CAAU,4BAA0BpC,CAAC,CAACe,IAAtC,CAAN;AAAkD;;AAAA,MAAM2D,CAAC,GAAC;AAACC,EAAAA,OAAO,EAAC,CAAT;AAAWJ,EAAAA,MAAM,EAAC,CAAlB;AAAoBJ,EAAAA,OAAO,EAAC,CAA5B;AAA8BE,EAAAA,MAAM,EAAC,CAArC;AAAuCC,EAAAA,IAAI,EAAC;AAA5C,CAAR;;AAAuD,SAASE,CAAT,CAAW1E,CAAX,EAAa;AAAC,MAAGA,CAAH,EAAK;AAAC,QAAIE,CAAC,GAAC,EAAN;;AAAS,SAAI,MAAME,CAAV,IAAeJ,CAAf,EAAiB,OAAKI,CAAL,KAASF,CAAC,GAAC,OAAKA,CAAL,IAAQ0E,CAAC,CAAC1E,CAAD,CAAD,GAAK0E,CAAC,CAACxE,CAAD,CAAd,GAAkBA,CAAlB,GAAoBF,CAA/B;;AAAkC,WAAOA,CAAP;AAAS;;AAAA,SAAM,EAAN;AAAS;;AAAA,SAAS4E,CAAT,CAAW9E,CAAX,EAAaE,CAAb,EAAe;AAAC,SAAO6E,CAAC,CAAC/E,CAAC,CAACO,SAAH,EAAaL,CAAb,CAAR;AAAwB;;AAAA,SAAS8E,CAAT,CAAWhF,CAAX,EAAa;AAAC,SAAM,iBAAeA,CAAC,CAACO,SAAF,CAAYU,IAAjC;AAAsC;;AAAA,SAAS8D,CAAT,CAAW/E,CAAX,EAAaE,CAAb,EAAe;AAAC,MAAG,QAAMF,CAAT,EAAW,OAAM,CAAC,CAAP;;AAAS,UAAOA,CAAC,CAACiB,IAAT;AAAe,SAAI,aAAJ;AAAkB,aAAO8D,CAAC,CAAC/E,CAAC,CAACuB,OAAH,EAAWrB,CAAX,CAAD,IAAgB6E,CAAC,CAAC/E,CAAC,CAACmB,KAAH,EAASjB,CAAT,CAAxB;;AAAoC,SAAI,iBAAJ;AAAsB,WAAI,MAAME,CAAV,IAAeJ,CAAC,CAACwB,OAAjB,EAAyB,IAAGuD,CAAC,CAAC3E,CAAD,EAAGF,CAAH,CAAJ,EAAU,OAAM,CAAC,CAAP;;AAAS,aAAM,EAAE,aAAWF,CAAC,CAACsB,MAAb,IAAqB,CAACyD,CAAC,CAAC/E,CAAC,CAACuB,OAAH,EAAWrB,CAAX,CAAzB,KAAyC,EAAE,SAAOF,CAAC,CAAC0B,IAAT,IAAe,CAACqD,CAAC,CAAC/E,CAAC,CAAC0B,IAAH,EAAQxB,CAAR,CAAnB,CAA/C;;AAA8E,SAAI,OAAJ;AAAY,SAAI,MAAJ;AAAW,SAAI,MAAJ;AAAW,SAAI,MAAJ;AAAW,SAAI,WAAJ;AAAgB,SAAI,QAAJ;AAAa,SAAI,QAAJ;AAAa,aAAM,CAAC,CAAP;;AAAS,SAAI,WAAJ;AAAgB,WAAI,MAAME,CAAV,IAAeJ,CAAC,CAACmB,KAAjB,EAAuB,IAAG4D,CAAC,CAAC3E,CAAD,EAAGF,CAAH,CAAJ,EAAU,OAAM,CAAC,CAAP;;AAAS,aAAM,CAAC,CAAP;;AAAS,SAAI,YAAJ;AAAiB,aAAO6E,CAAC,CAAC/E,CAAC,CAACkC,IAAH,EAAQhC,CAAR,CAAR;;AAAmB,SAAI,aAAJ;AAAkB,aAAO6E,CAAC,CAAC/E,CAAC,CAACoC,IAAH,EAAQlC,CAAR,CAAD,IAAa6E,CAAC,CAAC/E,CAAC,CAACqC,KAAH,EAASnC,CAAT,CAArB;;AAAiC,SAAI,YAAJ;AAAiB,aAAOA,CAAC,CAACyB,WAAF,OAAkB3B,CAAC,CAAC2C,MAAF,CAAShB,WAAT,EAAzB;;AAAgD,SAAI,UAAJ;AAAe,aAAOoD,CAAC,CAAC/E,CAAC,CAAC4C,IAAH,EAAQ1C,CAAR,CAAR;AAA/hB;;AAAkjB,SAAM,CAAC,CAAP;AAAS;;AAAA,SAAS+E,CAAT,CAAWjF,CAAX,EAAa;AAAC,MAAIE,CAAC,GAAC,EAAN;AAAS,SAAOA,CAAC,IAAEF,CAAC,CAACkF,MAAF,CAASC,WAAT,EAAH,EAA0BjF,CAAjC;AAAmC;;AAAA,SAASgB,CAAT,CAAWlB,CAAX,EAAaE,CAAb,EAAeE,CAAf,EAAiB;AAAC,MAAIC,CAAC,GAAC,EAAN;AAAS,SAAOA,CAAC,GAAC,sBAAoBH,CAAC,CAACe,IAAtB,GAA2BgE,CAAC,CAAC/E,CAAD,CAA5B,GAAgC+E,CAAC,CAAC/E,CAAC,CAACkF,KAAH,CAAD,GAAW,MAAX,GAAkBH,CAAC,CAAC/E,CAAC,CAACmF,GAAH,CAArD,EAA6D,cAAYjF,CAAZ,GAAc,GAAd,GAAkBJ,CAAlB,GAAoB,GAApB,GAAwBK,CAA5F;AAA8F;;AAAA,SAAOQ,CAAC,IAAIyE,OAAZ,EAAoBpE,CAAC,IAAIqE,oBAAzB,EAA8CP,CAAC,IAAIQ,aAAnD,EAAiEzD,CAAC,IAAI0D,cAAtE,EAAqFhD,CAAC,IAAIiD,SAA1F,EAAoG3E,CAAC,IAAI4E,WAAzG,EAAqHjF,CAAC,IAAIkF,uBAA1H,EAAkJd,CAAC,IAAIe,YAAvJ,EAAoKxF,CAAC,IAAIyF,aAAzK,EAAuLrF,CAAC,IAAIsF,qBAA5L,EAAkNlD,CAAC,IAAImD,mCAAvN","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{FeatureServiceDatabaseType as e}from\"./shared.js\";import{WhereClause as r}from\"../../../core/sql/WhereClause.js\";import{DateTime as t}from\"luxon\";function n(e,r){return c(e.parseTree,r,e.parameters)}function a(e,r,t){return c(e,r,t)}function s(t,n,a,s){return r.create(c(t.parseTree,e.Standardised,t.parameters,n,a),s)}function o(t,a,s=\"AND\"){return r.create(\"((\"+n(t,e.Standardised)+\")\"+s+\"(\"+n(a,e.Standardised)+\"))\",t.fieldsIndex)}function c(e,r,t,n=null,a=null){let s,o,f,d;switch(e.type){case\"interval\":return T(c(e.value,r,t,n,a),e.qualifier,e.op);case\"case_expression\":{let s=\" CASE \";\"simple\"===e.format&&(s+=c(e.operand,r,t,n,a));for(let o=0;o<e.clauses.length;o++)s+=\" WHEN \"+c(e.clauses[o].operand,r,t,n,a)+\" THEN \"+c(e.clauses[o].value,r,t,n,a);return null!==e.else&&(s+=\" ELSE \"+c(e.else,r,t,n,a)),s+=\" END \",s}case\"param\":{const n=t[e.value.toLowerCase()];if(\"string\"==typeof n){return\"'\"+t[e.value.toLowerCase()].toString().replace(/'/g,\"''\")+\"'\"}if(n instanceof Date)return u(n,r);if(n instanceof Array){const e=[];for(let t=0;t<n.length;t++)\"string\"==typeof n[t]?e.push(\"'\"+n[t].toString().replace(/'/g,\"''\")+\"'\"):n[t]instanceof Date?e.push(u(n[t],r)):e.push(n[t].toString());return e}return n.toString()}case\"expr_list\":o=[];for(const s of e.value)o.push(c(s,r,t,n,a));return o;case\"unary_expr\":return\" ( NOT \"+c(e.expr,r,t,n,a)+\" ) \";case\"binary_expr\":switch(e.operator){case\"AND\":return\" (\"+c(e.left,r,t,n,a)+\" AND \"+c(e.right,r,t,n,a)+\") \";case\"OR\":return\" (\"+c(e.left,r,t,n,a)+\" OR \"+c(e.right,r,t,n,a)+\") \";case\"IS\":if(\"null\"!==e.right.type)throw new Error(\"Unsupported RHS for IS\");return\" (\"+c(e.left,r,t,n,a)+\" IS NULL )\";case\"ISNOT\":if(\"null\"!==e.right.type)throw new Error(\"Unsupported RHS for IS\");return\" (\"+c(e.left,r,t,n,a)+\" IS NOT NULL )\";case\"IN\":return s=[],\"expr_list\"===e.right.type?(s=c(e.right,r,t,n,a),\" (\"+c(e.left,r,t,n,a)+\" IN (\"+s.join(\",\")+\")) \"):(d=c(e.right,r,t,n,a),d instanceof Array?\" (\"+c(e.left,r,t,n,a)+\" IN (\"+d.join(\",\")+\")) \":\" (\"+c(e.left,r,t,n,a)+\" IN (\"+d+\")) \");case\"NOT IN\":return s=[],\"expr_list\"===e.right.type?(s=c(e.right,r,t,n,a),\" (\"+c(e.left,r,t,n,a)+\" NOT IN (\"+s.join(\",\")+\")) \"):(d=c(e.right,r,t,n,a),d instanceof Array?\" (\"+c(e.left,r,t,n,a)+\" NOT IN (\"+d.join(\",\")+\")) \":\" (\"+c(e.left,r,t,n,a)+\" NOT IN (\"+d+\")) \");case\"BETWEEN\":return f=c(e.right,r,t,n,a),\" (\"+c(e.left,r,t,n,a)+\" BETWEEN \"+f[0]+\" AND \"+f[1]+\" ) \";case\"NOTBETWEEN\":return f=c(e.right,r,t,n,a),\" (\"+c(e.left,r,t,n,a)+\" NOT BETWEEN \"+f[0]+\" AND \"+f[1]+\" ) \";case\"LIKE\":return\"\"!==e.escape?\" (\"+c(e.left,r,t,n,a)+\" LIKE \"+c(e.right,r,t,n,a)+\" ESCAPE '\"+e.escape+\"') \":\" (\"+c(e.left,r,t,n,a)+\" LIKE \"+c(e.right,r,t,n,a)+\") \";case\"NOT LIKE\":return\"\"!==e.escape?\" (\"+c(e.left,r,t,n,a)+\" NOT LIKE \"+c(e.right,r,t,n,a)+\" ESCAPE '\"+e.escape+\"') \":\" (\"+c(e.left,r,t,n,a)+\" NOT LIKE \"+c(e.right,r,t,n,a)+\") \";case\"<>\":case\"<\":case\">\":case\">=\":case\"<=\":case\"=\":case\"*\":case\"-\":case\"+\":case\"/\":return\" (\"+c(e.left,r,t,n,a)+\" \"+e.operator+\" \"+c(e.right,r,t,n,a)+\") \"}throw new Error(\"Not Supported Operator \"+e.operator);case\"null\":return\"null\";case\"bool\":return!0===e.value?\"1\":\"0\";case\"string\":return\"'\"+e.value.toString().replace(/'/g,\"''\")+\"'\";case\"timestamp\":case\"date\":return u(e.value,r);case\"number\":return e.value.toString();case\"current_time\":return i(\"date\"===e.mode,r);case\"column_ref\":return n&&n.toLowerCase()===e.column.toLowerCase()?\"(\"+a+\")\":e.column;case\"function\":{const s=c(e.args,r,t,n,a);return l(e.name,s,r)}}throw new Error(\"Unsupported sql syntax \"+e.type)}function l(r,t,n){switch(r.toLowerCase().trim()){case\"abs\":if(1!==t.length)throw new Error(\"Invalid Parameter for call to ABS\");return\"abs(\"+t[0]+\")\";case\"ceiling\":case\"ceil\":if(1!==t.length)throw new Error(\"Invalid Parameter for call to CEILING\");switch(n){case e.Standardised:case e.StandardisedNoInterval:}return\"CEILING(\"+t[0]+\")\";case\"floor\":if(1!==t.length)throw new Error(\"Invalid Parameter for call to Floor\");return\"FLOOR(\"+t[0]+\")\";case\"log\":if(1!==t.length)throw new Error(\"Invalid Parameter for call to LOG\");return\"LOG(\"+t[0]+\")\";case\"log10\":if(1!==t.length)throw new Error(\"Invalid Parameter for call to LOG10\");return\"LOG10(\"+t[0]+\")\";case\"power\":if(2!==t.length)throw new Error(\"Invalid Parameter for call to POWER\");return\"POWER(\"+t[0]+\",\"+t[1]+\")\";case\"round\":if(2===t.length)return\"ROUND(\"+t[0]+\",\"+t[1]+\")\";if(1===t.length)return\"ROUND(\"+t[0]+\")\";throw new Error(\"Invalid Parameter for call to ROUND\");case\"truncate\":if(t.length<1||t.length>2)throw new Error(\"Invalid Parameter for TRUNCATE function\");return n===e.SqlServer?\"ROUND(\"+t[0]+(1===t.length?\"0\":\",\"+t[1])+\",1)\":\"TRUNCATE(\"+t[0]+(1===t.length?\")\":\",\"+t[1]+\")\");case\"char_length\":case\"len\":if(1!==t.length)throw new Error(\"Invalid Parameter for CHAR_LENGTH function\");switch(n){case e.SqlServer:return\"LEN(\"+t[0]+\")\";case e.Oracle:return\"LENGTH(\"+t[0]+\")\";default:return\"CHAR_LENGTH(\"+t[0]+\")\"}case\"concat\":if(t.length<1)throw new Error(\"Invalid Parameter for CONCAT function\");{let e=\"CONCAT(\";for(let r=0;r<t.length;r++)0!==r&&(e+=\",\"),e+=t[r];return e+=\")\",e}case\"lower\":case\"lcase\":if(1!==t.length)throw new Error(\"Invalid Parameter for Lower function\");return\"LOWER(\"+t[0]+\")\";case\"upper\":case\"ucase\":if(1!==t.length)throw new Error(\"Invalid Parameter for Upper function\");return\"UPPER(\"+t[0]+\")\";case\"substring\":{let r=\"\";switch(n){case e.Oracle:return r=\"SUBSTR(\"+t[0]+\",\"+t[1],3===t.length&&(r+=\",\"+t[2]),r+=\")\",r;case e.SqlServer:return r=3===t.length?\"SUBSTRING(\"+t[0]+\",\"+t[1]+\",\"+t[2]+\")\":\"SUBSTRING(\"+t[0]+\",  \"+t[1]+\", LEN(\"+t[0]+\") - \"+t[1]+\")\",r;default:return r=\"SUBSTRING(\"+t[0]+\" FROM \"+t[1],3===t.length&&(r+=\" FOR \"+t[2]),r+=\")\",r}}case\"extract\":return\"EXTRACT(\"+t[0].replace(/\\'/g,\"\")+\" FROM \"+t[1]+\")\"}throw new Error(\"Function Not Recognised\")}function u(r,n){const a=t.fromJSDate(r),s=0===a.hour&&0===a.minute&&0===a.second&&0===a.millisecond;switch(n){case e.FILEGDB:case e.Standardised:case e.StandardisedNoInterval:return s?`date '${a.toFormat(\"yyyy-LL-dd\")}'`:`date '${a.toFormat(\"yyyy-LL-dd HH:mm:ss\")}'`;case e.Oracle:return s?`TO_DATE('${a.toFormat(\"yyyy-LL-dd\")}','YYYY-MM-DD')`:`TO_DATE('${a.toFormat(\"yyyy-LL-dd HH:mm:ss\")}','YYYY-MM-DD HH24:MI:SS')`;case e.SqlServer:return`'${a.toFormat(s?\"yyyy-LL-dd\":\"yyyy-LL-dd HH:mm:ss\")}'`;case e.PGDB:return`#${a.toFormat(s?\"LL-dd-yyyy\":\"LL-dd-yyyy HH:mm:ss\")}#`;case e.Postgres:return`TIMESTAMP '${a.toFormat(s?\"yyyy-LL-dd\":\"yyyy-LL-dd HH:mm:ss\")}'`;default:return`date '${a.toFormat(\"yyyy-LL-dd HH:mm:ss\")}'`}}function i(r,t){switch(t){case e.FILEGDB:case e.Standardised:case e.StandardisedNoInterval:case e.Oracle:return r?\"CURRENT_DATE\":\"CURRENT_TIMESTAMP\";case e.SqlServer:return r?\"CAST(GETDATE() AS DATE)\":\"GETDATE()\";case e.PGDB:case e.Postgres:default:return r?\"CURRENT_DATE\":\"CURRENT_TIMESTAMP\"}}function f(e,r,t={}){const n={},a={},s={esriFieldTypeSmallInteger:\"integer\",esriFieldTypeInteger:\"integer\",esriFieldTypeSingle:\"double\",esriFieldTypeDouble:\"double\",esriFieldTypeString:\"string\",esriFieldTypeDate:\"date\",esriFieldTypeOID:\"integer\",oid:\"integer\",long:\"integer\",\"small-integer\":\"integer\",integer:\"integer\",single:\"double\",double:\"double\",date:\"date\",string:\"string\"};for(const o of r){const e=s[o.type];n[o.name.toLowerCase()]=void 0===e?\"\":e}for(const o in t){const e=s[t[o]];a[o.toLowerCase()]=void 0===e?\"\":e}switch(d(n,e.parseTree,e.parameters,a)){case\"double\":return\"double\";case\"integer\":return\"integer\";case\"date\":return\"date\";case\"string\":return\"string\"}return\"\"}function d(e,r,t,n){let a;switch(r.type){case\"interval\":return\"integer\";case\"case_expression\":{const a=[];if(\"simple\"===r.format){for(let s=0;s<r.clauses.length;s++)a.push(d(e,r.clauses[s].value,t,n));null!==r.else&&a.push(d(e,r.else,t,n))}else{for(let s=0;s<r.clauses.length;s++)a.push(d(e,r.else,t,n));null!==r.else&&a.push(d(e,r.else,t,n))}return g(a)}case\"param\":{const e=n[r.value.toLowerCase()];if(void 0===e&&t){const e=t[r.value.toLowerCase()];if(void 0===e)return\"\";if(null===e)return\"\";if(\"string\"==typeof e||e instanceof String)return\"string\";if(\"boolean\"==typeof e)return\"boolean\";if(e instanceof Date)return\"date\";if(\"number\"==typeof e)return e%1==0?\"integer\":\"double\"}return void 0===e?\"\":e}case\"expr_list\":{const a=[];for(const s of r.value)a.push(d(e,s,t,n));return a}case\"unary_expr\":return\"boolean\";case\"binary_expr\":switch(r.operator){case\"AND\":case\"OR\":case\"IN\":case\"NOT IN\":case\"BETWEEN\":case\"NOTBETWEEN\":case\"LIKE\":case\"NOT LIKE\":case\"<>\":case\"<\":case\">\":case\">=\":case\"<=\":case\"=\":return\"boolean\";case\"IS\":case\"ISNOT\":if(\"null\"!==r.right.type)throw new Error(\"Unsupported RHS for IS\");return\"boolean\";case\"*\":case\"-\":case\"+\":case\"/\":return g([d(e,r.left,t,n),d(e,r.right,t,n)]);default:throw new Error(\"Not Supported Operator \"+r.operator)}case\"null\":return\"\";case\"bool\":return\"boolean\";case\"string\":return\"string\";case\"number\":return null===r.value?\"\":r.value%1==0?\"integer\":\"double\";case\"date\":case\"timestamp\":case\"current_time\":return\"date\";case\"column_ref\":{const t=e[r.column.toLowerCase()];return void 0===t?\"\":t}case\"function\":switch(r.name.toLowerCase()){case\"position\":case\"extract\":case\"char_length\":return\"integer\";case\"round\":return a=d(e,r.args,t,n),a instanceof Array?a.length>0?a[0]:\"\":a;case\"sign\":return a=d(e,r.args,t,n),a instanceof Array&&(a=g(a)),\"integer\"===a||\"double\"===a?a:\"double\";case\"ceiling\":case\"floor\":case\"abs\":{const a=d(e,r.args,t,n);return a instanceof Array?g(a):a}case\"area\":case\"length\":case\"log\":case\"log10\":case\"sin\":case\"cos\":case\"tan\":case\"asin\":case\"acos\":case\"atan\":case\"power\":case\"truncate\":return\"double\";case\"substring\":case\"trim\":case\"concat\":case\"lower\":case\"upper\":return\"string\"}return\"\"}throw new Error(\"Unsupported sql syntax \"+r.type)}const p={boolean:1,string:2,integer:3,double:4,date:5};function g(e){if(e){let r=\"\";for(const t of e)\"\"!==t&&(r=\"\"===r||p[r]<p[t]?t:r);return r}return\"\"}function h(e,r){return y(e.parseTree,r)}function E(e){return\"column_ref\"===e.parseTree.type}function y(e,r){if(null==e)return!1;switch(e.type){case\"when_clause\":return y(e.operand,r)||y(e.value,r);case\"case_expression\":for(const t of e.clauses)if(y(t,r))return!0;return!(\"simple\"!==e.format||!y(e.operand,r))||!(null===e.else||!y(e.else,r));case\"param\":case\"null\":case\"bool\":case\"date\":case\"timestamp\":case\"string\":case\"number\":return!1;case\"expr_list\":for(const t of e.value)if(y(t,r))return!0;return!1;case\"unary_expr\":return y(e.expr,r);case\"binary_expr\":return y(e.left,r)||y(e.right,r);case\"column_ref\":return r.toLowerCase()===e.column.toLowerCase();case\"function\":return y(e.args,r)}return!1}function m(e){let r=\"\";return r+=e.period.toUpperCase(),r}function T(e,r,t){let n=\"\";return n=\"interval-period\"===r.type?m(r):m(r.start)+\" TO \"+m(r.end),\"INTERVAL \"+t+\" \"+e+\" \"+n}export{o as combine,T as convertIntervalToSql,E as isSingleField,u as makeDateString,i as makeToday,f as predictType,s as reformulateWithoutField,h as scanForField,n as toWhereClause,a as toWhereClauseFromTree,l as translateFunctionToDatabaseSpecific};\n"]},"metadata":{},"sourceType":"module"}