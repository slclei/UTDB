{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../../../../../TimeExtent.js\";\nimport s from \"../../../../../core/Evented.js\";\nimport t from \"../../../../../core/has.js\";\nimport { isSome as r } from \"../../../../../core/maybe.js\";\nimport { createResolver as i, ignoreAbortErrors as o, eachAlwaysValues as n, eachAlways as u } from \"../../../../../core/promiseUtils.js\";\nimport { diff as c, hasDiff as a, hasDiffAny as h } from \"../../../../../core/accessorSupport/diffUtils.js\";\nimport d from \"../../../../../rest/support/Query.js\";\nimport { DataTileSubscription as l } from \"./DataTileSubscription.js\";\nimport { UpdateToken as p } from \"../support/UpdateToken.js\";\n\nfunction m(e, s) {\n  const t = new Set();\n  return e && e.forEach(e => t.add(e)), s && s.forEach(e => t.add(e)), t.has(\"*\") ? [\"*\"] : Array.from(t);\n}\n\nclass f {\n  constructor(e) {\n    this.events = new s(), this._resolver = i(), this._didEdit = !1, this._subscriptions = new Map(), this._outSR = e.outSR, this._serviceInfo = e.serviceInfo, this._onTileUpdateMessage = e.onMessage;\n  }\n\n  destroy() {}\n\n  async _onMessage(e) {\n    var s, t;\n\n    const r = this._subscriptions.get(e.id);\n\n    if (!r) return;\n    const i = { ...e,\n      remove: null != (s = e.remove) ? s : [],\n      status: null != (t = e.status) ? t : p.empty()\n    };\n    return o(this._onTileUpdateMessage(i, r.options));\n  }\n\n  update(s, r) {\n    var i;\n    const o = r.fields.length;\n    r.outFields = m(null == (i = this._schema) ? void 0 : i.outFields, r.outFields), r.outFields = r.outFields.length >= .75 * o ? [\"*\"] : r.outFields, r.outFields.sort();\n    const n = c(this._schema, r);\n    if (!n) return;\n    t(\"esri-2d-update-debug\") && console.debug(\"Applying Update - Source:\", n);\n    const u = \"orderByFields\" in this._serviceInfo && this._serviceInfo.orderByFields ? this._serviceInfo.orderByFields : this._serviceInfo.objectIdField + \" ASC\",\n          d = {\n      returnCentroid: t(\"esri-2d-query-centroid-enabled\") && \"esriGeometryPolygon\" === this._serviceInfo.geometryType,\n      returnGeometry: !0,\n      timeReferenceUnknownClient: \"stream\" !== this._serviceInfo.type && this._serviceInfo.timeReferenceUnknownClient,\n      outFields: r.outFields,\n      outSpatialReference: this._outSR,\n      orderByFields: [u],\n      where: r.definitionExpression || \"1=1\",\n      gdbVersion: r.gdbVersion,\n      historicMoment: r.historicMoment,\n      timeExtent: e.fromJSON(r.timeExtent)\n    },\n          l = this._schema && a(n, \"outFields\");\n    this._schema && h(n, [\"timeExtent\", \"definitionExpression\", \"gdbVersion\", \"historicMoment\", \"customParameters\"]) && (s.why.mesh.push(\"Layer filter and/or custom parameters changed\"), s.why.source.push(\"Layer filter and/or custom parameters changed\"), s.mesh = !0, s.source = !0, s.queryFilter = !0), l && (s.why.source.push(\"Layer required fields changed\"), s.source = !0), c(d, this._queryInfo) && (this._queryInfo = d), this._schema = r, this._resolver.resolve();\n  }\n\n  whenInitialized() {\n    return this._resolver.promise;\n  }\n\n  async applyUpdate(e) {\n    if (e.queryFilter || e.source && this._didEdit) return this.refresh(), void (this._didEdit = !1);\n    this._subscriptions.forEach(s => s.applyUpdate(e)), await this.resend();\n  }\n\n  refresh() {\n    for (const e of this._tiles()) this.unsubscribe(e), this.subscribe(e);\n  }\n\n  subscribe(e) {\n    const s = new l(e);\n\n    this._subscriptions.set(e.id, s);\n  }\n\n  unsubscribe(e) {\n    const s = this.get(e.id);\n    r(s) && s.abort(), this._subscriptions.delete(e.id);\n  }\n\n  createQuery() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const s = this._queryInfo.historicMoment ? new Date(this._queryInfo.historicMoment) : null;\n    return new d({ ...this._queryInfo,\n      historicMoment: s,\n      ...e\n    });\n  }\n\n  get(e) {\n    return this._subscriptions.has(e) ? this._subscriptions.get(e) : null;\n  }\n\n  async queryLastEditDate() {\n    throw new Error(\"Service does not support query type\");\n  }\n\n  async query(e) {\n    throw new Error(\"Service does not support query\");\n  }\n\n  *_tiles() {\n    const e = Array.from(this._subscriptions.values());\n\n    for (const s of e) yield s.tile;\n  }\n\n  async edit(e, s) {\n    const t = Array.from(this._subscriptions.values()),\n          r = t.map(_ref => {\n      let {\n        tile: e\n      } = _ref;\n      return e;\n    });\n\n    for (const i of t) i.removeIds(s);\n\n    if (e.length) {\n      const t = r.map(s => {\n        const t = this.createTileQuery(s);\n        return t.objectIds = e, {\n          tile: s,\n          query: t\n        };\n      }).map(async _ref2 => {\n        let {\n          tile: e,\n          query: s\n        } = _ref2;\n        return {\n          tile: e,\n          result: await this.query(s),\n          query: s\n        };\n      }),\n            i = (await n(t)).map(async _ref3 => {\n        let {\n          tile: t,\n          result: r\n        } = _ref3;\n        if (!r.hasFeatures && !s.length && !e.length) return;\n\n        const i = this._subscriptions.get(t.key.id);\n\n        i && i.edit(r, e);\n      });\n      await u(i);\n    }\n\n    this._didEdit = !0;\n  }\n\n}\n\nexport { f as DataTileSource };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/layers/features/sources/DataTileSource.js"],"names":["e","s","t","isSome","r","createResolver","i","ignoreAbortErrors","o","eachAlwaysValues","n","eachAlways","u","diff","c","hasDiff","a","hasDiffAny","h","d","DataTileSubscription","l","UpdateToken","p","m","Set","forEach","add","has","Array","from","f","constructor","events","_resolver","_didEdit","_subscriptions","Map","_outSR","outSR","_serviceInfo","serviceInfo","_onTileUpdateMessage","onMessage","destroy","_onMessage","get","id","remove","status","empty","options","update","fields","length","outFields","_schema","sort","console","debug","orderByFields","objectIdField","returnCentroid","geometryType","returnGeometry","timeReferenceUnknownClient","type","outSpatialReference","where","definitionExpression","gdbVersion","historicMoment","timeExtent","fromJSON","why","mesh","push","source","queryFilter","_queryInfo","resolve","whenInitialized","promise","applyUpdate","refresh","resend","_tiles","unsubscribe","subscribe","set","abort","delete","createQuery","Date","queryLastEditDate","Error","query","values","tile","edit","map","removeIds","createTileQuery","objectIds","result","hasFeatures","key","DataTileSource"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../TimeExtent.js\";import s from\"../../../../../core/Evented.js\";import t from\"../../../../../core/has.js\";import{isSome as r}from\"../../../../../core/maybe.js\";import{createResolver as i,ignoreAbortErrors as o,eachAlwaysValues as n,eachAlways as u}from\"../../../../../core/promiseUtils.js\";import{diff as c,hasDiff as a,hasDiffAny as h}from\"../../../../../core/accessorSupport/diffUtils.js\";import d from\"../../../../../rest/support/Query.js\";import{DataTileSubscription as l}from\"./DataTileSubscription.js\";import{UpdateToken as p}from\"../support/UpdateToken.js\";function m(e,s){const t=new Set;return e&&e.forEach((e=>t.add(e))),s&&s.forEach((e=>t.add(e))),t.has(\"*\")?[\"*\"]:Array.from(t)}class f{constructor(e){this.events=new s,this._resolver=i(),this._didEdit=!1,this._subscriptions=new Map,this._outSR=e.outSR,this._serviceInfo=e.serviceInfo,this._onTileUpdateMessage=e.onMessage}destroy(){}async _onMessage(e){var s,t;const r=this._subscriptions.get(e.id);if(!r)return;const i={...e,remove:null!=(s=e.remove)?s:[],status:null!=(t=e.status)?t:p.empty()};return o(this._onTileUpdateMessage(i,r.options))}update(s,r){var i;const o=r.fields.length;r.outFields=m(null==(i=this._schema)?void 0:i.outFields,r.outFields),r.outFields=r.outFields.length>=.75*o?[\"*\"]:r.outFields,r.outFields.sort();const n=c(this._schema,r);if(!n)return;t(\"esri-2d-update-debug\")&&console.debug(\"Applying Update - Source:\",n);const u=\"orderByFields\"in this._serviceInfo&&this._serviceInfo.orderByFields?this._serviceInfo.orderByFields:this._serviceInfo.objectIdField+\" ASC\",d={returnCentroid:t(\"esri-2d-query-centroid-enabled\")&&\"esriGeometryPolygon\"===this._serviceInfo.geometryType,returnGeometry:!0,timeReferenceUnknownClient:\"stream\"!==this._serviceInfo.type&&this._serviceInfo.timeReferenceUnknownClient,outFields:r.outFields,outSpatialReference:this._outSR,orderByFields:[u],where:r.definitionExpression||\"1=1\",gdbVersion:r.gdbVersion,historicMoment:r.historicMoment,timeExtent:e.fromJSON(r.timeExtent)},l=this._schema&&a(n,\"outFields\");this._schema&&h(n,[\"timeExtent\",\"definitionExpression\",\"gdbVersion\",\"historicMoment\",\"customParameters\"])&&(s.why.mesh.push(\"Layer filter and/or custom parameters changed\"),s.why.source.push(\"Layer filter and/or custom parameters changed\"),s.mesh=!0,s.source=!0,s.queryFilter=!0),l&&(s.why.source.push(\"Layer required fields changed\"),s.source=!0),c(d,this._queryInfo)&&(this._queryInfo=d),this._schema=r,this._resolver.resolve()}whenInitialized(){return this._resolver.promise}async applyUpdate(e){if(e.queryFilter||e.source&&this._didEdit)return this.refresh(),void(this._didEdit=!1);this._subscriptions.forEach((s=>s.applyUpdate(e))),await this.resend()}refresh(){for(const e of this._tiles())this.unsubscribe(e),this.subscribe(e)}subscribe(e){const s=new l(e);this._subscriptions.set(e.id,s)}unsubscribe(e){const s=this.get(e.id);r(s)&&s.abort(),this._subscriptions.delete(e.id)}createQuery(e={}){const s=this._queryInfo.historicMoment?new Date(this._queryInfo.historicMoment):null;return new d({...this._queryInfo,historicMoment:s,...e})}get(e){return this._subscriptions.has(e)?this._subscriptions.get(e):null}async queryLastEditDate(){throw new Error(\"Service does not support query type\")}async query(e){throw new Error(\"Service does not support query\")}*_tiles(){const e=Array.from(this._subscriptions.values());for(const s of e)yield s.tile}async edit(e,s){const t=Array.from(this._subscriptions.values()),r=t.map((({tile:e})=>e));for(const i of t)i.removeIds(s);if(e.length){const t=r.map((s=>{const t=this.createTileQuery(s);return t.objectIds=e,{tile:s,query:t}})).map((async({tile:e,query:s})=>({tile:e,result:await this.query(s),query:s}))),i=(await n(t)).map((async({tile:t,result:r})=>{if(!r.hasFeatures&&!s.length&&!e.length)return;const i=this._subscriptions.get(t.key.id);i&&i.edit(r,e)}));await u(i)}this._didEdit=!0}}export{f as DataTileSource};\n"]},"metadata":{},"sourceType":"module"}