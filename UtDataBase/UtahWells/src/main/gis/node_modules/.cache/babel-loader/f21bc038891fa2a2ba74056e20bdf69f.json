{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../core/Error.js\";\nimport { HandleOwnerMixin as r } from \"../../../core/HandleOwner.js\";\nimport o from \"../../../core/has.js\";\nimport s from \"../../../core/Loadable.js\";\nimport { isSome as a, unwrap as i } from \"../../../core/maybe.js\";\nimport { debounce as n, eachAlways as c } from \"../../../core/promiseUtils.js\";\nimport { open as p } from \"../../../core/workers/workers.js\";\nimport { property as l } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/arrayUtils.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport { subclass as u } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { featureGeometryTypeKebabDictionary as m } from \"../../../geometry/support/typeUtils.js\";\nimport { createCapabilities as y, createDrawingInfo as d } from \"./support/clientSideDefaults.js\";\nimport { getCapabilities as f, getWFSLayerInfo as h, prepareWFSLayerFields as w, findFeatureType as g } from \"../../ogc/wfsUtils.js\";\nimport S from \"../../../rest/support/FeatureSet.js\";\nimport F from \"../../../geometry/Extent.js\";\nlet j = class extends r(s) {\n  constructor() {\n    super(...arguments), this.capabilities = y(!1, !1), this.type = \"wfs\", this.refresh = n(async e => {\n      await this.load();\n      const {\n        extent: t\n      } = await this._connection.invoke(\"refresh\", e);\n      return this.sourceJSON.extent = t, {\n        dataChanged: !0,\n        updates: {\n          extent: this.sourceJSON.extent\n        }\n      };\n    });\n  }\n\n  load(e) {\n    var t;\n    const r = null != (t = a(e) && e.signal) ? t : null;\n    return this.addResolvingPromise(this._startWorker({\n      signal: r\n    })), Promise.resolve(this);\n  }\n\n  destroy() {\n    var e;\n    null == (e = this._connection) || e.close(), this._connection = null;\n  }\n\n  async openPorts() {\n    return await this.load(), this._connection.openPorts();\n  }\n\n  async queryFeatures(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    await this.load(t);\n    const r = await this._connection.invoke(\"queryFeatures\", e ? e.toJSON() : null, t);\n    return S.fromJSON(r);\n  }\n\n  async queryFeaturesJSON(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this.load(t), this._connection.invoke(\"queryFeatures\", e ? e.toJSON() : null, t);\n  }\n\n  async queryFeatureCount(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this.load(t), this._connection.invoke(\"queryFeatureCount\", e ? e.toJSON() : null, t);\n  }\n\n  async queryObjectIds(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this.load(t), this._connection.invoke(\"queryObjectIds\", e ? e.toJSON() : null, t);\n  }\n\n  async queryExtent(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    await this.load(t);\n    const r = await this._connection.invoke(\"queryExtent\", e ? e.toJSON() : null, t);\n    return {\n      count: r.count,\n      extent: F.fromJSON(r.extent)\n    };\n  }\n\n  async querySnapping(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this.load(t), this._connection.invoke(\"querySnapping\", e, t);\n  }\n\n  async _createLoadOptions(e) {\n    const {\n      url: r,\n      customParameters: o,\n      name: s,\n      namespaceUri: a,\n      spatialReference: n,\n      fields: c,\n      geometryType: p,\n      swapXY: l\n    } = this.layer;\n    if (!r) throw new t(\"wfs-layer:missing-url\", \"WFSLayer must be created with a url\");\n    this.wfsCapabilities || (this.wfsCapabilities = await f(r, {\n      customParameters: o,\n      ...e\n    }));\n    const u = [\"fields\", \"geometryType\", \"name\", \"namespaceUri\", \"spatialReference\", \"swapXY\"].some(e => null == this.layer[e]),\n          y = u ? await h(this.wfsCapabilities, s, a, {\n      spatialReference: n,\n      customParameters: o,\n      signal: null == e ? void 0 : e.signal\n    }) : { ...w(c),\n      geometryType: p,\n      name: s,\n      namespaceUri: a,\n      spatialReference: n,\n      swapXY: l\n    },\n          d = i(g(this.wfsCapabilities.readFeatureTypes(), y.name, y.namespaceUri)),\n          S = m.toJSON(y.geometryType);\n    return {\n      customParameters: o,\n      featureType: d,\n      fields: y.fields.map(e => e.toJSON()),\n      geometryField: y.geometryField,\n      geometryType: S,\n      getFeatureUrl: this.wfsCapabilities.operations.GetFeature.url,\n      getFeatureOutputFormat: this.wfsCapabilities.operations.GetFeature.outputFormat,\n      objectIdField: y.objectIdField,\n      spatialReference: y.spatialReference.toJSON(),\n      swapXY: y.swapXY\n    };\n  }\n\n  async _startWorker(e) {\n    const [t, r] = await c([this._createLoadOptions(e), p(\"WFSSourceWorker\", { ...e,\n      strategy: o(\"feature-layers-workers\") ? \"dedicated\" : \"local\"\n    })]),\n          s = t.error || r.error || null,\n          a = r.value || null;\n    if (s) throw a && a.close(), s;\n    const i = t.value;\n    this._connection = r.value;\n    const {\n      extent: n\n    } = await this._connection.invoke(\"load\", i, e);\n    this.sourceJSON = {\n      extent: n,\n      fields: i.fields,\n      geometryType: i.geometryType,\n      objectIdField: i.objectIdField,\n      geometryField: i.geometryField,\n      drawingInfo: d(i.geometryType),\n      name: i.featureType.title,\n      wfsInfo: {\n        name: i.featureType.name,\n        featureUrl: i.getFeatureUrl,\n        maxFeatures: 3e3,\n        swapXY: i.swapXY,\n        supportedSpatialReferences: i.featureType.supportedSpatialReferences,\n        version: \"2.0.0\",\n        wfsNamespace: i.featureType.namespaceUri\n      }\n    };\n  }\n\n};\ne([l()], j.prototype, \"capabilities\", void 0), e([l({\n  constructOnly: !0\n})], j.prototype, \"layer\", void 0), e([l()], j.prototype, \"sourceJSON\", void 0), e([l()], j.prototype, \"type\", void 0), e([l()], j.prototype, \"wfsCapabilities\", void 0), j = e([u(\"esri.layers.graphics.sources.WFSSource\")], j);\nconst v = j;\nexport { j as WFSSource, v as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/layers/graphics/sources/WFSSource.js"],"names":["_","e","t","HandleOwnerMixin","r","o","s","isSome","a","unwrap","i","debounce","n","eachAlways","c","open","p","property","l","subclass","u","featureGeometryTypeKebabDictionary","m","createCapabilities","y","createDrawingInfo","d","getCapabilities","f","getWFSLayerInfo","h","prepareWFSLayerFields","w","findFeatureType","g","S","F","j","constructor","arguments","capabilities","type","refresh","load","extent","_connection","invoke","sourceJSON","dataChanged","updates","signal","addResolvingPromise","_startWorker","Promise","resolve","destroy","close","openPorts","queryFeatures","toJSON","fromJSON","queryFeaturesJSON","queryFeatureCount","queryObjectIds","queryExtent","count","querySnapping","_createLoadOptions","url","customParameters","name","namespaceUri","spatialReference","fields","geometryType","swapXY","layer","wfsCapabilities","some","readFeatureTypes","featureType","map","geometryField","getFeatureUrl","operations","GetFeature","getFeatureOutputFormat","outputFormat","objectIdField","strategy","error","value","drawingInfo","title","wfsInfo","featureUrl","maxFeatures","supportedSpatialReferences","version","wfsNamespace","prototype","constructOnly","v","WFSSource","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../core/Error.js\";import{HandleOwnerMixin as r}from\"../../../core/HandleOwner.js\";import o from\"../../../core/has.js\";import s from\"../../../core/Loadable.js\";import{isSome as a,unwrap as i}from\"../../../core/maybe.js\";import{debounce as n,eachAlways as c}from\"../../../core/promiseUtils.js\";import{open as p}from\"../../../core/workers/workers.js\";import{property as l}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/arrayUtils.js\";import\"../../../core/accessorSupport/ensureType.js\";import{subclass as u}from\"../../../core/accessorSupport/decorators/subclass.js\";import{featureGeometryTypeKebabDictionary as m}from\"../../../geometry/support/typeUtils.js\";import{createCapabilities as y,createDrawingInfo as d}from\"./support/clientSideDefaults.js\";import{getCapabilities as f,getWFSLayerInfo as h,prepareWFSLayerFields as w,findFeatureType as g}from\"../../ogc/wfsUtils.js\";import S from\"../../../rest/support/FeatureSet.js\";import F from\"../../../geometry/Extent.js\";let j=class extends(r(s)){constructor(){super(...arguments),this.capabilities=y(!1,!1),this.type=\"wfs\",this.refresh=n((async e=>{await this.load();const{extent:t}=await this._connection.invoke(\"refresh\",e);return this.sourceJSON.extent=t,{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}}))}load(e){var t;const r=null!=(t=a(e)&&e.signal)?t:null;return this.addResolvingPromise(this._startWorker({signal:r})),Promise.resolve(this)}destroy(){var e;null==(e=this._connection)||e.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){await this.load(t);const r=await this._connection.invoke(\"queryFeatures\",e?e.toJSON():null,t);return S.fromJSON(r)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._connection.invoke(\"queryFeatures\",e?e.toJSON():null,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._connection.invoke(\"queryFeatureCount\",e?e.toJSON():null,t)}async queryObjectIds(e,t={}){return await this.load(t),this._connection.invoke(\"queryObjectIds\",e?e.toJSON():null,t)}async queryExtent(e,t={}){await this.load(t);const r=await this._connection.invoke(\"queryExtent\",e?e.toJSON():null,t);return{count:r.count,extent:F.fromJSON(r.extent)}}async querySnapping(e,t={}){return await this.load(t),this._connection.invoke(\"querySnapping\",e,t)}async _createLoadOptions(e){const{url:r,customParameters:o,name:s,namespaceUri:a,spatialReference:n,fields:c,geometryType:p,swapXY:l}=this.layer;if(!r)throw new t(\"wfs-layer:missing-url\",\"WFSLayer must be created with a url\");this.wfsCapabilities||(this.wfsCapabilities=await f(r,{customParameters:o,...e}));const u=[\"fields\",\"geometryType\",\"name\",\"namespaceUri\",\"spatialReference\",\"swapXY\"].some((e=>null==this.layer[e])),y=u?await h(this.wfsCapabilities,s,a,{spatialReference:n,customParameters:o,signal:null==e?void 0:e.signal}):{...w(c),geometryType:p,name:s,namespaceUri:a,spatialReference:n,swapXY:l},d=i(g(this.wfsCapabilities.readFeatureTypes(),y.name,y.namespaceUri)),S=m.toJSON(y.geometryType);return{customParameters:o,featureType:d,fields:y.fields.map((e=>e.toJSON())),geometryField:y.geometryField,geometryType:S,getFeatureUrl:this.wfsCapabilities.operations.GetFeature.url,getFeatureOutputFormat:this.wfsCapabilities.operations.GetFeature.outputFormat,objectIdField:y.objectIdField,spatialReference:y.spatialReference.toJSON(),swapXY:y.swapXY}}async _startWorker(e){const[t,r]=await c([this._createLoadOptions(e),p(\"WFSSourceWorker\",{...e,strategy:o(\"feature-layers-workers\")?\"dedicated\":\"local\"})]),s=t.error||r.error||null,a=r.value||null;if(s)throw a&&a.close(),s;const i=t.value;this._connection=r.value;const{extent:n}=await this._connection.invoke(\"load\",i,e);this.sourceJSON={extent:n,fields:i.fields,geometryType:i.geometryType,objectIdField:i.objectIdField,geometryField:i.geometryField,drawingInfo:d(i.geometryType),name:i.featureType.title,wfsInfo:{name:i.featureType.name,featureUrl:i.getFeatureUrl,maxFeatures:3e3,swapXY:i.swapXY,supportedSpatialReferences:i.featureType.supportedSpatialReferences,version:\"2.0.0\",wfsNamespace:i.featureType.namespaceUri}}}};e([l()],j.prototype,\"capabilities\",void 0),e([l({constructOnly:!0})],j.prototype,\"layer\",void 0),e([l()],j.prototype,\"sourceJSON\",void 0),e([l()],j.prototype,\"type\",void 0),e([l()],j.prototype,\"wfsCapabilities\",void 0),j=e([u(\"esri.layers.graphics.sources.WFSSource\")],j);const v=j;export{j as WFSSource,v as default};\n"]},"metadata":{},"sourceType":"module"}