{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../core/Error.js\";\nimport { unwrap as r, isSome as i } from \"../../../core/maybe.js\";\nimport { property as s } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/arrayUtils.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport { subclass as a } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport n from \"../RasterInfo.js\";\nimport o from \"../RasterStorageInfo.js\";\nimport l from \"./BaseRaster.js\";\nimport { parseSpatialReference as f, parsePAMInfo as u } from \"./pamParser.js\";\nimport { parseSignature as m, getImageInfo as p, parseIFD as c, parseFieldValues as h, isBSQConfig as d } from \"../rasterFormats/TiffDecoder.js\";\nimport y from \"../rasterFormats/TiffTags.js\";\nimport { estimateStatisticsFromHistograms as g } from \"../rasterFunctions/pixelUtils.js\";\nimport x from \"../rasterTransforms/PolynomialTransform.js\";\nimport T from \"../../../geometry/SpatialReference.js\";\nimport I from \"../../../geometry/Extent.js\";\nimport w from \"../../../geometry/Point.js\";\n\nconst _ = function (e, t) {\n  const r = e.get(t);\n  return r && r.values;\n},\n      b = function (e, t) {\n  const r = e.get(t);\n  return r && r.values[0];\n};\n\nlet E = class extends l {\n  constructor() {\n    super(...arguments), this._files = null, this._headerInfo = null, this._bufferSize = 1048576, this.datasetFormat = \"TIFF\";\n  }\n\n  async open(e) {\n    var s, a, l;\n    await this.init();\n    const u = e ? r(e.signal) : null,\n          {\n      data: c\n    } = await this.request(this.url, {\n      range: {\n        from: 0,\n        to: this._bufferSize\n      },\n      responseType: \"array-buffer\",\n      signal: u\n    });\n    if (!c) throw new t(\"tiffraster:open\", \"failed to open url \" + this.url);\n    this.datasetName = this.url.slice(this.url.lastIndexOf(\"/\") + 1);\n    const {\n      littleEndian: h,\n      firstIFD: d,\n      isBigTiff: y\n    } = m(c),\n          _ = [];\n    await this._readIFDs(_, c, h, d, 0, y ? 8 : 4, u);\n    const b = p(_),\n          {\n      width: E,\n      height: S,\n      tileWidth: F,\n      tileHeight: v,\n      planes: R,\n      pixelType: k,\n      compression: j,\n      firstPyramidLevel: B,\n      maximumPyramidLevel: D,\n      pyramidBlockWidth: L,\n      pyramidBlockHeight: z,\n      tileBoundary: O,\n      affine: P,\n      metadata: H\n    } = b,\n          A = (null == (s = b.extent.spatialReference) ? void 0 : s.wkt) || (null == (a = b.extent.spatialReference) ? void 0 : a.wkid);\n    let G = f(A),\n        q = !1;\n    null == G && (q = !0, G = new T({\n      wkid: 3857\n    }));\n    const C = new I({ ...b.extent,\n      spatialReference: G\n    }),\n          W = new w(C ? {\n      x: C.xmin,\n      y: C.ymax,\n      spatialReference: G\n    } : {\n      x: 0,\n      y: 0\n    }),\n          U = new o({\n      blockWidth: F,\n      blockHeight: v,\n      pyramidBlockWidth: L,\n      pyramidBlockHeight: z,\n      compression: j,\n      origin: W,\n      firstPyramidLevel: B,\n      maximumPyramidLevel: D,\n      blockBoundary: O\n    }),\n          Y = new w({\n      x: (C.xmax - C.xmin) / E,\n      y: (C.ymax - C.ymin) / S,\n      spatialReference: G\n    }),\n          M = H ? {\n      BandProperties: H.bandProperties,\n      DataType: H.dataType\n    } : {},\n          N = new n({\n      width: E,\n      height: S,\n      bandCount: R,\n      pixelType: k,\n      compression: j,\n      pixelSize: Y,\n      storageInfo: U,\n      spatialReference: G,\n      isPseudoSpatialReference: q,\n      keyProperties: M,\n      extent: C,\n      statistics: H ? H.statistics : null\n    });\n\n    if (null != P && P.length && (N.nativeExtent = new I({\n      xmin: -.5,\n      ymin: .5 - S,\n      xmax: E - .5,\n      ymax: .5,\n      spatialReference: G\n    }), N.transform = new x({\n      polynomialOrder: 1,\n      forwardCoefficients: [P[2] + P[0] / 2, P[5] - P[3] / 2, P[0], P[3], -P[1], -P[4]]\n    }), N.extent = N.transform.forwardTransform(N.nativeExtent), N.pixelSize = new w({\n      x: (C.xmax - C.xmin) / E,\n      y: (C.ymax - C.ymin) / S,\n      spatialReference: G\n    }), U.origin.x = -.5, U.origin.y = .5), null == (l = this.ioConfig.skipExtensions) || !l.includes(\"aux.xml\")) {\n      const t = await this._fetchAuxiliaryData(e);\n\n      if (null != t) {\n        var K;\n\n        if (N.statistics = null != (K = t.statistics) ? K : N.statistics, N.histograms = t.histograms, t.histograms && !i(N.statistics) && (N.statistics = g(t.histograms)), t.transform && !P) {\n          N.transform = t.transform, N.nativeExtent = N.extent;\n          const e = N.transform.forwardTransform(N.nativeExtent);\n          N.pixelSize = new w({\n            x: (e.xmax - e.xmin) / E,\n            y: (e.ymax - e.ymin) / S,\n            spatialReference: G\n          }), N.extent = e;\n        }\n\n        N.spatialReference || (N.spatialReference = t.spatialReference);\n      }\n    }\n\n    if (this._set(\"rasterInfo\", N), this._headerInfo = {\n      littleEndian: h,\n      isBigTiff: y,\n      ifds: _,\n      ...b\n    }, !this._headerInfo.isSupported) throw new t(\"tiffraster:open\", \"this tiff is not supported: \" + this._headerInfo.message);\n    this.updateTileInfo();\n  }\n\n  async fetchRawTile(e, t, r) {\n    let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var s;\n    if (null == (s = this._headerInfo) || !s.isSupported || this.isBlockOutside(e, t, r)) return null;\n\n    const a = this._getTileLocation(e, t, r);\n\n    if (!a) return null;\n    const {\n      ranges: n,\n      actualTileWidth: o,\n      actualTileHeight: l,\n      ifd: f\n    } = a,\n          u = n.map(e => this.request(this.url, {\n      range: e,\n      responseType: \"array-buffer\",\n      signal: i.signal\n    })),\n          m = await Promise.all(u),\n          p = m.map(e => e.data.byteLength).reduce((e, t) => e + t),\n          c = 1 === m.length ? m[0].data : new ArrayBuffer(p),\n          h = [0],\n          d = [0];\n\n    if (m.length > 1) {\n      const e = new Uint8Array(c);\n\n      for (let t = 0, r = 0; t < m.length; t++) {\n        const i = m[t].data;\n        e.set(new Uint8Array(i), r), h[t] = r, r += i.byteLength, d[t] = i.byteLength;\n      }\n    }\n\n    const {\n      blockWidth: y,\n      blockHeight: g\n    } = this.getBlockWidthHeight(e),\n          x = await this.decodePixelBlock(c, {\n      format: \"tiff\",\n      customOptions: {\n        headerInfo: this._headerInfo,\n        ifd: f,\n        offsets: h,\n        sizes: d\n      },\n      width: y,\n      height: g,\n      planes: null,\n      pixelType: null\n    });\n    let T, I, w;\n\n    if (o !== y || l !== g) {\n      let e = x.mask;\n      if (e) {\n        for (T = 0; T < g; T++) if (w = T * y, T < l) for (I = o; I < y; I++) e[w + I] = 0;else for (I = 0; I < y; I++) e[w + I] = 0;\n      } else for (e = new Uint8Array(y * g), x.mask = e, T = 0; T < l; T++) for (w = T * y, I = 0; I < o; I++) e[w + I] = 1;\n    }\n\n    return x;\n  }\n\n  async _readIFDs(e, t, r, i, s) {\n    let a = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 4;\n    let n = arguments.length > 6 ? arguments[6] : undefined;\n    if (!i) return null;\n\n    if (i >= t.byteLength || i < 0) {\n      t = (await this.request(this.url, {\n        range: {\n          from: i + s,\n          to: i + s + this._bufferSize\n        },\n        responseType: \"array-buffer\",\n        signal: n\n      })).data, s = i + s, i = 0;\n    }\n\n    const o = await this._readIFD(t, r, i, s, y.TIFF_TAGS, a, n);\n    if (e.push(o.ifd), !o.nextIFD) return null;\n    await this._readIFDs(e, t, r, o.nextIFD - s, s, a, n);\n  }\n\n  async _readIFD(e, t, r, i) {\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : y.TIFF_TAGS;\n    let a = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 4;\n    let n = arguments.length > 6 ? arguments[6] : undefined;\n    if (!e) return null;\n    const o = c(e, t, r, i, s, a);\n\n    if (o.success) {\n      const r = [];\n\n      if (o.ifd.forEach(e => {\n        e.values || r.push(e);\n      }), r.length > 0) {\n        const s = r.map(e => e.offlineOffsetSize),\n              a = Math.min.apply(null, s.map(e => e[0]));\n\n        if (Math.min.apply(null, s.map(e => e[0] + e[1])) - a <= this._bufferSize) {\n          const {\n            data: s\n          } = await this.request(this.url, {\n            range: {\n              from: a,\n              to: a + this._bufferSize\n            },\n            responseType: \"array-buffer\",\n            signal: n\n          });\n          e = s, i = a, r.forEach(r => h(e, t, r, i));\n        }\n      }\n\n      if (o.ifd.has(\"GEOKEYDIRECTORY\")) {\n        const r = o.ifd.get(\"GEOKEYDIRECTORY\"),\n              s = r.values;\n\n        if (s && s.length > 4) {\n          const a = s[0] + \".\" + s[1] + \".\" + s[2],\n                o = await this._readIFD(e, t, r.valueOffset + 6 - i, i, y.GEO_KEYS, 2, n);\n          r.data = o.ifd, r.data && r.data.set(\"GEOTIFFVersion\", {\n            id: 0,\n            type: 2,\n            valueCount: 1,\n            valueOffset: null,\n            values: [a]\n          });\n        }\n      }\n\n      return o;\n    }\n\n    if (o.requiredBufferSize && o.requiredBufferSize !== e.byteLength) {\n      const r = await this.request(this.url, {\n        range: {\n          from: i,\n          to: i + o.requiredBufferSize + 4\n        },\n        responseType: \"array-buffer\",\n        signal: n\n      });\n      return (e = r.data).byteLength < o.requiredBufferSize ? null : this._readIFD(e, t, 0, i, y.TIFF_TAGS, 4, n);\n    }\n  }\n\n  _getTileLocation(e, t, r) {\n    const {\n      firstPyramidLevel: i,\n      blockBoundary: s\n    } = this.rasterInfo.storageInfo,\n          a = 0 === e ? 0 : e - (i - 1),\n          n = this._headerInfo.ifds[a];\n    if (!n) return null;\n\n    const o = d(n, this._headerInfo),\n          l = _(n, \"TILEOFFSETS\");\n\n    if (void 0 === l) return null;\n\n    const f = _(n, \"TILEBYTECOUNTS\"),\n          {\n      minRow: u,\n      minCol: m,\n      maxRow: p,\n      maxCol: c\n    } = s[a];\n\n    if (t > p || r > c || t < u || r < m) return null;\n    const h = b(n, \"IMAGEWIDTH\"),\n          y = b(n, \"IMAGELENGTH\"),\n          g = b(n, \"TILEWIDTH\"),\n          x = b(n, \"TILELENGTH\"),\n          T = o ? this.rasterInfo.bandCount : 1,\n          I = T * t * (c + 1) + r,\n          w = [{\n      from: l[I],\n      to: l[I + T - 1] + f[I + T - 1] - 1\n    }];\n\n    if (o) {\n      let e = !0;\n\n      for (let t = 0; t < T; t++) if (l[I + t] + f[I + t] !== l[I + t + 1]) {\n        e = !1;\n        break;\n      }\n\n      if (!e) for (let t = 0; t < T; t++) w[t] = {\n        from: l[I + t],\n        to: l[I + t] + f[I + t] - 1\n      };\n    }\n\n    const E = l[I],\n          S = f[I];\n    if (null == E || null == S) return null;\n    return {\n      ranges: w,\n      ifd: n,\n      actualTileWidth: r === c ? h % g : g,\n      actualTileHeight: t === p ? y % x : x\n    };\n  }\n\n  async _fetchAuxiliaryData(e) {\n    try {\n      const {\n        data: t\n      } = await this.request(this.url + \".aux.xml\", {\n        responseType: \"xml\",\n        signal: null == e ? void 0 : e.signal\n      });\n      return u(t);\n    } catch {\n      return null;\n    }\n  }\n\n};\ne([s()], E.prototype, \"_files\", void 0), e([s()], E.prototype, \"_headerInfo\", void 0), e([s()], E.prototype, \"_bufferSize\", void 0), e([s({\n  type: String,\n  json: {\n    write: !0\n  }\n})], E.prototype, \"datasetFormat\", void 0), E = e([a(\"esri.layers.support.rasterDatasets.TIFFRaster\")], E);\nconst S = E;\nexport { S as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/layers/support/rasterDatasets/TIFFRaster.js"],"names":["_","e","t","unwrap","r","isSome","i","property","s","subclass","a","n","o","l","parseSpatialReference","f","parsePAMInfo","u","parseSignature","m","getImageInfo","p","parseIFD","c","parseFieldValues","h","isBSQConfig","d","y","estimateStatisticsFromHistograms","g","x","T","I","w","get","values","b","E","constructor","arguments","_files","_headerInfo","_bufferSize","datasetFormat","open","init","signal","data","request","url","range","from","to","responseType","datasetName","slice","lastIndexOf","littleEndian","firstIFD","isBigTiff","_readIFDs","width","height","S","tileWidth","F","tileHeight","v","planes","R","pixelType","k","compression","j","firstPyramidLevel","B","maximumPyramidLevel","D","pyramidBlockWidth","L","pyramidBlockHeight","z","tileBoundary","O","affine","P","metadata","H","A","extent","spatialReference","wkt","wkid","G","q","C","W","xmin","ymax","U","blockWidth","blockHeight","origin","blockBoundary","Y","xmax","ymin","M","BandProperties","bandProperties","DataType","dataType","N","bandCount","pixelSize","storageInfo","isPseudoSpatialReference","keyProperties","statistics","length","nativeExtent","transform","polynomialOrder","forwardCoefficients","forwardTransform","ioConfig","skipExtensions","includes","_fetchAuxiliaryData","K","histograms","_set","ifds","isSupported","message","updateTileInfo","fetchRawTile","isBlockOutside","_getTileLocation","ranges","actualTileWidth","actualTileHeight","ifd","map","Promise","all","byteLength","reduce","ArrayBuffer","Uint8Array","set","getBlockWidthHeight","decodePixelBlock","format","customOptions","headerInfo","offsets","sizes","mask","_readIFD","TIFF_TAGS","push","nextIFD","success","forEach","offlineOffsetSize","Math","min","apply","has","valueOffset","GEO_KEYS","id","type","valueCount","requiredBufferSize","rasterInfo","minRow","minCol","maxRow","maxCol","prototype","String","json","write","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../core/Error.js\";import{unwrap as r,isSome as i}from\"../../../core/maybe.js\";import{property as s}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/arrayUtils.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import{subclass as a}from\"../../../core/accessorSupport/decorators/subclass.js\";import n from\"../RasterInfo.js\";import o from\"../RasterStorageInfo.js\";import l from\"./BaseRaster.js\";import{parseSpatialReference as f,parsePAMInfo as u}from\"./pamParser.js\";import{parseSignature as m,getImageInfo as p,parseIFD as c,parseFieldValues as h,isBSQConfig as d}from\"../rasterFormats/TiffDecoder.js\";import y from\"../rasterFormats/TiffTags.js\";import{estimateStatisticsFromHistograms as g}from\"../rasterFunctions/pixelUtils.js\";import x from\"../rasterTransforms/PolynomialTransform.js\";import T from\"../../../geometry/SpatialReference.js\";import I from\"../../../geometry/Extent.js\";import w from\"../../../geometry/Point.js\";const _=function(e,t){const r=e.get(t);return r&&r.values},b=function(e,t){const r=e.get(t);return r&&r.values[0]};let E=class extends l{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat=\"TIFF\"}async open(e){var s,a,l;await this.init();const u=e?r(e.signal):null,{data:c}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:\"array-buffer\",signal:u});if(!c)throw new t(\"tiffraster:open\",\"failed to open url \"+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1);const{littleEndian:h,firstIFD:d,isBigTiff:y}=m(c),_=[];await this._readIFDs(_,c,h,d,0,y?8:4,u);const b=p(_),{width:E,height:S,tileWidth:F,tileHeight:v,planes:R,pixelType:k,compression:j,firstPyramidLevel:B,maximumPyramidLevel:D,pyramidBlockWidth:L,pyramidBlockHeight:z,tileBoundary:O,affine:P,metadata:H}=b,A=(null==(s=b.extent.spatialReference)?void 0:s.wkt)||(null==(a=b.extent.spatialReference)?void 0:a.wkid);let G=f(A),q=!1;null==G&&(q=!0,G=new T({wkid:3857}));const C=new I({...b.extent,spatialReference:G}),W=new w(C?{x:C.xmin,y:C.ymax,spatialReference:G}:{x:0,y:0}),U=new o({blockWidth:F,blockHeight:v,pyramidBlockWidth:L,pyramidBlockHeight:z,compression:j,origin:W,firstPyramidLevel:B,maximumPyramidLevel:D,blockBoundary:O}),Y=new w({x:(C.xmax-C.xmin)/E,y:(C.ymax-C.ymin)/S,spatialReference:G}),M=H?{BandProperties:H.bandProperties,DataType:H.dataType}:{},N=new n({width:E,height:S,bandCount:R,pixelType:k,compression:j,pixelSize:Y,storageInfo:U,spatialReference:G,isPseudoSpatialReference:q,keyProperties:M,extent:C,statistics:H?H.statistics:null});if(null!=P&&P.length&&(N.nativeExtent=new I({xmin:-.5,ymin:.5-S,xmax:E-.5,ymax:.5,spatialReference:G}),N.transform=new x({polynomialOrder:1,forwardCoefficients:[P[2]+P[0]/2,P[5]-P[3]/2,P[0],P[3],-P[1],-P[4]]}),N.extent=N.transform.forwardTransform(N.nativeExtent),N.pixelSize=new w({x:(C.xmax-C.xmin)/E,y:(C.ymax-C.ymin)/S,spatialReference:G}),U.origin.x=-.5,U.origin.y=.5),null==(l=this.ioConfig.skipExtensions)||!l.includes(\"aux.xml\")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var K;if(N.statistics=null!=(K=t.statistics)?K:N.statistics,N.histograms=t.histograms,t.histograms&&!i(N.statistics)&&(N.statistics=g(t.histograms)),t.transform&&!P){N.transform=t.transform,N.nativeExtent=N.extent;const e=N.transform.forwardTransform(N.nativeExtent);N.pixelSize=new w({x:(e.xmax-e.xmin)/E,y:(e.ymax-e.ymin)/S,spatialReference:G}),N.extent=e}N.spatialReference||(N.spatialReference=t.spatialReference)}}if(this._set(\"rasterInfo\",N),this._headerInfo={littleEndian:h,isBigTiff:y,ifds:_,...b},!this._headerInfo.isSupported)throw new t(\"tiffraster:open\",\"this tiff is not supported: \"+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,r,i={}){var s;if(null==(s=this._headerInfo)||!s.isSupported||this.isBlockOutside(e,t,r))return null;const a=this._getTileLocation(e,t,r);if(!a)return null;const{ranges:n,actualTileWidth:o,actualTileHeight:l,ifd:f}=a,u=n.map((e=>this.request(this.url,{range:e,responseType:\"array-buffer\",signal:i.signal}))),m=await Promise.all(u),p=m.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),c=1===m.length?m[0].data:new ArrayBuffer(p),h=[0],d=[0];if(m.length>1){const e=new Uint8Array(c);for(let t=0,r=0;t<m.length;t++){const i=m[t].data;e.set(new Uint8Array(i),r),h[t]=r,r+=i.byteLength,d[t]=i.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(c,{format:\"tiff\",customOptions:{headerInfo:this._headerInfo,ifd:f,offsets:h,sizes:d},width:y,height:g,planes:null,pixelType:null});let T,I,w;if(o!==y||l!==g){let e=x.mask;if(e)for(T=0;T<g;T++)if(w=T*y,T<l)for(I=o;I<y;I++)e[w+I]=0;else for(I=0;I<y;I++)e[w+I]=0;else for(e=new Uint8Array(y*g),x.mask=e,T=0;T<l;T++)for(w=T*y,I=0;I<o;I++)e[w+I]=1}return x}async _readIFDs(e,t,r,i,s,a=4,n){if(!i)return null;if(i>=t.byteLength||i<0){t=(await this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:\"array-buffer\",signal:n})).data,s=i+s,i=0}const o=await this._readIFD(t,r,i,s,y.TIFF_TAGS,a,n);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,r,o.nextIFD-s,s,a,n)}async _readIFD(e,t,r,i,s=y.TIFF_TAGS,a=4,n){if(!e)return null;const o=c(e,t,r,i,s,a);if(o.success){const r=[];if(o.ifd.forEach((e=>{e.values||r.push(e)})),r.length>0){const s=r.map((e=>e.offlineOffsetSize)),a=Math.min.apply(null,s.map((e=>e[0])));if(Math.min.apply(null,s.map((e=>e[0]+e[1])))-a<=this._bufferSize){const{data:s}=await this.request(this.url,{range:{from:a,to:a+this._bufferSize},responseType:\"array-buffer\",signal:n});e=s,i=a,r.forEach((r=>h(e,t,r,i)))}}if(o.ifd.has(\"GEOKEYDIRECTORY\")){const r=o.ifd.get(\"GEOKEYDIRECTORY\"),s=r.values;if(s&&s.length>4){const a=s[0]+\".\"+s[1]+\".\"+s[2],o=await this._readIFD(e,t,r.valueOffset+6-i,i,y.GEO_KEYS,2,n);r.data=o.ifd,r.data&&r.data.set(\"GEOTIFFVersion\",{id:0,type:2,valueCount:1,valueOffset:null,values:[a]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const r=await this.request(this.url,{range:{from:i,to:i+o.requiredBufferSize+4},responseType:\"array-buffer\",signal:n});return(e=r.data).byteLength<o.requiredBufferSize?null:this._readIFD(e,t,0,i,y.TIFF_TAGS,4,n)}}_getTileLocation(e,t,r){const{firstPyramidLevel:i,blockBoundary:s}=this.rasterInfo.storageInfo,a=0===e?0:e-(i-1),n=this._headerInfo.ifds[a];if(!n)return null;const o=d(n,this._headerInfo),l=_(n,\"TILEOFFSETS\");if(void 0===l)return null;const f=_(n,\"TILEBYTECOUNTS\"),{minRow:u,minCol:m,maxRow:p,maxCol:c}=s[a];if(t>p||r>c||t<u||r<m)return null;const h=b(n,\"IMAGEWIDTH\"),y=b(n,\"IMAGELENGTH\"),g=b(n,\"TILEWIDTH\"),x=b(n,\"TILELENGTH\"),T=o?this.rasterInfo.bandCount:1,I=T*t*(c+1)+r,w=[{from:l[I],to:l[I+T-1]+f[I+T-1]-1}];if(o){let e=!0;for(let t=0;t<T;t++)if(l[I+t]+f[I+t]!==l[I+t+1]){e=!1;break}if(!e)for(let t=0;t<T;t++)w[t]={from:l[I+t],to:l[I+t]+f[I+t]-1}}const E=l[I],S=f[I];if(null==E||null==S)return null;return{ranges:w,ifd:n,actualTileWidth:r===c?h%g:g,actualTileHeight:t===p?y%x:x}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+\".aux.xml\",{responseType:\"xml\",signal:null==e?void 0:e.signal});return u(t)}catch{return null}}};e([s()],E.prototype,\"_files\",void 0),e([s()],E.prototype,\"_headerInfo\",void 0),e([s()],E.prototype,\"_bufferSize\",void 0),e([s({type:String,json:{write:!0}})],E.prototype,\"datasetFormat\",void 0),E=e([a(\"esri.layers.support.rasterDatasets.TIFFRaster\")],E);const S=E;export{S as default};\n"]},"metadata":{},"sourceType":"module"}