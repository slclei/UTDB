{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../../../layers/support/TileInfo.js\";\nimport l from \"./TileInfoView.js\";\nimport s from \"./TileKey.js\";\n\nclass t extends l {\n  constructor() {\n    super(...arguments), this._fullCacheLodInfos = null, this._levelByScale = {};\n  }\n\n  getTileParentId(e) {\n    const l = s.pool.acquire(e),\n          t = 0 === l.level ? null : s.getId(l.level - 1, l.row >> 1, l.col >> 1, l.world);\n    return s.pool.release(l), t;\n  }\n\n  getTileCoverage(e, l, s) {\n    const t = super.getTileCoverage(e, l, s);\n    if (!t) return t;\n    const o = 1 << t.lodInfo.level;\n    return t.spans = t.spans.filter(e => e.row >= 0 && e.row < o), t;\n  }\n\n  scaleToLevel(e) {\n    if (this._fullCacheLodInfos || this._initializeFullCacheLODs(this._lodInfos), this._levelByScale[e]) return this._levelByScale[e];\n    {\n      const l = this._fullCacheLodInfos;\n      if (e > l[0].scale) return l[0].level;\n      let s, t;\n\n      for (let o = 0; o < l.length - 1; o++) if (t = l[o + 1], e > t.scale) return s = l[o], s.level + (s.scale - e) / (s.scale - t.scale);\n\n      return l[l.length - 1].level;\n    }\n  }\n\n  _initializeFullCacheLODs(l) {\n    let s;\n    if (0 === l[0].level) s = l.map(e => ({\n      level: e.level,\n      resolution: e.resolution,\n      scale: e.scale\n    }));else {\n      const l = this.tileInfo.size[0],\n            t = this.tileInfo.spatialReference;\n      s = e.create({\n        size: l,\n        spatialReference: t\n      }).lods.map(e => ({\n        level: e.level,\n        resolution: e.resolution,\n        scale: e.scale\n      }));\n    }\n\n    for (let e = 0; e < s.length; e++) this._levelByScale[s[e].scale] = s[e].level;\n\n    this._fullCacheLodInfos = s;\n  }\n\n}\n\nexport { t as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/tiling/TileInfoViewPOT.js"],"names":["e","l","s","t","constructor","arguments","_fullCacheLodInfos","_levelByScale","getTileParentId","pool","acquire","level","getId","row","col","world","release","getTileCoverage","o","lodInfo","spans","filter","scaleToLevel","_initializeFullCacheLODs","_lodInfos","scale","length","map","resolution","tileInfo","size","spatialReference","create","lods","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../../layers/support/TileInfo.js\";import l from\"./TileInfoView.js\";import s from\"./TileKey.js\";class t extends l{constructor(){super(...arguments),this._fullCacheLodInfos=null,this._levelByScale={}}getTileParentId(e){const l=s.pool.acquire(e),t=0===l.level?null:s.getId(l.level-1,l.row>>1,l.col>>1,l.world);return s.pool.release(l),t}getTileCoverage(e,l,s){const t=super.getTileCoverage(e,l,s);if(!t)return t;const o=1<<t.lodInfo.level;return t.spans=t.spans.filter((e=>e.row>=0&&e.row<o)),t}scaleToLevel(e){if(this._fullCacheLodInfos||this._initializeFullCacheLODs(this._lodInfos),this._levelByScale[e])return this._levelByScale[e];{const l=this._fullCacheLodInfos;if(e>l[0].scale)return l[0].level;let s,t;for(let o=0;o<l.length-1;o++)if(t=l[o+1],e>t.scale)return s=l[o],s.level+(s.scale-e)/(s.scale-t.scale);return l[l.length-1].level}}_initializeFullCacheLODs(l){let s;if(0===l[0].level)s=l.map((e=>({level:e.level,resolution:e.resolution,scale:e.scale})));else{const l=this.tileInfo.size[0],t=this.tileInfo.spatialReference;s=e.create({size:l,spatialReference:t}).lods.map((e=>({level:e.level,resolution:e.resolution,scale:e.scale})))}for(let e=0;e<s.length;e++)this._levelByScale[s[e].scale]=s[e].level;this._fullCacheLodInfos=s}}export{t as default};\n"]},"metadata":{},"sourceType":"module"}