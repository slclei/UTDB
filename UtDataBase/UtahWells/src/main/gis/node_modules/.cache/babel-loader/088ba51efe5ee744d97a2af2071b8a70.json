{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { getAssetUrl as e } from \"../../../assets.js\";\nconst t = [{\n  pixelType: \"S8\",\n  size: 1,\n  ctor: Int8Array,\n  range: [-128, 128]\n}, {\n  pixelType: \"U8\",\n  size: 1,\n  ctor: Uint8Array,\n  range: [0, 255]\n}, {\n  pixelType: \"S16\",\n  size: 2,\n  ctor: Int16Array,\n  range: [-32768, 32767]\n}, {\n  pixelType: \"U16\",\n  size: 2,\n  ctor: Uint16Array,\n  range: [0, 65536]\n}, {\n  pixelType: \"S32\",\n  size: 4,\n  ctor: Int32Array,\n  range: [-2147483648, 2147483647]\n}, {\n  pixelType: \"U32\",\n  size: 4,\n  ctor: Uint32Array,\n  range: [0, 4294967296]\n}, {\n  pixelType: \"F32\",\n  size: 4,\n  ctor: Float32Array,\n  range: [-34027999387901484e22, 34027999387901484e22]\n}, {\n  pixelType: \"F64\",\n  size: 8,\n  ctor: Float64Array,\n  range: [-17976931348623157e292, 17976931348623157e292]\n}];\nlet n = null,\n    r = !1;\n\nfunction a() {\n  return n || (n = import(\"../../../chunks/lerc-wasm.js\").then(e => e.l).then(_ref => {\n    let {\n      default: t\n    } = _ref;\n    return t({\n      locateFile: t => e(`esri/layers/support/rasterFormats/${t}`)\n    });\n  }).then(e => {\n    o(e), r = !0;\n  }), n);\n}\n\nfunction l() {\n  return r;\n}\n\nconst s = {\n  getBlobInfo: null,\n  decode: null\n};\n\nfunction i(e) {\n  return 16 + (e >> 3 << 3);\n}\n\nfunction o(e) {\n  const {\n    _malloc: n,\n    _free: r,\n    _lerc_getBlobInfo: a,\n    _lerc_getDataRanges: l,\n    _lerc_decode_4D: o,\n    asm: u\n  } = e;\n  let c;\n\n  const f = Object.values(u).find(t => t && \"buffer\" in t && t.buffer === e.HEAPU8.buffer),\n        y = e => {\n    const t = e.map(e => i(e)),\n          r = t.reduce((e, t) => e + t),\n          a = n(r);\n    c = new Uint8Array(f.buffer);\n    let l = t[0];\n    t[0] = a;\n\n    for (let n = 1; n < t.length; n++) {\n      const e = t[n];\n      t[n] = t[n - 1] + l, l = e;\n    }\n\n    return t;\n  };\n\n  s.getBlobInfo = e => {\n    const t = 12,\n          n = 3,\n          s = new Uint8Array(4 * t),\n          i = new Uint8Array(8 * n),\n          [o, u, h] = y([e.length, s.length, i.length]);\n    c.set(e, o), c.set(s, u), c.set(i, h);\n    let p = a(o, e.length, u, h, t, n);\n    if (p) throw r(o), `lerc-getBlobInfo: error code is ${p}`;\n    c = new Uint8Array(f.buffer), s.set(c.slice(u, u + s.length)), i.set(c.slice(h, h + i.length));\n    const g = new Uint32Array(s.buffer),\n          d = new Float64Array(i.buffer),\n          [b, m, A, w, U, x, T, C, V,, D] = g,\n          z = {\n      version: b,\n      dimCount: A,\n      width: w,\n      height: U,\n      validPixelCount: T,\n      bandCount: x,\n      blobSize: C,\n      maskCount: V,\n      dataType: m,\n      minValue: d[0],\n      maxValue: d[1],\n      maxZerror: d[2],\n      statistics: [],\n      bandCountWithNoData: D\n    };\n    if (D) return z;\n    if (1 === A && 1 === x) return r(o), z.statistics.push({\n      minValue: d[0],\n      maxValue: d[1]\n    }), z;\n\n    const I = A * x * 8,\n          F = new Uint8Array(I),\n          _ = new Uint8Array(I);\n\n    let k,\n        v = o,\n        B = 0,\n        S = !1;\n    if (c.byteLength < o + 2 * I ? (r(o), S = !0, [v, B, k] = y([e.length, I, I]), c.set(e, v)) : [B, k] = y([I, I]), c.set(F, B), c.set(_, k), p = l(o, e.length, A, x, B, k), p) throw r(v), S || r(B), `lerc-getDataRanges: error code is ${p}`;\n    c = new Uint8Array(f.buffer), F.set(c.slice(B, B + I)), _.set(c.slice(k, k + I));\n    const O = new Float64Array(F.buffer),\n          $ = new Float64Array(_.buffer),\n          j = z.statistics;\n\n    for (let r = 0; r < x; r++) if (A > 1) {\n      const e = O.slice(r * A, (r + 1) * A),\n            t = $.slice(r * A, (r + 1) * A),\n            n = Math.min.apply(null, e),\n            a = Math.max.apply(null, t);\n      j.push({\n        minValue: n,\n        maxValue: a,\n        dimStats: {\n          minValues: e,\n          maxValues: t\n        }\n      });\n    } else j.push({\n      minValue: O[r],\n      maxValue: $[r]\n    });\n\n    return r(v), S || r(B), z;\n  }, s.decode = (e, n) => {\n    const {\n      maskCount: a,\n      dimCount: l,\n      bandCount: s,\n      width: i,\n      height: u,\n      dataType: h,\n      bandCountWithNoData: p\n    } = n,\n          g = t[h],\n          d = i * u,\n          b = new Uint8Array(d * s),\n          m = d * l * s * g.size,\n          A = new Uint8Array(m),\n          w = new Uint8Array(s),\n          U = 8 * s,\n          x = new Uint8Array(U),\n          [T, C, V, D, z] = y([e.length, b.length, A.length, w.length, x.length]);\n    c.set(e, T), c.set(b, C), c.set(A, V), c.set(w, D), c.set(x, z);\n    const I = o(T, e.length, a, C, l, i, u, s, h, V, D, z);\n    if (I) throw r(T), `lerc-decode: error code is ${I}`;\n    c = new Uint8Array(f.buffer), A.set(c.slice(V, V + m)), b.set(c.slice(C, C + d));\n    let F = null;\n\n    if (p) {\n      w.set(c.slice(D, D + s)), x.set(c.slice(z, z + U)), F = [];\n\n      for (let e = 0; e < w.length; e++) F.push(w[e] ? x[e] : null);\n    }\n\n    return r(T), {\n      data: A,\n      maskData: b,\n      noDataValues: F\n    };\n  };\n}\n\nfunction u(e, t, n, r, a) {\n  if (n < 2) return e;\n  const l = new r(t * n);\n  if (a) for (let s = 0, i = 0; s < t; s++) for (let r = 0, a = s; r < n; r++, a += t) l[a] = e[i++];else for (let s = 0, i = 0; s < t; s++) for (let r = 0, a = s; r < n; r++, a += t) l[i++] = e[a];\n  return l;\n}\n\nfunction c(e) {\n  let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var r;\n  const a = null != (r = n.inputOffset) ? r : 0,\n        l = e instanceof Uint8Array ? e.subarray(a) : new Uint8Array(e, a),\n        i = s.getBlobInfo(l),\n        {\n    data: o,\n    maskData: c\n  } = s.decode(l, i),\n        {\n    width: f,\n    height: y,\n    bandCount: h,\n    dimCount: p,\n    dataType: g,\n    maskCount: d,\n    statistics: b\n  } = i,\n        m = t[g],\n        A = new m.ctor(o.buffer),\n        w = [],\n        U = [],\n        x = f * y,\n        T = x * p;\n\n  for (let t = 0; t < h; t++) {\n    const e = A.subarray(t * T, (t + 1) * T);\n    if (n.returnPixelInterleavedDims) w.push(e);else {\n      const t = u(e, x, p, m.ctor, !0);\n      w.push(t);\n    }\n    U.push(c.subarray(t * T, (t + 1) * T));\n  }\n\n  const C = 0 === d ? null : 1 === d ? U[0] : new Uint8Array(x);\n\n  if (d > 1) {\n    C.set(U[0]);\n\n    for (let e = 1; e < U.length; e++) {\n      const t = U[e];\n\n      for (let e = 0; e < x; e++) C[e] = C[e] & t[e];\n    }\n  }\n\n  const {\n    noDataValue: V\n  } = n,\n        D = null != V && m.range[0] <= V && m.range[1] >= V;\n\n  if (d > 0 && D) {\n    const {\n      noDataValue: e\n    } = n;\n\n    for (let t = 0; t < h; t++) {\n      const n = w[t],\n            r = U[t] || C;\n\n      for (let t = 0; t < x; t++) 0 === r[t] && (n[t] = e);\n    }\n  }\n\n  const z = d === h && h > 1 ? U : null;\n  return {\n    width: f,\n    height: y,\n    bandCount: h,\n    pixelType: n.pixelType && 0 === i.version ? n.pixelType : m.pixelType,\n    dimCount: p,\n    statistics: b,\n    pixels: w,\n    mask: C,\n    bandMasks: z\n  };\n}\n\nfunction f(e) {\n  let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var n, r;\n  const a = e instanceof Uint8Array ? e.subarray(null != (n = t.inputOffset) ? n : 0) : new Uint8Array(e, null != (r = t.inputOffset) ? r : 0);\n  return s.getBlobInfo(a);\n}\n\nexport { c as decode, f as getBlobInfo, l as isLoaded, a as load };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/layers/support/rasterFormats/Lerc.js"],"names":["getAssetUrl","e","t","pixelType","size","ctor","Int8Array","range","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","n","r","a","then","l","default","locateFile","o","s","getBlobInfo","decode","i","_malloc","_free","_lerc_getBlobInfo","_lerc_getDataRanges","_lerc_decode_4D","asm","u","c","f","Object","values","find","buffer","HEAPU8","y","map","reduce","length","h","set","p","slice","g","d","b","m","A","w","U","x","T","C","V","D","z","version","dimCount","width","height","validPixelCount","bandCount","blobSize","maskCount","dataType","minValue","maxValue","maxZerror","statistics","bandCountWithNoData","push","I","F","_","k","v","B","S","byteLength","O","$","j","Math","min","apply","max","dimStats","minValues","maxValues","data","maskData","noDataValues","inputOffset","subarray","returnPixelInterleavedDims","noDataValue","pixels","mask","bandMasks","isLoaded","load"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{getAssetUrl as e}from\"../../../assets.js\";const t=[{pixelType:\"S8\",size:1,ctor:Int8Array,range:[-128,128]},{pixelType:\"U8\",size:1,ctor:Uint8Array,range:[0,255]},{pixelType:\"S16\",size:2,ctor:Int16Array,range:[-32768,32767]},{pixelType:\"U16\",size:2,ctor:Uint16Array,range:[0,65536]},{pixelType:\"S32\",size:4,ctor:Int32Array,range:[-2147483648,2147483647]},{pixelType:\"U32\",size:4,ctor:Uint32Array,range:[0,4294967296]},{pixelType:\"F32\",size:4,ctor:Float32Array,range:[-34027999387901484e22,34027999387901484e22]},{pixelType:\"F64\",size:8,ctor:Float64Array,range:[-17976931348623157e292,17976931348623157e292]}];let n=null,r=!1;function a(){return n||(n=import(\"../../../chunks/lerc-wasm.js\").then((e=>e.l)).then((({default:t})=>t({locateFile:t=>e(`esri/layers/support/rasterFormats/${t}`)}))).then((e=>{o(e),r=!0})),n)}function l(){return r}const s={getBlobInfo:null,decode:null};function i(e){return 16+(e>>3<<3)}function o(e){const{_malloc:n,_free:r,_lerc_getBlobInfo:a,_lerc_getDataRanges:l,_lerc_decode_4D:o,asm:u}=e;let c;const f=Object.values(u).find((t=>t&&\"buffer\"in t&&t.buffer===e.HEAPU8.buffer)),y=e=>{const t=e.map((e=>i(e))),r=t.reduce(((e,t)=>e+t)),a=n(r);c=new Uint8Array(f.buffer);let l=t[0];t[0]=a;for(let n=1;n<t.length;n++){const e=t[n];t[n]=t[n-1]+l,l=e}return t};s.getBlobInfo=e=>{const t=12,n=3,s=new Uint8Array(4*t),i=new Uint8Array(8*n),[o,u,h]=y([e.length,s.length,i.length]);c.set(e,o),c.set(s,u),c.set(i,h);let p=a(o,e.length,u,h,t,n);if(p)throw r(o),`lerc-getBlobInfo: error code is ${p}`;c=new Uint8Array(f.buffer),s.set(c.slice(u,u+s.length)),i.set(c.slice(h,h+i.length));const g=new Uint32Array(s.buffer),d=new Float64Array(i.buffer),[b,m,A,w,U,x,T,C,V,,D]=g,z={version:b,dimCount:A,width:w,height:U,validPixelCount:T,bandCount:x,blobSize:C,maskCount:V,dataType:m,minValue:d[0],maxValue:d[1],maxZerror:d[2],statistics:[],bandCountWithNoData:D};if(D)return z;if(1===A&&1===x)return r(o),z.statistics.push({minValue:d[0],maxValue:d[1]}),z;const I=A*x*8,F=new Uint8Array(I),_=new Uint8Array(I);let k,v=o,B=0,S=!1;if(c.byteLength<o+2*I?(r(o),S=!0,[v,B,k]=y([e.length,I,I]),c.set(e,v)):[B,k]=y([I,I]),c.set(F,B),c.set(_,k),p=l(o,e.length,A,x,B,k),p)throw r(v),S||r(B),`lerc-getDataRanges: error code is ${p}`;c=new Uint8Array(f.buffer),F.set(c.slice(B,B+I)),_.set(c.slice(k,k+I));const O=new Float64Array(F.buffer),$=new Float64Array(_.buffer),j=z.statistics;for(let r=0;r<x;r++)if(A>1){const e=O.slice(r*A,(r+1)*A),t=$.slice(r*A,(r+1)*A),n=Math.min.apply(null,e),a=Math.max.apply(null,t);j.push({minValue:n,maxValue:a,dimStats:{minValues:e,maxValues:t}})}else j.push({minValue:O[r],maxValue:$[r]});return r(v),S||r(B),z},s.decode=(e,n)=>{const{maskCount:a,dimCount:l,bandCount:s,width:i,height:u,dataType:h,bandCountWithNoData:p}=n,g=t[h],d=i*u,b=new Uint8Array(d*s),m=d*l*s*g.size,A=new Uint8Array(m),w=new Uint8Array(s),U=8*s,x=new Uint8Array(U),[T,C,V,D,z]=y([e.length,b.length,A.length,w.length,x.length]);c.set(e,T),c.set(b,C),c.set(A,V),c.set(w,D),c.set(x,z);const I=o(T,e.length,a,C,l,i,u,s,h,V,D,z);if(I)throw r(T),`lerc-decode: error code is ${I}`;c=new Uint8Array(f.buffer),A.set(c.slice(V,V+m)),b.set(c.slice(C,C+d));let F=null;if(p){w.set(c.slice(D,D+s)),x.set(c.slice(z,z+U)),F=[];for(let e=0;e<w.length;e++)F.push(w[e]?x[e]:null)}return r(T),{data:A,maskData:b,noDataValues:F}}}function u(e,t,n,r,a){if(n<2)return e;const l=new r(t*n);if(a)for(let s=0,i=0;s<t;s++)for(let r=0,a=s;r<n;r++,a+=t)l[a]=e[i++];else for(let s=0,i=0;s<t;s++)for(let r=0,a=s;r<n;r++,a+=t)l[i++]=e[a];return l}function c(e,n={}){var r;const a=null!=(r=n.inputOffset)?r:0,l=e instanceof Uint8Array?e.subarray(a):new Uint8Array(e,a),i=s.getBlobInfo(l),{data:o,maskData:c}=s.decode(l,i),{width:f,height:y,bandCount:h,dimCount:p,dataType:g,maskCount:d,statistics:b}=i,m=t[g],A=new m.ctor(o.buffer),w=[],U=[],x=f*y,T=x*p;for(let t=0;t<h;t++){const e=A.subarray(t*T,(t+1)*T);if(n.returnPixelInterleavedDims)w.push(e);else{const t=u(e,x,p,m.ctor,!0);w.push(t)}U.push(c.subarray(t*T,(t+1)*T))}const C=0===d?null:1===d?U[0]:new Uint8Array(x);if(d>1){C.set(U[0]);for(let e=1;e<U.length;e++){const t=U[e];for(let e=0;e<x;e++)C[e]=C[e]&t[e]}}const{noDataValue:V}=n,D=null!=V&&m.range[0]<=V&&m.range[1]>=V;if(d>0&&D){const{noDataValue:e}=n;for(let t=0;t<h;t++){const n=w[t],r=U[t]||C;for(let t=0;t<x;t++)0===r[t]&&(n[t]=e)}}const z=d===h&&h>1?U:null;return{width:f,height:y,bandCount:h,pixelType:n.pixelType&&0===i.version?n.pixelType:m.pixelType,dimCount:p,statistics:b,pixels:w,mask:C,bandMasks:z}}function f(e,t={}){var n,r;const a=e instanceof Uint8Array?e.subarray(null!=(n=t.inputOffset)?n:0):new Uint8Array(e,null!=(r=t.inputOffset)?r:0);return s.getBlobInfo(a)}export{c as decode,f as getBlobInfo,l as isLoaded,a as load};\n"]},"metadata":{},"sourceType":"module"}