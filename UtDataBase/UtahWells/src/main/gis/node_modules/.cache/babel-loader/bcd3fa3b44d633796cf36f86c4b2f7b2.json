{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport \"../../../../geometry.js\";\nimport t from \"../../../../core/Logger.js\";\nimport { deg2rad as e } from \"../../../../core/mathUtils.js\";\nimport { isNone as n, isSome as r } from \"../../../../core/maybe.js\";\nimport { throwIfAborted as o } from \"../../../../core/promiseUtils.js\";\nimport i from \"../../../../core/RandomLCG.js\";\nimport { getInfo as a } from \"../../../../geometry/support/spatialReferenceUtils.js\";\nimport l from \"../../../../geometry/Extent.js\";\nconst s = t.getLogger(\"esri.views.2d.engine.flow.dataUtils\"),\n      c = 9;\n\nasync function h(t, e, n) {\n  const r = performance.now(),\n        i = f(t, e),\n        a = performance.now(),\n        l = d(t, i, e.width, e.height),\n        c = performance.now(),\n        h = w(l, !0),\n        u = performance.now(),\n        m = g(h),\n        p = performance.now();\n\n  if (t.profile) {\n    const t = {\n      \"_createFlowFieldFromData()\": Math.round(a - r),\n      \"_getStreamlines()\": Math.round(c - a),\n      \"createAnimatedLinesData()\": Math.round(u - c),\n      \"createLinesMesh()\": Math.round(p - u),\n      \"Total elapsed time\": Math.round(p - r)\n    };\n    s.info(\"createStreamlinesMesh profile\", t);\n  }\n\n  return await Promise.resolve(), o(n), m;\n}\n\nfunction f(t, e) {\n  const n = m(e.data, e.width, e.height, t.smoothing);\n\n  if (t.interpolate) {\n    return (t, r) => {\n      const o = Math.floor(t),\n            i = Math.floor(r);\n      if (o < 0 || o >= e.width) return [0, 0];\n      if (i < 0 || i >= e.height) return [0, 0];\n      const a = t - o,\n            l = r - i,\n            s = o,\n            c = i,\n            h = o < e.width - 1 ? o + 1 : o,\n            f = i < e.height - 1 ? i + 1 : i,\n            u = n[2 * (c * e.width + s)],\n            d = n[2 * (c * e.width + h)],\n            m = n[2 * (f * e.width + s)],\n            w = n[2 * (f * e.width + h)],\n            g = n[2 * (c * e.width + s) + 1],\n            p = n[2 * (c * e.width + h) + 1];\n      return [(u * (1 - l) + m * l) * (1 - a) + (d * (1 - l) + w * l) * a, (g * (1 - l) + n[2 * (f * e.width + s) + 1] * l) * (1 - a) + (p * (1 - l) + n[2 * (f * e.width + h) + 1] * l) * a];\n    };\n  }\n\n  return (t, r) => {\n    const o = Math.round(t),\n          i = Math.round(r);\n    return o < 0 || o >= e.width || i < 0 || i >= e.height ? [0, 0] : [n[2 * (i * e.width + o) + 0], n[2 * (i * e.width + o) + 1]];\n  };\n}\n\nfunction u(t, e, n, r, o, i, a, l, s) {\n  const c = [];\n  let h = n,\n      f = r,\n      u = 0,\n      [d, m] = e(h, f);\n  d *= t.velocityScale, m *= t.velocityScale;\n  const w = Math.sqrt(d * d + m * m);\n  let g, p;\n  c.push({\n    x: h,\n    y: f,\n    t: u,\n    speed: w\n  });\n\n  for (let y = 0; y < t.verticesPerLine; y++) {\n    let [n, r] = e(h, f);\n    n *= t.velocityScale, r *= t.velocityScale;\n    const d = Math.sqrt(n * n + r * r);\n    if (d < t.minSpeedThreshold) return c;\n    const m = n / d,\n          w = r / d;\n    h += m * t.segmentLength, f += w * t.segmentLength;\n    if (u += t.segmentLength / d, Math.acos(m * g + w * p) > t.maxTurnAngle) return c;\n\n    if (t.mergeLines) {\n      const t = Math.round(h * s),\n            e = Math.round(f * s);\n      if (t < 0 || t > a - 1 || e < 0 || e > l - 1) return c;\n      const n = i[e * a + t];\n      if (-1 !== n && n !== o) return c;\n      i[e * a + t] = o;\n    }\n\n    c.push({\n      x: h,\n      y: f,\n      t: u,\n      speed: d\n    }), g = m, p = w;\n  }\n\n  return c;\n}\n\nfunction d(t, e, n, r) {\n  const o = [],\n        a = new i(),\n        l = 1 / Math.max(t.lineCollisionWidth, 1),\n        s = Math.round(n * l),\n        c = Math.round(r * l),\n        h = new Int32Array(s * c);\n\n  for (let i = 0; i < h.length; i++) h[i] = -1;\n\n  const f = [];\n\n  for (let i = 0; i < r; i += t.lineSpacing) for (let e = 0; e < n; e += t.lineSpacing) f.push({\n    x: e,\n    y: i,\n    sort: a.getFloat()\n  });\n\n  f.sort((t, e) => t.sort - e.sort);\n\n  for (const {\n    x: i,\n    y: d\n  } of f) if (a.getFloat() < t.density) {\n    const n = u(t, e, i, d, o.length, h, s, c, l);\n    if (n.length < 2) continue;\n    o.push(n);\n  }\n\n  return o;\n}\n\nfunction m(t, e, n, r) {\n  if (0 === r) return t;\n  const o = Math.round(3 * r),\n        i = new Array(2 * o + 1);\n  let a = 0;\n\n  for (let c = -o; c <= o; c++) {\n    const t = Math.exp(-c * c / (r * r));\n    i[c + o] = t, a += t;\n  }\n\n  for (let c = -o; c <= o; c++) i[c + o] /= a;\n\n  const l = new Float32Array(t.length);\n\n  for (let c = 0; c < n; c++) for (let n = 0; n < e; n++) {\n    let r = 0,\n        a = 0;\n\n    for (let l = -o; l <= o; l++) {\n      if (n + l < 0 || n + l >= e) continue;\n      const s = i[l + o];\n      r += s * t[2 * (c * e + (n + l)) + 0], a += s * t[2 * (c * e + (n + l)) + 1];\n    }\n\n    l[2 * (c * e + n) + 0] = r, l[2 * (c * e + n) + 1] = a;\n  }\n\n  const s = new Float32Array(t.length);\n\n  for (let c = 0; c < e; c++) for (let t = 0; t < n; t++) {\n    let r = 0,\n        a = 0;\n\n    for (let s = -o; s <= o; s++) {\n      if (t + s < 0 || t + s >= n) continue;\n      const h = i[s + o];\n      r += h * l[2 * ((t + s) * e + c) + 0], a += h * l[2 * ((t + s) * e + c) + 1];\n    }\n\n    s[2 * (t * e + c) + 0] = r, s[2 * (t * e + c) + 1] = a;\n  }\n\n  return s;\n}\n\nfunction w(t, e) {\n  const n = new i(),\n        r = t.reduce((t, e) => t + e.length, 0),\n        o = new Float32Array(4 * r),\n        a = new Array(t.length);\n  let l = 0,\n      s = 0;\n\n  for (const i of t) {\n    const t = l;\n\n    for (const e of i) o[4 * l + 0] = e.x, o[4 * l + 1] = e.y, o[4 * l + 2] = e.t, o[4 * l + 3] = e.speed, l++;\n\n    a[s++] = {\n      startVertex: t,\n      numberOfVertices: i.length,\n      totalTime: i[i.length - 1].t,\n      timeSeed: e ? n.getFloat() : 0\n    };\n  }\n\n  return {\n    lineVertices: o,\n    lineDescriptors: a\n  };\n}\n\nfunction g(t) {\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  const {\n    lineVertices: n,\n    lineDescriptors: r\n  } = t;\n  let o = 0,\n      i = 0;\n\n  for (const c of r) {\n    o += 2 * c.numberOfVertices;\n    i += 6 * (c.numberOfVertices - 1);\n  }\n\n  const a = new Float32Array(o * c),\n        l = new Uint32Array(i);\n  let s = 0,\n      h = 0;\n\n  function f() {\n    l[h++] = s - 2, l[h++] = s, l[h++] = s - 1, l[h++] = s, l[h++] = s + 1, l[h++] = s - 1;\n  }\n\n  function u(t, e, n, r, o, i, l, h) {\n    const f = s * c;\n    let u = 0;\n    a[f + u++] = t, a[f + u++] = e, a[f + u++] = 1, a[f + u++] = n, a[f + u++] = i, a[f + u++] = l, a[f + u++] = r / 2, a[f + u++] = o / 2, a[f + u++] = h, s++, a[f + u++] = t, a[f + u++] = e, a[f + u++] = -1, a[f + u++] = n, a[f + u++] = i, a[f + u++] = l, a[f + u++] = -r / 2, a[f + u++] = -o / 2, a[f + u++] = h, s++;\n  }\n\n  for (const c of r) {\n    const {\n      totalTime: t,\n      timeSeed: r\n    } = c;\n    let o = null,\n        i = null,\n        a = null,\n        l = null,\n        s = null,\n        h = null;\n\n    for (let d = 0; d < c.numberOfVertices; d++) {\n      const m = n[4 * (c.startVertex + d) + 0],\n            w = n[4 * (c.startVertex + d) + 1],\n            g = n[4 * (c.startVertex + d) + 2],\n            p = n[4 * (c.startVertex + d) + 3];\n      let y = null,\n          x = null,\n          M = null,\n          A = null;\n\n      if (d > 0) {\n        y = m - o, x = w - i;\n        const n = Math.sqrt(y * y + x * x);\n\n        if (y /= n, x /= n, d > 1) {\n          let t = y + s,\n              n = x + h;\n          const r = Math.sqrt(t * t + n * n);\n          t /= r, n /= r;\n          const o = Math.min(1 / (t * y + n * x), e);\n          t *= o, n *= o, M = -n, A = t;\n        } else M = -x, A = y;\n\n        null !== M && null !== A && (u(o, i, a, M, A, t, r, p), f());\n      }\n\n      o = m, i = w, a = g, s = y, h = x, l = p;\n    }\n\n    u(o, i, a, -h, s, t, r, l);\n  }\n\n  return {\n    vertexData: a,\n    indexData: l\n  };\n}\n\nfunction p(t, n) {\n  const r = n.pixels,\n        {\n    width: o,\n    height: i\n  } = n,\n        a = new Float32Array(o * i * 2);\n  if (\"vector-uv\" === t) for (let e = 0; e < o * i; e++) a[2 * e + 0] = r[0][e], a[2 * e + 1] = -r[1][e];else if (\"vector-magdir\" === t) for (let l = 0; l < o * i; l++) {\n    const t = r[0][l],\n          n = e(r[1][l]),\n          o = Math.cos(n - Math.PI / 2),\n          i = Math.sin(n - Math.PI / 2);\n    a[2 * l + 0] = o * t, a[2 * l + 1] = i * t;\n  }\n  return {\n    data: a,\n    width: o,\n    height: i\n  };\n}\n\nasync function y(t, e, n, r, o, i) {\n  const s = a(e.spatialReference);\n  if (!s) return x(t, e, n, r, o, i);\n  const [c, h] = s.valid,\n        f = h - c,\n        u = Math.ceil(e.width / f),\n        d = e.width / u,\n        m = Math.round(n / u);\n  let w = e.xmin;\n  const g = [];\n\n  for (let a = 0; a < u; a++) {\n    const n = new l({\n      xmin: w,\n      xmax: w + d,\n      ymin: e.ymin,\n      ymax: e.ymax,\n      spatialReference: e.spatialReference\n    });\n    g.push(x(t, n, m, r, o, i)), w += d;\n  }\n\n  const p = await Promise.all(g),\n        y = {\n    data: new Float32Array(n * r * 2),\n    width: n,\n    height: r\n  };\n  let M = 0;\n\n  for (const a of p) {\n    for (let t = 0; t < a.height; t++) for (let e = 0; e < a.width; e++) M + e >= n || (y.data[2 * (t * n + M + e) + 0] = a.data[2 * (t * a.width + e) + 0], y.data[2 * (t * n + M + e) + 1] = a.data[2 * (t * a.width + e) + 1]);\n\n    M += a.width;\n  }\n\n  return y;\n}\n\nasync function x(t, e, o, i, a, l) {\n  const s = {\n    requestProjectedLocalDirections: !0,\n    signal: l\n  };\n\n  if (r(a) && (s.timeExtent = a), \"imagery\" === t.type) {\n    await t.load({\n      signal: l\n    });\n    const r = t.rasterInfo.dataType,\n          a = await t.fetchImage(e, o, i, s);\n    return !a || n(a.pixelData) || n(a.pixelData.pixelBlock) ? {\n      data: new Float32Array(o * i * 2),\n      width: o,\n      height: i\n    } : p(r, a.pixelData.pixelBlock);\n  }\n\n  await t.load({\n    signal: l\n  });\n  const c = t.rasterInfo.dataType,\n        h = await t.fetchPixels(e, o, i, s);\n  return !h || n(h.pixelBlock) ? {\n    data: new Float32Array(o * i * 2),\n    width: o,\n    height: i\n  } : p(c, h.pixelBlock);\n}\n\nexport { w as createAnimatedLinesData, g as createLinesMesh, h as createStreamlinesMesh, x as fetchPart, y as loadImagery };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/flow/dataUtils.js"],"names":["t","deg2rad","e","isNone","n","isSome","r","throwIfAborted","o","i","getInfo","a","l","s","getLogger","c","h","performance","now","f","d","width","height","w","u","m","g","p","profile","Math","round","info","Promise","resolve","data","smoothing","interpolate","floor","velocityScale","sqrt","push","x","y","speed","verticesPerLine","minSpeedThreshold","segmentLength","acos","maxTurnAngle","mergeLines","max","lineCollisionWidth","Int32Array","length","lineSpacing","sort","getFloat","density","Array","exp","Float32Array","reduce","startVertex","numberOfVertices","totalTime","timeSeed","lineVertices","lineDescriptors","Uint32Array","M","A","min","vertexData","indexData","pixels","cos","PI","sin","spatialReference","valid","ceil","xmin","xmax","ymin","ymax","all","requestProjectedLocalDirections","signal","timeExtent","type","load","rasterInfo","dataType","fetchImage","pixelData","pixelBlock","fetchPixels","createAnimatedLinesData","createLinesMesh","createStreamlinesMesh","fetchPart","loadImagery"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport\"../../../../geometry.js\";import t from\"../../../../core/Logger.js\";import{deg2rad as e}from\"../../../../core/mathUtils.js\";import{isNone as n,isSome as r}from\"../../../../core/maybe.js\";import{throwIfAborted as o}from\"../../../../core/promiseUtils.js\";import i from\"../../../../core/RandomLCG.js\";import{getInfo as a}from\"../../../../geometry/support/spatialReferenceUtils.js\";import l from\"../../../../geometry/Extent.js\";const s=t.getLogger(\"esri.views.2d.engine.flow.dataUtils\"),c=9;async function h(t,e,n){const r=performance.now(),i=f(t,e),a=performance.now(),l=d(t,i,e.width,e.height),c=performance.now(),h=w(l,!0),u=performance.now(),m=g(h),p=performance.now();if(t.profile){const t={\"_createFlowFieldFromData()\":Math.round(a-r),\"_getStreamlines()\":Math.round(c-a),\"createAnimatedLinesData()\":Math.round(u-c),\"createLinesMesh()\":Math.round(p-u),\"Total elapsed time\":Math.round(p-r)};s.info(\"createStreamlinesMesh profile\",t)}return await Promise.resolve(),o(n),m}function f(t,e){const n=m(e.data,e.width,e.height,t.smoothing);if(t.interpolate){return(t,r)=>{const o=Math.floor(t),i=Math.floor(r);if(o<0||o>=e.width)return[0,0];if(i<0||i>=e.height)return[0,0];const a=t-o,l=r-i,s=o,c=i,h=o<e.width-1?o+1:o,f=i<e.height-1?i+1:i,u=n[2*(c*e.width+s)],d=n[2*(c*e.width+h)],m=n[2*(f*e.width+s)],w=n[2*(f*e.width+h)],g=n[2*(c*e.width+s)+1],p=n[2*(c*e.width+h)+1];return[(u*(1-l)+m*l)*(1-a)+(d*(1-l)+w*l)*a,(g*(1-l)+n[2*(f*e.width+s)+1]*l)*(1-a)+(p*(1-l)+n[2*(f*e.width+h)+1]*l)*a]}}return(t,r)=>{const o=Math.round(t),i=Math.round(r);return o<0||o>=e.width||i<0||i>=e.height?[0,0]:[n[2*(i*e.width+o)+0],n[2*(i*e.width+o)+1]]}}function u(t,e,n,r,o,i,a,l,s){const c=[];let h=n,f=r,u=0,[d,m]=e(h,f);d*=t.velocityScale,m*=t.velocityScale;const w=Math.sqrt(d*d+m*m);let g,p;c.push({x:h,y:f,t:u,speed:w});for(let y=0;y<t.verticesPerLine;y++){let[n,r]=e(h,f);n*=t.velocityScale,r*=t.velocityScale;const d=Math.sqrt(n*n+r*r);if(d<t.minSpeedThreshold)return c;const m=n/d,w=r/d;h+=m*t.segmentLength,f+=w*t.segmentLength;if(u+=t.segmentLength/d,Math.acos(m*g+w*p)>t.maxTurnAngle)return c;if(t.mergeLines){const t=Math.round(h*s),e=Math.round(f*s);if(t<0||t>a-1||e<0||e>l-1)return c;const n=i[e*a+t];if(-1!==n&&n!==o)return c;i[e*a+t]=o}c.push({x:h,y:f,t:u,speed:d}),g=m,p=w}return c}function d(t,e,n,r){const o=[],a=new i,l=1/Math.max(t.lineCollisionWidth,1),s=Math.round(n*l),c=Math.round(r*l),h=new Int32Array(s*c);for(let i=0;i<h.length;i++)h[i]=-1;const f=[];for(let i=0;i<r;i+=t.lineSpacing)for(let e=0;e<n;e+=t.lineSpacing)f.push({x:e,y:i,sort:a.getFloat()});f.sort(((t,e)=>t.sort-e.sort));for(const{x:i,y:d}of f)if(a.getFloat()<t.density){const n=u(t,e,i,d,o.length,h,s,c,l);if(n.length<2)continue;o.push(n)}return o}function m(t,e,n,r){if(0===r)return t;const o=Math.round(3*r),i=new Array(2*o+1);let a=0;for(let c=-o;c<=o;c++){const t=Math.exp(-c*c/(r*r));i[c+o]=t,a+=t}for(let c=-o;c<=o;c++)i[c+o]/=a;const l=new Float32Array(t.length);for(let c=0;c<n;c++)for(let n=0;n<e;n++){let r=0,a=0;for(let l=-o;l<=o;l++){if(n+l<0||n+l>=e)continue;const s=i[l+o];r+=s*t[2*(c*e+(n+l))+0],a+=s*t[2*(c*e+(n+l))+1]}l[2*(c*e+n)+0]=r,l[2*(c*e+n)+1]=a}const s=new Float32Array(t.length);for(let c=0;c<e;c++)for(let t=0;t<n;t++){let r=0,a=0;for(let s=-o;s<=o;s++){if(t+s<0||t+s>=n)continue;const h=i[s+o];r+=h*l[2*((t+s)*e+c)+0],a+=h*l[2*((t+s)*e+c)+1]}s[2*(t*e+c)+0]=r,s[2*(t*e+c)+1]=a}return s}function w(t,e){const n=new i,r=t.reduce(((t,e)=>t+e.length),0),o=new Float32Array(4*r),a=new Array(t.length);let l=0,s=0;for(const i of t){const t=l;for(const e of i)o[4*l+0]=e.x,o[4*l+1]=e.y,o[4*l+2]=e.t,o[4*l+3]=e.speed,l++;a[s++]={startVertex:t,numberOfVertices:i.length,totalTime:i[i.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:o,lineDescriptors:a}}function g(t,e=10){const{lineVertices:n,lineDescriptors:r}=t;let o=0,i=0;for(const c of r){o+=2*c.numberOfVertices;i+=6*(c.numberOfVertices-1)}const a=new Float32Array(o*c),l=new Uint32Array(i);let s=0,h=0;function f(){l[h++]=s-2,l[h++]=s,l[h++]=s-1,l[h++]=s,l[h++]=s+1,l[h++]=s-1}function u(t,e,n,r,o,i,l,h){const f=s*c;let u=0;a[f+u++]=t,a[f+u++]=e,a[f+u++]=1,a[f+u++]=n,a[f+u++]=i,a[f+u++]=l,a[f+u++]=r/2,a[f+u++]=o/2,a[f+u++]=h,s++,a[f+u++]=t,a[f+u++]=e,a[f+u++]=-1,a[f+u++]=n,a[f+u++]=i,a[f+u++]=l,a[f+u++]=-r/2,a[f+u++]=-o/2,a[f+u++]=h,s++}for(const c of r){const{totalTime:t,timeSeed:r}=c;let o=null,i=null,a=null,l=null,s=null,h=null;for(let d=0;d<c.numberOfVertices;d++){const m=n[4*(c.startVertex+d)+0],w=n[4*(c.startVertex+d)+1],g=n[4*(c.startVertex+d)+2],p=n[4*(c.startVertex+d)+3];let y=null,x=null,M=null,A=null;if(d>0){y=m-o,x=w-i;const n=Math.sqrt(y*y+x*x);if(y/=n,x/=n,d>1){let t=y+s,n=x+h;const r=Math.sqrt(t*t+n*n);t/=r,n/=r;const o=Math.min(1/(t*y+n*x),e);t*=o,n*=o,M=-n,A=t}else M=-x,A=y;null!==M&&null!==A&&(u(o,i,a,M,A,t,r,p),f())}o=m,i=w,a=g,s=y,h=x,l=p}u(o,i,a,-h,s,t,r,l)}return{vertexData:a,indexData:l}}function p(t,n){const r=n.pixels,{width:o,height:i}=n,a=new Float32Array(o*i*2);if(\"vector-uv\"===t)for(let e=0;e<o*i;e++)a[2*e+0]=r[0][e],a[2*e+1]=-r[1][e];else if(\"vector-magdir\"===t)for(let l=0;l<o*i;l++){const t=r[0][l],n=e(r[1][l]),o=Math.cos(n-Math.PI/2),i=Math.sin(n-Math.PI/2);a[2*l+0]=o*t,a[2*l+1]=i*t}return{data:a,width:o,height:i}}async function y(t,e,n,r,o,i){const s=a(e.spatialReference);if(!s)return x(t,e,n,r,o,i);const[c,h]=s.valid,f=h-c,u=Math.ceil(e.width/f),d=e.width/u,m=Math.round(n/u);let w=e.xmin;const g=[];for(let a=0;a<u;a++){const n=new l({xmin:w,xmax:w+d,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});g.push(x(t,n,m,r,o,i)),w+=d}const p=await Promise.all(g),y={data:new Float32Array(n*r*2),width:n,height:r};let M=0;for(const a of p){for(let t=0;t<a.height;t++)for(let e=0;e<a.width;e++)M+e>=n||(y.data[2*(t*n+M+e)+0]=a.data[2*(t*a.width+e)+0],y.data[2*(t*n+M+e)+1]=a.data[2*(t*a.width+e)+1]);M+=a.width}return y}async function x(t,e,o,i,a,l){const s={requestProjectedLocalDirections:!0,signal:l};if(r(a)&&(s.timeExtent=a),\"imagery\"===t.type){await t.load({signal:l});const r=t.rasterInfo.dataType,a=await t.fetchImage(e,o,i,s);return!a||n(a.pixelData)||n(a.pixelData.pixelBlock)?{data:new Float32Array(o*i*2),width:o,height:i}:p(r,a.pixelData.pixelBlock)}await t.load({signal:l});const c=t.rasterInfo.dataType,h=await t.fetchPixels(e,o,i,s);return!h||n(h.pixelBlock)?{data:new Float32Array(o*i*2),width:o,height:i}:p(c,h.pixelBlock)}export{w as createAnimatedLinesData,g as createLinesMesh,h as createStreamlinesMesh,x as fetchPart,y as loadImagery};\n"]},"metadata":{},"sourceType":"module"}