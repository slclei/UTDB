{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { JSONMap as e } from \"../../../core/jsonMap.js\";\nimport { isNone as t, isSome as r } from \"../../../core/maybe.js\";\nimport { getUnitString as i } from \"../../../core/unitUtils.js\";\nimport { getGeometryExtent as o } from \"../../../geometry/support/extentUtils.js\";\nimport { fromJSON as n } from \"../../../geometry/support/jsonUtils.js\";\nimport { normalizeCentralMeridian as s } from \"../../../geometry/support/normalizeUtils.js\";\nimport { isGeographic as l, isWebMercator as a, WGS84 as m } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport { getCentroidOptimizedGeometry as c } from \"../centroid.js\";\nimport { quantizeOptimizedGeometry as u, convertToPoint as f, generalizeOptimizedGeometry as p, removeZMValues as y, convertToPolyline as g, convertToPolygon as S, convertToMultipoint as R } from \"../featureConversionUtils.js\";\nimport d from \"../OptimizedGeometry.js\";\nimport { checkProjectionSupport as h, project as w } from \"./projectionSupport.js\";\nconst j = new e({\n  esriSRUnit_Meter: \"meters\",\n  esriSRUnit_Kilometer: \"kilometers\",\n  esriSRUnit_Foot: \"feet\",\n  esriSRUnit_StatuteMile: \"miles\",\n  esriSRUnit_NauticalMile: \"nautical-miles\",\n  esriSRUnit_USNauticalMile: \"us-nautical-miles\"\n}),\n      U = Object.freeze({}),\n      M = new d(),\n      F = new d(),\n      G = new d(),\n      N = {\n  esriGeometryPoint: f,\n  esriGeometryPolyline: g,\n  esriGeometryPolygon: S,\n  esriGeometryMultipoint: R\n};\n\nfunction O(e, r, i) {\n  let o = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : e.hasZ;\n  let n = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : e.hasM;\n  if (t(r)) return null;\n  const s = e.hasZ && o,\n        l = e.hasM && n;\n\n  if (i) {\n    const t = u(G, r, e.hasZ, e.hasM, \"esriGeometryPoint\", i, o, n);\n    return f(t, s, l);\n  }\n\n  return f(r, s, l);\n}\n\nfunction _(e, t, r) {\n  return \"esriGeometryPolygon\" === e.geometryType && t && (t.centroid || t.geometry) ? (t.centroid || (t.centroid = c(new d(), t.geometry, e.hasZ, e.hasM)), O(e, t.centroid, r)) : null;\n}\n\nfunction J(e, i, o, n, s, l) {\n  let a = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : i;\n  let m = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : o;\n  const c = i && a,\n        f = o && m,\n        g = r(n) ? \"coords\" in n ? n : n.geometry : null;\n  if (t(g)) return null;\n\n  if (s) {\n    let t = p(F, g, i, o, e, s, a, m);\n    return l && (t = u(G, t, c, f, e, l)), N[e](t, c, f);\n  }\n\n  if (l) {\n    const t = u(G, g, i, o, e, l, a, m);\n    return N[e](t, c, f);\n  }\n\n  return y(M, g, i, o, a, m), N[e](M, c, f);\n}\n\nasync function P(e, t, r) {\n  const {\n    outFields: i,\n    orderByFields: o,\n    groupByFieldsForStatistics: n,\n    outStatistics: s\n  } = e;\n  if (i) for (let l = 0; l < i.length; l++) i[l] = i[l].trim();\n  if (o) for (let l = 0; l < o.length; l++) o[l] = o[l].trim();\n  if (n) for (let l = 0; l < n.length; l++) n[l] = n[l].trim();\n  if (s) for (let l = 0; l < s.length; l++) s[l].onStatisticField && (s[l].onStatisticField = s[l].onStatisticField.trim());\n  return e.geometry && !e.outSR && (e.outSR = e.geometry.spatialReference), Z(e, t, r);\n}\n\nasync function v(e, t, r) {\n  return Z(e, t, r);\n}\n\nasync function Z(e, r, i) {\n  if (!e) return null;\n  let {\n    where: l\n  } = e;\n  if (e.where = l = l && l.trim(), (!l || /^1 *= *1$/.test(l) || r && r === l) && (e.where = null), !e.geometry) return e;\n  let a = await b(e);\n\n  if (e.distance = 0, e.units = null, \"esriSpatialRelEnvelopeIntersects\" === e.spatialRel) {\n    const {\n      spatialReference: t\n    } = e.geometry;\n    a = o(a), a.spatialReference = t;\n  }\n\n  e.geometry = a, await h(a.spatialReference, i);\n  const m = (await s(n(a)))[0];\n  if (t(m)) throw U;\n  const c = m.toJSON(),\n        u = await w(c, c.spatialReference, i);\n  if (!u) throw U;\n  return u.spatialReference = i, e.geometry = u, e;\n}\n\nasync function b(e) {\n  const {\n    geometry: t,\n    distance: r,\n    units: o\n  } = e;\n  if (null == r || \"vertexAttributes\" in t) return t;\n  const n = t.spatialReference,\n        s = o ? j.fromJSON(o) : i(n),\n        c = n && (l(n) || a(n)) ? t : await h(n, m).then(() => w(t, m));\n  return (await x())(c.spatialReference, c, r, s);\n}\n\nasync function x() {\n  return (await import(\"../../../geometry/geometryEngineJSON.js\")).geodesicBuffer;\n}\n\nfunction z(e) {\n  return e && B in e ? JSON.parse(JSON.stringify(e, E)) : e;\n}\n\nconst B = \"_geVersion\",\n      E = (e, t) => e !== B ? t : void 0;\n\nexport { U as QUERY_ENGINE_EMPTY_RESULT, z as cleanFromGeometryEngine, _ as getCentroid, J as getGeometry, v as normalizeFilter, P as normalizeQuery, Z as normalizeQueryLike, O as transformCentroid };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/layers/graphics/data/utils.js"],"names":["JSONMap","e","isNone","t","isSome","r","getUnitString","i","getGeometryExtent","o","fromJSON","n","normalizeCentralMeridian","s","isGeographic","l","isWebMercator","a","WGS84","m","getCentroidOptimizedGeometry","c","quantizeOptimizedGeometry","u","convertToPoint","f","generalizeOptimizedGeometry","p","removeZMValues","y","convertToPolyline","g","convertToPolygon","S","convertToMultipoint","R","d","checkProjectionSupport","h","project","w","j","esriSRUnit_Meter","esriSRUnit_Kilometer","esriSRUnit_Foot","esriSRUnit_StatuteMile","esriSRUnit_NauticalMile","esriSRUnit_USNauticalMile","U","Object","freeze","M","F","G","N","esriGeometryPoint","esriGeometryPolyline","esriGeometryPolygon","esriGeometryMultipoint","O","hasZ","hasM","_","geometryType","centroid","geometry","J","P","outFields","orderByFields","groupByFieldsForStatistics","outStatistics","length","trim","onStatisticField","outSR","spatialReference","Z","v","where","test","b","distance","units","spatialRel","toJSON","then","x","geodesicBuffer","z","B","JSON","parse","stringify","E","QUERY_ENGINE_EMPTY_RESULT","cleanFromGeometryEngine","getCentroid","getGeometry","normalizeFilter","normalizeQuery","normalizeQueryLike","transformCentroid"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{JSONMap as e}from\"../../../core/jsonMap.js\";import{isNone as t,isSome as r}from\"../../../core/maybe.js\";import{getUnitString as i}from\"../../../core/unitUtils.js\";import{getGeometryExtent as o}from\"../../../geometry/support/extentUtils.js\";import{fromJSON as n}from\"../../../geometry/support/jsonUtils.js\";import{normalizeCentralMeridian as s}from\"../../../geometry/support/normalizeUtils.js\";import{isGeographic as l,isWebMercator as a,WGS84 as m}from\"../../../geometry/support/spatialReferenceUtils.js\";import{getCentroidOptimizedGeometry as c}from\"../centroid.js\";import{quantizeOptimizedGeometry as u,convertToPoint as f,generalizeOptimizedGeometry as p,removeZMValues as y,convertToPolyline as g,convertToPolygon as S,convertToMultipoint as R}from\"../featureConversionUtils.js\";import d from\"../OptimizedGeometry.js\";import{checkProjectionSupport as h,project as w}from\"./projectionSupport.js\";const j=new e({esriSRUnit_Meter:\"meters\",esriSRUnit_Kilometer:\"kilometers\",esriSRUnit_Foot:\"feet\",esriSRUnit_StatuteMile:\"miles\",esriSRUnit_NauticalMile:\"nautical-miles\",esriSRUnit_USNauticalMile:\"us-nautical-miles\"}),U=Object.freeze({}),M=new d,F=new d,G=new d,N={esriGeometryPoint:f,esriGeometryPolyline:g,esriGeometryPolygon:S,esriGeometryMultipoint:R};function O(e,r,i,o=e.hasZ,n=e.hasM){if(t(r))return null;const s=e.hasZ&&o,l=e.hasM&&n;if(i){const t=u(G,r,e.hasZ,e.hasM,\"esriGeometryPoint\",i,o,n);return f(t,s,l)}return f(r,s,l)}function _(e,t,r){return\"esriGeometryPolygon\"===e.geometryType&&t&&(t.centroid||t.geometry)?(t.centroid||(t.centroid=c(new d,t.geometry,e.hasZ,e.hasM)),O(e,t.centroid,r)):null}function J(e,i,o,n,s,l,a=i,m=o){const c=i&&a,f=o&&m,g=r(n)?\"coords\"in n?n:n.geometry:null;if(t(g))return null;if(s){let t=p(F,g,i,o,e,s,a,m);return l&&(t=u(G,t,c,f,e,l)),N[e](t,c,f)}if(l){const t=u(G,g,i,o,e,l,a,m);return N[e](t,c,f)}return y(M,g,i,o,a,m),N[e](M,c,f)}async function P(e,t,r){const{outFields:i,orderByFields:o,groupByFieldsForStatistics:n,outStatistics:s}=e;if(i)for(let l=0;l<i.length;l++)i[l]=i[l].trim();if(o)for(let l=0;l<o.length;l++)o[l]=o[l].trim();if(n)for(let l=0;l<n.length;l++)n[l]=n[l].trim();if(s)for(let l=0;l<s.length;l++)s[l].onStatisticField&&(s[l].onStatisticField=s[l].onStatisticField.trim());return e.geometry&&!e.outSR&&(e.outSR=e.geometry.spatialReference),Z(e,t,r)}async function v(e,t,r){return Z(e,t,r)}async function Z(e,r,i){if(!e)return null;let{where:l}=e;if(e.where=l=l&&l.trim(),(!l||/^1 *= *1$/.test(l)||r&&r===l)&&(e.where=null),!e.geometry)return e;let a=await b(e);if(e.distance=0,e.units=null,\"esriSpatialRelEnvelopeIntersects\"===e.spatialRel){const{spatialReference:t}=e.geometry;a=o(a),a.spatialReference=t}e.geometry=a,await h(a.spatialReference,i);const m=(await s(n(a)))[0];if(t(m))throw U;const c=m.toJSON(),u=await w(c,c.spatialReference,i);if(!u)throw U;return u.spatialReference=i,e.geometry=u,e}async function b(e){const{geometry:t,distance:r,units:o}=e;if(null==r||\"vertexAttributes\"in t)return t;const n=t.spatialReference,s=o?j.fromJSON(o):i(n),c=n&&(l(n)||a(n))?t:await h(n,m).then((()=>w(t,m)));return(await x())(c.spatialReference,c,r,s)}async function x(){return(await import(\"../../../geometry/geometryEngineJSON.js\")).geodesicBuffer}function z(e){return e&&B in e?JSON.parse(JSON.stringify(e,E)):e}const B=\"_geVersion\",E=(e,t)=>e!==B?t:void 0;export{U as QUERY_ENGINE_EMPTY_RESULT,z as cleanFromGeometryEngine,_ as getCentroid,J as getGeometry,v as normalizeFilter,P as normalizeQuery,Z as normalizeQueryLike,O as transformCentroid};\n"]},"metadata":{},"sourceType":"module"}