{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport s from \"../../../Graphic.js\";\nimport t from \"../../../core/Logger.js\";\nimport { isAbortError as i } from \"../../../core/promiseUtils.js\";\nimport { watch as r, syncAndInitial as o, initial as a } from \"../../../core/reactiveUtils.js\";\nimport { watch as n } from \"../../../core/watchUtils.js\";\nimport { property as u } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/arrayUtils.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport { subclass as h } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport l from \"../engine/flow/FlowView2D.js\";\nimport { LayerView2DMixin as c } from \"./LayerView2D.js\";\nimport d from \"./imagery/ImageryTileView2D.js\";\nimport p from \"./imagery/VectorFieldTileView2D.js\";\nimport { canUseMajorityInterpolationOnDataSource as v } from \"./support/util.js\";\nimport { ImageryTileLayerView as w } from \"../../layers/ImageryTileLayerView.js\";\nimport b from \"../../layers/LayerView.js\";\nimport { RefreshableLayerView as m } from \"../../layers/RefreshableLayerView.js\";\nconst y = t.getLogger(\"esri.views.2d.layers.ImageryTileLayerView2D\");\nlet g = class extends w(m(c(b))) {\n  constructor() {\n    super(...arguments), this._useWebGLForProcessing = !0, this._useProgressiveUpdate = !0, this.subview = null;\n  }\n\n  get useWebGLForProcessing() {\n    return this._useWebGLForProcessing;\n  }\n\n  set useWebGLForProcessing(e) {\n    this._useWebGLForProcessing = e, this.subview && \"useWebGLForProcessing\" in this.subview && (this.subview.useWebGLForProcessing = e);\n  }\n\n  get useProgressiveUpdate() {\n    return this._useWebGLForProcessing;\n  }\n\n  set useProgressiveUpdate(e) {\n    this._useProgressiveUpdate = e, this.subview && \"useProgressiveUpdate\" in this.subview && (this.subview.useProgressiveUpdate = e);\n  }\n\n  update(e) {\n    this.subview.update(e), this.notifyChange(\"updating\");\n  }\n\n  isUpdating() {\n    return !this.subview || this.subview.updating;\n  }\n\n  attach() {\n    this.layer.increaseRasterJobHandlerUsage(), this._updateSubview(), this.handles.add([n(this.layer, [\"bandIds\", \"renderer\", \"interpolation\", \"multidimensionalDefinition\"], (e, s, t) => {\n      const r = \"multidimensionalDefinition\" === t,\n            o = \"interpolation\" === t && (\"majority\" === e || \"majority\" === s) && v(this.layer),\n            a = \"renderer\" === t && s.type !== e.type;\n      a && this._updateSubview();\n      const n = r || o || a;\n      this.subview.redrawOrRefetch(n).catch(e => {\n        i(e) || y.error(e);\n      }), this.notifyChange(\"updating\");\n    }), r(() => {\n      var e;\n      return null != (e = this.layer.blendMode) ? e : \"normal\";\n    }, e => {\n      this.subview.container.blendMode = e;\n    }, o), r(() => {\n      var e;\n      return null != (e = this.layer.effect) ? e : null;\n    }, e => {\n      this.subview.container.effect = e;\n    }, o), r(() => this.timeExtent, () => {\n      this.subview.timeExtent = this.timeExtent, this.subview.redrawOrRefetch(!0).catch(e => {\n        i(e) || y.error(e);\n      });\n    }, a)], \"attach\");\n  }\n\n  detach() {\n    var e;\n    this.handles.remove(\"attach\"), this.layer.decreaseRasterJobHandlerUsage(), this._detachSubview(this.subview), null == (e = this.subview) || e.destroy(), this.subview = null;\n  }\n\n  moveStart() {\n    this.requestUpdate();\n  }\n\n  viewChange() {\n    this.requestUpdate();\n  }\n\n  moveEnd() {\n    this.subview.moveEnd();\n  }\n\n  async hitTest(e, t) {\n    return [new s({\n      attributes: {},\n      geometry: e.clone()\n    })];\n  }\n\n  doRefresh() {\n    return this.subview.doRefresh();\n  }\n\n  _updateSubview() {\n    const e = \"vector-field\" === this.layer.renderer.type ? \"rasterVF\" : \"flow\" === this.layer.renderer.type ? \"flow\" : \"raster\";\n\n    if (this.subview) {\n      var s;\n      if (this.subview.type === e) return void this._attachSubview(this.subview);\n      this._detachSubview(this.subview), null == (s = this.subview) || s.destroy(), this.subview = null;\n    }\n\n    const {\n      layer: t\n    } = this;\n    let i;\n    i = \"rasterVF\" === e ? new p({\n      layer: t,\n      layerView: this\n    }) : \"flow\" === e ? new l({\n      layer: t,\n      layerView: this\n    }) : new d({\n      layer: t,\n      layerView: this\n    }), \"useWebGLForProcessing\" in i && (i.useWebGLForProcessing = this._useWebGLForProcessing), \"useProgressiveUpdate\" in i && (i.useProgressiveUpdate = this._useProgressiveUpdate), \"previousLOD\" in i && (i.previousLOD = this.subview && \"previousLOD\" in this.subview && this.subview.previousLOD), this._attachSubview(i), this.subview = i, this.requestUpdate();\n  }\n\n  _attachSubview(e) {\n    e && !e.attached && (e.attach(), e.attached = !0, this.container.addChildAt(e.container, 0), e.container.blendMode = this.layer.blendMode, e.container.effect = this.layer.effect);\n  }\n\n  _detachSubview(e) {\n    null != e && e.attached && (this.container.removeChild(e.container), e.detach(), e.attached = !1);\n  }\n\n};\ne([u()], g.prototype, \"subview\", void 0), e([u()], g.prototype, \"useWebGLForProcessing\", null), e([u()], g.prototype, \"useProgressiveUpdate\", null), g = e([h(\"esri.views.2d.layers.ImageryTileLayerView2D\")], g);\nconst f = g;\nexport { f as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/layers/ImageryTileLayerView2D.js"],"names":["_","e","s","t","isAbortError","i","watch","r","syncAndInitial","o","initial","a","n","property","u","subclass","h","l","LayerView2DMixin","c","d","p","canUseMajorityInterpolationOnDataSource","v","ImageryTileLayerView","w","b","RefreshableLayerView","m","y","getLogger","g","constructor","arguments","_useWebGLForProcessing","_useProgressiveUpdate","subview","useWebGLForProcessing","useProgressiveUpdate","update","notifyChange","isUpdating","updating","attach","layer","increaseRasterJobHandlerUsage","_updateSubview","handles","add","type","redrawOrRefetch","catch","error","blendMode","container","effect","timeExtent","detach","remove","decreaseRasterJobHandlerUsage","_detachSubview","destroy","moveStart","requestUpdate","viewChange","moveEnd","hitTest","attributes","geometry","clone","doRefresh","renderer","_attachSubview","layerView","previousLOD","attached","addChildAt","removeChild","prototype","f","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import s from\"../../../Graphic.js\";import t from\"../../../core/Logger.js\";import{isAbortError as i}from\"../../../core/promiseUtils.js\";import{watch as r,syncAndInitial as o,initial as a}from\"../../../core/reactiveUtils.js\";import{watch as n}from\"../../../core/watchUtils.js\";import{property as u}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/arrayUtils.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import{subclass as h}from\"../../../core/accessorSupport/decorators/subclass.js\";import l from\"../engine/flow/FlowView2D.js\";import{LayerView2DMixin as c}from\"./LayerView2D.js\";import d from\"./imagery/ImageryTileView2D.js\";import p from\"./imagery/VectorFieldTileView2D.js\";import{canUseMajorityInterpolationOnDataSource as v}from\"./support/util.js\";import{ImageryTileLayerView as w}from\"../../layers/ImageryTileLayerView.js\";import b from\"../../layers/LayerView.js\";import{RefreshableLayerView as m}from\"../../layers/RefreshableLayerView.js\";const y=t.getLogger(\"esri.views.2d.layers.ImageryTileLayerView2D\");let g=class extends(w(m(c(b)))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(e){this._useWebGLForProcessing=e,this.subview&&\"useWebGLForProcessing\"in this.subview&&(this.subview.useWebGLForProcessing=e)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(e){this._useProgressiveUpdate=e,this.subview&&\"useProgressiveUpdate\"in this.subview&&(this.subview.useProgressiveUpdate=e)}update(e){this.subview.update(e),this.notifyChange(\"updating\")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.handles.add([n(this.layer,[\"bandIds\",\"renderer\",\"interpolation\",\"multidimensionalDefinition\"],((e,s,t)=>{const r=\"multidimensionalDefinition\"===t,o=\"interpolation\"===t&&(\"majority\"===e||\"majority\"===s)&&v(this.layer),a=\"renderer\"===t&&s.type!==e.type;a&&this._updateSubview();const n=r||o||a;this.subview.redrawOrRefetch(n).catch((e=>{i(e)||y.error(e)})),this.notifyChange(\"updating\")})),r((()=>{var e;return null!=(e=this.layer.blendMode)?e:\"normal\"}),(e=>{this.subview.container.blendMode=e}),o),r((()=>{var e;return null!=(e=this.layer.effect)?e:null}),(e=>{this.subview.container.effect=e}),o),r((()=>this.timeExtent),(()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch(!0).catch((e=>{i(e)||y.error(e)}))}),a)],\"attach\")}detach(){var e;this.handles.remove(\"attach\"),this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),null==(e=this.subview)||e.destroy(),this.subview=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}async hitTest(e,t){return[new s({attributes:{},geometry:e.clone()})]}doRefresh(){return this.subview.doRefresh()}_updateSubview(){const e=\"vector-field\"===this.layer.renderer.type?\"rasterVF\":\"flow\"===this.layer.renderer.type?\"flow\":\"raster\";if(this.subview){var s;if(this.subview.type===e)return void this._attachSubview(this.subview);this._detachSubview(this.subview),null==(s=this.subview)||s.destroy(),this.subview=null}const{layer:t}=this;let i;i=\"rasterVF\"===e?new p({layer:t,layerView:this}):\"flow\"===e?new l({layer:t,layerView:this}):new d({layer:t,layerView:this}),\"useWebGLForProcessing\"in i&&(i.useWebGLForProcessing=this._useWebGLForProcessing),\"useProgressiveUpdate\"in i&&(i.useProgressiveUpdate=this._useProgressiveUpdate),\"previousLOD\"in i&&(i.previousLOD=this.subview&&\"previousLOD\"in this.subview&&this.subview.previousLOD),this._attachSubview(i),this.subview=i,this.requestUpdate()}_attachSubview(e){e&&!e.attached&&(e.attach(),e.attached=!0,this.container.addChildAt(e.container,0),e.container.blendMode=this.layer.blendMode,e.container.effect=this.layer.effect)}_detachSubview(e){null!=e&&e.attached&&(this.container.removeChild(e.container),e.detach(),e.attached=!1)}};e([u()],g.prototype,\"subview\",void 0),e([u()],g.prototype,\"useWebGLForProcessing\",null),e([u()],g.prototype,\"useProgressiveUpdate\",null),g=e([h(\"esri.views.2d.layers.ImageryTileLayerView2D\")],g);const f=g;export{f as default};\n"]},"metadata":{},"sourceType":"module"}