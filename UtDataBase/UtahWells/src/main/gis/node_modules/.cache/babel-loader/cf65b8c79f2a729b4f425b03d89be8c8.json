{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { getStrides as t } from \"../Utils.js\";\nimport { VertexBuffers as e } from \"./VertexBuffer.js\";\nimport r from \"../util/Writer.js\";\n\nclass s {\n  constructor(t, e) {\n    this.data = t, this.stride = e;\n  }\n\n  get vertexCount() {\n    const t = this.stride / 4,\n          e = this.data.length / t;\n    return e !== (0 | e) && console.debug(\"Corrupted stride\"), e;\n  }\n\n  transfer(t, e) {\n    const r = this.data.buffer();\n    t.vertexCount = this.vertexCount, t.data = r, t.stride = this.stride, e.push(r);\n  }\n\n}\n\nclass o {\n  constructor(e, o, n) {\n    this.geometryType = e, this.indexVector = new r(Uint32Array, 6 * o), this.namedVectors = {};\n    const i = t(e, n);\n\n    for (const t in i) {\n      const e = i[t];\n      let n;\n\n      switch (e % 4) {\n        case 0:\n        case 2:\n          n = new r(Uint32Array, e * o);\n          break;\n\n        case 1:\n        case 3:\n          n = new r(Uint8Array, e * o);\n      }\n\n      this.namedVectors[t] = new s(n, e);\n    }\n  }\n\n  get(t) {\n    return this.namedVectors[t].data;\n  }\n\n  getVector(t) {\n    return this.namedVectors[t];\n  }\n\n  transfer(t, e) {\n    const r = this.indexVector.buffer(),\n          s = {};\n    e.push(r);\n\n    for (const o in this.namedVectors) {\n      const t = this.namedVectors[o];\n      s[o] = {}, t.transfer(s[o], e);\n    }\n\n    t.geometryType = this.geometryType, t.indexBuffer = r, t.namedBuffers = s, this.destroy();\n  }\n\n  intoBuffers() {\n    const t = e.fromVertexVectors(this);\n    return this.destroy(), t;\n  }\n\n  destroy() {\n    this.indexVector = null, this.namedVectors = null;\n  }\n\n}\n\nexport { o as VertexVectors, s as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/webgl/mesh/VertexVector.js"],"names":["getStrides","t","VertexBuffers","e","r","s","constructor","data","stride","vertexCount","length","console","debug","transfer","buffer","push","o","n","geometryType","indexVector","Uint32Array","namedVectors","i","Uint8Array","get","getVector","indexBuffer","namedBuffers","destroy","intoBuffers","fromVertexVectors","VertexVectors","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{getStrides as t}from\"../Utils.js\";import{VertexBuffers as e}from\"./VertexBuffer.js\";import r from\"../util/Writer.js\";class s{constructor(t,e){this.data=t,this.stride=e}get vertexCount(){const t=this.stride/4,e=this.data.length/t;return e!==(0|e)&&console.debug(\"Corrupted stride\"),e}transfer(t,e){const r=this.data.buffer();t.vertexCount=this.vertexCount,t.data=r,t.stride=this.stride,e.push(r)}}class o{constructor(e,o,n){this.geometryType=e,this.indexVector=new r(Uint32Array,6*o),this.namedVectors={};const i=t(e,n);for(const t in i){const e=i[t];let n;switch(e%4){case 0:case 2:n=new r(Uint32Array,e*o);break;case 1:case 3:n=new r(Uint8Array,e*o)}this.namedVectors[t]=new s(n,e)}}get(t){return this.namedVectors[t].data}getVector(t){return this.namedVectors[t]}transfer(t,e){const r=this.indexVector.buffer(),s={};e.push(r);for(const o in this.namedVectors){const t=this.namedVectors[o];s[o]={},t.transfer(s[o],e)}t.geometryType=this.geometryType,t.indexBuffer=r,t.namedBuffers=s,this.destroy()}intoBuffers(){const t=e.fromVertexVectors(this);return this.destroy(),t}destroy(){this.indexVector=null,this.namedVectors=null}}export{o as VertexVectors,s as default};\n"]},"metadata":{},"sourceType":"module"}