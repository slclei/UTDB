{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport \"../../geometry.js\";\nimport e from \"../../request.js\";\nimport t from \"../../core/Error.js\";\nimport { find as r, cache as n } from \"../../core/iteratorUtils.js\";\nimport { isNone as a, isSome as o } from \"../../core/maybe.js\";\nimport { eachAlways as i } from \"../../core/promiseUtils.js\";\nimport { isHTTPSProtocol as s, hasSameOrigin as u, toHTTPS as l } from \"../../core/urlUtils.js\";\nimport { initializeProjection as p, project as c } from \"../../geometry/projection.js\";\nimport { WGS84 as m, equals as y } from \"../../geometry/support/spatialReferenceUtils.js\";\nimport { featureGeometryTypeKebabDictionary as f } from \"../../geometry/support/typeUtils.js\";\nimport { getGeometryType as d } from \"../graphics/sources/geojson/geojson.js\";\nimport { parseDate as g } from \"./dateUtils.js\";\nimport { iterateXML as w, visitXML as b } from \"./xmlUtils.js\";\nimport h from \"../support/Field.js\";\nimport T from \"../../geometry/SpatialReference.js\";\nimport F from \"../../geometry/Extent.js\";\nconst S = \"xlink:href\",\n      x = \"2.0.0\",\n      v = \"__esri_wfs_id__\",\n      C = \"wfs-layer:getWFSLayerTypeInfo-error\",\n      E = \"wfs-layer:empty-service\",\n      N = \"wfs-layer:feature-type-not-found\",\n      P = \"wfs-layer:geojson-not-supported\",\n      R = \"wfs-layer:kvp-encoding-not-supported\",\n      j = \"wfs-layer:malformed-json\",\n      A = \"wfs-layer:unknown-geometry-type\",\n      G = \"wfs-layer:unknown-field-type\",\n      k = \"wfs-layer:unsupported-spatial-reference\",\n      U = \"wfs-layer:unsupported-wfs-version\";\n\nasync function D(t, r) {\n  const n = I((await e(t, {\n    responseType: \"text\",\n    query: {\n      SERVICE: \"WFS\",\n      REQUEST: \"GetCapabilities\",\n      VERSION: x,\n      ...(null == r ? void 0 : r.customParameters)\n    },\n    signal: null == r ? void 0 : r.signal\n  })).data);\n  return $(t, n), n;\n}\n\nfunction I(e) {\n  const t = te(e);\n  ne(t), ae(t);\n  const r = t.firstElementChild,\n        a = n(M(r));\n  return {\n    operations: L(r),\n\n    get featureTypes() {\n      return Array.from(a());\n    },\n\n    readFeatureTypes: a\n  };\n}\n\nconst O = new Set([\"json\", \"application/json\", \"geojson\", \"application/json; subtype=geojson\"]);\n\nfunction L(e) {\n  let r = !1;\n  const n = {\n    GetCapabilities: {\n      url: \"\"\n    },\n    DescribeFeatureType: {\n      url: \"\"\n    },\n    GetFeature: {\n      url: \"\",\n      outputFormat: null,\n      supportsPagination: !1\n    }\n  };\n  if (b(e, {\n    OperationsMetadata: {\n      Operation: e => {\n        switch (e.getAttribute(\"name\")) {\n          case \"GetCapabilities\":\n            return {\n              DCP: {\n                HTTP: {\n                  Get: e => {\n                    n.GetCapabilities.url = e.getAttribute(S);\n                  }\n                }\n              }\n            };\n\n          case \"DescribeFeatureType\":\n            return {\n              DCP: {\n                HTTP: {\n                  Get: e => {\n                    n.DescribeFeatureType.url = e.getAttribute(S);\n                  }\n                }\n              }\n            };\n\n          case \"GetFeature\":\n            return {\n              DCP: {\n                HTTP: {\n                  Get: e => {\n                    n.GetFeature.url = e.getAttribute(S);\n                  }\n                }\n              },\n              Parameter: e => {\n                if (\"outputFormat\" === e.getAttribute(\"name\")) return {\n                  AllowedValues: {\n                    Value: e => {\n                      const t = e.textContent;\n                      O.has(t.toLowerCase()) && (n.GetFeature.outputFormat = t);\n                    }\n                  }\n                };\n              }\n            };\n        }\n      },\n      Constraint: e => {\n        switch (e.getAttribute(\"name\")) {\n          case \"KVPEncoding\":\n            return {\n              DefaultValue: e => {\n                r = \"true\" === e.textContent.toLowerCase();\n              }\n            };\n\n          case \"ImplementsResultPaging\":\n            return {\n              DefaultValue: e => {\n                n.GetFeature.supportsPagination = \"true\" === e.textContent.toLowerCase();\n              }\n            };\n        }\n      }\n    }\n  }), !r) throw new t(R, \"WFS service doesn't support key/value pair (KVP) encoding\");\n  if (a(n.GetFeature.outputFormat)) throw new t(P, \"WFS service doesn't support GeoJSON output format\");\n  return n;\n}\n\nfunction $(e, t) {\n  s(e) && (u(e, t.operations.DescribeFeatureType.url, !0) && (t.operations.DescribeFeatureType.url = l(t.operations.DescribeFeatureType.url)), u(e, t.operations.GetFeature.url, !0) && (t.operations.GetFeature.url = l(t.operations.GetFeature.url)));\n}\n\nfunction M(e) {\n  return w(e, {\n    FeatureTypeList: {\n      FeatureType: e => {\n        const t = {\n          typeName: \"undefined:undefined\",\n          name: \"\",\n          title: \"\",\n          description: \"\",\n          extent: null,\n          namespacePrefix: \"\",\n          namespaceUri: \"\",\n          supportedSpatialReferences: []\n        },\n              r = new Set([4326]),\n              n = e => {\n          var t, n;\n          const a = parseInt(null == (t = e.textContent.match(/(?<wkid>\\d+$)/i)) || null == (n = t.groups) ? void 0 : n.wkid, 10);\n          Number.isNaN(a) || r.add(a);\n        };\n\n        return b(e, {\n          Name: e => {\n            const {\n              name: r,\n              prefix: n\n            } = re(e.textContent);\n            t.typeName = `${n}:${r}`, t.name = r, t.namespacePrefix = n, t.namespaceUri = e.lookupNamespaceURI(n);\n          },\n          Abstract: e => {\n            t.description = e.textContent;\n          },\n          Title: e => {\n            t.title = e.textContent;\n          },\n          WGS84BoundingBox: e => {\n            t.extent = V(e);\n          },\n          DefaultSRS: n,\n          DefaultCRS: n,\n          OtherSRS: n,\n          OtherCRS: n\n        }), t.title || (t.title = t.name), t.supportedSpatialReferences.push(...r), t;\n      }\n    }\n  });\n}\n\nfunction V(e) {\n  let t, r, n, a;\n\n  for (const o of e.children) switch (o.localName) {\n    case \"LowerCorner\":\n      [t, r] = o.textContent.split(\" \").map(e => Number.parseFloat(e));\n      break;\n\n    case \"UpperCorner\":\n      [n, a] = o.textContent.split(\" \").map(e => Number.parseFloat(e));\n  }\n\n  return {\n    xmin: t,\n    ymin: r,\n    xmax: n,\n    ymax: a,\n    spatialReference: m\n  };\n}\n\nfunction W(e, t, n) {\n  return r(e, e => n ? e.name === t && e.namespaceUri === n : e.typeName === t || e.name === t);\n}\n\nasync function X(e, t, r) {\n  let n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var a;\n  const {\n    featureType: o,\n    extent: i\n  } = await Y(e, t, r, n),\n        {\n    fields: s,\n    geometryType: u,\n    swapXY: l,\n    objectIdField: p,\n    geometryField: c\n  } = await q(e, o.typeName, n);\n  return {\n    url: e.operations.GetCapabilities.url,\n    name: o.name,\n    namespaceUri: o.namespaceUri,\n    fields: s,\n    geometryField: c,\n    geometryType: u,\n    objectIdField: p,\n    spatialReference: null != (a = n.spatialReference) ? a : T.WGS84,\n    extent: i,\n    swapXY: l,\n    wfsCapabilities: e,\n    customParameters: n.customParameters\n  };\n}\n\nasync function Y(e, r, n) {\n  let o = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const {\n    spatialReference: i = T.WGS84\n  } = o,\n        s = e.readFeatureTypes(),\n        u = r ? W(s, r, n) : s.next().value;\n  if (a(u)) throw r ? new t(N, `The type '${r}' could not be found in the service`) : new t(E, \"The service is empty\");\n  let l = new F({ ...u.extent,\n    spatialReference: i\n  });\n  if (!y(i, m)) try {\n    await p(m, i, void 0, o), l = c(l, m);\n  } catch {\n    throw new t(k, \"Projection not supported\");\n  }\n  return {\n    extent: l,\n    spatialReference: i,\n    featureType: u\n  };\n}\n\nasync function q(e, r) {\n  let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const [o, s] = await i([J(e.operations.DescribeFeatureType.url, r, n), _(e, r, n)]);\n  if (o.error || s.error) throw new t(C, `An error occurred while getting info about the feature type '${r}'`, {\n    error: o.error || s.error\n  });\n  const {\n    fields: u,\n    errors: l\n  } = o.value,\n        p = o.value.geometryType || s.value.geometryType,\n        c = s.value.swapXY;\n  if (a(p)) throw new t(A, `The geometry type could not be determined for type '${r}`, {\n    typeName: r,\n    geometryType: p,\n    fields: u,\n    errors: l\n  });\n  return { ...z(u),\n    geometryType: p,\n    swapXY: c\n  };\n}\n\nfunction z(e) {\n  var t;\n  const r = e.find(e => \"geometry\" === e.type);\n  let n = e.find(e => \"oid\" === e.type);\n  return e = e.filter(e => \"geometry\" !== e.type), n || (n = new h({\n    name: v,\n    type: \"oid\",\n    alias: v\n  }), e.unshift(n)), {\n    geometryField: null != (t = null == r ? void 0 : r.name) ? t : null,\n    objectIdField: n.name,\n    fields: e\n  };\n}\n\nasync function _(t, r) {\n  let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var a;\n  let o,\n      i = !1;\n  const [s, u] = await Promise.all([K(t.operations.GetFeature.url, r, t.operations.GetFeature.outputFormat, { ...n,\n    count: 1\n  }), e(t.operations.GetFeature.url, {\n    responseType: \"text\",\n    query: Z(r, void 0, { ...n,\n      count: 1\n    }),\n    signal: null == n ? void 0 : n.signal\n  })]),\n        l = \"FeatureCollection\" === s.type && (null == (a = s.features[0]) ? void 0 : a.geometry);\n\n  if (l) {\n    let e;\n\n    switch (o = f.fromJSON(d(l.type)), l.type) {\n      case \"Point\":\n        e = l.coordinates;\n        break;\n\n      case \"LineString\":\n      case \"MultiPoint\":\n        e = l.coordinates[0];\n        break;\n\n      case \"MultiLineString\":\n      case \"Polygon\":\n        e = l.coordinates[0][0];\n        break;\n\n      case \"MultiPolygon\":\n        e = l.coordinates[0][0][0];\n    }\n\n    const t = /<[^>]*pos[^>]*> *(-?\\d+(?:\\.\\d+)?) (-?\\d+(?:\\.\\d+)?)/.exec(u.data);\n\n    if (t) {\n      const r = e[0].toFixed(3),\n            n = e[1].toFixed(3),\n            a = parseFloat(t[1]).toFixed(3);\n      r === parseFloat(t[2]).toFixed(3) && n === a && (i = !0);\n    }\n  }\n\n  return {\n    geometryType: o,\n    swapXY: i\n  };\n}\n\nasync function J(t, r, n) {\n  return Q(r, (await e(t, {\n    responseType: \"text\",\n    query: {\n      SERVICE: \"WFS\",\n      REQUEST: \"DescribeFeatureType\",\n      VERSION: x,\n      TYPENAME: r,\n      ...(null == n ? void 0 : n.customParameters)\n    },\n    signal: null == n ? void 0 : n.signal\n  })).data);\n}\n\nfunction Q(e, n) {\n  const {\n    name: a\n  } = re(e),\n        i = te(n);\n  ae(i);\n  const s = r(w(i.firstElementChild, {\n    element: e => ({\n      name: e.getAttribute(\"name\"),\n      typeName: re(e.getAttribute(\"type\")).name\n    })\n  }), _ref => {\n    let {\n      name: e\n    } = _ref;\n    return e === a;\n  });\n\n  if (o(s)) {\n    const e = r(w(i.firstElementChild, {\n      complexType: e => e\n    }), e => e.getAttribute(\"name\") === s.typeName);\n    if (o(e)) return B(e);\n  }\n\n  throw new t(N, `Type '${e}' not found in document`, {\n    document: new XMLSerializer().serializeToString(i)\n  });\n}\n\nconst H = new Set([\"objectid\", \"fid\"]);\n\nfunction B(e) {\n  var r, n;\n  const a = [],\n        o = [];\n  let i;\n  const s = w(e, {\n    complexContent: {\n      extension: {\n        sequence: {\n          element: e => e\n        }\n      }\n    }\n  });\n\n  for (const u of s) {\n    const s = u.getAttribute(\"name\");\n    if (!s) continue;\n    let l, p;\n    if (u.hasAttribute(\"type\") ? l = re(u.getAttribute(\"type\")).name : b(u, {\n      simpleType: {\n        restriction: e => (l = re(e.getAttribute(\"base\")).name, {\n          maxLength: e => {\n            p = +e.getAttribute(\"value\");\n          }\n        })\n      }\n    }), !l) continue;\n    const c = \"true\" === u.getAttribute(\"nillable\");\n    let m = !1;\n\n    switch (l.toLowerCase()) {\n      case \"integer\":\n      case \"nonpositiveinteger\":\n      case \"negativeinteger\":\n      case \"long\":\n      case \"int\":\n      case \"short\":\n      case \"byte\":\n      case \"nonnegativeinteger\":\n      case \"unsignedlong\":\n      case \"unsignedint\":\n      case \"unsignedshort\":\n      case \"unsignedbyte\":\n      case \"positiveinteger\":\n        o.push(new h({\n          name: s,\n          alias: s,\n          type: \"integer\",\n          nullable: c\n        }));\n        break;\n\n      case \"float\":\n      case \"double\":\n      case \"decimal\":\n        o.push(new h({\n          name: s,\n          alias: s,\n          type: \"double\",\n          nullable: c\n        }));\n        break;\n\n      case \"boolean\":\n      case \"string\":\n      case \"gyearmonth\":\n      case \"gyear\":\n      case \"gmonthday\":\n      case \"gday\":\n      case \"gmonth\":\n      case \"anyuri\":\n      case \"qname\":\n      case \"notation\":\n      case \"normalizedstring\":\n      case \"token\":\n      case \"language\":\n      case \"idrefs\":\n      case \"entities\":\n      case \"nmtoken\":\n      case \"nmtokens\":\n      case \"name\":\n      case \"ncname\":\n      case \"id\":\n      case \"idref\":\n      case \"entity\":\n      case \"duration\":\n      case \"time\":\n        o.push(new h({\n          name: s,\n          alias: s,\n          type: \"string\",\n          nullable: c,\n          length: null != (r = p) ? r : 255\n        }));\n        break;\n\n      case \"datetime\":\n      case \"date\":\n        o.push(new h({\n          name: s,\n          alias: s,\n          type: \"date\",\n          nullable: c,\n          length: null != (n = p) ? n : 36\n        }));\n        break;\n\n      case \"pointpropertytype\":\n        i = \"point\", m = !0;\n        break;\n\n      case \"multipointpropertytype\":\n        i = \"multipoint\", m = !0;\n        break;\n\n      case \"curvepropertytype\":\n      case \"multicurvepropertytype\":\n      case \"multilinestringpropertytype\":\n        i = \"polyline\", m = !0;\n        break;\n\n      case \"surfacepropertytype\":\n      case \"multisurfacepropertytype\":\n      case \"multipolygonpropertytype\":\n        i = \"polygon\", m = !0;\n        break;\n\n      case \"geometrypropertytype\":\n      case \"multigeometrypropertytype\":\n        m = !0, a.push(new t(A, `geometry type '${l}' is not supported`, {\n          type: new XMLSerializer().serializeToString(e)\n        }));\n        break;\n\n      default:\n        a.push(new t(G, `Unknown field type '${l}'`, {\n          type: new XMLSerializer().serializeToString(e)\n        }));\n    }\n\n    m && o.push(new h({\n      name: s,\n      alias: s,\n      type: \"geometry\",\n      nullable: c\n    }));\n  }\n\n  for (const t of o) if (\"integer\" === t.type && !t.nullable && H.has(t.name.toLowerCase())) {\n    t.type = \"oid\";\n    break;\n  }\n\n  return {\n    geometryType: i,\n    fields: o,\n    errors: a\n  };\n}\n\nasync function K(r, n, a, o) {\n  let {\n    data: i\n  } = await e(r, {\n    responseType: \"text\",\n    query: Z(n, a, o),\n    signal: null == o ? void 0 : o.signal\n  });\n  i = i.replace(/\": +(-?\\d+),(\\d+)(,)?/g, '\": $1.$2$3');\n\n  try {\n    var s;\n\n    if (null != o && null != (s = o.dateFields) && s.length) {\n      const e = new Set(o.dateFields);\n      return JSON.parse(i, (t, r) => e.has(t) ? g(r) : r);\n    }\n\n    return JSON.parse(i);\n  } catch (u) {\n    throw new t(j, \"Error while parsing the response\", {\n      response: i,\n      error: u\n    });\n  }\n}\n\nfunction Z(e, t, r) {\n  return {\n    SERVICE: \"WFS\",\n    REQUEST: \"GetFeature\",\n    VERSION: x,\n    TYPENAMES: e,\n    OUTPUTFORMAT: t,\n    SRSNAME: \"EPSG:4326\",\n    STARTINDEX: null == r ? void 0 : r.startIndex,\n    COUNT: null == r ? void 0 : r.count,\n    ...(null == r ? void 0 : r.customParameters)\n  };\n}\n\nasync function ee(t, r, n) {\n  const a = te((await e(t, {\n    responseType: \"text\",\n    query: {\n      SERVICE: \"WFS\",\n      REQUEST: \"GetFeature\",\n      VERSION: x,\n      TYPENAMES: r,\n      RESULTTYPE: \"hits\",\n      ...(null == n ? void 0 : n.customParameters)\n    },\n    signal: null == n ? void 0 : n.signal\n  })).data);\n  ae(a);\n  const o = Number.parseFloat(a.firstElementChild.getAttribute(\"numberMatched\"));\n  return Number.isNaN(o) ? 0 : o;\n}\n\nfunction te(e) {\n  return new DOMParser().parseFromString(e.trim(), \"text/xml\");\n}\n\nfunction re(e) {\n  const [t, r] = e.split(\":\");\n  return {\n    prefix: r ? t : \"\",\n    name: null != r ? r : t\n  };\n}\n\nfunction ne(e) {\n  const r = e.firstElementChild.getAttribute(\"version\");\n  if (r && r !== x) throw new t(U, `Unsupported WFS version ${r}. Supported version: ${x}`);\n}\n\nfunction ae(e) {\n  let r, n;\n  if (b(e.firstElementChild, {\n    Exception: e => (r = e.getAttribute(\"exceptionCode\"), {\n      ExceptionText: e => {\n        n = e.textContent;\n      }\n    })\n  }), r) throw new t(`wfs-layer:${r}`, n);\n}\n\nexport { v as WFS_OID_FIELD_NAME, J as describeFeatureType, W as findFeatureType, D as getCapabilities, K as getFeature, ee as getFeatureCount, Y as getFeatureTypeInfo, X as getWFSLayerInfo, Q as parseDescribeFeatureTypeResponse, I as parseGetCapabilitiesResponse, z as prepareWFSLayerFields };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/layers/ogc/wfsUtils.js"],"names":["e","t","find","r","cache","n","isNone","a","isSome","o","eachAlways","i","isHTTPSProtocol","s","hasSameOrigin","u","toHTTPS","l","initializeProjection","p","project","c","WGS84","m","equals","y","featureGeometryTypeKebabDictionary","f","getGeometryType","d","parseDate","g","iterateXML","w","visitXML","b","h","T","F","S","x","v","C","E","N","P","R","j","A","G","k","U","D","I","responseType","query","SERVICE","REQUEST","VERSION","customParameters","signal","data","$","te","ne","ae","firstElementChild","M","operations","L","featureTypes","Array","from","readFeatureTypes","O","Set","GetCapabilities","url","DescribeFeatureType","GetFeature","outputFormat","supportsPagination","OperationsMetadata","Operation","getAttribute","DCP","HTTP","Get","Parameter","AllowedValues","Value","textContent","has","toLowerCase","Constraint","DefaultValue","FeatureTypeList","FeatureType","typeName","name","title","description","extent","namespacePrefix","namespaceUri","supportedSpatialReferences","parseInt","match","groups","wkid","Number","isNaN","add","Name","prefix","re","lookupNamespaceURI","Abstract","Title","WGS84BoundingBox","V","DefaultSRS","DefaultCRS","OtherSRS","OtherCRS","push","children","localName","split","map","parseFloat","xmin","ymin","xmax","ymax","spatialReference","W","X","featureType","Y","fields","geometryType","swapXY","objectIdField","geometryField","q","wfsCapabilities","next","value","J","_","error","errors","z","type","filter","alias","unshift","Promise","all","K","count","Z","features","geometry","fromJSON","coordinates","exec","toFixed","Q","TYPENAME","element","complexType","B","document","XMLSerializer","serializeToString","H","complexContent","extension","sequence","hasAttribute","simpleType","restriction","maxLength","nullable","length","replace","dateFields","JSON","parse","response","TYPENAMES","OUTPUTFORMAT","SRSNAME","STARTINDEX","startIndex","COUNT","ee","RESULTTYPE","DOMParser","parseFromString","trim","Exception","ExceptionText","WFS_OID_FIELD_NAME","describeFeatureType","findFeatureType","getCapabilities","getFeature","getFeatureCount","getFeatureTypeInfo","getWFSLayerInfo","parseDescribeFeatureTypeResponse","parseGetCapabilitiesResponse","prepareWFSLayerFields"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import e from\"../../request.js\";import t from\"../../core/Error.js\";import{find as r,cache as n}from\"../../core/iteratorUtils.js\";import{isNone as a,isSome as o}from\"../../core/maybe.js\";import{eachAlways as i}from\"../../core/promiseUtils.js\";import{isHTTPSProtocol as s,hasSameOrigin as u,toHTTPS as l}from\"../../core/urlUtils.js\";import{initializeProjection as p,project as c}from\"../../geometry/projection.js\";import{WGS84 as m,equals as y}from\"../../geometry/support/spatialReferenceUtils.js\";import{featureGeometryTypeKebabDictionary as f}from\"../../geometry/support/typeUtils.js\";import{getGeometryType as d}from\"../graphics/sources/geojson/geojson.js\";import{parseDate as g}from\"./dateUtils.js\";import{iterateXML as w,visitXML as b}from\"./xmlUtils.js\";import h from\"../support/Field.js\";import T from\"../../geometry/SpatialReference.js\";import F from\"../../geometry/Extent.js\";const S=\"xlink:href\",x=\"2.0.0\",v=\"__esri_wfs_id__\",C=\"wfs-layer:getWFSLayerTypeInfo-error\",E=\"wfs-layer:empty-service\",N=\"wfs-layer:feature-type-not-found\",P=\"wfs-layer:geojson-not-supported\",R=\"wfs-layer:kvp-encoding-not-supported\",j=\"wfs-layer:malformed-json\",A=\"wfs-layer:unknown-geometry-type\",G=\"wfs-layer:unknown-field-type\",k=\"wfs-layer:unsupported-spatial-reference\",U=\"wfs-layer:unsupported-wfs-version\";async function D(t,r){const n=I((await e(t,{responseType:\"text\",query:{SERVICE:\"WFS\",REQUEST:\"GetCapabilities\",VERSION:x,...null==r?void 0:r.customParameters},signal:null==r?void 0:r.signal})).data);return $(t,n),n}function I(e){const t=te(e);ne(t),ae(t);const r=t.firstElementChild,a=n(M(r));return{operations:L(r),get featureTypes(){return Array.from(a())},readFeatureTypes:a}}const O=new Set([\"json\",\"application/json\",\"geojson\",\"application/json; subtype=geojson\"]);function L(e){let r=!1;const n={GetCapabilities:{url:\"\"},DescribeFeatureType:{url:\"\"},GetFeature:{url:\"\",outputFormat:null,supportsPagination:!1}};if(b(e,{OperationsMetadata:{Operation:e=>{switch(e.getAttribute(\"name\")){case\"GetCapabilities\":return{DCP:{HTTP:{Get:e=>{n.GetCapabilities.url=e.getAttribute(S)}}}};case\"DescribeFeatureType\":return{DCP:{HTTP:{Get:e=>{n.DescribeFeatureType.url=e.getAttribute(S)}}}};case\"GetFeature\":return{DCP:{HTTP:{Get:e=>{n.GetFeature.url=e.getAttribute(S)}}},Parameter:e=>{if(\"outputFormat\"===e.getAttribute(\"name\"))return{AllowedValues:{Value:e=>{const t=e.textContent;O.has(t.toLowerCase())&&(n.GetFeature.outputFormat=t)}}}}}}},Constraint:e=>{switch(e.getAttribute(\"name\")){case\"KVPEncoding\":return{DefaultValue:e=>{r=\"true\"===e.textContent.toLowerCase()}};case\"ImplementsResultPaging\":return{DefaultValue:e=>{n.GetFeature.supportsPagination=\"true\"===e.textContent.toLowerCase()}}}}}}),!r)throw new t(R,\"WFS service doesn't support key/value pair (KVP) encoding\");if(a(n.GetFeature.outputFormat))throw new t(P,\"WFS service doesn't support GeoJSON output format\");return n}function $(e,t){s(e)&&(u(e,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=l(t.operations.DescribeFeatureType.url)),u(e,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=l(t.operations.GetFeature.url)))}function M(e){return w(e,{FeatureTypeList:{FeatureType:e=>{const t={typeName:\"undefined:undefined\",name:\"\",title:\"\",description:\"\",extent:null,namespacePrefix:\"\",namespaceUri:\"\",supportedSpatialReferences:[]},r=new Set([4326]),n=e=>{var t,n;const a=parseInt(null==(t=e.textContent.match(/(?<wkid>\\d+$)/i))||null==(n=t.groups)?void 0:n.wkid,10);Number.isNaN(a)||r.add(a)};return b(e,{Name:e=>{const{name:r,prefix:n}=re(e.textContent);t.typeName=`${n}:${r}`,t.name=r,t.namespacePrefix=n,t.namespaceUri=e.lookupNamespaceURI(n)},Abstract:e=>{t.description=e.textContent},Title:e=>{t.title=e.textContent},WGS84BoundingBox:e=>{t.extent=V(e)},DefaultSRS:n,DefaultCRS:n,OtherSRS:n,OtherCRS:n}),t.title||(t.title=t.name),t.supportedSpatialReferences.push(...r),t}}})}function V(e){let t,r,n,a;for(const o of e.children)switch(o.localName){case\"LowerCorner\":[t,r]=o.textContent.split(\" \").map((e=>Number.parseFloat(e)));break;case\"UpperCorner\":[n,a]=o.textContent.split(\" \").map((e=>Number.parseFloat(e)))}return{xmin:t,ymin:r,xmax:n,ymax:a,spatialReference:m}}function W(e,t,n){return r(e,(e=>n?e.name===t&&e.namespaceUri===n:e.typeName===t||e.name===t))}async function X(e,t,r,n={}){var a;const{featureType:o,extent:i}=await Y(e,t,r,n),{fields:s,geometryType:u,swapXY:l,objectIdField:p,geometryField:c}=await q(e,o.typeName,n);return{url:e.operations.GetCapabilities.url,name:o.name,namespaceUri:o.namespaceUri,fields:s,geometryField:c,geometryType:u,objectIdField:p,spatialReference:null!=(a=n.spatialReference)?a:T.WGS84,extent:i,swapXY:l,wfsCapabilities:e,customParameters:n.customParameters}}async function Y(e,r,n,o={}){const{spatialReference:i=T.WGS84}=o,s=e.readFeatureTypes(),u=r?W(s,r,n):s.next().value;if(a(u))throw r?new t(N,`The type '${r}' could not be found in the service`):new t(E,\"The service is empty\");let l=new F({...u.extent,spatialReference:i});if(!y(i,m))try{await p(m,i,void 0,o),l=c(l,m)}catch{throw new t(k,\"Projection not supported\")}return{extent:l,spatialReference:i,featureType:u}}async function q(e,r,n={}){const[o,s]=await i([J(e.operations.DescribeFeatureType.url,r,n),_(e,r,n)]);if(o.error||s.error)throw new t(C,`An error occurred while getting info about the feature type '${r}'`,{error:o.error||s.error});const{fields:u,errors:l}=o.value,p=o.value.geometryType||s.value.geometryType,c=s.value.swapXY;if(a(p))throw new t(A,`The geometry type could not be determined for type '${r}`,{typeName:r,geometryType:p,fields:u,errors:l});return{...z(u),geometryType:p,swapXY:c}}function z(e){var t;const r=e.find((e=>\"geometry\"===e.type));let n=e.find((e=>\"oid\"===e.type));return e=e.filter((e=>\"geometry\"!==e.type)),n||(n=new h({name:v,type:\"oid\",alias:v}),e.unshift(n)),{geometryField:null!=(t=null==r?void 0:r.name)?t:null,objectIdField:n.name,fields:e}}async function _(t,r,n={}){var a;let o,i=!1;const[s,u]=await Promise.all([K(t.operations.GetFeature.url,r,t.operations.GetFeature.outputFormat,{...n,count:1}),e(t.operations.GetFeature.url,{responseType:\"text\",query:Z(r,void 0,{...n,count:1}),signal:null==n?void 0:n.signal})]),l=\"FeatureCollection\"===s.type&&(null==(a=s.features[0])?void 0:a.geometry);if(l){let e;switch(o=f.fromJSON(d(l.type)),l.type){case\"Point\":e=l.coordinates;break;case\"LineString\":case\"MultiPoint\":e=l.coordinates[0];break;case\"MultiLineString\":case\"Polygon\":e=l.coordinates[0][0];break;case\"MultiPolygon\":e=l.coordinates[0][0][0]}const t=/<[^>]*pos[^>]*> *(-?\\d+(?:\\.\\d+)?) (-?\\d+(?:\\.\\d+)?)/.exec(u.data);if(t){const r=e[0].toFixed(3),n=e[1].toFixed(3),a=parseFloat(t[1]).toFixed(3);r===parseFloat(t[2]).toFixed(3)&&n===a&&(i=!0)}}return{geometryType:o,swapXY:i}}async function J(t,r,n){return Q(r,(await e(t,{responseType:\"text\",query:{SERVICE:\"WFS\",REQUEST:\"DescribeFeatureType\",VERSION:x,TYPENAME:r,...null==n?void 0:n.customParameters},signal:null==n?void 0:n.signal})).data)}function Q(e,n){const{name:a}=re(e),i=te(n);ae(i);const s=r(w(i.firstElementChild,{element:e=>({name:e.getAttribute(\"name\"),typeName:re(e.getAttribute(\"type\")).name})}),(({name:e})=>e===a));if(o(s)){const e=r(w(i.firstElementChild,{complexType:e=>e}),(e=>e.getAttribute(\"name\")===s.typeName));if(o(e))return B(e)}throw new t(N,`Type '${e}' not found in document`,{document:(new XMLSerializer).serializeToString(i)})}const H=new Set([\"objectid\",\"fid\"]);function B(e){var r,n;const a=[],o=[];let i;const s=w(e,{complexContent:{extension:{sequence:{element:e=>e}}}});for(const u of s){const s=u.getAttribute(\"name\");if(!s)continue;let l,p;if(u.hasAttribute(\"type\")?l=re(u.getAttribute(\"type\")).name:b(u,{simpleType:{restriction:e=>(l=re(e.getAttribute(\"base\")).name,{maxLength:e=>{p=+e.getAttribute(\"value\")}})}}),!l)continue;const c=\"true\"===u.getAttribute(\"nillable\");let m=!1;switch(l.toLowerCase()){case\"integer\":case\"nonpositiveinteger\":case\"negativeinteger\":case\"long\":case\"int\":case\"short\":case\"byte\":case\"nonnegativeinteger\":case\"unsignedlong\":case\"unsignedint\":case\"unsignedshort\":case\"unsignedbyte\":case\"positiveinteger\":o.push(new h({name:s,alias:s,type:\"integer\",nullable:c}));break;case\"float\":case\"double\":case\"decimal\":o.push(new h({name:s,alias:s,type:\"double\",nullable:c}));break;case\"boolean\":case\"string\":case\"gyearmonth\":case\"gyear\":case\"gmonthday\":case\"gday\":case\"gmonth\":case\"anyuri\":case\"qname\":case\"notation\":case\"normalizedstring\":case\"token\":case\"language\":case\"idrefs\":case\"entities\":case\"nmtoken\":case\"nmtokens\":case\"name\":case\"ncname\":case\"id\":case\"idref\":case\"entity\":case\"duration\":case\"time\":o.push(new h({name:s,alias:s,type:\"string\",nullable:c,length:null!=(r=p)?r:255}));break;case\"datetime\":case\"date\":o.push(new h({name:s,alias:s,type:\"date\",nullable:c,length:null!=(n=p)?n:36}));break;case\"pointpropertytype\":i=\"point\",m=!0;break;case\"multipointpropertytype\":i=\"multipoint\",m=!0;break;case\"curvepropertytype\":case\"multicurvepropertytype\":case\"multilinestringpropertytype\":i=\"polyline\",m=!0;break;case\"surfacepropertytype\":case\"multisurfacepropertytype\":case\"multipolygonpropertytype\":i=\"polygon\",m=!0;break;case\"geometrypropertytype\":case\"multigeometrypropertytype\":m=!0,a.push(new t(A,`geometry type '${l}' is not supported`,{type:(new XMLSerializer).serializeToString(e)}));break;default:a.push(new t(G,`Unknown field type '${l}'`,{type:(new XMLSerializer).serializeToString(e)}))}m&&o.push(new h({name:s,alias:s,type:\"geometry\",nullable:c}))}for(const t of o)if(\"integer\"===t.type&&!t.nullable&&H.has(t.name.toLowerCase())){t.type=\"oid\";break}return{geometryType:i,fields:o,errors:a}}async function K(r,n,a,o){let{data:i}=await e(r,{responseType:\"text\",query:Z(n,a,o),signal:null==o?void 0:o.signal});i=i.replace(/\": +(-?\\d+),(\\d+)(,)?/g,'\": $1.$2$3');try{var s;if(null!=o&&null!=(s=o.dateFields)&&s.length){const e=new Set(o.dateFields);return JSON.parse(i,((t,r)=>e.has(t)?g(r):r))}return JSON.parse(i)}catch(u){throw new t(j,\"Error while parsing the response\",{response:i,error:u})}}function Z(e,t,r){return{SERVICE:\"WFS\",REQUEST:\"GetFeature\",VERSION:x,TYPENAMES:e,OUTPUTFORMAT:t,SRSNAME:\"EPSG:4326\",STARTINDEX:null==r?void 0:r.startIndex,COUNT:null==r?void 0:r.count,...null==r?void 0:r.customParameters}}async function ee(t,r,n){const a=te((await e(t,{responseType:\"text\",query:{SERVICE:\"WFS\",REQUEST:\"GetFeature\",VERSION:x,TYPENAMES:r,RESULTTYPE:\"hits\",...null==n?void 0:n.customParameters},signal:null==n?void 0:n.signal})).data);ae(a);const o=Number.parseFloat(a.firstElementChild.getAttribute(\"numberMatched\"));return Number.isNaN(o)?0:o}function te(e){return(new DOMParser).parseFromString(e.trim(),\"text/xml\")}function re(e){const[t,r]=e.split(\":\");return{prefix:r?t:\"\",name:null!=r?r:t}}function ne(e){const r=e.firstElementChild.getAttribute(\"version\");if(r&&r!==x)throw new t(U,`Unsupported WFS version ${r}. Supported version: ${x}`)}function ae(e){let r,n;if(b(e.firstElementChild,{Exception:e=>(r=e.getAttribute(\"exceptionCode\"),{ExceptionText:e=>{n=e.textContent}})}),r)throw new t(`wfs-layer:${r}`,n)}export{v as WFS_OID_FIELD_NAME,J as describeFeatureType,W as findFeatureType,D as getCapabilities,K as getFeature,ee as getFeatureCount,Y as getFeatureTypeInfo,X as getWFSLayerInfo,Q as parseDescribeFeatureTypeResponse,I as parseGetCapabilitiesResponse,z as prepareWFSLayerFields};\n"]},"metadata":{},"sourceType":"module"}