{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport t from \"../core/CircularArray.js\";\nimport { isSome as s, mapOr as e } from \"../core/maybe.js\";\nimport { decodeGeohashXY as i } from \"./geohashUtils.js\";\nimport { FeatureSetReaderJSON as o } from \"../views/2d/layers/features/support/FeatureSetReaderJSON.js\";\n\nclass n {\n  constructor() {\n    let s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let e = arguments.length > 1 ? arguments[1] : undefined;\n    let i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8096;\n    this._nodes = 0, this._root = new a(0, 0, 0), this._statisticFields = s, this._pool = i ? new t(8096) : null, this._serviceInfo = e;\n  }\n\n  _acquire(t, e, i) {\n    this._nodes++;\n    let o = null;\n    return s(this._pool) && (o = this._pool.dequeue()), s(o) ? o.realloc(t, e, i) : new a(t, e, i);\n  }\n\n  _release(t) {\n    this._nodes--, s(this._pool) && this._pool.enqueue(t);\n  }\n\n  get count() {\n    return this._root.count;\n  }\n\n  get size() {\n    return this._nodes;\n  }\n\n  get poolSize() {\n    return e(this._pool, 0, t => t.size);\n  }\n\n  get depth() {\n    let t = 0;\n    return this._forEachNode(s => t = Math.max(t, s.depth)), t;\n  }\n\n  dropLevels(t) {\n    this._forEachNode(s => {\n      if (s.depth >= t) for (let t = 0; t < s.children.length; t++) {\n        const e = s.children[t];\n        s.children[t] = null, e && this._release(e);\n      }\n    });\n  }\n\n  clear() {\n    this.dropLevels(0);\n  }\n\n  insert(t, s) {\n    let e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    const i = o.fromOptimizedFeatures([t], this._serviceInfo).getCursor();\n    i.next();\n    const n = i.readGeometry();\n    if (!n) return;\n    const [a, l] = n.coords,\n          r = t.geohashX,\n          h = t.geohashY;\n    this.insertCursor(i, t.displayId, a, l, r, h, s, e);\n  }\n\n  insertCursor(t, s, e, i, o, n, a) {\n    let l = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n    let r = this._root,\n        h = 0,\n        c = 0,\n        d = 0;\n\n    for (; null !== r;) {\n      if (r.depth >= l && (r.count += 1, r.xTotal += e, r.yTotal += i, r.xGeohashTotal += o, r.yGeohashTotal += n, r.displayId = s, this._updateStatisticsCursor(t, r, 1)), h >= a) return void r.add(s);\n\n      const u = Math.ceil((h + 1) / 2),\n            f = Math.floor((h + 1) / 2),\n            x = 1 - h % 2,\n            m = 30 - (3 * u + 2 * f),\n            p = 30 - (2 * u + 3 * f),\n            y = (o & 7 * x + 3 * (1 - x) << m) >> m,\n            _ = (n & 3 * x + 7 * (1 - x) << p) >> p,\n            g = y + _ * (8 * x + 4 * (1 - x));\n\n      c = c << 3 * x + 2 * (1 - x) | y, d = d << 2 * x + 3 * (1 - x) | _, null == r.children[g] && (r.children[g] = this._acquire(c, d, h + 1)), h += 1, r = r.children[g];\n    }\n  }\n\n  remove(t, s) {\n    const e = o.fromOptimizedFeatures([t], this._serviceInfo).getCursor();\n    e.next();\n    const i = e.readGeometry();\n    if (!i) return;\n    const [n, a] = i.coords,\n          l = t.geohashX,\n          r = t.geohashY;\n    this.removeCursor(e, n, a, l, r, s);\n  }\n\n  removeCursor(t, s, e, i, o, n) {\n    let a = this._root,\n        l = 0;\n\n    for (; null !== a;) {\n      if (a.count -= 1, a.xTotal -= s, a.yTotal -= e, a.xGeohashTotal -= i, a.yGeohashTotal -= o, this._updateStatisticsCursor(t, a, -1), l >= n) return void a.remove(t.getDisplayId());\n      const r = Math.ceil((l + 1) / 2),\n            h = Math.floor((l + 1) / 2),\n            c = 1 - l % 2,\n            d = 30 - (3 * r + 2 * h),\n            u = 30 - (2 * r + 3 * h),\n            f = ((i & 7 * c + 3 * (1 - c) << d) >> d) + ((o & 3 * c + 7 * (1 - c) << u) >> u) * (8 * c + 4 * (1 - c)),\n            x = a.children[f];\n      1 === x.count && (this._release(x), a.children[f] = null), l += 1, a = x;\n    }\n  }\n\n  find(t, s, e) {\n    return this._root.find(t, s, e, 0, 0, 0);\n  }\n\n  findSingleOccupancyNode(t, s, e, i, o) {\n    let n = this._root;\n\n    for (; null !== n;) {\n      const a = n.depth,\n            l = n.xNode,\n            r = n.yNode,\n            h = 1 - a % 2,\n            c = n.xGeohashTotal / n.count,\n            d = n.yGeohashTotal / n.count;\n      if (1 === n.count && t < c && c <= e && s < d && d <= i) return n;\n\n      if (a >= o) {\n        n = n.next;\n        continue;\n      }\n\n      const u = Math.ceil((a + 1) / 2),\n            f = Math.floor((a + 1) / 2),\n            x = 30 - (3 * u + 2 * f),\n            m = 30 - (2 * u + 3 * f),\n            p = ~((1 << x) - 1),\n            y = ~((1 << m) - 1),\n            _ = (t & p) >> x,\n            g = (s & y) >> m,\n            N = (e & p) >> x,\n            T = (i & y) >> m,\n            M = l << 3 * h + 2 * (1 - h),\n            v = r << 2 * h + 3 * (1 - h),\n            C = M + 8 * h + 4 * (1 - h),\n            S = v + 4 * h + 8 * (1 - h),\n            b = Math.max(M, _),\n            I = Math.max(v, g),\n            k = Math.min(C, N),\n            F = Math.min(S, T);\n\n      let G = null,\n          z = null;\n\n      for (let t = I; t <= F; t++) for (let s = b; s <= k; s++) {\n        const e = s - M + (t - v) * (8 * h + 4 * (1 - h)),\n              i = n.children[e];\n        i && (G || (G = i, G.next = n.next), z && (z.next = i), z = i, i.next = n.next);\n      }\n\n      n = G || n.next;\n    }\n\n    return null;\n  }\n\n  getRegionDisplayIds(t, s, e, i, o) {\n    let n = this._root;\n    const a = [];\n\n    for (; null !== n;) {\n      const l = n.depth,\n            r = n.xNode,\n            h = n.yNode;\n\n      if (l >= o) {\n        const o = n.xGeohashTotal / n.count,\n              l = n.yGeohashTotal / n.count;\n        t <= o && o <= e && s <= l && l <= i && n.displayIds.forEach(t => a.push(t)), n = n.next;\n        continue;\n      }\n\n      const c = Math.ceil((l + 1) / 2),\n            d = Math.floor((l + 1) / 2),\n            u = 1 - l % 2,\n            f = 30 - (3 * c + 2 * d),\n            x = 30 - (2 * c + 3 * d),\n            m = ~((1 << f) - 1),\n            p = ~((1 << x) - 1),\n            y = (t & m) >> f,\n            _ = (s & p) >> x,\n            g = (e & m) >> f,\n            N = (i & p) >> x,\n            T = r << 3 * u + 2 * (1 - u),\n            M = h << 2 * u + 3 * (1 - u),\n            v = T + 8 * u + 4 * (1 - u),\n            C = M + 4 * u + 8 * (1 - u),\n            S = Math.max(T, y),\n            b = Math.max(M, _),\n            I = Math.min(v, g),\n            k = Math.min(C, N);\n\n      let F = null,\n          G = null;\n\n      for (let t = b; t <= k; t++) for (let s = S; s <= I; s++) {\n        const e = s - T + (t - M) * (8 * u + 4 * (1 - u)),\n              i = n.children[e];\n        i && (F || (F = i, F.next = n.next), G && (G.next = i), G = i, i.next = n.next);\n      }\n\n      n = F || n.next;\n    }\n\n    return a;\n  }\n\n  getRegionStatistics(t, s, e, i, o) {\n    let n = this._root,\n        a = 0,\n        l = 0,\n        r = 0;\n    const h = {};\n    let c = 0;\n\n    for (; null !== n;) {\n      const d = n.depth,\n            u = n.xNode,\n            f = n.yNode;\n\n      if (d >= o) {\n        const o = n.xGeohashTotal / n.count,\n              d = n.yGeohashTotal / n.count;\n        t < o && o <= e && s < d && d <= i && (a += n.count, l += n.xTotal, r += n.yTotal, 1 === n.count && (c = n.displayId), this._aggregateStatistics(h, n.statistics)), n = n.next;\n        continue;\n      }\n\n      const x = Math.ceil((d + 1) / 2),\n            m = Math.floor((d + 1) / 2),\n            p = 1 - d % 2,\n            y = 30 - (3 * x + 2 * m),\n            _ = 30 - (2 * x + 3 * m),\n            g = ~((1 << y) - 1),\n            N = ~((1 << _) - 1),\n            T = (t & g) >> y,\n            M = (s & N) >> _,\n            v = (e & g) >> y,\n            C = (i & N) >> _,\n            S = u << 3 * p + 2 * (1 - p),\n            b = f << 2 * p + 3 * (1 - p),\n            I = S + 8 * p + 4 * (1 - p),\n            k = b + 4 * p + 8 * (1 - p),\n            F = Math.max(S, T),\n            G = Math.max(b, M),\n            z = Math.min(I, v),\n            w = Math.min(k, C);\n\n      let A = null,\n          j = null;\n\n      for (let o = G; o <= w; o++) for (let d = F; d <= z; d++) {\n        const u = d - S + (o - b) * (8 * p + 4 * (1 - p)),\n              f = n.children[u];\n\n        if (f) {\n          if (o !== G && o !== w && d !== F && d !== z) {\n            const o = f.xGeohashTotal / f.count,\n                  n = f.yGeohashTotal / f.count;\n            t < o && o <= e && s < n && n <= i && (a += f.count, l += f.xTotal, r += f.yTotal, 1 === f.count && (c = f.displayId), this._aggregateStatistics(h, f.statistics));\n            continue;\n          }\n\n          A || (A = f, A.next = n.next), j && (j.next = f), j = f, f.next = n.next;\n        }\n      }\n\n      n = A || n.next;\n    }\n\n    return {\n      count: a,\n      attributes: this._normalizeStatistics(h, a),\n      xTotal: l,\n      yTotal: r,\n      referenceId: c\n    };\n  }\n\n  _forEachNode(t) {\n    let s = this._root;\n\n    for (; null !== s;) {\n      const e = this._linkChildren(s) || s.next;\n      t(s), s = e;\n    }\n  }\n\n  _linkChildren(t) {\n    let s = null,\n        e = null;\n\n    for (let i = 0; i <= t.children.length; i++) {\n      const o = t.children[i];\n      o && (s || (s = o, s.next = t.next), e && (e.next = o), e = o, o.next = t.next);\n    }\n\n    return s;\n  }\n\n  _updateStatisticsCursor(t, s, e) {\n    for (const i of this._statisticFields) {\n      const o = i.name,\n            n = i.inField ? t.readAttribute(i.inField) : t.getComputedNumericAtIndex(i.inFieldIndex);\n\n      switch (i.statisticType) {\n        case \"norm\":\n          {\n            s.statistics[o] || (s.statistics[o] = {});\n            const a = i.inNormalizationField,\n                  l = t.readAttribute(a),\n                  r = s.statistics[o].onStatisticField || 0,\n                  h = s.statistics[o].onStatisticNormalizationField || 0;\n            null == n || isNaN(n) || null == l || 0 === l || isNaN(l) || (s.statistics[o].onStatisticField = r + e * n, s.statistics[o].onStatisticNormalizationField = h + e * l);\n            break;\n          }\n\n        case \"sum\":\n        case \"avg\":\n          {\n            s.statistics[o] || (s.statistics[o] = {\n              value: 0,\n              nanCount: 0\n            });\n            const t = s.statistics[o].value,\n                  i = s.statistics[o].nanCount;\n            null == n || isNaN(n) ? s.statistics[o].nanCount = i + e : s.statistics[o].value = t + e * n;\n            break;\n          }\n\n        case \"avg_angle\":\n          {\n            s.statistics[o] || (s.statistics[o] = {\n              x: 0,\n              y: 0,\n              nanCount: 0\n            });\n            const t = s.statistics[o].x,\n                  i = s.statistics[o].y,\n                  a = s.statistics[o].nanCount,\n                  l = Math.PI / 180;\n            null == n || isNaN(n) ? s.statistics[o].nanCount = a + e : (s.statistics[o].x = t + e * Math.cos(n * l), s.statistics[o].y = i + e * Math.sin(n * l));\n            break;\n          }\n\n        case \"mode\":\n          {\n            s.statistics[o] || (s.statistics[o] = {});\n            const t = s.statistics[o][n] || 0;\n            s.statistics[o][n] = t + e;\n            break;\n          }\n      }\n    }\n  }\n\n  _aggregateStatistics(t, s) {\n    for (const e of this._statisticFields) {\n      const i = e.name;\n\n      switch (e.statisticType) {\n        case \"sum\":\n        case \"avg\":\n        case \"avg_angle\":\n        case \"mode\":\n        case \"norm\":\n          t[i] || (t[i] = {});\n\n          for (const e in s[i]) {\n            const o = t[i][e] || 0;\n            t[i][e] = o + s[i][e];\n          }\n\n      }\n    }\n  }\n\n  _normalizeStatistics(t, s) {\n    const e = {};\n\n    for (const i of this._statisticFields) {\n      const o = i.name;\n\n      switch (i.statisticType) {\n        case \"norm\":\n          {\n            const i = t[o];\n            if (s && null == i.onStatisticNormalizationField) break;\n\n            if (s && i.onStatisticNormalizationField) {\n              e[o] = i.onStatisticField / i.onStatisticNormalizationField;\n              break;\n            }\n\n            e[o] = 0;\n            break;\n          }\n\n        case \"sum\":\n          {\n            if (!s) break;\n            const {\n              value: i,\n              nanCount: n\n            } = t[o];\n            if (!(s - n)) break;\n            e[o] = i;\n            break;\n          }\n\n        case \"avg\":\n          {\n            if (!s) break;\n            const {\n              value: i,\n              nanCount: n\n            } = t[o];\n            if (!(s - n)) break;\n            e[o] = i / (s - n);\n            break;\n          }\n\n        case \"avg_angle\":\n          {\n            if (!s) break;\n            const {\n              x: i,\n              y: n,\n              nanCount: a\n            } = t[o];\n            if (!(s - a)) break;\n            const l = i / (s - a),\n                  r = n / (s - a),\n                  h = 180 / Math.PI,\n                  c = Math.atan2(r, l) * h;\n            e[o] = c;\n            break;\n          }\n\n        case \"mode\":\n          {\n            const s = t[o];\n            let i = 0,\n                n = null;\n\n            for (const t in s) {\n              const e = s[t];\n              e > i && (i = e, n = t);\n            }\n\n            e[o] = \"null\" === n ? null : n;\n            break;\n          }\n      }\n    }\n\n    return e;\n  }\n\n}\n\nclass a {\n  constructor(t, s, e) {\n    this.count = 0, this.xTotal = 0, this.yTotal = 0, this.statistics = {}, this.displayId = 0, this.displayIds = new Set(), this.next = null, this.depth = 0, this.xNode = 0, this.yNode = 0, this.xGeohashTotal = 0, this.yGeohashTotal = 0, this.children = new Array(32);\n\n    for (let i = 0; i < this.children.length; i++) this.children[i] = null;\n\n    this.xNode = t, this.yNode = s, this.depth = e;\n  }\n\n  realloc(t, s, e) {\n    for (let i = 0; i < this.children.length; i++) this.children[i] = null;\n\n    return this.xNode = t, this.yNode = s, this.depth = e, this.next = null, this.xGeohashTotal = 0, this.yGeohashTotal = 0, this.xTotal = 0, this.yTotal = 0, this.count = 0, this.statistics = {}, this.displayIds.clear(), this;\n  }\n\n  add(t) {\n    this.displayIds.add(t);\n  }\n\n  remove(t) {\n    this.displayIds.delete(t);\n  }\n\n  getLngLatBounds() {\n    const t = this.depth,\n          s = Math.ceil(t / 2),\n          e = Math.floor(t / 2),\n          o = 30 - (3 * s + 2 * e),\n          n = 30 - (2 * s + 3 * e),\n          a = this.xNode << o,\n          l = this.yNode << n;\n    return i({\n      geohashX: a,\n      geohashY: l\n    }, this.depth);\n  }\n\n  find(t, s, e, i, o, n) {\n    if (i >= e) return this;\n    const a = 1 - i % 2,\n          l = 3 * a + 2 * (1 - a),\n          r = 2 * a + 3 * (1 - a),\n          h = 30 - o - l,\n          c = 30 - n - r,\n          d = ((t & 7 * a + 3 * (1 - a) << h) >> h) + ((s & 3 * a + 7 * (1 - a) << c) >> c) * (8 * a + 4 * (1 - a)),\n          u = this.children[d];\n    return null == u ? null : u.find(t, s, e, i + 1, o + l, n + r);\n  }\n\n}\n\nexport { n as GeohashTree };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/geohash/GeohashTree.js"],"names":["t","isSome","s","mapOr","e","decodeGeohashXY","i","FeatureSetReaderJSON","o","n","constructor","_nodes","_root","a","_statisticFields","_pool","_serviceInfo","_acquire","dequeue","realloc","_release","enqueue","count","size","poolSize","depth","_forEachNode","Math","max","dropLevels","children","length","clear","insert","fromOptimizedFeatures","getCursor","next","readGeometry","l","coords","r","geohashX","h","geohashY","insertCursor","displayId","c","d","xTotal","yTotal","xGeohashTotal","yGeohashTotal","_updateStatisticsCursor","add","u","ceil","f","floor","x","m","p","y","_","g","remove","removeCursor","getDisplayId","find","findSingleOccupancyNode","xNode","yNode","N","T","M","v","C","S","b","I","k","min","F","G","z","getRegionDisplayIds","displayIds","forEach","push","getRegionStatistics","_aggregateStatistics","statistics","w","A","j","attributes","_normalizeStatistics","referenceId","_linkChildren","name","inField","readAttribute","getComputedNumericAtIndex","inFieldIndex","statisticType","inNormalizationField","onStatisticField","onStatisticNormalizationField","isNaN","value","nanCount","PI","cos","sin","atan2","Set","Array","delete","getLngLatBounds","GeohashTree"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport t from\"../core/CircularArray.js\";import{isSome as s,mapOr as e}from\"../core/maybe.js\";import{decodeGeohashXY as i}from\"./geohashUtils.js\";import{FeatureSetReaderJSON as o}from\"../views/2d/layers/features/support/FeatureSetReaderJSON.js\";class n{constructor(s=[],e,i=8096){this._nodes=0,this._root=new a(0,0,0),this._statisticFields=s,this._pool=i?new t(8096):null,this._serviceInfo=e}_acquire(t,e,i){this._nodes++;let o=null;return s(this._pool)&&(o=this._pool.dequeue()),s(o)?o.realloc(t,e,i):new a(t,e,i)}_release(t){this._nodes--,s(this._pool)&&this._pool.enqueue(t)}get count(){return this._root.count}get size(){return this._nodes}get poolSize(){return e(this._pool,0,(t=>t.size))}get depth(){let t=0;return this._forEachNode((s=>t=Math.max(t,s.depth))),t}dropLevels(t){this._forEachNode((s=>{if(s.depth>=t)for(let t=0;t<s.children.length;t++){const e=s.children[t];s.children[t]=null,e&&this._release(e)}}))}clear(){this.dropLevels(0)}insert(t,s,e=0){const i=o.fromOptimizedFeatures([t],this._serviceInfo).getCursor();i.next();const n=i.readGeometry();if(!n)return;const[a,l]=n.coords,r=t.geohashX,h=t.geohashY;this.insertCursor(i,t.displayId,a,l,r,h,s,e)}insertCursor(t,s,e,i,o,n,a,l=0){let r=this._root,h=0,c=0,d=0;for(;null!==r;){if(r.depth>=l&&(r.count+=1,r.xTotal+=e,r.yTotal+=i,r.xGeohashTotal+=o,r.yGeohashTotal+=n,r.displayId=s,this._updateStatisticsCursor(t,r,1)),h>=a)return void r.add(s);const u=Math.ceil((h+1)/2),f=Math.floor((h+1)/2),x=1-h%2,m=30-(3*u+2*f),p=30-(2*u+3*f),y=(o&7*x+3*(1-x)<<m)>>m,_=(n&3*x+7*(1-x)<<p)>>p,g=y+_*(8*x+4*(1-x));c=c<<3*x+2*(1-x)|y,d=d<<2*x+3*(1-x)|_,null==r.children[g]&&(r.children[g]=this._acquire(c,d,h+1)),h+=1,r=r.children[g]}}remove(t,s){const e=o.fromOptimizedFeatures([t],this._serviceInfo).getCursor();e.next();const i=e.readGeometry();if(!i)return;const[n,a]=i.coords,l=t.geohashX,r=t.geohashY;this.removeCursor(e,n,a,l,r,s)}removeCursor(t,s,e,i,o,n){let a=this._root,l=0;for(;null!==a;){if(a.count-=1,a.xTotal-=s,a.yTotal-=e,a.xGeohashTotal-=i,a.yGeohashTotal-=o,this._updateStatisticsCursor(t,a,-1),l>=n)return void a.remove(t.getDisplayId());const r=Math.ceil((l+1)/2),h=Math.floor((l+1)/2),c=1-l%2,d=30-(3*r+2*h),u=30-(2*r+3*h),f=((i&7*c+3*(1-c)<<d)>>d)+((o&3*c+7*(1-c)<<u)>>u)*(8*c+4*(1-c)),x=a.children[f];1===x.count&&(this._release(x),a.children[f]=null),l+=1,a=x}}find(t,s,e){return this._root.find(t,s,e,0,0,0)}findSingleOccupancyNode(t,s,e,i,o){let n=this._root;for(;null!==n;){const a=n.depth,l=n.xNode,r=n.yNode,h=1-a%2,c=n.xGeohashTotal/n.count,d=n.yGeohashTotal/n.count;if(1===n.count&&t<c&&c<=e&&s<d&&d<=i)return n;if(a>=o){n=n.next;continue}const u=Math.ceil((a+1)/2),f=Math.floor((a+1)/2),x=30-(3*u+2*f),m=30-(2*u+3*f),p=~((1<<x)-1),y=~((1<<m)-1),_=(t&p)>>x,g=(s&y)>>m,N=(e&p)>>x,T=(i&y)>>m,M=l<<3*h+2*(1-h),v=r<<2*h+3*(1-h),C=M+8*h+4*(1-h),S=v+4*h+8*(1-h),b=Math.max(M,_),I=Math.max(v,g),k=Math.min(C,N),F=Math.min(S,T);let G=null,z=null;for(let t=I;t<=F;t++)for(let s=b;s<=k;s++){const e=s-M+(t-v)*(8*h+4*(1-h)),i=n.children[e];i&&(G||(G=i,G.next=n.next),z&&(z.next=i),z=i,i.next=n.next)}n=G||n.next}return null}getRegionDisplayIds(t,s,e,i,o){let n=this._root;const a=[];for(;null!==n;){const l=n.depth,r=n.xNode,h=n.yNode;if(l>=o){const o=n.xGeohashTotal/n.count,l=n.yGeohashTotal/n.count;t<=o&&o<=e&&s<=l&&l<=i&&n.displayIds.forEach((t=>a.push(t))),n=n.next;continue}const c=Math.ceil((l+1)/2),d=Math.floor((l+1)/2),u=1-l%2,f=30-(3*c+2*d),x=30-(2*c+3*d),m=~((1<<f)-1),p=~((1<<x)-1),y=(t&m)>>f,_=(s&p)>>x,g=(e&m)>>f,N=(i&p)>>x,T=r<<3*u+2*(1-u),M=h<<2*u+3*(1-u),v=T+8*u+4*(1-u),C=M+4*u+8*(1-u),S=Math.max(T,y),b=Math.max(M,_),I=Math.min(v,g),k=Math.min(C,N);let F=null,G=null;for(let t=b;t<=k;t++)for(let s=S;s<=I;s++){const e=s-T+(t-M)*(8*u+4*(1-u)),i=n.children[e];i&&(F||(F=i,F.next=n.next),G&&(G.next=i),G=i,i.next=n.next)}n=F||n.next}return a}getRegionStatistics(t,s,e,i,o){let n=this._root,a=0,l=0,r=0;const h={};let c=0;for(;null!==n;){const d=n.depth,u=n.xNode,f=n.yNode;if(d>=o){const o=n.xGeohashTotal/n.count,d=n.yGeohashTotal/n.count;t<o&&o<=e&&s<d&&d<=i&&(a+=n.count,l+=n.xTotal,r+=n.yTotal,1===n.count&&(c=n.displayId),this._aggregateStatistics(h,n.statistics)),n=n.next;continue}const x=Math.ceil((d+1)/2),m=Math.floor((d+1)/2),p=1-d%2,y=30-(3*x+2*m),_=30-(2*x+3*m),g=~((1<<y)-1),N=~((1<<_)-1),T=(t&g)>>y,M=(s&N)>>_,v=(e&g)>>y,C=(i&N)>>_,S=u<<3*p+2*(1-p),b=f<<2*p+3*(1-p),I=S+8*p+4*(1-p),k=b+4*p+8*(1-p),F=Math.max(S,T),G=Math.max(b,M),z=Math.min(I,v),w=Math.min(k,C);let A=null,j=null;for(let o=G;o<=w;o++)for(let d=F;d<=z;d++){const u=d-S+(o-b)*(8*p+4*(1-p)),f=n.children[u];if(f){if(o!==G&&o!==w&&d!==F&&d!==z){const o=f.xGeohashTotal/f.count,n=f.yGeohashTotal/f.count;t<o&&o<=e&&s<n&&n<=i&&(a+=f.count,l+=f.xTotal,r+=f.yTotal,1===f.count&&(c=f.displayId),this._aggregateStatistics(h,f.statistics));continue}A||(A=f,A.next=n.next),j&&(j.next=f),j=f,f.next=n.next}}n=A||n.next}return{count:a,attributes:this._normalizeStatistics(h,a),xTotal:l,yTotal:r,referenceId:c}}_forEachNode(t){let s=this._root;for(;null!==s;){const e=this._linkChildren(s)||s.next;t(s),s=e}}_linkChildren(t){let s=null,e=null;for(let i=0;i<=t.children.length;i++){const o=t.children[i];o&&(s||(s=o,s.next=t.next),e&&(e.next=o),e=o,o.next=t.next)}return s}_updateStatisticsCursor(t,s,e){for(const i of this._statisticFields){const o=i.name,n=i.inField?t.readAttribute(i.inField):t.getComputedNumericAtIndex(i.inFieldIndex);switch(i.statisticType){case\"norm\":{s.statistics[o]||(s.statistics[o]={});const a=i.inNormalizationField,l=t.readAttribute(a),r=s.statistics[o].onStatisticField||0,h=s.statistics[o].onStatisticNormalizationField||0;null==n||isNaN(n)||null==l||0===l||isNaN(l)||(s.statistics[o].onStatisticField=r+e*n,s.statistics[o].onStatisticNormalizationField=h+e*l);break}case\"sum\":case\"avg\":{s.statistics[o]||(s.statistics[o]={value:0,nanCount:0});const t=s.statistics[o].value,i=s.statistics[o].nanCount;null==n||isNaN(n)?s.statistics[o].nanCount=i+e:s.statistics[o].value=t+e*n;break}case\"avg_angle\":{s.statistics[o]||(s.statistics[o]={x:0,y:0,nanCount:0});const t=s.statistics[o].x,i=s.statistics[o].y,a=s.statistics[o].nanCount,l=Math.PI/180;null==n||isNaN(n)?s.statistics[o].nanCount=a+e:(s.statistics[o].x=t+e*Math.cos(n*l),s.statistics[o].y=i+e*Math.sin(n*l));break}case\"mode\":{s.statistics[o]||(s.statistics[o]={});const t=s.statistics[o][n]||0;s.statistics[o][n]=t+e;break}}}}_aggregateStatistics(t,s){for(const e of this._statisticFields){const i=e.name;switch(e.statisticType){case\"sum\":case\"avg\":case\"avg_angle\":case\"mode\":case\"norm\":t[i]||(t[i]={});for(const e in s[i]){const o=t[i][e]||0;t[i][e]=o+s[i][e]}}}}_normalizeStatistics(t,s){const e={};for(const i of this._statisticFields){const o=i.name;switch(i.statisticType){case\"norm\":{const i=t[o];if(s&&null==i.onStatisticNormalizationField)break;if(s&&i.onStatisticNormalizationField){e[o]=i.onStatisticField/i.onStatisticNormalizationField;break}e[o]=0;break}case\"sum\":{if(!s)break;const{value:i,nanCount:n}=t[o];if(!(s-n))break;e[o]=i;break}case\"avg\":{if(!s)break;const{value:i,nanCount:n}=t[o];if(!(s-n))break;e[o]=i/(s-n);break}case\"avg_angle\":{if(!s)break;const{x:i,y:n,nanCount:a}=t[o];if(!(s-a))break;const l=i/(s-a),r=n/(s-a),h=180/Math.PI,c=Math.atan2(r,l)*h;e[o]=c;break}case\"mode\":{const s=t[o];let i=0,n=null;for(const t in s){const e=s[t];e>i&&(i=e,n=t)}e[o]=\"null\"===n?null:n;break}}}return e}}class a{constructor(t,s,e){this.count=0,this.xTotal=0,this.yTotal=0,this.statistics={},this.displayId=0,this.displayIds=new Set,this.next=null,this.depth=0,this.xNode=0,this.yNode=0,this.xGeohashTotal=0,this.yGeohashTotal=0,this.children=new Array(32);for(let i=0;i<this.children.length;i++)this.children[i]=null;this.xNode=t,this.yNode=s,this.depth=e}realloc(t,s,e){for(let i=0;i<this.children.length;i++)this.children[i]=null;return this.xNode=t,this.yNode=s,this.depth=e,this.next=null,this.xGeohashTotal=0,this.yGeohashTotal=0,this.xTotal=0,this.yTotal=0,this.count=0,this.statistics={},this.displayIds.clear(),this}add(t){this.displayIds.add(t)}remove(t){this.displayIds.delete(t)}getLngLatBounds(){const t=this.depth,s=Math.ceil(t/2),e=Math.floor(t/2),o=30-(3*s+2*e),n=30-(2*s+3*e),a=this.xNode<<o,l=this.yNode<<n;return i({geohashX:a,geohashY:l},this.depth)}find(t,s,e,i,o,n){if(i>=e)return this;const a=1-i%2,l=3*a+2*(1-a),r=2*a+3*(1-a),h=30-o-l,c=30-n-r,d=((t&7*a+3*(1-a)<<h)>>h)+((s&3*a+7*(1-a)<<c)>>c)*(8*a+4*(1-a)),u=this.children[d];return null==u?null:u.find(t,s,e,i+1,o+l,n+r)}}export{n as GeohashTree};\n"]},"metadata":{},"sourceType":"module"}