{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../request.js\";\nimport r from \"../core/Error.js\";\nimport { isSome as t } from \"../core/maybe.js\";\nimport { getDeepValue as o } from \"../core/object.js\";\nimport { removeTrailingSlash as s } from \"../core/urlUtils.js\";\nimport { asValidOptions as a, parseUrl as l } from \"./utils.js\";\nimport n from \"./support/NetworkServiceDescription.js\";\n\nfunction i(e, r, t, o) {\n  o[t] = [r.length, r.length + e.length], e.forEach(e => {\n    r.push(e.geometry);\n  });\n}\n\nfunction d(e, r) {\n  for (let t = 0; t < r.length; t++) {\n    const o = e[r[t]];\n    if (o && o.length) for (const e of o) e.z = void 0;\n  }\n\n  console.log(\"The remote Network Analysis service is powered by a network dataset which is not Z-aware.\\nZ-coordinates of the input geometry are ignored.\");\n}\n\nfunction u(e, r) {\n  for (let o = 0; o < r.length; o++) {\n    const s = e[r[o]];\n    if (s && s.length) for (const e of s) if (t(e) && e.hasZ) return !0;\n  }\n\n  return !1;\n}\n\nasync function f(t, o, s) {\n  if (!t) throw new r(\"network-service:missing-url\", \"Url to Network service is missing\");\n  const l = a({\n    f: \"json\",\n    token: o\n  }, s),\n        {\n    data: i\n  } = await e(t, l);\n  i.supportedTravelModes || (i.supportedTravelModes = []);\n\n  for (let e = 0; e < i.supportedTravelModes.length; e++) i.supportedTravelModes[e].id || (i.supportedTravelModes[e].id = i.supportedTravelModes[e].itemId);\n\n  const d = i.currentVersion >= 10.4 ? c(t, o, s) : p(t, s),\n        {\n    defaultTravelMode: u,\n    supportedTravelModes: f\n  } = await d;\n  return i.defaultTravelMode = u, i.supportedTravelModes = f, n.fromJSON(i);\n}\n\nasync function p(r, t) {\n  var n, i;\n  const d = a({\n    f: \"json\"\n  }, t),\n        {\n    data: u\n  } = await e(r.replace(/\\/rest\\/.*$/i, \"/info\"), d);\n  if (!u || !u.owningSystemUrl) return {\n    supportedTravelModes: [],\n    defaultTravelMode: null\n  };\n  const {\n    owningSystemUrl: f\n  } = u,\n        p = s(f) + \"/sharing/rest/portals/self\",\n        {\n    data: c\n  } = await e(p, d),\n        v = o(\"helperServices.routingUtilities.url\", c);\n  if (!v) return {\n    supportedTravelModes: [],\n    defaultTravelMode: null\n  };\n  const m = l(f),\n        T = /\\/solve$/i.test(m.path) ? \"Route\" : /\\/solveclosestfacility$/i.test(m.path) ? \"ClosestFacility\" : \"ServiceAreas\",\n        M = a({\n    f: \"json\",\n    serviceName: T\n  }, t),\n        h = s(v) + \"/GetTravelModes/execute\",\n        w = await e(h, M),\n        g = [];\n  let y = null;\n\n  if (null != w && null != (n = w.data) && null != (i = n.results) && i.length) {\n    const e = w.data.results;\n\n    for (const r of e) {\n      var j;\n\n      if (\"supportedTravelModes\" === r.paramName) {\n        if (null != (j = r.value) && j.features) for (const {\n          attributes: e\n        } of r.value.features) if (e) {\n          const r = JSON.parse(e.TravelMode);\n          g.push(r);\n        }\n      } else \"defaultTravelMode\" === r.paramName && (y = r.value);\n    }\n  }\n\n  return {\n    supportedTravelModes: g,\n    defaultTravelMode: y\n  };\n}\n\nasync function c(t, o, l) {\n  try {\n    const r = a({\n      f: \"json\",\n      token: o\n    }, l),\n          n = s(t) + \"/retrieveTravelModes\",\n          {\n      data: {\n        supportedTravelModes: i,\n        defaultTravelMode: d\n      }\n    } = await e(n, r);\n    return {\n      supportedTravelModes: i,\n      defaultTravelMode: d\n    };\n  } catch (n) {\n    throw new r(\"network-service:retrieveTravelModes\", \"Could not get to the NAServer's retrieveTravelModes.\", {\n      error: n\n    });\n  }\n}\n\nexport { i as collectGeometries, d as dropZValuesOffInputGeometry, f as fetchServiceDescription, u as isInputGeometryZAware };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/rest/networkService.js"],"names":["e","r","isSome","t","getDeepValue","o","removeTrailingSlash","s","asValidOptions","a","parseUrl","l","n","i","length","forEach","push","geometry","d","z","console","log","u","hasZ","f","token","data","supportedTravelModes","id","itemId","currentVersion","c","p","defaultTravelMode","fromJSON","replace","owningSystemUrl","v","m","T","test","path","M","serviceName","h","w","g","y","results","j","paramName","value","features","attributes","JSON","parse","TravelMode","error","collectGeometries","dropZValuesOffInputGeometry","fetchServiceDescription","isInputGeometryZAware"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../request.js\";import r from\"../core/Error.js\";import{isSome as t}from\"../core/maybe.js\";import{getDeepValue as o}from\"../core/object.js\";import{removeTrailingSlash as s}from\"../core/urlUtils.js\";import{asValidOptions as a,parseUrl as l}from\"./utils.js\";import n from\"./support/NetworkServiceDescription.js\";function i(e,r,t,o){o[t]=[r.length,r.length+e.length],e.forEach((e=>{r.push(e.geometry)}))}function d(e,r){for(let t=0;t<r.length;t++){const o=e[r[t]];if(o&&o.length)for(const e of o)e.z=void 0}console.log(\"The remote Network Analysis service is powered by a network dataset which is not Z-aware.\\nZ-coordinates of the input geometry are ignored.\")}function u(e,r){for(let o=0;o<r.length;o++){const s=e[r[o]];if(s&&s.length)for(const e of s)if(t(e)&&e.hasZ)return!0}return!1}async function f(t,o,s){if(!t)throw new r(\"network-service:missing-url\",\"Url to Network service is missing\");const l=a({f:\"json\",token:o},s),{data:i}=await e(t,l);i.supportedTravelModes||(i.supportedTravelModes=[]);for(let e=0;e<i.supportedTravelModes.length;e++)i.supportedTravelModes[e].id||(i.supportedTravelModes[e].id=i.supportedTravelModes[e].itemId);const d=i.currentVersion>=10.4?c(t,o,s):p(t,s),{defaultTravelMode:u,supportedTravelModes:f}=await d;return i.defaultTravelMode=u,i.supportedTravelModes=f,n.fromJSON(i)}async function p(r,t){var n,i;const d=a({f:\"json\"},t),{data:u}=await e(r.replace(/\\/rest\\/.*$/i,\"/info\"),d);if(!u||!u.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:f}=u,p=s(f)+\"/sharing/rest/portals/self\",{data:c}=await e(p,d),v=o(\"helperServices.routingUtilities.url\",c);if(!v)return{supportedTravelModes:[],defaultTravelMode:null};const m=l(f),T=/\\/solve$/i.test(m.path)?\"Route\":/\\/solveclosestfacility$/i.test(m.path)?\"ClosestFacility\":\"ServiceAreas\",M=a({f:\"json\",serviceName:T},t),h=s(v)+\"/GetTravelModes/execute\",w=await e(h,M),g=[];let y=null;if(null!=w&&null!=(n=w.data)&&null!=(i=n.results)&&i.length){const e=w.data.results;for(const r of e){var j;if(\"supportedTravelModes\"===r.paramName){if(null!=(j=r.value)&&j.features)for(const{attributes:e}of r.value.features)if(e){const r=JSON.parse(e.TravelMode);g.push(r)}}else\"defaultTravelMode\"===r.paramName&&(y=r.value)}}return{supportedTravelModes:g,defaultTravelMode:y}}async function c(t,o,l){try{const r=a({f:\"json\",token:o},l),n=s(t)+\"/retrieveTravelModes\",{data:{supportedTravelModes:i,defaultTravelMode:d}}=await e(n,r);return{supportedTravelModes:i,defaultTravelMode:d}}catch(n){throw new r(\"network-service:retrieveTravelModes\",\"Could not get to the NAServer's retrieveTravelModes.\",{error:n})}}export{i as collectGeometries,d as dropZValuesOffInputGeometry,f as fetchServiceDescription,u as isInputGeometryZAware};\n"]},"metadata":{},"sourceType":"module"}