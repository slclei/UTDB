{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../../../core/Error.js\";\nimport { clone as t } from \"../../../core/lang.js\";\nimport { removeMaybe as i, destroyMaybe as s, isNone as r, isSome as a, isUndefined as n } from \"../../../core/maybe.js\";\nimport { MemCacheStorage as u, MemCache as o } from \"../../../core/MemCache.js\";\nimport { getMetersPerUnitForSR as c } from \"../../../core/unitUtils.js\";\nimport { create as h, set as l, NEGATIVE_INFINITY as p, expandWithAABB as d } from \"../../../geometry/support/aaBoundingBox.js\";\nimport { fromValues as y, create as m } from \"../../../geometry/support/aaBoundingRect.js\";\nimport { getBoundsXY as f } from \"../../../geometry/support/boundsUtils.js\";\nimport { fromJSON as x, isExtent as _, isPolygon as g } from \"../../../geometry/support/jsonUtils.js\";\nimport { normalizeCentralMeridian as w } from \"../../../geometry/support/normalizeUtils.js\";\nimport { equals as S, isValid as Q } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport { validateFields as R, validateWhere as F, validateHaving as I, hasInvalidFieldType as E } from \"./attributeSupport.js\";\nimport { project as j, checkProjectionSupport as b } from \"./projectionSupport.js\";\nimport { queryCapabilities as k } from \"./QueryEngineCapabilities.js\";\nimport A, { SnappingTypes as z } from \"./QueryEngineResult.js\";\nimport { getSpatialQueryOperator as B, canQueryWithRBush as C, checkSpatialQuerySupport as T } from \"./spatialQuerySupport.js\";\nimport { getTimeExtent as O } from \"./timeSupport.js\";\nimport { cleanFromGeometryEngine as v, normalizeQuery as G, QUERY_ENGINE_EMPTY_RESULT as P } from \"./utils.js\";\nimport q from \"../../support/FieldsIndex.js\";\nimport { loadArcade as M } from \"../../../support/arcadeOnDemand.js\";\nimport { noBudget as U } from \"../../../views/support/Scheduler.js\";\n\nfunction N(e) {\n  return e.every(e => \"exceedslimit\" !== e.statisticType);\n}\n\nconst Z = \"feature-store:unsupported-query\";\n\nclass H {\n  constructor(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let i = arguments.length > 2 ? arguments[2] : undefined;\n    let s = arguments.length > 3 ? arguments[3] : undefined;\n    let r = arguments.length > 4 ? arguments[4] : undefined;\n    this.attributes = e, this.geometry = i, this.centroid = s, this.filterFlags = r, this.groupId = -1, this.displayId = t;\n  }\n\n}\n\nconst D = new Set(),\n      J = new u(2e6);\nlet L = 0;\n\nclass V {\n  constructor(e) {\n    this.capabilities = {\n      query: k\n    }, this.geometryType = e.geometryType, this.hasM = e.hasM, this.hasZ = e.hasZ, this.objectIdField = e.objectIdField, this.spatialReference = e.spatialReference, this.definitionExpression = e.definitionExpression, this.featureStore = e.featureStore, this.aggregateAdapter = e.aggregateAdapter, this._changeHandle = this.featureStore.events.on(\"changed\", () => this.clearCache()), this.timeInfo = e.timeInfo, e.cacheSpatialQueries && (this._geometryQueryCache = new o(L++ + \"$$\", J)), this.fieldsIndex = new q(e.fields), e.scheduler && e.priority && (this._frameTask = e.scheduler.registerTask(e.priority));\n  }\n\n  destroy() {\n    this._frameTask = i(this._frameTask), this.clearCache(), s(this._geometryQueryCache), this._changeHandle = i(this._changeHandle), s(this.fieldsIndex);\n  }\n\n  get featureAdapter() {\n    return this.featureStore.featureAdapter;\n  }\n\n  get fullExtent() {\n    const e = this.featureStore.fullBounds;\n    return e ? {\n      xmin: e[0],\n      ymin: e[1],\n      xmax: e[2],\n      ymax: e[3],\n      spatialReference: v(this.spatialReference)\n    } : null;\n  }\n\n  get timeExtent() {\n    return this.timeInfo ? (this._timeExtent || (this._timeExtent = O(this.timeInfo, this.featureStore)), this._timeExtent) : null;\n  }\n\n  clearCache() {\n    this._geometryQueryCache && this._geometryQueryCache.clear(), this._allItems = null, this._timeExtent = null;\n  }\n\n  async executeQuery() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let i = arguments.length > 1 ? arguments[1] : undefined;\n    let s,\n        r = t(e);\n\n    try {\n      r = await this._schedule(() => G(r, this.definitionExpression, this.spatialReference), i), r = await this._reschedule(() => this._checkQuerySupport(r), i), s = await this._reschedule(() => this._executeGeometryQuery(r, i), i), s = await this._reschedule(() => s.executeAggregateIdsQuery(r), i), s = await this._reschedule(() => s.executeObjectIdsQuery(r), i), s = await this._reschedule(() => s.executeTimeQuery(r), i), s = await this._reschedule(() => s.executeAttributesQuery(r), i);\n    } catch (a) {\n      if (a !== P) throw a;\n      s = new A([], null, this);\n    }\n\n    return s.createQueryResponse(r);\n  }\n\n  async executeQueryForCount() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let i = arguments.length > 1 ? arguments[1] : undefined;\n    let s = t(e);\n    s.returnGeometry = !1, s.returnCentroid = !1, s.outSR = null;\n\n    try {\n      s = await this._schedule(() => G(s, this.definitionExpression, this.spatialReference), i), s = await this._reschedule(() => this._checkQuerySupport(s), i);\n      let e = await this._reschedule(() => this._executeGeometryQuery(s, i), i);\n      return e = await this._reschedule(() => e.executeAggregateIdsQuery(s), i), e = await this._reschedule(() => e.executeObjectIdsQuery(s), i), e = await this._reschedule(() => e.executeTimeQuery(s), i), e = await this._reschedule(() => e.executeAttributesQuery(s), i), e.createQueryResponseForCount(s);\n    } catch (r) {\n      if (r !== P) throw r;\n      return 0;\n    }\n  }\n\n  async executeQueryForExtent() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let i = arguments.length > 1 ? arguments[1] : undefined;\n    let s,\n        r = t(e);\n    const a = r.outSR;\n\n    try {\n      r = await this._schedule(() => G(r, this.definitionExpression, this.spatialReference), i), r = await this._reschedule(() => this._checkQuerySupport(r), i), r.returnGeometry = !0, r.returnCentroid = !1, r.outSR = null, s = await this._reschedule(() => this._executeGeometryQuery(r, i), i), s = await this._reschedule(() => s.executeAggregateIdsQuery(r), i), s = await this._reschedule(() => s.executeObjectIdsQuery(r), i), s = await this._reschedule(() => s.executeTimeQuery(r), i), s = await this._reschedule(() => s.executeAttributesQuery(r), i);\n      const e = s.size;\n      if (!e) return {\n        count: e,\n        extent: null\n      };\n      l(W, p), this.featureStore.forEachBounds(s.items, e => d(W, e), $);\n      const t = {\n        xmin: W[0],\n        ymin: W[1],\n        xmax: W[3],\n        ymax: W[4],\n        spatialReference: v(this.spatialReference)\n      };\n      this.hasZ && isFinite(W[2]) && isFinite(W[5]) && (t.zmin = W[2], t.zmax = W[5]);\n      const n = j(t, s.spatialReference, a);\n\n      if (n.spatialReference = v(a || this.spatialReference), n.xmax - n.xmin == 0) {\n        const e = c(n.spatialReference);\n        n.xmin -= e, n.xmax += e;\n      }\n\n      if (n.ymax - n.ymin == 0) {\n        const e = c(n.spatialReference);\n        n.ymin -= e, n.ymax += e;\n      }\n\n      if (this.hasZ && null != n.zmin && null != n.zmax && n.zmax - n.zmin == 0) {\n        const e = c(n.spatialReference);\n        n.zmin -= e, n.zmax += e;\n      }\n\n      return {\n        count: e,\n        extent: n\n      };\n    } catch (n) {\n      if (n === P) return {\n        count: 0,\n        extent: null\n      };\n      throw n;\n    }\n  }\n\n  async executeQueryForIds() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let t = arguments.length > 1 ? arguments[1] : undefined;\n    return this.executeQueryForIdSet(e, t).then(e => Array.from(e));\n  }\n\n  async executeQueryForIdSet() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let i = arguments.length > 1 ? arguments[1] : undefined;\n    let s,\n        r = t(e);\n    r.returnGeometry = !1, r.returnCentroid = !1, r.outSR = null;\n\n    try {\n      r = await this._schedule(() => G(r, this.definitionExpression, this.spatialReference), i), r = await this._reschedule(() => this._checkQuerySupport(r), i), s = await this._reschedule(() => this._executeGeometryQuery(r, i), i), s = await this._reschedule(() => s.executeAggregateIdsQuery(r), i), s = await this._reschedule(() => s.executeObjectIdsQuery(r), i), s = await this._reschedule(() => s.executeTimeQuery(r), i), s = await this._reschedule(() => s.executeAttributesQuery(r), i);\n      const e = s.items,\n            t = new Set();\n      return await this._reschedule(() => {\n        for (const i of e) t.add(s.featureAdapter.getObjectId(i));\n      }, i), t;\n    } catch (a) {\n      if (a === P) return new Set();\n      throw a;\n    }\n  }\n\n  async executeQueryForSnapping(e, t) {\n    const {\n      point: i,\n      distance: s,\n      types: a\n    } = e;\n    if (a === z.NONE) return {\n      candidates: []\n    };\n    const n = await this._reschedule(() => this._checkQuerySupport(e.query), t),\n          u = !S(i.spatialReference, this.spatialReference);\n    u && (await b(i.spatialReference, this.spatialReference));\n    const o = \"number\" == typeof s ? s : s.x,\n          c = \"number\" == typeof s ? s : s.y,\n          h = {\n      xmin: i.x - o,\n      xmax: i.x + o,\n      ymin: i.y - c,\n      ymax: i.y + c,\n      spatialReference: i.spatialReference\n    },\n          l = u ? j(h, this.spatialReference) : h;\n    if (!l) return {\n      candidates: []\n    };\n    const p = (await w(x(i), null, {\n      signal: t\n    }))[0],\n          d = (await w(x(l), null, {\n      signal: t\n    }))[0];\n    if (r(p) || r(d)) return {\n      candidates: []\n    };\n    let y = new A(this._searchFeatures(this._getQueryBBoxes(d.toJSON())), null, this);\n    y = await this._reschedule(() => y.executeObjectIdsQuery(n), t), y = await this._reschedule(() => y.executeTimeQuery(n), t), y = await this._reschedule(() => y.executeAttributesQuery(n), t);\n\n    const m = p.toJSON(),\n          f = u ? j(m, this.spatialReference) : m,\n          _ = u ? Math.max(l.xmax - l.xmin, l.ymax - l.ymin) / 2 : s;\n\n    return y.createSnappingResponse({ ...e,\n      point: f,\n      distance: _\n    }, i.spatialReference);\n  }\n\n  async executeQueryForLatestObservations() {\n    let i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let s = arguments.length > 1 ? arguments[1] : undefined;\n    if (!this.timeInfo || !this.timeInfo.trackIdField) throw new e(Z, \"Missing timeInfo or timeInfo.trackIdField\", {\n      query: i,\n      timeInfo: this.timeInfo\n    });\n    let r,\n        a = t(i);\n\n    try {\n      a = await this._schedule(() => G(a, this.definitionExpression, this.spatialReference), s), a = await this._reschedule(() => this._checkQuerySupport(a), s), r = await this._reschedule(() => this._executeGeometryQuery(a, s), s), r = await this._reschedule(() => r.executeAggregateIdsQuery(a), s), r = await this._reschedule(() => r.executeObjectIdsQuery(a), s), r = await this._reschedule(() => r.executeTimeQuery(a), s), r = await this._reschedule(() => r.executeAttributesQuery(a), s), r = await this._reschedule(() => r.filterLatest(), s);\n    } catch (n) {\n      if (n !== P) throw n;\n      r = new A([], null, this);\n    }\n\n    return r.createQueryResponse(a);\n  }\n\n  async executeQueryForSummaryStatistics() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let t = arguments.length > 1 ? arguments[1] : undefined;\n    let i = arguments.length > 2 ? arguments[2] : undefined;\n    const {\n      field: s,\n      normalizationField: r,\n      valueExpression: a\n    } = t;\n    return (await this._getQueryEngineResultForStats(e, {\n      field: s,\n      normalizationField: r,\n      valueExpression: a\n    }, i)).createSummaryStatisticsResponse(e, t);\n  }\n\n  async executeQueryForUniqueValues() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let t = arguments.length > 1 ? arguments[1] : undefined;\n    let i = arguments.length > 2 ? arguments[2] : undefined;\n    const {\n      field: s,\n      valueExpression: r\n    } = t;\n    return (await this._getQueryEngineResultForStats(e, {\n      field: s,\n      valueExpression: r\n    }, i)).createUniqueValuesResponse(e, t);\n  }\n\n  async executeQueryForClassBreaks() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let t = arguments.length > 1 ? arguments[1] : undefined;\n    let i = arguments.length > 2 ? arguments[2] : undefined;\n    const {\n      field: s,\n      normalizationField: r,\n      valueExpression: a\n    } = t;\n    return (await this._getQueryEngineResultForStats(e, {\n      field: s,\n      normalizationField: r,\n      valueExpression: a\n    }, i)).createClassBreaksResponse(e, t);\n  }\n\n  async executeQueryForHistogram() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let t = arguments.length > 1 ? arguments[1] : undefined;\n    let i = arguments.length > 2 ? arguments[2] : undefined;\n    const {\n      field: s,\n      normalizationField: r,\n      valueExpression: a\n    } = t;\n    return (await this._getQueryEngineResultForStats(e, {\n      field: s,\n      normalizationField: r,\n      valueExpression: a\n    }, i)).createHistogramResponse(e, t);\n  }\n\n  async _schedule(e, t) {\n    return a(this._frameTask) ? this._frameTask.schedule(e, t) : e(U);\n  }\n\n  async _reschedule(e, t) {\n    return a(this._frameTask) ? this._frameTask.reschedule(e, t) : e(U);\n  }\n\n  _getAll() {\n    if (!this._allItems) {\n      const e = [];\n      this.featureStore.forEach(t => e.push(t)), this._allItems = new A(e, null, this);\n    }\n\n    return this._allItems;\n  }\n\n  async _executeGeometryQuery(e, t) {\n    const {\n      geometry: i,\n      outSR: s,\n      spatialRel: r,\n      returnGeometry: a,\n      returnCentroid: u\n    } = e,\n          o = this.featureStore.featureSpatialReference,\n          c = i && o && o !== i.spatialReference ? j(i, o) : i,\n          h = a || u,\n          l = Q(s) && !S(this.spatialReference, s),\n          p = this._geometryQueryCache ? l && h ? JSON.stringify({\n      originalFilterGeometry: i,\n      spatialRelationship: r,\n      outSpatialReference: s\n    }) : JSON.stringify({\n      originalFilterGeometry: i,\n      spatialRelationship: r\n    }) : null;\n\n    if (p) {\n      const e = this._geometryQueryCache.get(p);\n\n      if (!n(e)) return e;\n    }\n\n    const d = async e => {\n      if (l && h) {\n        const t = await e.project(s);\n        return p && this._geometryQueryCache.put(p, t, t.size || 1), t;\n      }\n\n      return p && this._geometryQueryCache.put(p, e, e.size || 1), e;\n    };\n\n    if (!c) return d(this._getAll());\n    const y = this.featureAdapter;\n\n    if (\"esriSpatialRelDisjoint\" === r) {\n      const e = this._searchFeatures(this._getQueryBBoxes(i));\n\n      if (!e.length) return d(this._getAll());\n      let s, a;\n      const n = new Set();\n\n      for (const t of e) n.add(y.getObjectId(t));\n\n      await this._reschedule(() => {\n        let e = 0;\n        s = new Array(n.size), this.featureStore.forEach(t => s[e++] = t), a = n;\n      }, t);\n      const u = await this._reschedule(async () => {\n        const e = await B(r, c, this.geometryType, this.hasZ, this.hasM),\n              n = t => !a.has(y.getObjectId(t)) || e(y.getGeometry(t));\n\n        return new A(await this._runSpatialFilter(s, n, t), i, this);\n      }, t);\n      return d(u);\n    }\n\n    const m = this._searchFeatures(this._getQueryBBoxes(i));\n\n    if (!m.length) {\n      const e = new A([], i, this);\n      return p && this._geometryQueryCache.put(p, e, e.size || 1), e;\n    }\n\n    if (this._canExecuteSoloPass(c, e)) return d(new A(m, i, this));\n    const f = await B(r, c, this.geometryType, this.hasZ, this.hasM),\n          x = await this._runSpatialFilter(m, e => f(y.getGeometry(e)), t);\n    return d(new A(x, i, this));\n  }\n\n  async _runSpatialFilter(e, t, i) {\n    if (!t) return e;\n    if (r(this._frameTask)) return e.filter(e => t(e));\n    let s = 0;\n\n    const a = new Array(),\n          n = async r => {\n      for (; s < e.length;) {\n        const u = e[s++];\n        t(u) && (a.push(u), r.madeProgress()), r.done && (await this._reschedule(e => n(e), i));\n      }\n    };\n\n    return this._reschedule(e => n(e), i).then(() => a);\n  }\n\n  _canExecuteSoloPass(e, t) {\n    const {\n      geometryType: i\n    } = this,\n          {\n      spatialRel: s\n    } = t;\n    return C(e) && (\"esriSpatialRelEnvelopeIntersects\" === s || \"esriGeometryPoint\" === i && (\"esriSpatialRelIntersects\" === s || \"esriSpatialRelContains\" === s || \"esriSpatialRelWithin\" === s));\n  }\n\n  _getQueryBBoxes(e) {\n    if (C(e)) {\n      if (_(e)) return [y(e.xmin, e.ymin, e.xmax, e.ymax)];\n      if (g(e)) return e.rings.map(e => y(Math.min(e[0][0], e[2][0]), Math.min(e[0][1], e[2][1]), Math.max(e[0][0], e[2][0]), Math.max(e[0][1], e[2][1])));\n    }\n\n    return [f(m(), e)];\n  }\n\n  _searchFeatures(e) {\n    for (const s of e) this.featureStore.forEachInBounds(s, e => {\n      D.add(e);\n    });\n\n    const t = new Array(D.size);\n    let i = 0;\n    return D.forEach(e => t[i++] = e), D.clear(), t;\n  }\n\n  async _checkStatisticsSupport(t, i) {\n    if (t.distance < 0 || null != t.geometryPrecision || t.multipatchOption || t.pixelSize || t.relationParam || t.text || t.outStatistics || t.groupByFieldsForStatistics || t.having || t.orderByFields) throw new e(Z, \"Unsupported query options\", {\n      query: t\n    });\n    return Promise.all([this._checkAttributesQuerySupport(t), this._checkStatisticsParamsSupport(i), T(t, this.geometryType, this.spatialReference), b(this.spatialReference, t.outSR)]).then(() => t);\n  }\n\n  async _checkStatisticsParamsSupport(t) {\n    let i = [];\n\n    if (t.valueExpression) {\n      const {\n        arcadeUtils: e\n      } = await M();\n      i = e.extractFieldNames(t.valueExpression);\n    }\n\n    if (t.field && i.push(t.field), t.normalizationField && i.push(t.normalizationField), !i.length) throw new e(Z, \"params should have at least a field or valueExpression\", {\n      params: t\n    });\n    R(this.fieldsIndex, i, \"params contains missing fields\");\n  }\n\n  async _checkQuerySupport(t) {\n    if (t.distance < 0 || null != t.geometryPrecision || t.multipatchOption || t.pixelSize || t.relationParam || t.text) throw new e(Z, \"Unsupported query options\", {\n      query: t\n    });\n    return Promise.all([this._checkAttributesQuerySupport(t), this._checkStatisticsQuerySupport(t), T(t, this.geometryType, this.spatialReference), b(this.spatialReference, t.outSR)]).then(() => t);\n  }\n\n  _checkAttributesQuerySupport(t) {\n    const {\n      outFields: i,\n      orderByFields: s,\n      returnDistinctValues: r,\n      outStatistics: a\n    } = t,\n          n = a ? a.map(e => e.outStatisticFieldName && e.outStatisticFieldName.toLowerCase()).filter(Boolean) : [];\n\n    if (s && s.length > 0) {\n      const e = \" asc\",\n            t = \" desc\",\n            i = s.map(i => {\n        const s = i.toLowerCase();\n        return s.indexOf(e) > -1 ? s.split(e)[0] : s.indexOf(t) > -1 ? s.split(t)[0] : i;\n      }).filter(e => -1 === n.indexOf(e));\n      R(this.fieldsIndex, i, \"orderByFields contains missing fields\");\n    }\n\n    if (i && i.length > 0) R(this.fieldsIndex, i, \"outFields contains missing fields\");else if (r) throw new e(Z, \"outFields should be specified for returnDistinctValues\", {\n      query: t\n    });\n    F(this.fieldsIndex, t.where);\n  }\n\n  async _checkStatisticsQuerySupport(t) {\n    const {\n      outStatistics: i,\n      groupByFieldsForStatistics: s,\n      having: r\n    } = t,\n          a = s && s.length,\n          n = i && i.length;\n\n    if (r) {\n      if (!a || !n) throw new e(Z, \"outStatistics and groupByFieldsForStatistics should be specified with having\", {\n        query: t\n      });\n      I(this.fieldsIndex, r, i);\n    }\n\n    if (n) {\n      if (!N(i)) return;\n      const r = i.map(e => e.onStatisticField).filter(Boolean);\n      R(this.fieldsIndex, r, \"onStatisticFields contains missing fields\"), a && R(this.fieldsIndex, s, \"groupByFieldsForStatistics contains missing fields\");\n\n      for (const s of i) {\n        const {\n          onStatisticField: i,\n          statisticType: r\n        } = s;\n\n        if ((\"percentile_disc\" === r || \"percentile_cont\" === r) && \"statisticParameters\" in s) {\n          const {\n            statisticParameters: i\n          } = s;\n          if (!i) throw new e(Z, \"statisticParamters should be set for percentile type\", {\n            definition: s,\n            query: t\n          });\n        } else if (\"count\" !== r && i && E(i, this.fieldsIndex)) throw new e(Z, \"outStatistics contains non-numeric fields\", {\n          definition: s,\n          query: t\n        });\n      }\n    }\n  }\n\n  async _getQueryEngineResultForStats() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let i = arguments.length > 1 ? arguments[1] : undefined;\n    let s = arguments.length > 2 ? arguments[2] : undefined;\n    let r;\n    e = t(e);\n\n    try {\n      e = await this._schedule(() => G(e, this.definitionExpression, this.spatialReference), s), e = await this._reschedule(() => this._checkStatisticsSupport(e, i), s), r = await this._reschedule(() => this._executeGeometryQuery(e, s), s), r = await this._reschedule(() => r.executeAggregateIdsQuery(e), s), r = await this._reschedule(() => r.executeObjectIdsQuery(e), s), r = await this._reschedule(() => r.executeTimeQuery(e), s), r = await this._reschedule(() => r.executeAttributesQuery(e), s);\n    } catch (a) {\n      if (a !== P) throw a;\n      r = new A([], null, this);\n    }\n\n    return r;\n  }\n\n}\n\nconst $ = h(),\n      W = h();\nexport { H as Feature, V as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/layers/graphics/data/QueryEngine.js"],"names":["e","clone","t","removeMaybe","i","destroyMaybe","s","isNone","r","isSome","a","isUndefined","n","MemCacheStorage","u","MemCache","o","getMetersPerUnitForSR","c","create","h","set","l","NEGATIVE_INFINITY","p","expandWithAABB","d","fromValues","y","m","getBoundsXY","f","fromJSON","x","isExtent","_","isPolygon","g","normalizeCentralMeridian","w","equals","S","isValid","Q","validateFields","R","validateWhere","F","validateHaving","I","hasInvalidFieldType","E","project","j","checkProjectionSupport","b","queryCapabilities","k","A","SnappingTypes","z","getSpatialQueryOperator","B","canQueryWithRBush","C","checkSpatialQuerySupport","T","getTimeExtent","O","cleanFromGeometryEngine","v","normalizeQuery","G","QUERY_ENGINE_EMPTY_RESULT","P","q","loadArcade","M","noBudget","U","N","every","statisticType","Z","H","constructor","attributes","geometry","centroid","filterFlags","groupId","displayId","D","Set","J","L","V","capabilities","query","geometryType","hasM","hasZ","objectIdField","spatialReference","definitionExpression","featureStore","aggregateAdapter","_changeHandle","events","on","clearCache","timeInfo","cacheSpatialQueries","_geometryQueryCache","fieldsIndex","fields","scheduler","priority","_frameTask","registerTask","destroy","featureAdapter","fullExtent","fullBounds","xmin","ymin","xmax","ymax","timeExtent","_timeExtent","clear","_allItems","executeQuery","_schedule","_reschedule","_checkQuerySupport","_executeGeometryQuery","executeAggregateIdsQuery","executeObjectIdsQuery","executeTimeQuery","executeAttributesQuery","createQueryResponse","executeQueryForCount","returnGeometry","returnCentroid","outSR","createQueryResponseForCount","executeQueryForExtent","size","count","extent","W","forEachBounds","items","$","isFinite","zmin","zmax","executeQueryForIds","executeQueryForIdSet","then","Array","from","add","getObjectId","executeQueryForSnapping","point","distance","types","NONE","candidates","signal","_searchFeatures","_getQueryBBoxes","toJSON","Math","max","createSnappingResponse","executeQueryForLatestObservations","trackIdField","filterLatest","executeQueryForSummaryStatistics","field","normalizationField","valueExpression","_getQueryEngineResultForStats","createSummaryStatisticsResponse","executeQueryForUniqueValues","createUniqueValuesResponse","executeQueryForClassBreaks","createClassBreaksResponse","executeQueryForHistogram","createHistogramResponse","schedule","reschedule","_getAll","forEach","push","spatialRel","featureSpatialReference","JSON","stringify","originalFilterGeometry","spatialRelationship","outSpatialReference","get","put","length","has","getGeometry","_runSpatialFilter","_canExecuteSoloPass","filter","madeProgress","done","rings","map","min","forEachInBounds","_checkStatisticsSupport","geometryPrecision","multipatchOption","pixelSize","relationParam","text","outStatistics","groupByFieldsForStatistics","having","orderByFields","Promise","all","_checkAttributesQuerySupport","_checkStatisticsParamsSupport","arcadeUtils","extractFieldNames","params","_checkStatisticsQuerySupport","outFields","returnDistinctValues","outStatisticFieldName","toLowerCase","Boolean","indexOf","split","where","onStatisticField","statisticParameters","definition","Feature","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../../core/Error.js\";import{clone as t}from\"../../../core/lang.js\";import{removeMaybe as i,destroyMaybe as s,isNone as r,isSome as a,isUndefined as n}from\"../../../core/maybe.js\";import{MemCacheStorage as u,MemCache as o}from\"../../../core/MemCache.js\";import{getMetersPerUnitForSR as c}from\"../../../core/unitUtils.js\";import{create as h,set as l,NEGATIVE_INFINITY as p,expandWithAABB as d}from\"../../../geometry/support/aaBoundingBox.js\";import{fromValues as y,create as m}from\"../../../geometry/support/aaBoundingRect.js\";import{getBoundsXY as f}from\"../../../geometry/support/boundsUtils.js\";import{fromJSON as x,isExtent as _,isPolygon as g}from\"../../../geometry/support/jsonUtils.js\";import{normalizeCentralMeridian as w}from\"../../../geometry/support/normalizeUtils.js\";import{equals as S,isValid as Q}from\"../../../geometry/support/spatialReferenceUtils.js\";import{validateFields as R,validateWhere as F,validateHaving as I,hasInvalidFieldType as E}from\"./attributeSupport.js\";import{project as j,checkProjectionSupport as b}from\"./projectionSupport.js\";import{queryCapabilities as k}from\"./QueryEngineCapabilities.js\";import A,{SnappingTypes as z}from\"./QueryEngineResult.js\";import{getSpatialQueryOperator as B,canQueryWithRBush as C,checkSpatialQuerySupport as T}from\"./spatialQuerySupport.js\";import{getTimeExtent as O}from\"./timeSupport.js\";import{cleanFromGeometryEngine as v,normalizeQuery as G,QUERY_ENGINE_EMPTY_RESULT as P}from\"./utils.js\";import q from\"../../support/FieldsIndex.js\";import{loadArcade as M}from\"../../../support/arcadeOnDemand.js\";import{noBudget as U}from\"../../../views/support/Scheduler.js\";function N(e){return e.every((e=>\"exceedslimit\"!==e.statisticType))}const Z=\"feature-store:unsupported-query\";class H{constructor(e,t=null,i,s,r){this.attributes=e,this.geometry=i,this.centroid=s,this.filterFlags=r,this.groupId=-1,this.displayId=t}}const D=new Set,J=new u(2e6);let L=0;class V{constructor(e){this.capabilities={query:k},this.geometryType=e.geometryType,this.hasM=e.hasM,this.hasZ=e.hasZ,this.objectIdField=e.objectIdField,this.spatialReference=e.spatialReference,this.definitionExpression=e.definitionExpression,this.featureStore=e.featureStore,this.aggregateAdapter=e.aggregateAdapter,this._changeHandle=this.featureStore.events.on(\"changed\",(()=>this.clearCache())),this.timeInfo=e.timeInfo,e.cacheSpatialQueries&&(this._geometryQueryCache=new o(L+++\"$$\",J)),this.fieldsIndex=new q(e.fields),e.scheduler&&e.priority&&(this._frameTask=e.scheduler.registerTask(e.priority))}destroy(){this._frameTask=i(this._frameTask),this.clearCache(),s(this._geometryQueryCache),this._changeHandle=i(this._changeHandle),s(this.fieldsIndex)}get featureAdapter(){return this.featureStore.featureAdapter}get fullExtent(){const e=this.featureStore.fullBounds;return e?{xmin:e[0],ymin:e[1],xmax:e[2],ymax:e[3],spatialReference:v(this.spatialReference)}:null}get timeExtent(){return this.timeInfo?(this._timeExtent||(this._timeExtent=O(this.timeInfo,this.featureStore)),this._timeExtent):null}clearCache(){this._geometryQueryCache&&this._geometryQueryCache.clear(),this._allItems=null,this._timeExtent=null}async executeQuery(e={},i){let s,r=t(e);try{r=await this._schedule((()=>G(r,this.definitionExpression,this.spatialReference)),i),r=await this._reschedule((()=>this._checkQuerySupport(r)),i),s=await this._reschedule((()=>this._executeGeometryQuery(r,i)),i),s=await this._reschedule((()=>s.executeAggregateIdsQuery(r)),i),s=await this._reschedule((()=>s.executeObjectIdsQuery(r)),i),s=await this._reschedule((()=>s.executeTimeQuery(r)),i),s=await this._reschedule((()=>s.executeAttributesQuery(r)),i)}catch(a){if(a!==P)throw a;s=new A([],null,this)}return s.createQueryResponse(r)}async executeQueryForCount(e={},i){let s=t(e);s.returnGeometry=!1,s.returnCentroid=!1,s.outSR=null;try{s=await this._schedule((()=>G(s,this.definitionExpression,this.spatialReference)),i),s=await this._reschedule((()=>this._checkQuerySupport(s)),i);let e=await this._reschedule((()=>this._executeGeometryQuery(s,i)),i);return e=await this._reschedule((()=>e.executeAggregateIdsQuery(s)),i),e=await this._reschedule((()=>e.executeObjectIdsQuery(s)),i),e=await this._reschedule((()=>e.executeTimeQuery(s)),i),e=await this._reschedule((()=>e.executeAttributesQuery(s)),i),e.createQueryResponseForCount(s)}catch(r){if(r!==P)throw r;return 0}}async executeQueryForExtent(e={},i){let s,r=t(e);const a=r.outSR;try{r=await this._schedule((()=>G(r,this.definitionExpression,this.spatialReference)),i),r=await this._reschedule((()=>this._checkQuerySupport(r)),i),r.returnGeometry=!0,r.returnCentroid=!1,r.outSR=null,s=await this._reschedule((()=>this._executeGeometryQuery(r,i)),i),s=await this._reschedule((()=>s.executeAggregateIdsQuery(r)),i),s=await this._reschedule((()=>s.executeObjectIdsQuery(r)),i),s=await this._reschedule((()=>s.executeTimeQuery(r)),i),s=await this._reschedule((()=>s.executeAttributesQuery(r)),i);const e=s.size;if(!e)return{count:e,extent:null};l(W,p),this.featureStore.forEachBounds(s.items,(e=>d(W,e)),$);const t={xmin:W[0],ymin:W[1],xmax:W[3],ymax:W[4],spatialReference:v(this.spatialReference)};this.hasZ&&isFinite(W[2])&&isFinite(W[5])&&(t.zmin=W[2],t.zmax=W[5]);const n=j(t,s.spatialReference,a);if(n.spatialReference=v(a||this.spatialReference),n.xmax-n.xmin==0){const e=c(n.spatialReference);n.xmin-=e,n.xmax+=e}if(n.ymax-n.ymin==0){const e=c(n.spatialReference);n.ymin-=e,n.ymax+=e}if(this.hasZ&&null!=n.zmin&&null!=n.zmax&&n.zmax-n.zmin==0){const e=c(n.spatialReference);n.zmin-=e,n.zmax+=e}return{count:e,extent:n}}catch(n){if(n===P)return{count:0,extent:null};throw n}}async executeQueryForIds(e={},t){return this.executeQueryForIdSet(e,t).then((e=>Array.from(e)))}async executeQueryForIdSet(e={},i){let s,r=t(e);r.returnGeometry=!1,r.returnCentroid=!1,r.outSR=null;try{r=await this._schedule((()=>G(r,this.definitionExpression,this.spatialReference)),i),r=await this._reschedule((()=>this._checkQuerySupport(r)),i),s=await this._reschedule((()=>this._executeGeometryQuery(r,i)),i),s=await this._reschedule((()=>s.executeAggregateIdsQuery(r)),i),s=await this._reschedule((()=>s.executeObjectIdsQuery(r)),i),s=await this._reschedule((()=>s.executeTimeQuery(r)),i),s=await this._reschedule((()=>s.executeAttributesQuery(r)),i);const e=s.items,t=new Set;return await this._reschedule((()=>{for(const i of e)t.add(s.featureAdapter.getObjectId(i))}),i),t}catch(a){if(a===P)return new Set;throw a}}async executeQueryForSnapping(e,t){const{point:i,distance:s,types:a}=e;if(a===z.NONE)return{candidates:[]};const n=await this._reschedule((()=>this._checkQuerySupport(e.query)),t),u=!S(i.spatialReference,this.spatialReference);u&&await b(i.spatialReference,this.spatialReference);const o=\"number\"==typeof s?s:s.x,c=\"number\"==typeof s?s:s.y,h={xmin:i.x-o,xmax:i.x+o,ymin:i.y-c,ymax:i.y+c,spatialReference:i.spatialReference},l=u?j(h,this.spatialReference):h;if(!l)return{candidates:[]};const p=(await w(x(i),null,{signal:t}))[0],d=(await w(x(l),null,{signal:t}))[0];if(r(p)||r(d))return{candidates:[]};let y=new A(this._searchFeatures(this._getQueryBBoxes(d.toJSON())),null,this);y=await this._reschedule((()=>y.executeObjectIdsQuery(n)),t),y=await this._reschedule((()=>y.executeTimeQuery(n)),t),y=await this._reschedule((()=>y.executeAttributesQuery(n)),t);const m=p.toJSON(),f=u?j(m,this.spatialReference):m,_=u?Math.max(l.xmax-l.xmin,l.ymax-l.ymin)/2:s;return y.createSnappingResponse({...e,point:f,distance:_},i.spatialReference)}async executeQueryForLatestObservations(i={},s){if(!this.timeInfo||!this.timeInfo.trackIdField)throw new e(Z,\"Missing timeInfo or timeInfo.trackIdField\",{query:i,timeInfo:this.timeInfo});let r,a=t(i);try{a=await this._schedule((()=>G(a,this.definitionExpression,this.spatialReference)),s),a=await this._reschedule((()=>this._checkQuerySupport(a)),s),r=await this._reschedule((()=>this._executeGeometryQuery(a,s)),s),r=await this._reschedule((()=>r.executeAggregateIdsQuery(a)),s),r=await this._reschedule((()=>r.executeObjectIdsQuery(a)),s),r=await this._reschedule((()=>r.executeTimeQuery(a)),s),r=await this._reschedule((()=>r.executeAttributesQuery(a)),s),r=await this._reschedule((()=>r.filterLatest()),s)}catch(n){if(n!==P)throw n;r=new A([],null,this)}return r.createQueryResponse(a)}async executeQueryForSummaryStatistics(e={},t,i){const{field:s,normalizationField:r,valueExpression:a}=t;return(await this._getQueryEngineResultForStats(e,{field:s,normalizationField:r,valueExpression:a},i)).createSummaryStatisticsResponse(e,t)}async executeQueryForUniqueValues(e={},t,i){const{field:s,valueExpression:r}=t;return(await this._getQueryEngineResultForStats(e,{field:s,valueExpression:r},i)).createUniqueValuesResponse(e,t)}async executeQueryForClassBreaks(e={},t,i){const{field:s,normalizationField:r,valueExpression:a}=t;return(await this._getQueryEngineResultForStats(e,{field:s,normalizationField:r,valueExpression:a},i)).createClassBreaksResponse(e,t)}async executeQueryForHistogram(e={},t,i){const{field:s,normalizationField:r,valueExpression:a}=t;return(await this._getQueryEngineResultForStats(e,{field:s,normalizationField:r,valueExpression:a},i)).createHistogramResponse(e,t)}async _schedule(e,t){return a(this._frameTask)?this._frameTask.schedule(e,t):e(U)}async _reschedule(e,t){return a(this._frameTask)?this._frameTask.reschedule(e,t):e(U)}_getAll(){if(!this._allItems){const e=[];this.featureStore.forEach((t=>e.push(t))),this._allItems=new A(e,null,this)}return this._allItems}async _executeGeometryQuery(e,t){const{geometry:i,outSR:s,spatialRel:r,returnGeometry:a,returnCentroid:u}=e,o=this.featureStore.featureSpatialReference,c=i&&o&&o!==i.spatialReference?j(i,o):i,h=a||u,l=Q(s)&&!S(this.spatialReference,s),p=this._geometryQueryCache?l&&h?JSON.stringify({originalFilterGeometry:i,spatialRelationship:r,outSpatialReference:s}):JSON.stringify({originalFilterGeometry:i,spatialRelationship:r}):null;if(p){const e=this._geometryQueryCache.get(p);if(!n(e))return e}const d=async e=>{if(l&&h){const t=await e.project(s);return p&&this._geometryQueryCache.put(p,t,t.size||1),t}return p&&this._geometryQueryCache.put(p,e,e.size||1),e};if(!c)return d(this._getAll());const y=this.featureAdapter;if(\"esriSpatialRelDisjoint\"===r){const e=this._searchFeatures(this._getQueryBBoxes(i));if(!e.length)return d(this._getAll());let s,a;const n=new Set;for(const t of e)n.add(y.getObjectId(t));await this._reschedule((()=>{let e=0;s=new Array(n.size),this.featureStore.forEach((t=>s[e++]=t)),a=n}),t);const u=await this._reschedule((async()=>{const e=await B(r,c,this.geometryType,this.hasZ,this.hasM),n=t=>!a.has(y.getObjectId(t))||e(y.getGeometry(t));return new A(await this._runSpatialFilter(s,n,t),i,this)}),t);return d(u)}const m=this._searchFeatures(this._getQueryBBoxes(i));if(!m.length){const e=new A([],i,this);return p&&this._geometryQueryCache.put(p,e,e.size||1),e}if(this._canExecuteSoloPass(c,e))return d(new A(m,i,this));const f=await B(r,c,this.geometryType,this.hasZ,this.hasM),x=await this._runSpatialFilter(m,(e=>f(y.getGeometry(e))),t);return d(new A(x,i,this))}async _runSpatialFilter(e,t,i){if(!t)return e;if(r(this._frameTask))return e.filter((e=>t(e)));let s=0;const a=new Array,n=async r=>{for(;s<e.length;){const u=e[s++];t(u)&&(a.push(u),r.madeProgress()),r.done&&await this._reschedule((e=>n(e)),i)}};return this._reschedule((e=>n(e)),i).then((()=>a))}_canExecuteSoloPass(e,t){const{geometryType:i}=this,{spatialRel:s}=t;return C(e)&&(\"esriSpatialRelEnvelopeIntersects\"===s||\"esriGeometryPoint\"===i&&(\"esriSpatialRelIntersects\"===s||\"esriSpatialRelContains\"===s||\"esriSpatialRelWithin\"===s))}_getQueryBBoxes(e){if(C(e)){if(_(e))return[y(e.xmin,e.ymin,e.xmax,e.ymax)];if(g(e))return e.rings.map((e=>y(Math.min(e[0][0],e[2][0]),Math.min(e[0][1],e[2][1]),Math.max(e[0][0],e[2][0]),Math.max(e[0][1],e[2][1]))))}return[f(m(),e)]}_searchFeatures(e){for(const s of e)this.featureStore.forEachInBounds(s,(e=>{D.add(e)}));const t=new Array(D.size);let i=0;return D.forEach((e=>t[i++]=e)),D.clear(),t}async _checkStatisticsSupport(t,i){if(t.distance<0||null!=t.geometryPrecision||t.multipatchOption||t.pixelSize||t.relationParam||t.text||t.outStatistics||t.groupByFieldsForStatistics||t.having||t.orderByFields)throw new e(Z,\"Unsupported query options\",{query:t});return Promise.all([this._checkAttributesQuerySupport(t),this._checkStatisticsParamsSupport(i),T(t,this.geometryType,this.spatialReference),b(this.spatialReference,t.outSR)]).then((()=>t))}async _checkStatisticsParamsSupport(t){let i=[];if(t.valueExpression){const{arcadeUtils:e}=await M();i=e.extractFieldNames(t.valueExpression)}if(t.field&&i.push(t.field),t.normalizationField&&i.push(t.normalizationField),!i.length)throw new e(Z,\"params should have at least a field or valueExpression\",{params:t});R(this.fieldsIndex,i,\"params contains missing fields\")}async _checkQuerySupport(t){if(t.distance<0||null!=t.geometryPrecision||t.multipatchOption||t.pixelSize||t.relationParam||t.text)throw new e(Z,\"Unsupported query options\",{query:t});return Promise.all([this._checkAttributesQuerySupport(t),this._checkStatisticsQuerySupport(t),T(t,this.geometryType,this.spatialReference),b(this.spatialReference,t.outSR)]).then((()=>t))}_checkAttributesQuerySupport(t){const{outFields:i,orderByFields:s,returnDistinctValues:r,outStatistics:a}=t,n=a?a.map((e=>e.outStatisticFieldName&&e.outStatisticFieldName.toLowerCase())).filter(Boolean):[];if(s&&s.length>0){const e=\" asc\",t=\" desc\",i=s.map((i=>{const s=i.toLowerCase();return s.indexOf(e)>-1?s.split(e)[0]:s.indexOf(t)>-1?s.split(t)[0]:i})).filter((e=>-1===n.indexOf(e)));R(this.fieldsIndex,i,\"orderByFields contains missing fields\")}if(i&&i.length>0)R(this.fieldsIndex,i,\"outFields contains missing fields\");else if(r)throw new e(Z,\"outFields should be specified for returnDistinctValues\",{query:t});F(this.fieldsIndex,t.where)}async _checkStatisticsQuerySupport(t){const{outStatistics:i,groupByFieldsForStatistics:s,having:r}=t,a=s&&s.length,n=i&&i.length;if(r){if(!a||!n)throw new e(Z,\"outStatistics and groupByFieldsForStatistics should be specified with having\",{query:t});I(this.fieldsIndex,r,i)}if(n){if(!N(i))return;const r=i.map((e=>e.onStatisticField)).filter(Boolean);R(this.fieldsIndex,r,\"onStatisticFields contains missing fields\"),a&&R(this.fieldsIndex,s,\"groupByFieldsForStatistics contains missing fields\");for(const s of i){const{onStatisticField:i,statisticType:r}=s;if((\"percentile_disc\"===r||\"percentile_cont\"===r)&&\"statisticParameters\"in s){const{statisticParameters:i}=s;if(!i)throw new e(Z,\"statisticParamters should be set for percentile type\",{definition:s,query:t})}else if(\"count\"!==r&&i&&E(i,this.fieldsIndex))throw new e(Z,\"outStatistics contains non-numeric fields\",{definition:s,query:t})}}}async _getQueryEngineResultForStats(e={},i,s){let r;e=t(e);try{e=await this._schedule((()=>G(e,this.definitionExpression,this.spatialReference)),s),e=await this._reschedule((()=>this._checkStatisticsSupport(e,i)),s),r=await this._reschedule((()=>this._executeGeometryQuery(e,s)),s),r=await this._reschedule((()=>r.executeAggregateIdsQuery(e)),s),r=await this._reschedule((()=>r.executeObjectIdsQuery(e)),s),r=await this._reschedule((()=>r.executeTimeQuery(e)),s),r=await this._reschedule((()=>r.executeAttributesQuery(e)),s)}catch(a){if(a!==P)throw a;r=new A([],null,this)}return r}}const $=h(),W=h();export{H as Feature,V as default};\n"]},"metadata":{},"sourceType":"module"}