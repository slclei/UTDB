{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../../../../request.js\";\nimport t from \"../../../../core/Error.js\";\nimport s from \"../../../../core/Logger.js\";\nimport { isSome as i } from \"../../../../core/maybe.js\";\nimport { createTask as r, isAbortError as n } from \"../../../../core/promiseUtils.js\";\nimport { getJsonType as a } from \"../../../../geometry/support/jsonUtils.js\";\nimport { WGS84 as o, equals as l } from \"../../../../geometry/support/spatialReferenceUtils.js\";\nimport { convertFromGeometry as u, convertToGeometry as d, convertFromFeatures as p, convertToFeature as c, convertFromFeature as y } from \"../../featureConversionUtils.js\";\nimport h from \"../../data/FeatureStore.js\";\nimport { checkProjectionSupport as m, project as f } from \"../../data/projectionSupport.js\";\nimport g from \"../../data/QueryEngine.js\";\nimport { inferLayerProperties as _, createOptimizedFeatures as I, validateGeoJSON as j } from \"./geojson.js\";\nimport { createDrawingInfo as F, createDefaultTemplate as E, createDefaultAttributesFunction as b } from \"../support/clientSideDefaults.js\";\nimport { loadGeometryEngineForSimplify as T, mixAttributes as w, createFeatureEditSuccessResult as q, createFeatureEditErrorResult as x, simplify as S } from \"../support/sourceUtils.js\";\nimport R from \"../../../support/FieldsIndex.js\";\nimport { kebabDict as k } from \"../../../support/fieldType.js\";\nimport { getFieldDefaultValue as D } from \"../../../support/fieldUtils.js\";\nconst O = {\n  hasAttachments: !1,\n  capabilities: \"query, editing, create, delete, update\",\n  useStandardizedQueries: !0,\n  supportsCoordinatesQuantization: !0,\n  supportsReturningQueryGeometry: !0,\n  advancedQueryCapabilities: {\n    supportsQueryAttachments: !1,\n    supportsStatistics: !0,\n    supportsPercentileStatistics: !0,\n    supportsReturningGeometryCentroid: !0,\n    supportsQueryWithDistance: !0,\n    supportsDistinct: !0,\n    supportsReturningQueryExtent: !0,\n    supportsReturningGeometryProperties: !1,\n    supportsHavingClause: !0,\n    supportsOrderBy: !0,\n    supportsPagination: !0,\n    supportsQueryWithResultType: !1,\n    supportsSqlExpression: !0,\n    supportsDisjointSpatialRel: !0\n  }\n};\n\nclass C {\n  constructor() {\n    this._queryEngine = null, this._snapshotFeatures = async e => {\n      const t = await this._fetch(e);\n      return this._createFeatures(t);\n    };\n  }\n\n  destroy() {\n    var e;\n    null == (e = this._queryEngine) || e.destroy(), this._queryEngine = this._fieldsIndex = this._createDefaultAttributes = null;\n  }\n\n  async load(e) {\n    let s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.loadOptions = {\n      url: e.url,\n      customParameters: e.customParameters\n    };\n    const i = [];\n    await this._checkProjection(e.spatialReference);\n    let r = null;\n    e.url && (r = await this._fetch(null == s ? void 0 : s.signal));\n\n    const n = _(r, {\n      geometryType: e.geometryType\n    }),\n          a = e.fields || n.fields || [],\n          l = null != e.hasZ ? e.hasZ : n.hasZ,\n          u = n.geometryType,\n          d = e.objectIdField || n.objectIdFieldName || \"__OBJECTID\",\n          p = e.spatialReference || o;\n\n    let c = e.timeInfo;\n    a === n.fields && n.unknownFields.length > 0 && i.push({\n      name: \"geojson-layer:unknown-field-types\",\n      message: \"Some fields types couldn't be inferred from the features and were dropped\",\n      details: {\n        unknownFields: n.unknownFields\n      }\n    });\n    let y = a.find(e => e.name === d);\n    y ? (\"esriFieldTypeString\" !== y.type && (y.type = \"esriFieldTypeOID\"), y.editable = !1, y.nullable = !1) : (y = {\n      alias: d,\n      name: d,\n      type: \"string\" === n.objectIdFieldType ? \"esriFieldTypeString\" : \"esriFieldTypeOID\",\n      editable: !1,\n      nullable: !1\n    }, a.unshift(y));\n    const m = {};\n\n    for (const o of a) {\n      if (null == o.name && (o.name = o.alias), null == o.alias && (o.alias = o.name), !o.name) throw new t(\"geojson-layer:invalid-field-name\", \"field name is missing\", {\n        field: o\n      });\n      if (!k.jsonValues.includes(o.type)) throw new t(\"geojson-layer:invalid-field-type\", `invalid type for field \"${o.name}\"`, {\n        field: o\n      });\n\n      if (o.name !== y.name) {\n        const e = D(o);\n        void 0 !== e && (m[o.name] = e);\n      }\n    }\n\n    this._fieldsIndex = new R(a);\n\n    const f = this._fieldsIndex.requiredFields.indexOf(y);\n\n    if (f > -1 && this._fieldsIndex.requiredFields.splice(f, 1), c) {\n      if (c.startTimeField) {\n        const e = this._fieldsIndex.get(c.startTimeField);\n\n        e ? (c.startTimeField = e.name, e.type = \"esriFieldTypeDate\") : c.startTimeField = null;\n      }\n\n      if (c.endTimeField) {\n        const e = this._fieldsIndex.get(c.endTimeField);\n\n        e ? (c.endTimeField = e.name, e.type = \"esriFieldTypeDate\") : c.endTimeField = null;\n      }\n\n      if (c.trackIdField) {\n        const e = this._fieldsIndex.get(c.trackIdField);\n\n        e ? c.trackIdField = e.name : (c.trackIdField = null, i.push({\n          name: \"geojson-layer:invalid-timeInfo-trackIdField\",\n          message: \"trackIdField is missing\",\n          details: {\n            timeInfo: c\n          }\n        }));\n      }\n\n      c.startTimeField || c.endTimeField || (i.push({\n        name: \"geojson-layer:invalid-timeInfo\",\n        message: \"startTimeField and endTimeField are missing\",\n        details: {\n          timeInfo: c\n        }\n      }), c = null);\n    }\n\n    const I = u ? F(u) : null,\n          j = {\n      warnings: i,\n      featureErrors: [],\n      layerDefinition: { ...O,\n        drawingInfo: I,\n        templates: E(m),\n        extent: null,\n        geometryType: u,\n        objectIdField: d,\n        fields: a,\n        hasZ: !!l,\n        timeInfo: c\n      }\n    };\n    this._queryEngine = new g({\n      fields: a,\n      geometryType: u,\n      hasM: !1,\n      hasZ: l,\n      objectIdField: d,\n      spatialReference: p,\n      timeInfo: c,\n      featureStore: new h({\n        geometryType: u,\n        hasM: !1,\n        hasZ: l\n      }),\n      cacheSpatialQueries: !0\n    }), this._createDefaultAttributes = b(m, d);\n    const T = await this._createFeatures(r);\n    this._objectIdGenerator = this._createObjectIdGenerator(this._queryEngine, T);\n\n    const w = this._normalizeFeatures(T, j.warnings, j.featureErrors);\n\n    if (this._queryEngine.featureStore.addMany(w), j.layerDefinition.extent = this._queryEngine.fullExtent, j.layerDefinition.timeInfo) {\n      const {\n        start: e,\n        end: t\n      } = this._queryEngine.timeExtent;\n      j.layerDefinition.timeInfo.timeExtent = [e, t];\n    }\n\n    return j;\n  }\n\n  async applyEdits(e) {\n    const {\n      spatialReference: t,\n      geometryType: s\n    } = this._queryEngine;\n    return await Promise.all([T(t, s), m(e.adds, t), m(e.updates, t)]), await this._waitSnapshotComplete(), this._applyEdits(e);\n  }\n\n  async queryFeatures() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQuery(e, t.signal);\n  }\n\n  async queryFeatureCount() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForCount(e, t.signal);\n  }\n\n  async queryObjectIds() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForIds(e, t.signal);\n  }\n\n  async queryExtent() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForExtent(e, t.signal);\n  }\n\n  async querySnapping(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this._waitSnapshotComplete(), this._queryEngine.executeQueryForSnapping(e, t.signal);\n  }\n\n  async refresh(e) {\n    var i;\n    return this.loadOptions.customParameters = e, null == (i = this._snapshotTask) || i.abort(), this._snapshotTask = r(this._snapshotFeatures), this._snapshotTask.promise.then(e => {\n      this._queryEngine.featureStore.clear(), this._objectIdGenerator = this._createObjectIdGenerator(this._queryEngine, e);\n\n      const t = this._normalizeFeatures(e);\n\n      t && this._queryEngine.featureStore.addMany(t);\n    }, e => {\n      this._queryEngine.featureStore.clear(), n(e) || s.getLogger(\"esri.layers.GeoJSONLayer\").error(new t(\"geojson-layer:refresh\", \"An error occurred during refresh\", {\n        error: e\n      }));\n    }), await this._waitSnapshotComplete(), {\n      extent: this._queryEngine.fullExtent,\n      timeExtent: this._queryEngine.timeExtent\n    };\n  }\n\n  async _createFeatures(e) {\n    const {\n      geometryType: t,\n      hasZ: s,\n      objectIdField: r\n    } = this._queryEngine,\n          n = I(e, {\n      geometryType: t,\n      hasZ: s,\n      objectIdField: r\n    });\n    if (!l(this._queryEngine.spatialReference, o)) for (const a of n) i(a.geometry) && (a.geometry = u(f(d(a.geometry, this._queryEngine.geometryType, this._queryEngine.hasZ, !1), o, this._queryEngine.spatialReference)));\n    return n;\n  }\n\n  async _waitSnapshotComplete() {\n    if (this._snapshotTask && !this._snapshotTask.finished) {\n      try {\n        await this._snapshotTask.promise;\n      } catch {}\n\n      return this._waitSnapshotComplete();\n    }\n  }\n\n  async _fetch(t) {\n    const {\n      url: s,\n      customParameters: i\n    } = this.loadOptions,\n          r = (await e(s, {\n      responseType: \"json\",\n      query: { ...i\n      },\n      signal: t\n    })).data;\n    return await j(r), r;\n  }\n\n  _normalizeFeatures(e, t, s) {\n    const {\n      objectIdField: i\n    } = this._queryEngine,\n          r = [];\n\n    for (const n of e) {\n      const e = this._createDefaultAttributes(),\n            a = w(this._fieldsIndex, e, n.attributes, !0, t);\n\n      a ? null == s || s.push(a) : (this._assignObjectId(e, n.attributes, !0), n.attributes = e, n.objectId = e[i], r.push(n));\n    }\n\n    return r;\n  }\n\n  _applyEdits(e) {\n    const {\n      adds: t,\n      updates: s,\n      deletes: i\n    } = e,\n          r = {\n      addResults: [],\n      deleteResults: [],\n      updateResults: [],\n      uidToObjectId: {}\n    };\n\n    if (t && t.length && this._applyAddEdits(r, t), s && s.length && this._applyUpdateEdits(r, s), i && i.length) {\n      for (const e of i) r.deleteResults.push(q(e));\n\n      this._queryEngine.featureStore.removeManyById(i);\n    }\n\n    return {\n      extent: this._queryEngine.fullExtent,\n      timeExtent: this._queryEngine.timeExtent,\n      featureEditResults: r\n    };\n  }\n\n  _applyAddEdits(e, t) {\n    const {\n      addResults: s\n    } = e,\n          {\n      geometryType: r,\n      hasM: n,\n      hasZ: o,\n      objectIdField: l,\n      spatialReference: u,\n      featureStore: d\n    } = this._queryEngine,\n          c = [];\n\n    for (const p of t) {\n      if (p.geometry && r !== a(p.geometry)) {\n        s.push(x(\"Incorrect geometry type.\"));\n        continue;\n      }\n\n      const t = this._createDefaultAttributes(),\n            n = w(this._fieldsIndex, t, p.attributes);\n\n      if (n) s.push(n);else {\n        if (this._assignObjectId(t, p.attributes), p.attributes = t, null != p.uid) {\n          const t = p.attributes[l];\n          e.uidToObjectId[p.uid] = t;\n        }\n\n        i(p.geometry) && (p.geometry = f(S(p.geometry, u), p.geometry.spatialReference, u)), c.push(p), s.push(q(p.attributes[l]));\n      }\n    }\n\n    d.addMany(p([], c, r, o, n, l));\n  }\n\n  _applyUpdateEdits(_ref, t) {\n    let {\n      updateResults: e\n    } = _ref;\n    const {\n      geometryType: s,\n      hasM: r,\n      hasZ: n,\n      objectIdField: o,\n      spatialReference: l,\n      featureStore: u\n    } = this._queryEngine;\n\n    for (const d of t) {\n      const {\n        attributes: t,\n        geometry: p\n      } = d,\n            h = t && t[o];\n\n      if (null == h) {\n        e.push(x(`Identifier field ${o} missing`));\n        continue;\n      }\n\n      if (!u.has(h)) {\n        e.push(x(`Feature with object id ${h} missing`));\n        continue;\n      }\n\n      const m = c(u.getFeature(h), s, n, r);\n\n      if (i(p)) {\n        if (s !== a(p)) {\n          e.push(x(\"Incorrect geometry type.\"));\n          continue;\n        }\n\n        m.geometry = f(S(p, l), p.spatialReference, l);\n      }\n\n      if (t) {\n        const s = w(this._fieldsIndex, m.attributes, t);\n\n        if (s) {\n          e.push(s);\n          continue;\n        }\n      }\n\n      u.add(y(m, s, n, r, o)), e.push(q(h));\n    }\n  }\n\n  _createObjectIdGenerator(e, t) {\n    const s = e.fieldsIndex.get(e.objectIdField);\n    if (\"esriFieldTypeString\" === s.type) return () => s.name + \"-\" + Date.now().toString(16);\n    let i = Number.NEGATIVE_INFINITY;\n\n    for (const r of t) r.objectId && (i = Math.max(i, r.objectId));\n\n    return i = Math.max(0, i) + 1, () => i++;\n  }\n\n  _assignObjectId(e, t) {\n    let s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n    const i = this._queryEngine.objectIdField;\n    e[i] = s && i in t ? t[i] : this._objectIdGenerator();\n  }\n\n  async _checkProjection(e) {\n    try {\n      await m(o, e);\n    } catch {\n      throw new t(\"geojson-layer\", \"Projection not supported\");\n    }\n  }\n\n}\n\nexport { C as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/layers/graphics/sources/geojson/GeoJSONSourceWorker.js"],"names":["e","t","s","isSome","i","createTask","r","isAbortError","n","getJsonType","a","WGS84","o","equals","l","convertFromGeometry","u","convertToGeometry","d","convertFromFeatures","p","convertToFeature","c","convertFromFeature","y","h","checkProjectionSupport","m","project","f","g","inferLayerProperties","_","createOptimizedFeatures","I","validateGeoJSON","j","createDrawingInfo","F","createDefaultTemplate","E","createDefaultAttributesFunction","b","loadGeometryEngineForSimplify","T","mixAttributes","w","createFeatureEditSuccessResult","q","createFeatureEditErrorResult","x","simplify","S","R","kebabDict","k","getFieldDefaultValue","D","O","hasAttachments","capabilities","useStandardizedQueries","supportsCoordinatesQuantization","supportsReturningQueryGeometry","advancedQueryCapabilities","supportsQueryAttachments","supportsStatistics","supportsPercentileStatistics","supportsReturningGeometryCentroid","supportsQueryWithDistance","supportsDistinct","supportsReturningQueryExtent","supportsReturningGeometryProperties","supportsHavingClause","supportsOrderBy","supportsPagination","supportsQueryWithResultType","supportsSqlExpression","supportsDisjointSpatialRel","C","constructor","_queryEngine","_snapshotFeatures","_fetch","_createFeatures","destroy","_fieldsIndex","_createDefaultAttributes","load","loadOptions","url","customParameters","_checkProjection","spatialReference","signal","geometryType","fields","hasZ","objectIdField","objectIdFieldName","timeInfo","unknownFields","length","push","name","message","details","find","type","editable","nullable","alias","objectIdFieldType","unshift","field","jsonValues","includes","requiredFields","indexOf","splice","startTimeField","get","endTimeField","trackIdField","warnings","featureErrors","layerDefinition","drawingInfo","templates","extent","hasM","featureStore","cacheSpatialQueries","_objectIdGenerator","_createObjectIdGenerator","_normalizeFeatures","addMany","fullExtent","start","end","timeExtent","applyEdits","Promise","all","adds","updates","_waitSnapshotComplete","_applyEdits","queryFeatures","executeQuery","queryFeatureCount","executeQueryForCount","queryObjectIds","executeQueryForIds","queryExtent","executeQueryForExtent","querySnapping","executeQueryForSnapping","refresh","_snapshotTask","abort","promise","then","clear","getLogger","error","geometry","finished","responseType","query","data","attributes","_assignObjectId","objectId","deletes","addResults","deleteResults","updateResults","uidToObjectId","_applyAddEdits","_applyUpdateEdits","removeManyById","featureEditResults","uid","has","getFeature","add","fieldsIndex","Date","now","toString","Number","NEGATIVE_INFINITY","Math","max","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../../../request.js\";import t from\"../../../../core/Error.js\";import s from\"../../../../core/Logger.js\";import{isSome as i}from\"../../../../core/maybe.js\";import{createTask as r,isAbortError as n}from\"../../../../core/promiseUtils.js\";import{getJsonType as a}from\"../../../../geometry/support/jsonUtils.js\";import{WGS84 as o,equals as l}from\"../../../../geometry/support/spatialReferenceUtils.js\";import{convertFromGeometry as u,convertToGeometry as d,convertFromFeatures as p,convertToFeature as c,convertFromFeature as y}from\"../../featureConversionUtils.js\";import h from\"../../data/FeatureStore.js\";import{checkProjectionSupport as m,project as f}from\"../../data/projectionSupport.js\";import g from\"../../data/QueryEngine.js\";import{inferLayerProperties as _,createOptimizedFeatures as I,validateGeoJSON as j}from\"./geojson.js\";import{createDrawingInfo as F,createDefaultTemplate as E,createDefaultAttributesFunction as b}from\"../support/clientSideDefaults.js\";import{loadGeometryEngineForSimplify as T,mixAttributes as w,createFeatureEditSuccessResult as q,createFeatureEditErrorResult as x,simplify as S}from\"../support/sourceUtils.js\";import R from\"../../../support/FieldsIndex.js\";import{kebabDict as k}from\"../../../support/fieldType.js\";import{getFieldDefaultValue as D}from\"../../../support/fieldUtils.js\";const O={hasAttachments:!1,capabilities:\"query, editing, create, delete, update\",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};class C{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){var e;null==(e=this._queryEngine)||e.destroy(),this._queryEngine=this._fieldsIndex=this._createDefaultAttributes=null}async load(e,s={}){this.loadOptions={url:e.url,customParameters:e.customParameters};const i=[];await this._checkProjection(e.spatialReference);let r=null;e.url&&(r=await this._fetch(null==s?void 0:s.signal));const n=_(r,{geometryType:e.geometryType}),a=e.fields||n.fields||[],l=null!=e.hasZ?e.hasZ:n.hasZ,u=n.geometryType,d=e.objectIdField||n.objectIdFieldName||\"__OBJECTID\",p=e.spatialReference||o;let c=e.timeInfo;a===n.fields&&n.unknownFields.length>0&&i.push({name:\"geojson-layer:unknown-field-types\",message:\"Some fields types couldn't be inferred from the features and were dropped\",details:{unknownFields:n.unknownFields}});let y=a.find((e=>e.name===d));y?(\"esriFieldTypeString\"!==y.type&&(y.type=\"esriFieldTypeOID\"),y.editable=!1,y.nullable=!1):(y={alias:d,name:d,type:\"string\"===n.objectIdFieldType?\"esriFieldTypeString\":\"esriFieldTypeOID\",editable:!1,nullable:!1},a.unshift(y));const m={};for(const o of a){if(null==o.name&&(o.name=o.alias),null==o.alias&&(o.alias=o.name),!o.name)throw new t(\"geojson-layer:invalid-field-name\",\"field name is missing\",{field:o});if(!k.jsonValues.includes(o.type))throw new t(\"geojson-layer:invalid-field-type\",`invalid type for field \"${o.name}\"`,{field:o});if(o.name!==y.name){const e=D(o);void 0!==e&&(m[o.name]=e)}}this._fieldsIndex=new R(a);const f=this._fieldsIndex.requiredFields.indexOf(y);if(f>-1&&this._fieldsIndex.requiredFields.splice(f,1),c){if(c.startTimeField){const e=this._fieldsIndex.get(c.startTimeField);e?(c.startTimeField=e.name,e.type=\"esriFieldTypeDate\"):c.startTimeField=null}if(c.endTimeField){const e=this._fieldsIndex.get(c.endTimeField);e?(c.endTimeField=e.name,e.type=\"esriFieldTypeDate\"):c.endTimeField=null}if(c.trackIdField){const e=this._fieldsIndex.get(c.trackIdField);e?c.trackIdField=e.name:(c.trackIdField=null,i.push({name:\"geojson-layer:invalid-timeInfo-trackIdField\",message:\"trackIdField is missing\",details:{timeInfo:c}}))}c.startTimeField||c.endTimeField||(i.push({name:\"geojson-layer:invalid-timeInfo\",message:\"startTimeField and endTimeField are missing\",details:{timeInfo:c}}),c=null)}const I=u?F(u):null,j={warnings:i,featureErrors:[],layerDefinition:{...O,drawingInfo:I,templates:E(m),extent:null,geometryType:u,objectIdField:d,fields:a,hasZ:!!l,timeInfo:c}};this._queryEngine=new g({fields:a,geometryType:u,hasM:!1,hasZ:l,objectIdField:d,spatialReference:p,timeInfo:c,featureStore:new h({geometryType:u,hasM:!1,hasZ:l}),cacheSpatialQueries:!0}),this._createDefaultAttributes=b(m,d);const T=await this._createFeatures(r);this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,T);const w=this._normalizeFeatures(T,j.warnings,j.featureErrors);if(this._queryEngine.featureStore.addMany(w),j.layerDefinition.extent=this._queryEngine.fullExtent,j.layerDefinition.timeInfo){const{start:e,end:t}=this._queryEngine.timeExtent;j.layerDefinition.timeInfo.timeExtent=[e,t]}return j}async applyEdits(e){const{spatialReference:t,geometryType:s}=this._queryEngine;return await Promise.all([T(t,s),m(e.adds,t),m(e.updates,t)]),await this._waitSnapshotComplete(),this._applyEdits(e)}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){var i;return this.loadOptions.customParameters=e,null==(i=this._snapshotTask)||i.abort(),this._snapshotTask=r(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,e);const t=this._normalizeFeatures(e);t&&this._queryEngine.featureStore.addMany(t)}),(e=>{this._queryEngine.featureStore.clear(),n(e)||s.getLogger(\"esri.layers.GeoJSONLayer\").error(new t(\"geojson-layer:refresh\",\"An error occurred during refresh\",{error:e}))})),await this._waitSnapshotComplete(),{extent:this._queryEngine.fullExtent,timeExtent:this._queryEngine.timeExtent}}async _createFeatures(e){const{geometryType:t,hasZ:s,objectIdField:r}=this._queryEngine,n=I(e,{geometryType:t,hasZ:s,objectIdField:r});if(!l(this._queryEngine.spatialReference,o))for(const a of n)i(a.geometry)&&(a.geometry=u(f(d(a.geometry,this._queryEngine.geometryType,this._queryEngine.hasZ,!1),o,this._queryEngine.spatialReference)));return n}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(t){const{url:s,customParameters:i}=this.loadOptions,r=(await e(s,{responseType:\"json\",query:{...i},signal:t})).data;return await j(r),r}_normalizeFeatures(e,t,s){const{objectIdField:i}=this._queryEngine,r=[];for(const n of e){const e=this._createDefaultAttributes(),a=w(this._fieldsIndex,e,n.attributes,!0,t);a?null==s||s.push(a):(this._assignObjectId(e,n.attributes,!0),n.attributes=e,n.objectId=e[i],r.push(n))}return r}_applyEdits(e){const{adds:t,updates:s,deletes:i}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(r,t),s&&s.length&&this._applyUpdateEdits(r,s),i&&i.length){for(const e of i)r.deleteResults.push(q(e));this._queryEngine.featureStore.removeManyById(i)}return{extent:this._queryEngine.fullExtent,timeExtent:this._queryEngine.timeExtent,featureEditResults:r}}_applyAddEdits(e,t){const{addResults:s}=e,{geometryType:r,hasM:n,hasZ:o,objectIdField:l,spatialReference:u,featureStore:d}=this._queryEngine,c=[];for(const p of t){if(p.geometry&&r!==a(p.geometry)){s.push(x(\"Incorrect geometry type.\"));continue}const t=this._createDefaultAttributes(),n=w(this._fieldsIndex,t,p.attributes);if(n)s.push(n);else{if(this._assignObjectId(t,p.attributes),p.attributes=t,null!=p.uid){const t=p.attributes[l];e.uidToObjectId[p.uid]=t}i(p.geometry)&&(p.geometry=f(S(p.geometry,u),p.geometry.spatialReference,u)),c.push(p),s.push(q(p.attributes[l]))}}d.addMany(p([],c,r,o,n,l))}_applyUpdateEdits({updateResults:e},t){const{geometryType:s,hasM:r,hasZ:n,objectIdField:o,spatialReference:l,featureStore:u}=this._queryEngine;for(const d of t){const{attributes:t,geometry:p}=d,h=t&&t[o];if(null==h){e.push(x(`Identifier field ${o} missing`));continue}if(!u.has(h)){e.push(x(`Feature with object id ${h} missing`));continue}const m=c(u.getFeature(h),s,n,r);if(i(p)){if(s!==a(p)){e.push(x(\"Incorrect geometry type.\"));continue}m.geometry=f(S(p,l),p.spatialReference,l)}if(t){const s=w(this._fieldsIndex,m.attributes,t);if(s){e.push(s);continue}}u.add(y(m,s,n,r,o)),e.push(q(h))}}_createObjectIdGenerator(e,t){const s=e.fieldsIndex.get(e.objectIdField);if(\"esriFieldTypeString\"===s.type)return()=>s.name+\"-\"+Date.now().toString(16);let i=Number.NEGATIVE_INFINITY;for(const r of t)r.objectId&&(i=Math.max(i,r.objectId));return i=Math.max(0,i)+1,()=>i++}_assignObjectId(e,t,s=!1){const i=this._queryEngine.objectIdField;e[i]=s&&i in t?t[i]:this._objectIdGenerator()}async _checkProjection(e){try{await m(o,e)}catch{throw new t(\"geojson-layer\",\"Projection not supported\")}}}export{C as default};\n"]},"metadata":{},"sourceType":"module"}