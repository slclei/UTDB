{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport t from \"../../../../core/Error.js\";\nimport e from \"../../../../core/has.js\";\nimport i from \"../../../../core/Logger.js\";\nimport { isNone as s, mapMany as r, isSome as a, applySome as h, unwrap as d, forEachSome as n, mapOr as o, unwrapOr as u } from \"../../../../core/maybe.js\";\nimport { createResolver as l } from \"../../../../core/promiseUtils.js\";\nimport { ATTRIBUTE_DATA_VV as p, TEXTURE_BINDING_ATTRIBUTE_DATA_0 as x, TEXTURE_BINDING_ATTRIBUTE_DATA_1 as _, TEXTURE_BINDING_ATTRIBUTE_DATA_2 as c, TEXTURE_BINDING_ATTRIBUTE_DATA_3 as g, TEXTURE_BINDING_GPGPU as f, ATTRIBUTE_DATA_FILTER_FLAGS as T, ATTRIBUTE_DATA_GPGPU as b, ATTRIBUTE_DATA_ANIMATION as m, ATTRIBUTE_DATA_DD1 as y } from \"./definitions.js\";\nimport { getDisplayIdTexel as w } from \"./DisplayId.js\";\nimport { getPixelArrayCtor as z, getPixelBytes as E } from \"./Utils.js\";\nimport { createDebugLogger as U, DEBUG_ATTR_UPDATES as D } from \"./util/debug.js\";\nimport { TextureWrapMode as S, PixelFormat as A, PixelType as j, TextureSamplingMode as k, TextureType as M, TargetType as N, DepthStencilTargetType as O } from \"../../../webgl/enums.js\";\nimport { FramebufferObject as F } from \"../../../webgl/FramebufferObject.js\";\nimport { Texture as R } from \"../../../webgl/Texture.js\";\nconst v = i.getLogger(\"esri.views.2d.engine.webgl.AttributeStoreView\"),\n      B = U(D, v);\n\nclass V {\n  constructor(t, e, i) {\n    this._texture = null, this._lastTexture = null, this._fbos = {}, this.texelSize = 4;\n    const {\n      buffer: s,\n      pixelType: r,\n      textureOnly: a\n    } = t,\n          h = z(r);\n    this.shared = i, this.pixelType = r, this.size = e, this.textureOnly = a, a || (this.data = new h(d(s))), this._resetRange();\n  }\n\n  destroy() {\n    h(this._texture, t => t.dispose());\n\n    for (const t in this._fbos) h(this._fbos[t], e => {\n      \"0\" === t && e.detachColorTexture(), e.dispose();\n    }), this._fbos[t] = null;\n\n    this._texture = null;\n  }\n\n  get _textureDesc() {\n    return {\n      target: M.TEXTURE_2D,\n      wrapMode: S.CLAMP_TO_EDGE,\n      pixelFormat: A.RGBA,\n      dataType: this.pixelType,\n      samplingMode: k.NEAREST,\n      width: this.size,\n      height: this.size\n    };\n  }\n\n  setData(t, e, i) {\n    const s = w(t),\n          r = d(this.data),\n          a = s * this.texelSize + e;\n    !r || a >= r.length || (r[a] = i, this.dirtyStart = Math.min(this.dirtyStart, s), this.dirtyEnd = Math.max(this.dirtyEnd, s));\n  }\n\n  getData(t, e) {\n    if (s(this.data)) return null;\n    const i = w(t) * this.texelSize + e;\n    return !this.data || i >= this.data.length ? null : this.data[i];\n  }\n\n  getTexture(t) {\n    return u(this._texture, () => this._initTexture(t));\n  }\n\n  getFBO(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (s(this._fbos[e])) {\n      const i = {\n        colorTarget: N.TEXTURE,\n        depthStencilTarget: O.NONE\n      },\n            s = 0 === e ? this.getTexture(t) : this._textureDesc;\n      this._fbos[e] = new F(t, i, s);\n    }\n\n    return this._fbos[e];\n  }\n\n  get locked() {\n    return !(this.pixelType !== j.UNSIGNED_BYTE || !this.shared || this.textureOnly || !e(\"esri-atomics\") || !this.data) && 1 === Atomics.load(this.data, 0);\n  }\n\n  get hasDirty() {\n    const t = this.dirtyStart;\n    return this.dirtyEnd >= t;\n  }\n\n  updateTexture(e, i) {\n    if (!this.locked) {\n      try {\n        const i = this.dirtyStart,\n              s = this.dirtyEnd;\n        if (!this.hasDirty) return;\n\n        this._resetRange();\n\n        const r = d(this.data).buffer,\n              a = this.getTexture(e),\n              h = 4,\n              n = (i - i % this.size) / this.size,\n              o = (s - s % this.size) / this.size,\n              u = n,\n              l = this.size,\n              p = o,\n              x = n * this.size * h,\n              _ = (l + p * this.size) * h - x,\n              c = z(this.pixelType),\n              g = new c(r, x * c.BYTES_PER_ELEMENT, _),\n              f = this.size,\n              T = p - u + 1;\n\n        if (T > this.size) return void v.error(new t(\"mapview-webgl\", \"Out-of-bounds index when updating AttributeData\"));\n        a.updateData(0, 0, u, f, T, g);\n      } catch (s) {}\n\n      i();\n    }\n  }\n\n  update(t) {\n    const {\n      data: e,\n      start: i,\n      end: s\n    } = t;\n\n    if (a(e)) {\n      const s = this.data,\n            r = i * this.texelSize;\n\n      for (let i = 0; i < e.length; i++) {\n        const a = 1 << i % this.texelSize;\n        t.layout & a && (s[r + i] = e[i]);\n      }\n    }\n\n    this.dirtyStart = Math.min(this.dirtyStart, i), this.dirtyEnd = Math.max(this.dirtyEnd, s);\n  }\n\n  resize(t, e) {\n    const i = this.size;\n    if (this.size = e, this.textureOnly) return void (i !== this.size && (this._lastTexture = this._texture, this._texture = null));\n    const s = z(this.pixelType);\n    this.destroy(), this.data = new s(d(t.buffer));\n  }\n\n  _resetRange() {\n    this.dirtyStart = 2147483647, this.dirtyEnd = 0;\n  }\n\n  _initTexture(t) {\n    const e = new R(t, this._textureDesc, u(this.data, void 0));\n\n    if (a(this._lastTexture) && this._fbos[0]) {\n      const i = this._lastTexture.descriptor.width,\n            s = this._lastTexture.descriptor.height,\n            r = this._lastTexture.descriptor.dataType,\n            a = this._lastTexture.descriptor.pixelFormat,\n            h = this.getFBO(t),\n            d = E(r),\n            n = new (z(r))(new ArrayBuffer(i * s * d * this.texelSize)),\n            o = t.getBoundFramebufferObject(),\n            {\n        x: u,\n        y: l,\n        width: p,\n        height: x\n      } = t.getViewport();\n      t.bindFramebuffer(h), h.readPixels(0, 0, i, s, a, r, n), e.updateData(0, 0, 0, 2 * i, s / 2, n), t.setViewport(u, l, p, x), t.bindFramebuffer(o);\n    }\n\n    return this.destroy(), this._texture = e, this._texture;\n  }\n\n}\n\nclass L {\n  constructor(t) {\n    this._onUpdate = t, this._initialized = !1, this._forceNextUpload = !1, this._locked = !1;\n  }\n\n  initialize(t) {\n    const {\n      blocks: e,\n      shared: i,\n      size: h\n    } = t;\n    if (this.shared = i, this.size = h, B(\"Initializing AttributeStoreView\", t), s(this._data)) this._data = r(e, t => new V(t, h, i));else for (let r = 0; r < this._data.length; r++) {\n      const t = this._data[r],\n            d = e[r];\n      a(d) && (s(t) ? this._data[r] = new V(d, h, i) : t.resize(d, h));\n    }\n    this._initialized = !0;\n  }\n\n  destroy() {\n    h(this._data, t => r(t, t => t.destroy())), h(this._defaultTexture, t => t.dispose());\n  }\n\n  isEmpty() {\n    const t = this._data;\n    return s(t);\n  }\n\n  isUpdating() {\n    const t = a(this._pendingAttributeUpdate),\n          i = t;\n    return e(\"esri-2d-log-updating\") && console.log(`Updating AttributeStoreView ${i}\\n  -> hasPendingUpdate ${t}`), i;\n  }\n\n  getBlock(t) {\n    if (s(this._data)) return null;\n    return this._data[t];\n  }\n\n  setLabelMinZoom(t, e) {\n    this.setData(t, 0, 1, e);\n  }\n\n  getLabelMinZoom(t) {\n    return this.getData(t, 0, 1, 255);\n  }\n\n  getFilterFlags(t) {\n    return this.getData(t, 0, 0, 0);\n  }\n\n  getVVSize(t) {\n    return this.getData(t, p, 0, 0);\n  }\n\n  getData(t, e, i, r) {\n    if (!this._data) return 0;\n    const h = d(this._data)[e];\n    if (s(h)) return 0;\n    const n = h.getData(t, i);\n    return a(n) ? n : r;\n  }\n\n  setData(t, e, i, s) {\n    const r = d(this._data)[e];\n    d(r).setData(t, i, s);\n  }\n\n  lockTextureUpload() {\n    this._locked = !0;\n  }\n\n  unlockTextureUpload() {\n    this._locked = !1;\n  }\n\n  forceTextureUpload() {\n    this._forceNextUpload = !0;\n  }\n\n  async requestUpdate(e) {\n    if (this._pendingAttributeUpdate) return void v.error(new t(\"mapview-webgl\", \"Tried to update attribute data with a pending update\"));\n    const i = l();\n    return B(\"AttributeStoreView Update Requested\", e), this._pendingAttributeUpdate = {\n      data: e,\n      resolver: i\n    }, i.promise;\n  }\n\n  update() {\n    if (this._initialized && a(this._pendingAttributeUpdate)) {\n      const {\n        data: t,\n        resolver: e\n      } = this._pendingAttributeUpdate,\n            i = d(this._data);\n\n      for (let s = 0; s < t.blocks.length; s++) {\n        const e = t.blocks[s],\n              r = i[s];\n        h(r, t => h(e, e => {\n          B(`Updating block ${s}`, e), t.update(e);\n        }));\n      }\n\n      this._pendingAttributeUpdate = null, e(), this._onUpdate();\n    }\n  }\n\n  bindTextures(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;\n    this.update();\n\n    const i = this._getDefaultTexture(t);\n\n    if (!this._initialized) return t.bindTexture(i, x), void (e && (t.bindTexture(i, _), t.bindTexture(i, c), t.bindTexture(i, g), t.bindTexture(i, f)));\n    const s = d(this._data);\n    this._locked && !this._forceNextUpload || (n(s, e => e.updateTexture(t, () => this._onUpdate())), this._forceNextUpload = !1), t.bindTexture(o(s[T], i, e => e.getTexture(t)), x), e && (t.bindTexture(o(s[b], i, e => e.getTexture(t)), f), t.bindTexture(o(s[m], i, e => e.getTexture(t)), _), t.bindTexture(o(s[p], i, e => e.getTexture(t)), c), t.bindTexture(o(s[y], i, e => e.getTexture(t)), g));\n  }\n\n  _getDefaultTexture(t) {\n    if (s(this._defaultTexture)) {\n      const e = {\n        wrapMode: S.CLAMP_TO_EDGE,\n        pixelFormat: A.RGBA,\n        dataType: j.UNSIGNED_BYTE,\n        samplingMode: k.NEAREST,\n        width: 1,\n        height: 1\n      };\n      this._defaultTexture = new R(t, e, new Uint8Array(4));\n    }\n\n    return this._defaultTexture;\n  }\n\n}\n\nexport { L as AttributeStoreView };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/webgl/AttributeStoreView.js"],"names":["t","e","i","isNone","s","mapMany","r","isSome","a","applySome","h","unwrap","d","forEachSome","n","mapOr","o","unwrapOr","u","createResolver","l","ATTRIBUTE_DATA_VV","p","TEXTURE_BINDING_ATTRIBUTE_DATA_0","x","TEXTURE_BINDING_ATTRIBUTE_DATA_1","_","TEXTURE_BINDING_ATTRIBUTE_DATA_2","c","TEXTURE_BINDING_ATTRIBUTE_DATA_3","g","TEXTURE_BINDING_GPGPU","f","ATTRIBUTE_DATA_FILTER_FLAGS","T","ATTRIBUTE_DATA_GPGPU","b","ATTRIBUTE_DATA_ANIMATION","m","ATTRIBUTE_DATA_DD1","y","getDisplayIdTexel","w","getPixelArrayCtor","z","getPixelBytes","E","createDebugLogger","U","DEBUG_ATTR_UPDATES","D","TextureWrapMode","S","PixelFormat","A","PixelType","j","TextureSamplingMode","k","TextureType","M","TargetType","N","DepthStencilTargetType","O","FramebufferObject","F","Texture","R","v","getLogger","B","V","constructor","_texture","_lastTexture","_fbos","texelSize","buffer","pixelType","textureOnly","shared","size","data","_resetRange","destroy","dispose","detachColorTexture","_textureDesc","target","TEXTURE_2D","wrapMode","CLAMP_TO_EDGE","pixelFormat","RGBA","dataType","samplingMode","NEAREST","width","height","setData","length","dirtyStart","Math","min","dirtyEnd","max","getData","getTexture","_initTexture","getFBO","colorTarget","TEXTURE","depthStencilTarget","NONE","locked","UNSIGNED_BYTE","Atomics","load","hasDirty","updateTexture","BYTES_PER_ELEMENT","error","updateData","update","start","end","layout","resize","descriptor","ArrayBuffer","getBoundFramebufferObject","getViewport","bindFramebuffer","readPixels","setViewport","L","_onUpdate","_initialized","_forceNextUpload","_locked","initialize","blocks","_data","_defaultTexture","isEmpty","isUpdating","_pendingAttributeUpdate","console","log","getBlock","setLabelMinZoom","getLabelMinZoom","getFilterFlags","getVVSize","lockTextureUpload","unlockTextureUpload","forceTextureUpload","requestUpdate","resolver","promise","bindTextures","_getDefaultTexture","bindTexture","Uint8Array","AttributeStoreView"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,2BAAb;AAAyC,OAAOC,CAAP,MAAa,yBAAb;AAAuC,OAAOC,CAAP,MAAa,4BAAb;AAA0C,SAAOC,MAAM,IAAIC,CAAjB,EAAmBC,OAAO,IAAIC,CAA9B,EAAgCC,MAAM,IAAIC,CAA1C,EAA4CC,SAAS,IAAIC,CAAzD,EAA2DC,MAAM,IAAIC,CAArE,EAAuEC,WAAW,IAAIC,CAAtF,EAAwFC,KAAK,IAAIC,CAAjG,EAAmGC,QAAQ,IAAIC,CAA/G,QAAqH,2BAArH;AAAiJ,SAAOC,cAAc,IAAIC,CAAzB,QAA+B,kCAA/B;AAAkE,SAAOC,iBAAiB,IAAIC,CAA5B,EAA8BC,gCAAgC,IAAIC,CAAlE,EAAoEC,gCAAgC,IAAIC,CAAxG,EAA0GC,gCAAgC,IAAIC,CAA9I,EAAgJC,gCAAgC,IAAIC,CAApL,EAAsLC,qBAAqB,IAAIC,CAA/M,EAAiNC,2BAA2B,IAAIC,CAAhP,EAAkPC,oBAAoB,IAAIC,CAA1Q,EAA4QC,wBAAwB,IAAIC,CAAxS,EAA0SC,kBAAkB,IAAIC,CAAhU,QAAsU,kBAAtU;AAAyV,SAAOC,iBAAiB,IAAIC,CAA5B,QAAkC,gBAAlC;AAAmD,SAAOC,iBAAiB,IAAIC,CAA5B,EAA8BC,aAAa,IAAIC,CAA/C,QAAqD,YAArD;AAAkE,SAAOC,iBAAiB,IAAIC,CAA5B,EAA8BC,kBAAkB,IAAIC,CAApD,QAA0D,iBAA1D;AAA4E,SAAOC,eAAe,IAAIC,CAA1B,EAA4BC,WAAW,IAAIC,CAA3C,EAA6CC,SAAS,IAAIC,CAA1D,EAA4DC,mBAAmB,IAAIC,CAAnF,EAAqFC,WAAW,IAAIC,CAApG,EAAsGC,UAAU,IAAIC,CAApH,EAAsHC,sBAAsB,IAAIC,CAAhJ,QAAsJ,yBAAtJ;AAAgL,SAAOC,iBAAiB,IAAIC,CAA5B,QAAkC,qCAAlC;AAAwE,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,2BAAxB;AAAoD,MAAMC,CAAC,GAACnE,CAAC,CAACoE,SAAF,CAAY,+CAAZ,CAAR;AAAA,MAAqEC,CAAC,GAACvB,CAAC,CAACE,CAAD,EAAGmB,CAAH,CAAxE;;AAA8E,MAAMG,CAAN,CAAO;AAACC,EAAAA,WAAW,CAACzE,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAO;AAAC,SAAKwE,QAAL,GAAc,IAAd,EAAmB,KAAKC,YAAL,GAAkB,IAArC,EAA0C,KAAKC,KAAL,GAAW,EAArD,EAAwD,KAAKC,SAAL,GAAe,CAAvE;AAAyE,UAAK;AAACC,MAAAA,MAAM,EAAC1E,CAAR;AAAU2E,MAAAA,SAAS,EAACzE,CAApB;AAAsB0E,MAAAA,WAAW,EAACxE;AAAlC,QAAqCR,CAA1C;AAAA,UAA4CU,CAAC,GAACkC,CAAC,CAACtC,CAAD,CAA/C;AAAmD,SAAK2E,MAAL,GAAY/E,CAAZ,EAAc,KAAK6E,SAAL,GAAezE,CAA7B,EAA+B,KAAK4E,IAAL,GAAUjF,CAAzC,EAA2C,KAAK+E,WAAL,GAAiBxE,CAA5D,EAA8DA,CAAC,KAAG,KAAK2E,IAAL,GAAU,IAAIzE,CAAJ,CAAME,CAAC,CAACR,CAAD,CAAP,CAAb,CAA/D,EAAyF,KAAKgF,WAAL,EAAzF;AAA4G;;AAAAC,EAAAA,OAAO,GAAE;AAAC3E,IAAAA,CAAC,CAAC,KAAKgE,QAAN,EAAgB1E,CAAC,IAAEA,CAAC,CAACsF,OAAF,EAAnB,CAAD;;AAAkC,SAAI,MAAMtF,CAAV,IAAe,KAAK4E,KAApB,EAA0BlE,CAAC,CAAC,KAAKkE,KAAL,CAAW5E,CAAX,CAAD,EAAgBC,CAAC,IAAE;AAAC,cAAMD,CAAN,IAASC,CAAC,CAACsF,kBAAF,EAAT,EAAgCtF,CAAC,CAACqF,OAAF,EAAhC;AAA4C,KAAhE,CAAD,EAAoE,KAAKV,KAAL,CAAW5E,CAAX,IAAc,IAAlF;;AAAuF,SAAK0E,QAAL,GAAc,IAAd;AAAmB;;AAAgB,MAAZc,YAAY,GAAE;AAAC,WAAM;AAACC,MAAAA,MAAM,EAAC7B,CAAC,CAAC8B,UAAV;AAAqBC,MAAAA,QAAQ,EAACvC,CAAC,CAACwC,aAAhC;AAA8CC,MAAAA,WAAW,EAACvC,CAAC,CAACwC,IAA5D;AAAiEC,MAAAA,QAAQ,EAAC,KAAKhB,SAA/E;AAAyFiB,MAAAA,YAAY,EAACtC,CAAC,CAACuC,OAAxG;AAAgHC,MAAAA,KAAK,EAAC,KAAKhB,IAA3H;AAAgIiB,MAAAA,MAAM,EAAC,KAAKjB;AAA5I,KAAN;AAAwJ;;AAAAkB,EAAAA,OAAO,CAACpG,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAO;AAAC,UAAME,CAAC,GAACsC,CAAC,CAAC1C,CAAD,CAAT;AAAA,UAAaM,CAAC,GAACM,CAAC,CAAC,KAAKuE,IAAN,CAAhB;AAAA,UAA4B3E,CAAC,GAACJ,CAAC,GAAC,KAAKyE,SAAP,GAAiB5E,CAA/C;AAAiD,KAACK,CAAD,IAAIE,CAAC,IAAEF,CAAC,CAAC+F,MAAT,KAAkB/F,CAAC,CAACE,CAAD,CAAD,GAAKN,CAAL,EAAO,KAAKoG,UAAL,GAAgBC,IAAI,CAACC,GAAL,CAAS,KAAKF,UAAd,EAAyBlG,CAAzB,CAAvB,EAAmD,KAAKqG,QAAL,GAAcF,IAAI,CAACG,GAAL,CAAS,KAAKD,QAAd,EAAuBrG,CAAvB,CAAnF;AAA8G;;AAAAuG,EAAAA,OAAO,CAAC3G,CAAD,EAAGC,CAAH,EAAK;AAAC,QAAGG,CAAC,CAAC,KAAK+E,IAAN,CAAJ,EAAgB,OAAO,IAAP;AAAY,UAAMjF,CAAC,GAACwC,CAAC,CAAC1C,CAAD,CAAD,GAAK,KAAK6E,SAAV,GAAoB5E,CAA5B;AAA8B,WAAM,CAAC,KAAKkF,IAAN,IAAYjF,CAAC,IAAE,KAAKiF,IAAL,CAAUkB,MAAzB,GAAgC,IAAhC,GAAqC,KAAKlB,IAAL,CAAUjF,CAAV,CAA3C;AAAwD;;AAAA0G,EAAAA,UAAU,CAAC5G,CAAD,EAAG;AAAC,WAAOkB,CAAC,CAAC,KAAKwD,QAAN,EAAgB,MAAI,KAAKmC,YAAL,CAAkB7G,CAAlB,CAApB,CAAR;AAAmD;;AAAA8G,EAAAA,MAAM,CAAC9G,CAAD,EAAO;AAAA,QAAJC,CAAI,uEAAF,CAAE;;AAAC,QAAGG,CAAC,CAAC,KAAKwE,KAAL,CAAW3E,CAAX,CAAD,CAAJ,EAAoB;AAAC,YAAMC,CAAC,GAAC;AAAC6G,QAAAA,WAAW,EAACjD,CAAC,CAACkD,OAAf;AAAuBC,QAAAA,kBAAkB,EAACjD,CAAC,CAACkD;AAA5C,OAAR;AAAA,YAA0D9G,CAAC,GAAC,MAAIH,CAAJ,GAAM,KAAK2G,UAAL,CAAgB5G,CAAhB,CAAN,GAAyB,KAAKwF,YAA1F;AAAuG,WAAKZ,KAAL,CAAW3E,CAAX,IAAc,IAAIiE,CAAJ,CAAMlE,CAAN,EAAQE,CAAR,EAAUE,CAAV,CAAd;AAA2B;;AAAA,WAAO,KAAKwE,KAAL,CAAW3E,CAAX,CAAP;AAAqB;;AAAU,MAANkH,MAAM,GAAE;AAAC,WAAM,EAAE,KAAKpC,SAAL,KAAiBvB,CAAC,CAAC4D,aAAnB,IAAkC,CAAC,KAAKnC,MAAxC,IAAgD,KAAKD,WAArD,IAAkE,CAAC/E,CAAC,CAAC,cAAD,CAApE,IAAsF,CAAC,KAAKkF,IAA9F,KAAqG,MAAIkC,OAAO,CAACC,IAAR,CAAa,KAAKnC,IAAlB,EAAuB,CAAvB,CAA/G;AAAyI;;AAAY,MAARoC,QAAQ,GAAE;AAAC,UAAMvH,CAAC,GAAC,KAAKsG,UAAb;AAAwB,WAAO,KAAKG,QAAL,IAAezG,CAAtB;AAAwB;;AAAAwH,EAAAA,aAAa,CAACvH,CAAD,EAAGC,CAAH,EAAK;AAAC,QAAG,CAAC,KAAKiH,MAAT,EAAgB;AAAC,UAAG;AAAC,cAAMjH,CAAC,GAAC,KAAKoG,UAAb;AAAA,cAAwBlG,CAAC,GAAC,KAAKqG,QAA/B;AAAwC,YAAG,CAAC,KAAKc,QAAT,EAAkB;;AAAO,aAAKnC,WAAL;;AAAmB,cAAM9E,CAAC,GAACM,CAAC,CAAC,KAAKuE,IAAN,CAAD,CAAaL,MAArB;AAAA,cAA4BtE,CAAC,GAAC,KAAKoG,UAAL,CAAgB3G,CAAhB,CAA9B;AAAA,cAAiDS,CAAC,GAAC,CAAnD;AAAA,cAAqDI,CAAC,GAAC,CAACZ,CAAC,GAACA,CAAC,GAAC,KAAKgF,IAAV,IAAgB,KAAKA,IAA5E;AAAA,cAAiFlE,CAAC,GAAC,CAACZ,CAAC,GAACA,CAAC,GAAC,KAAK8E,IAAV,IAAgB,KAAKA,IAAxG;AAAA,cAA6GhE,CAAC,GAACJ,CAA/G;AAAA,cAAiHM,CAAC,GAAC,KAAK8D,IAAxH;AAAA,cAA6H5D,CAAC,GAACN,CAA/H;AAAA,cAAiIQ,CAAC,GAACV,CAAC,GAAC,KAAKoE,IAAP,GAAYxE,CAA/I;AAAA,cAAiJgB,CAAC,GAAC,CAACN,CAAC,GAACE,CAAC,GAAC,KAAK4D,IAAV,IAAgBxE,CAAhB,GAAkBc,CAArK;AAAA,cAAuKI,CAAC,GAACgB,CAAC,CAAC,KAAKmC,SAAN,CAA1K;AAAA,cAA2LjD,CAAC,GAAC,IAAIF,CAAJ,CAAMtB,CAAN,EAAQkB,CAAC,GAACI,CAAC,CAAC6F,iBAAZ,EAA8B/F,CAA9B,CAA7L;AAAA,cAA8NM,CAAC,GAAC,KAAKkD,IAArO;AAAA,cAA0OhD,CAAC,GAACZ,CAAC,GAACJ,CAAF,GAAI,CAAhP;;AAAkP,YAAGgB,CAAC,GAAC,KAAKgD,IAAV,EAAe,OAAO,KAAKb,CAAC,CAACqD,KAAF,CAAQ,IAAI1H,CAAJ,CAAM,eAAN,EAAsB,iDAAtB,CAAR,CAAZ;AAA8FQ,QAAAA,CAAC,CAACmH,UAAF,CAAa,CAAb,EAAe,CAAf,EAAiBzG,CAAjB,EAAmBc,CAAnB,EAAqBE,CAArB,EAAuBJ,CAAvB;AAA0B,OAAjd,CAAid,OAAM1B,CAAN,EAAQ,CAAE;;AAAAF,MAAAA,CAAC;AAAG;AAAC;;AAAA0H,EAAAA,MAAM,CAAC5H,CAAD,EAAG;AAAC,UAAK;AAACmF,MAAAA,IAAI,EAAClF,CAAN;AAAQ4H,MAAAA,KAAK,EAAC3H,CAAd;AAAgB4H,MAAAA,GAAG,EAAC1H;AAApB,QAAuBJ,CAA5B;;AAA8B,QAAGQ,CAAC,CAACP,CAAD,CAAJ,EAAQ;AAAC,YAAMG,CAAC,GAAC,KAAK+E,IAAb;AAAA,YAAkB7E,CAAC,GAACJ,CAAC,GAAC,KAAK2E,SAA3B;;AAAqC,WAAI,IAAI3E,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,CAAC,CAACoG,MAAhB,EAAuBnG,CAAC,EAAxB,EAA2B;AAAC,cAAMM,CAAC,GAAC,KAAGN,CAAC,GAAC,KAAK2E,SAAlB;AAA4B7E,QAAAA,CAAC,CAAC+H,MAAF,GAASvH,CAAT,KAAaJ,CAAC,CAACE,CAAC,GAACJ,CAAH,CAAD,GAAOD,CAAC,CAACC,CAAD,CAArB;AAA0B;AAAC;;AAAA,SAAKoG,UAAL,GAAgBC,IAAI,CAACC,GAAL,CAAS,KAAKF,UAAd,EAAyBpG,CAAzB,CAAhB,EAA4C,KAAKuG,QAAL,GAAcF,IAAI,CAACG,GAAL,CAAS,KAAKD,QAAd,EAAuBrG,CAAvB,CAA1D;AAAoF;;AAAA4H,EAAAA,MAAM,CAAChI,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMC,CAAC,GAAC,KAAKgF,IAAb;AAAkB,QAAG,KAAKA,IAAL,GAAUjF,CAAV,EAAY,KAAK+E,WAApB,EAAgC,OAAO,MAAK9E,CAAC,KAAG,KAAKgF,IAAT,KAAgB,KAAKP,YAAL,GAAkB,KAAKD,QAAvB,EAAgC,KAAKA,QAAL,GAAc,IAA9D,CAAL,CAAP;AAAiF,UAAMtE,CAAC,GAACwC,CAAC,CAAC,KAAKmC,SAAN,CAAT;AAA0B,SAAKM,OAAL,IAAe,KAAKF,IAAL,GAAU,IAAI/E,CAAJ,CAAMQ,CAAC,CAACZ,CAAC,CAAC8E,MAAH,CAAP,CAAzB;AAA4C;;AAAAM,EAAAA,WAAW,GAAE;AAAC,SAAKkB,UAAL,GAAgB,UAAhB,EAA2B,KAAKG,QAAL,GAAc,CAAzC;AAA2C;;AAAAI,EAAAA,YAAY,CAAC7G,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,IAAImE,CAAJ,CAAMpE,CAAN,EAAQ,KAAKwF,YAAb,EAA0BtE,CAAC,CAAC,KAAKiE,IAAN,EAAW,KAAK,CAAhB,CAA3B,CAAR;;AAAuD,QAAG3E,CAAC,CAAC,KAAKmE,YAAN,CAAD,IAAsB,KAAKC,KAAL,CAAW,CAAX,CAAzB,EAAuC;AAAC,YAAM1E,CAAC,GAAC,KAAKyE,YAAL,CAAkBsD,UAAlB,CAA6B/B,KAArC;AAAA,YAA2C9F,CAAC,GAAC,KAAKuE,YAAL,CAAkBsD,UAAlB,CAA6B9B,MAA1E;AAAA,YAAiF7F,CAAC,GAAC,KAAKqE,YAAL,CAAkBsD,UAAlB,CAA6BlC,QAAhH;AAAA,YAAyHvF,CAAC,GAAC,KAAKmE,YAAL,CAAkBsD,UAAlB,CAA6BpC,WAAxJ;AAAA,YAAoKnF,CAAC,GAAC,KAAKoG,MAAL,CAAY9G,CAAZ,CAAtK;AAAA,YAAqLY,CAAC,GAACkC,CAAC,CAACxC,CAAD,CAAxL;AAAA,YAA4LQ,CAAC,GAAC,KAAI8B,CAAC,CAACtC,CAAD,CAAL,EAAU,IAAI4H,WAAJ,CAAgBhI,CAAC,GAACE,CAAF,GAAIQ,CAAJ,GAAM,KAAKiE,SAA3B,CAAV,CAA9L;AAAA,YAA+O7D,CAAC,GAAChB,CAAC,CAACmI,yBAAF,EAAjP;AAAA,YAA+Q;AAAC3G,QAAAA,CAAC,EAACN,CAAH;AAAKsB,QAAAA,CAAC,EAACpB,CAAP;AAAS8E,QAAAA,KAAK,EAAC5E,CAAf;AAAiB6E,QAAAA,MAAM,EAAC3E;AAAxB,UAA2BxB,CAAC,CAACoI,WAAF,EAA1S;AAA0TpI,MAAAA,CAAC,CAACqI,eAAF,CAAkB3H,CAAlB,GAAqBA,CAAC,CAAC4H,UAAF,CAAa,CAAb,EAAe,CAAf,EAAiBpI,CAAjB,EAAmBE,CAAnB,EAAqBI,CAArB,EAAuBF,CAAvB,EAAyBQ,CAAzB,CAArB,EAAiDb,CAAC,CAAC0H,UAAF,CAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,IAAEzH,CAArB,EAAuBE,CAAC,GAAC,CAAzB,EAA2BU,CAA3B,CAAjD,EAA+Ed,CAAC,CAACuI,WAAF,CAAcrH,CAAd,EAAgBE,CAAhB,EAAkBE,CAAlB,EAAoBE,CAApB,CAA/E,EAAsGxB,CAAC,CAACqI,eAAF,CAAkBrH,CAAlB,CAAtG;AAA2H;;AAAA,WAAO,KAAKqE,OAAL,IAAe,KAAKX,QAAL,GAAczE,CAA7B,EAA+B,KAAKyE,QAA3C;AAAoD;;AAA37F;;AAA47F,MAAM8D,CAAN,CAAO;AAAC/D,EAAAA,WAAW,CAACzE,CAAD,EAAG;AAAC,SAAKyI,SAAL,GAAezI,CAAf,EAAiB,KAAK0I,YAAL,GAAkB,CAAC,CAApC,EAAsC,KAAKC,gBAAL,GAAsB,CAAC,CAA7D,EAA+D,KAAKC,OAAL,GAAa,CAAC,CAA7E;AAA+E;;AAAAC,EAAAA,UAAU,CAAC7I,CAAD,EAAG;AAAC,UAAK;AAAC8I,MAAAA,MAAM,EAAC7I,CAAR;AAAUgF,MAAAA,MAAM,EAAC/E,CAAjB;AAAmBgF,MAAAA,IAAI,EAACxE;AAAxB,QAA2BV,CAAhC;AAAkC,QAAG,KAAKiF,MAAL,GAAY/E,CAAZ,EAAc,KAAKgF,IAAL,GAAUxE,CAAxB,EAA0B6D,CAAC,CAAC,iCAAD,EAAmCvE,CAAnC,CAA3B,EAAiEI,CAAC,CAAC,KAAK2I,KAAN,CAArE,EAAkF,KAAKA,KAAL,GAAWzI,CAAC,CAACL,CAAD,EAAID,CAAC,IAAE,IAAIwE,CAAJ,CAAMxE,CAAN,EAAQU,CAAR,EAAUR,CAAV,CAAP,CAAZ,CAAlF,KAAyH,KAAI,IAAII,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKyI,KAAL,CAAW1C,MAAzB,EAAgC/F,CAAC,EAAjC,EAAoC;AAAC,YAAMN,CAAC,GAAC,KAAK+I,KAAL,CAAWzI,CAAX,CAAR;AAAA,YAAsBM,CAAC,GAACX,CAAC,CAACK,CAAD,CAAzB;AAA6BE,MAAAA,CAAC,CAACI,CAAD,CAAD,KAAOR,CAAC,CAACJ,CAAD,CAAD,GAAK,KAAK+I,KAAL,CAAWzI,CAAX,IAAc,IAAIkE,CAAJ,CAAM5D,CAAN,EAAQF,CAAR,EAAUR,CAAV,CAAnB,GAAgCF,CAAC,CAACgI,MAAF,CAASpH,CAAT,EAAWF,CAAX,CAAvC;AAAsD;AAAA,SAAKgI,YAAL,GAAkB,CAAC,CAAnB;AAAqB;;AAAArD,EAAAA,OAAO,GAAE;AAAC3E,IAAAA,CAAC,CAAC,KAAKqI,KAAN,EAAa/I,CAAC,IAAEM,CAAC,CAACN,CAAD,EAAIA,CAAC,IAAEA,CAAC,CAACqF,OAAF,EAAP,CAAjB,CAAD,EAAyC3E,CAAC,CAAC,KAAKsI,eAAN,EAAuBhJ,CAAC,IAAEA,CAAC,CAACsF,OAAF,EAA1B,CAA1C;AAAkF;;AAAA2D,EAAAA,OAAO,GAAE;AAAC,UAAMjJ,CAAC,GAAC,KAAK+I,KAAb;AAAmB,WAAO3I,CAAC,CAACJ,CAAD,CAAR;AAAY;;AAAAkJ,EAAAA,UAAU,GAAE;AAAC,UAAMlJ,CAAC,GAACQ,CAAC,CAAC,KAAK2I,uBAAN,CAAT;AAAA,UAAwCjJ,CAAC,GAACF,CAA1C;AAA4C,WAAOC,CAAC,CAAC,sBAAD,CAAD,IAA2BmJ,OAAO,CAACC,GAAR,CAAa,+BAA8BnJ,CAAE,2BAA0BF,CAAE,EAAzE,CAA3B,EAAuGE,CAA9G;AAAgH;;AAAAoJ,EAAAA,QAAQ,CAACtJ,CAAD,EAAG;AAAC,QAAGI,CAAC,CAAC,KAAK2I,KAAN,CAAJ,EAAiB,OAAO,IAAP;AAAY,WAAO,KAAKA,KAAL,CAAW/I,CAAX,CAAP;AAAqB;;AAAAuJ,EAAAA,eAAe,CAACvJ,CAAD,EAAGC,CAAH,EAAK;AAAC,SAAKmG,OAAL,CAAapG,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmBC,CAAnB;AAAsB;;AAAAuJ,EAAAA,eAAe,CAACxJ,CAAD,EAAG;AAAC,WAAO,KAAK2G,OAAL,CAAa3G,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,GAAnB,CAAP;AAA+B;;AAAAyJ,EAAAA,cAAc,CAACzJ,CAAD,EAAG;AAAC,WAAO,KAAK2G,OAAL,CAAa3G,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,CAAP;AAA6B;;AAAA0J,EAAAA,SAAS,CAAC1J,CAAD,EAAG;AAAC,WAAO,KAAK2G,OAAL,CAAa3G,CAAb,EAAesB,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,CAAP;AAA6B;;AAAAqF,EAAAA,OAAO,CAAC3G,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAOI,CAAP,EAAS;AAAC,QAAG,CAAC,KAAKyI,KAAT,EAAe,OAAO,CAAP;AAAS,UAAMrI,CAAC,GAACE,CAAC,CAAC,KAAKmI,KAAN,CAAD,CAAc9I,CAAd,CAAR;AAAyB,QAAGG,CAAC,CAACM,CAAD,CAAJ,EAAQ,OAAO,CAAP;AAAS,UAAMI,CAAC,GAACJ,CAAC,CAACiG,OAAF,CAAU3G,CAAV,EAAYE,CAAZ,CAAR;AAAuB,WAAOM,CAAC,CAACM,CAAD,CAAD,GAAKA,CAAL,GAAOR,CAAd;AAAgB;;AAAA8F,EAAAA,OAAO,CAACpG,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAOE,CAAP,EAAS;AAAC,UAAME,CAAC,GAACM,CAAC,CAAC,KAAKmI,KAAN,CAAD,CAAc9I,CAAd,CAAR;AAAyBW,IAAAA,CAAC,CAACN,CAAD,CAAD,CAAK8F,OAAL,CAAapG,CAAb,EAAeE,CAAf,EAAiBE,CAAjB;AAAoB;;AAAAuJ,EAAAA,iBAAiB,GAAE;AAAC,SAAKf,OAAL,GAAa,CAAC,CAAd;AAAgB;;AAAAgB,EAAAA,mBAAmB,GAAE;AAAC,SAAKhB,OAAL,GAAa,CAAC,CAAd;AAAgB;;AAAAiB,EAAAA,kBAAkB,GAAE;AAAC,SAAKlB,gBAAL,GAAsB,CAAC,CAAvB;AAAyB;;AAAmB,QAAbmB,aAAa,CAAC7J,CAAD,EAAG;AAAC,QAAG,KAAKkJ,uBAAR,EAAgC,OAAO,KAAK9E,CAAC,CAACqD,KAAF,CAAQ,IAAI1H,CAAJ,CAAM,eAAN,EAAsB,sDAAtB,CAAR,CAAZ;AAAmG,UAAME,CAAC,GAACkB,CAAC,EAAT;AAAY,WAAOmD,CAAC,CAAC,qCAAD,EAAuCtE,CAAvC,CAAD,EAA2C,KAAKkJ,uBAAL,GAA6B;AAAChE,MAAAA,IAAI,EAAClF,CAAN;AAAQ8J,MAAAA,QAAQ,EAAC7J;AAAjB,KAAxE,EAA4FA,CAAC,CAAC8J,OAArG;AAA6G;;AAAApC,EAAAA,MAAM,GAAE;AAAC,QAAG,KAAKc,YAAL,IAAmBlI,CAAC,CAAC,KAAK2I,uBAAN,CAAvB,EAAsD;AAAC,YAAK;AAAChE,QAAAA,IAAI,EAACnF,CAAN;AAAQ+J,QAAAA,QAAQ,EAAC9J;AAAjB,UAAoB,KAAKkJ,uBAA9B;AAAA,YAAsDjJ,CAAC,GAACU,CAAC,CAAC,KAAKmI,KAAN,CAAzD;;AAAsE,WAAI,IAAI3I,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,CAAC,CAAC8I,MAAF,CAASzC,MAAvB,EAA8BjG,CAAC,EAA/B,EAAkC;AAAC,cAAMH,CAAC,GAACD,CAAC,CAAC8I,MAAF,CAAS1I,CAAT,CAAR;AAAA,cAAoBE,CAAC,GAACJ,CAAC,CAACE,CAAD,CAAvB;AAA2BM,QAAAA,CAAC,CAACJ,CAAD,EAAIN,CAAC,IAAEU,CAAC,CAACT,CAAD,EAAIA,CAAC,IAAE;AAACsE,UAAAA,CAAC,CAAE,kBAAiBnE,CAAE,EAArB,EAAuBH,CAAvB,CAAD,EAA2BD,CAAC,CAAC4H,MAAF,CAAS3H,CAAT,CAA3B;AAAuC,SAA/C,CAAR,CAAD;AAA6D;;AAAA,WAAKkJ,uBAAL,GAA6B,IAA7B,EAAkClJ,CAAC,EAAnC,EAAsC,KAAKwI,SAAL,EAAtC;AAAuD;AAAC;;AAAAwB,EAAAA,YAAY,CAACjK,CAAD,EAAQ;AAAA,QAALC,CAAK,uEAAH,CAAC,CAAE;AAAC,SAAK2H,MAAL;;AAAc,UAAM1H,CAAC,GAAC,KAAKgK,kBAAL,CAAwBlK,CAAxB,CAAR;;AAAmC,QAAG,CAAC,KAAK0I,YAAT,EAAsB,OAAO1I,CAAC,CAACmK,WAAF,CAAcjK,CAAd,EAAgBsB,CAAhB,GAAmB,MAAKvB,CAAC,KAAGD,CAAC,CAACmK,WAAF,CAAcjK,CAAd,EAAgBwB,CAAhB,GAAmB1B,CAAC,CAACmK,WAAF,CAAcjK,CAAd,EAAgB0B,CAAhB,CAAnB,EAAsC5B,CAAC,CAACmK,WAAF,CAAcjK,CAAd,EAAgB4B,CAAhB,CAAtC,EAAyD9B,CAAC,CAACmK,WAAF,CAAcjK,CAAd,EAAgB8B,CAAhB,CAA5D,CAAN,CAA1B;AAAiH,UAAM5B,CAAC,GAACQ,CAAC,CAAC,KAAKmI,KAAN,CAAT;AAAsB,SAAKH,OAAL,IAAc,CAAC,KAAKD,gBAApB,KAAuC7H,CAAC,CAACV,CAAD,EAAIH,CAAC,IAAEA,CAAC,CAACuH,aAAF,CAAgBxH,CAAhB,EAAmB,MAAI,KAAKyI,SAAL,EAAvB,CAAP,CAAD,EAAoD,KAAKE,gBAAL,GAAsB,CAAC,CAAlH,GAAqH3I,CAAC,CAACmK,WAAF,CAAcnJ,CAAC,CAACZ,CAAC,CAAC8B,CAAD,CAAF,EAAMhC,CAAN,EAASD,CAAC,IAAEA,CAAC,CAAC2G,UAAF,CAAa5G,CAAb,CAAZ,CAAf,EAA6CwB,CAA7C,CAArH,EAAqKvB,CAAC,KAAGD,CAAC,CAACmK,WAAF,CAAcnJ,CAAC,CAACZ,CAAC,CAACgC,CAAD,CAAF,EAAMlC,CAAN,EAASD,CAAC,IAAEA,CAAC,CAAC2G,UAAF,CAAa5G,CAAb,CAAZ,CAAf,EAA6CgC,CAA7C,GAAgDhC,CAAC,CAACmK,WAAF,CAAcnJ,CAAC,CAACZ,CAAC,CAACkC,CAAD,CAAF,EAAMpC,CAAN,EAASD,CAAC,IAAEA,CAAC,CAAC2G,UAAF,CAAa5G,CAAb,CAAZ,CAAf,EAA6C0B,CAA7C,CAAhD,EAAgG1B,CAAC,CAACmK,WAAF,CAAcnJ,CAAC,CAACZ,CAAC,CAACkB,CAAD,CAAF,EAAMpB,CAAN,EAASD,CAAC,IAAEA,CAAC,CAAC2G,UAAF,CAAa5G,CAAb,CAAZ,CAAf,EAA6C4B,CAA7C,CAAhG,EAAgJ5B,CAAC,CAACmK,WAAF,CAAcnJ,CAAC,CAACZ,CAAC,CAACoC,CAAD,CAAF,EAAMtC,CAAN,EAASD,CAAC,IAAEA,CAAC,CAAC2G,UAAF,CAAa5G,CAAb,CAAZ,CAAf,EAA6C8B,CAA7C,CAAnJ,CAAtK;AAA0W;;AAAAoI,EAAAA,kBAAkB,CAAClK,CAAD,EAAG;AAAC,QAAGI,CAAC,CAAC,KAAK4I,eAAN,CAAJ,EAA2B;AAAC,YAAM/I,CAAC,GAAC;AAAC0F,QAAAA,QAAQ,EAACvC,CAAC,CAACwC,aAAZ;AAA0BC,QAAAA,WAAW,EAACvC,CAAC,CAACwC,IAAxC;AAA6CC,QAAAA,QAAQ,EAACvC,CAAC,CAAC4D,aAAxD;AAAsEpB,QAAAA,YAAY,EAACtC,CAAC,CAACuC,OAArF;AAA6FC,QAAAA,KAAK,EAAC,CAAnG;AAAqGC,QAAAA,MAAM,EAAC;AAA5G,OAAR;AAAuH,WAAK6C,eAAL,GAAqB,IAAI5E,CAAJ,CAAMpE,CAAN,EAAQC,CAAR,EAAU,IAAImK,UAAJ,CAAe,CAAf,CAAV,CAArB;AAAkD;;AAAA,WAAO,KAAKpB,eAAZ;AAA4B;;AAAvnF;;AAAwnF,SAAOR,CAAC,IAAI6B,kBAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport t from\"../../../../core/Error.js\";import e from\"../../../../core/has.js\";import i from\"../../../../core/Logger.js\";import{isNone as s,mapMany as r,isSome as a,applySome as h,unwrap as d,forEachSome as n,mapOr as o,unwrapOr as u}from\"../../../../core/maybe.js\";import{createResolver as l}from\"../../../../core/promiseUtils.js\";import{ATTRIBUTE_DATA_VV as p,TEXTURE_BINDING_ATTRIBUTE_DATA_0 as x,TEXTURE_BINDING_ATTRIBUTE_DATA_1 as _,TEXTURE_BINDING_ATTRIBUTE_DATA_2 as c,TEXTURE_BINDING_ATTRIBUTE_DATA_3 as g,TEXTURE_BINDING_GPGPU as f,ATTRIBUTE_DATA_FILTER_FLAGS as T,ATTRIBUTE_DATA_GPGPU as b,ATTRIBUTE_DATA_ANIMATION as m,ATTRIBUTE_DATA_DD1 as y}from\"./definitions.js\";import{getDisplayIdTexel as w}from\"./DisplayId.js\";import{getPixelArrayCtor as z,getPixelBytes as E}from\"./Utils.js\";import{createDebugLogger as U,DEBUG_ATTR_UPDATES as D}from\"./util/debug.js\";import{TextureWrapMode as S,PixelFormat as A,PixelType as j,TextureSamplingMode as k,TextureType as M,TargetType as N,DepthStencilTargetType as O}from\"../../../webgl/enums.js\";import{FramebufferObject as F}from\"../../../webgl/FramebufferObject.js\";import{Texture as R}from\"../../../webgl/Texture.js\";const v=i.getLogger(\"esri.views.2d.engine.webgl.AttributeStoreView\"),B=U(D,v);class V{constructor(t,e,i){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:s,pixelType:r,textureOnly:a}=t,h=z(r);this.shared=i,this.pixelType=r,this.size=e,this.textureOnly=a,a||(this.data=new h(d(s))),this._resetRange()}destroy(){h(this._texture,(t=>t.dispose()));for(const t in this._fbos)h(this._fbos[t],(e=>{\"0\"===t&&e.detachColorTexture(),e.dispose()})),this._fbos[t]=null;this._texture=null}get _textureDesc(){return{target:M.TEXTURE_2D,wrapMode:S.CLAMP_TO_EDGE,pixelFormat:A.RGBA,dataType:this.pixelType,samplingMode:k.NEAREST,width:this.size,height:this.size}}setData(t,e,i){const s=w(t),r=d(this.data),a=s*this.texelSize+e;!r||a>=r.length||(r[a]=i,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s))}getData(t,e){if(s(this.data))return null;const i=w(t)*this.texelSize+e;return!this.data||i>=this.data.length?null:this.data[i]}getTexture(t){return u(this._texture,(()=>this._initTexture(t)))}getFBO(t,e=0){if(s(this._fbos[e])){const i={colorTarget:N.TEXTURE,depthStencilTarget:O.NONE},s=0===e?this.getTexture(t):this._textureDesc;this._fbos[e]=new F(t,i,s)}return this._fbos[e]}get locked(){return!(this.pixelType!==j.UNSIGNED_BYTE||!this.shared||this.textureOnly||!e(\"esri-atomics\")||!this.data)&&1===Atomics.load(this.data,0)}get hasDirty(){const t=this.dirtyStart;return this.dirtyEnd>=t}updateTexture(e,i){if(!this.locked){try{const i=this.dirtyStart,s=this.dirtyEnd;if(!this.hasDirty)return;this._resetRange();const r=d(this.data).buffer,a=this.getTexture(e),h=4,n=(i-i%this.size)/this.size,o=(s-s%this.size)/this.size,u=n,l=this.size,p=o,x=n*this.size*h,_=(l+p*this.size)*h-x,c=z(this.pixelType),g=new c(r,x*c.BYTES_PER_ELEMENT,_),f=this.size,T=p-u+1;if(T>this.size)return void v.error(new t(\"mapview-webgl\",\"Out-of-bounds index when updating AttributeData\"));a.updateData(0,0,u,f,T,g)}catch(s){}i()}}update(t){const{data:e,start:i,end:s}=t;if(a(e)){const s=this.data,r=i*this.texelSize;for(let i=0;i<e.length;i++){const a=1<<i%this.texelSize;t.layout&a&&(s[r+i]=e[i])}}this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,s)}resize(t,e){const i=this.size;if(this.size=e,this.textureOnly)return void(i!==this.size&&(this._lastTexture=this._texture,this._texture=null));const s=z(this.pixelType);this.destroy(),this.data=new s(d(t.buffer))}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(t){const e=new R(t,this._textureDesc,u(this.data,void 0));if(a(this._lastTexture)&&this._fbos[0]){const i=this._lastTexture.descriptor.width,s=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,a=this._lastTexture.descriptor.pixelFormat,h=this.getFBO(t),d=E(r),n=new(z(r))(new ArrayBuffer(i*s*d*this.texelSize)),o=t.getBoundFramebufferObject(),{x:u,y:l,width:p,height:x}=t.getViewport();t.bindFramebuffer(h),h.readPixels(0,0,i,s,a,r,n),e.updateData(0,0,0,2*i,s/2,n),t.setViewport(u,l,p,x),t.bindFramebuffer(o)}return this.destroy(),this._texture=e,this._texture}}class L{constructor(t){this._onUpdate=t,this._initialized=!1,this._forceNextUpload=!1,this._locked=!1}initialize(t){const{blocks:e,shared:i,size:h}=t;if(this.shared=i,this.size=h,B(\"Initializing AttributeStoreView\",t),s(this._data))this._data=r(e,(t=>new V(t,h,i)));else for(let r=0;r<this._data.length;r++){const t=this._data[r],d=e[r];a(d)&&(s(t)?this._data[r]=new V(d,h,i):t.resize(d,h))}this._initialized=!0}destroy(){h(this._data,(t=>r(t,(t=>t.destroy())))),h(this._defaultTexture,(t=>t.dispose()))}isEmpty(){const t=this._data;return s(t)}isUpdating(){const t=a(this._pendingAttributeUpdate),i=t;return e(\"esri-2d-log-updating\")&&console.log(`Updating AttributeStoreView ${i}\\n  -> hasPendingUpdate ${t}`),i}getBlock(t){if(s(this._data))return null;return this._data[t]}setLabelMinZoom(t,e){this.setData(t,0,1,e)}getLabelMinZoom(t){return this.getData(t,0,1,255)}getFilterFlags(t){return this.getData(t,0,0,0)}getVVSize(t){return this.getData(t,p,0,0)}getData(t,e,i,r){if(!this._data)return 0;const h=d(this._data)[e];if(s(h))return 0;const n=h.getData(t,i);return a(n)?n:r}setData(t,e,i,s){const r=d(this._data)[e];d(r).setData(t,i,s)}lockTextureUpload(){this._locked=!0}unlockTextureUpload(){this._locked=!1}forceTextureUpload(){this._forceNextUpload=!0}async requestUpdate(e){if(this._pendingAttributeUpdate)return void v.error(new t(\"mapview-webgl\",\"Tried to update attribute data with a pending update\"));const i=l();return B(\"AttributeStoreView Update Requested\",e),this._pendingAttributeUpdate={data:e,resolver:i},i.promise}update(){if(this._initialized&&a(this._pendingAttributeUpdate)){const{data:t,resolver:e}=this._pendingAttributeUpdate,i=d(this._data);for(let s=0;s<t.blocks.length;s++){const e=t.blocks[s],r=i[s];h(r,(t=>h(e,(e=>{B(`Updating block ${s}`,e),t.update(e)}))))}this._pendingAttributeUpdate=null,e(),this._onUpdate()}}bindTextures(t,e=!0){this.update();const i=this._getDefaultTexture(t);if(!this._initialized)return t.bindTexture(i,x),void(e&&(t.bindTexture(i,_),t.bindTexture(i,c),t.bindTexture(i,g),t.bindTexture(i,f)));const s=d(this._data);this._locked&&!this._forceNextUpload||(n(s,(e=>e.updateTexture(t,(()=>this._onUpdate())))),this._forceNextUpload=!1),t.bindTexture(o(s[T],i,(e=>e.getTexture(t))),x),e&&(t.bindTexture(o(s[b],i,(e=>e.getTexture(t))),f),t.bindTexture(o(s[m],i,(e=>e.getTexture(t))),_),t.bindTexture(o(s[p],i,(e=>e.getTexture(t))),c),t.bindTexture(o(s[y],i,(e=>e.getTexture(t))),g))}_getDefaultTexture(t){if(s(this._defaultTexture)){const e={wrapMode:S.CLAMP_TO_EDGE,pixelFormat:A.RGBA,dataType:j.UNSIGNED_BYTE,samplingMode:k.NEAREST,width:1,height:1};this._defaultTexture=new R(t,e,new Uint8Array(4))}return this._defaultTexture}}export{L as AttributeStoreView};\n"]},"metadata":{},"sourceType":"module"}