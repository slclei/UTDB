{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../../Color.js\";\nimport \"../../rasterRenderers.js\";\nimport { isSome as t, unwrap as n } from \"../../core/maybe.js\";\nimport { getMetersPerUnitForSR as r } from \"../../core/unitUtils.js\";\nimport a from \"../../layers/support/Field.js\";\nimport l from \"../../layers/support/RasterInfo.js\";\nimport o from \"../FlowRenderer.js\";\nimport i from \"./AuthoringInfo.js\";\nimport s from \"./ClassBreakInfo.js\";\nimport { PREDEFINED_JSON_COLOR_RAMPS as u, convertColorRampToColormap as m } from \"./colorRampUtils.js\";\nimport c from \"./UniqueValueInfo.js\";\nimport f from \"../../rest/support/AlgorithmicColorRamp.js\";\nimport d from \"../../rest/support/ClassBreaksDefinition.js\";\nimport { createGenerateRendererClassBreaks as p } from \"../../rest/support/generateRendererUtils.js\";\nimport b from \"../../rest/support/MultipartColorRamp.js\";\nimport h from \"../RasterStretchRenderer.js\";\nimport v from \"../UniqueValueRenderer.js\";\nimport g from \"../RasterColormapRenderer.js\";\nimport y from \"../RasterShadedReliefRenderer.js\";\nimport C from \"../ClassBreaksRenderer.js\";\nimport w from \"../VectorFieldRenderer.js\";\nconst x = .25,\n      M = b.fromJSON({\n  type: \"multipart\",\n  colorRamps: [{\n    fromColor: [0, 0, 255],\n    toColor: [0, 255, 255]\n  }, {\n    fromColor: [0, 255, 255],\n    toColor: [255, 255, 0]\n  }, {\n    fromColor: [255, 255, 0],\n    toColor: [255, 0, 0]\n  }]\n}),\n      T = b.fromJSON(u[0]),\n      R = new Set([\"scientific\", \"standard-time\", \"vector-uv\", \"vector-magdir\", \"vector-u\", \"vector-v\", \"vector-magnitude\", \"vector-direction\"]);\n\nfunction j(e, n) {\n  const {\n    attributeTable: r,\n    colormap: a\n  } = e;\n\n  if (Q(e)) {\n    const n = Z(e);\n    if (t(n)) return n;\n  }\n\n  if (t(a)) {\n    const n = U(e);\n    if (t(n)) return n;\n  }\n\n  if (t(r)) {\n    const n = q(e);\n    if (t(n)) return n;\n  }\n\n  return I(e, n);\n}\n\nfunction k(e) {\n  const t = [\"raster-stretch\"];\n  return W(e) && t.push(\"raster-colormap\"), z(e) && t.push(\"unique-value\"), J(e) && t.push(\"class-breaks\"), A(e) && t.push(\"raster-shaded-relief\"), Q(e) && t.push(\"vector-field\"), X(e) && t.push(\"flow\"), t;\n}\n\nfunction V(e, t, n) {\n  const r = [\"nearest\", \"bilinear\", \"cubic\", \"majority\"].find(e => e === (null == n ? void 0 : n.toLowerCase()));\n  if (\"Map\" === t) return null != r ? r : \"bilinear\";\n  if (\"standard-time\" === e.dataType) return null != r ? r : \"nearest\";\n  return \"thematic\" === e.dataType || e.attributeTable || e.colormap ? \"nearest\" === r || \"majority\" === r ? r : \"nearest\" : null != r ? r : \"bilinear\";\n}\n\nfunction I(e, r) {\n  var a, l, o, i;\n  e = S(e, null == r ? void 0 : r.variableName);\n  const {\n    bandCount: s\n  } = e;\n  let {\n    bandIds: u,\n    stretchType: m\n  } = r || {};\n  null != (a = u) && a.some(e => e >= s) && (u = null);\n  let c = n(e.statistics),\n      f = n(e.histograms);\n  var d;\n  s > 1 ? (u = null != (d = u) && d.length ? u : L(e), c = null == c ? null : u.map(e => c[e]), f = null == f ? null : u.map(e => f[e])) : u = [0];\n  null == m && (m = O(e));\n  let p = !1;\n\n  switch (m) {\n    case \"none\":\n      p = !1;\n      break;\n\n    case \"percent-clip\":\n      p = !(null != (l = f) && l.length);\n      break;\n\n    default:\n      p = !(null != (o = c) && o.length);\n  }\n\n  const {\n    dataType: b\n  } = e,\n        v = 1 === (null == (i = u) ? void 0 : i.length) && R.has(b) ? M : null,\n        g = new h({\n    stretchType: m,\n    dynamicRangeAdjustment: p,\n    colorRamp: v,\n    outputMin: 0,\n    outputMax: 255,\n    gamma: 1 === u.length ? [1] : [1, 1, 1],\n    useGamma: !1\n  });\n  return \"percent-clip\" === m ? g.maxPercent = g.minPercent = x : \"standard-deviation\" === m && (g.numberOfStandardDeviations = 2), !p && (t(e.multidimensionalInfo) || null != r && r.includeStatisticsInStretch) && (\"percent-clip\" === m ? g.histograms = f : \"min-max\" !== m && \"standard-deviation\" !== m || (g.statistics = c)), g;\n}\n\nfunction S(e, r) {\n  if (null == r) return e;\n  let a = n(e.statistics),\n      o = n(e.histograms);\n  const {\n    multidimensionalInfo: i\n  } = e;\n\n  if (r && t(i)) {\n    const {\n      statistics: e,\n      histograms: t\n    } = i.variables.find(e => e.name === r);\n    null != e && e.length && (a = e), null != t && t.length && (o = t);\n  }\n\n  return l.fromJSON({ ...e.toJSON(),\n    statistics: a,\n    histograms: o\n  });\n}\n\nfunction L(e) {\n  const t = e.bandCount;\n  if (1 === t) return null;\n  if (2 === t) return [0];\n  const n = e.keyProperties && e.keyProperties.BandProperties;\n  let r;\n\n  if (n && n.length === t) {\n    const {\n      red: e,\n      green: t,\n      blue: a,\n      nir: l\n    } = E(n);\n    null != e && null != t && null != a ? r = [e, t, a] : null != l && null != e && null != t && (r = [l, e, t]);\n  }\n\n  return !r && t >= 3 && (r = [0, 1, 2]), r;\n}\n\nfunction B(e, t) {\n  var n;\n  const r = e.keyProperties && e.keyProperties.BandProperties;\n  return (t = null != (n = t) && n.length ? t : Array.from(Array(e.bandCount).keys())).map(t => r && r.length === e.bandCount && r[t] && r[t].BandName || \"band_\" + (t + 1));\n}\n\nfunction E(e) {\n  const t = {};\n\n  for (let r = 0; r < e.length; r++) {\n    var n;\n    const a = e[r],\n          l = null == (n = a.BandName) ? void 0 : n.toLowerCase();\n    if (\"red\" === l) t.red = r;else if (\"green\" === l) t.green = r;else if (\"blue\" === l) t.blue = r;else if (\"nearinfrared\" === l || \"nearinfrared_1\" === l || \"nir\" === l) t.nir = r;else if (a.WavelengthMax && a.WavelengthMin) {\n      const e = a.WavelengthMin,\n            n = a.WavelengthMax;\n      null == t.blue && e >= 410 && e <= 480 && n >= 480 && n <= 540 ? t.blue = r : null == t.green && e >= 490 && e <= 560 && n >= 560 && n <= 610 ? t.green = r : null == t.red && e >= 595 && e <= 670 && n >= 660 && n <= 730 ? t.red = r : null == t.nir && e >= 700 && e <= 860 && n >= 800 && n <= 950 && (t.nir = r);\n    }\n  }\n\n  return t;\n}\n\nfunction O(e) {\n  let n = \"percent-clip\";\n  const {\n    pixelType: r,\n    dataType: a,\n    histograms: l,\n    statistics: o\n  } = e;\n  return \"u8\" !== r || \"processed\" !== a && t(l) && t(o) ? \"u8\" === r || \"elevation\" === a || R.has(a) ? n = \"min-max\" : t(l) ? n = \"percent-clip\" : t(o) && (n = \"min-max\", n = \"min-max\") : n = \"none\", n;\n}\n\nfunction q(n, r, a, l) {\n  if (!z(n, r)) return null;\n  const {\n    attributeTable: o,\n    statistics: s\n  } = n,\n        u = F(o, r),\n        f = P(o, \"red\"),\n        d = P(o, \"green\"),\n        p = P(o, \"blue\"),\n        b = new i(),\n        h = [],\n        g = new Set(),\n        y = !!(f && d && p);\n  if (t(o)) o.features.forEach(t => {\n    const n = t.attributes[u.name];\n\n    if (!g.has(t.attributes[u.name]) && null != n) {\n      g.add(n);\n      const r = y && (\"single\" === f.type || \"double\" === f.type) && (\"single\" === d.type || \"double\" === d.type) && (\"single\" === p.type || \"double\" === p.type) && !o.features.some(e => e.attributes[f.name] > 1 || e.attributes[d.name] > 1 || e.attributes[p.name] > 1),\n            a = r ? 255 : 1;\n      h.push(new c({\n        value: t.attributes[u.name],\n        label: t.attributes[u.name] + \"\",\n        symbol: {\n          type: \"simple-fill\",\n          style: \"solid\",\n          outline: null,\n          color: new e(y ? [t.attributes[f.name] * a, t.attributes[d.name] * a, t.attributes[p.name] * a, 1] : [0, 0, 0, 0])\n        }\n      }));\n    }\n  });else if (null != s && s[0]) for (let t = s[0].min; t <= s[0].max; t++) h.push(new c({\n    value: t,\n    label: t.toString(),\n    symbol: {\n      type: \"simple-fill\",\n      style: \"solid\",\n      outline: null,\n      color: new e([0, 0, 0, 0])\n    }\n  }));\n\n  if (h.sort((e, t) => e.value && \"string\" == typeof e.value.valueOf() ? 0 : e.value > t.value ? 1 : -1), !y) {\n    const t = m(T, h.length);\n    h.forEach((n, r) => n.symbol.color = new e(t[r].slice(1, 4))), b.colorRamp = T;\n  }\n\n  if (a || l) {\n    const t = a || m(l, h.length).map(e => e.slice(1));\n    h.forEach((n, r) => n.symbol.color = new e(t[r])), b.colorRamp = l;\n  }\n\n  return new v({\n    field: u.name,\n    uniqueValueInfos: h,\n    authoringInfo: b\n  });\n}\n\nfunction F(e, n, r) {\n  let l;\n  return t(e) ? (l = n ? e.fields.find(e => n.toLowerCase() === e.name.toLowerCase()) : N(e.fields), l || (r || (l = e.fields.find(e => \"string\" === e.type)), l || (l = P(e, \"value\")))) : l = new a({\n    name: \"value\"\n  }), l;\n}\n\nfunction N(e) {\n  let t;\n\n  for (let n = 0; n < e.length; n++) {\n    const r = e[n].name.toLowerCase();\n\n    if (\"string\" === e[n].type) {\n      if (r.startsWith(\"class\")) {\n        t = e[n];\n        break;\n      }\n\n      null == t && (r.endsWith(\"name\") || r.endsWith(\"type\")) && (t = e[n]);\n    }\n  }\n\n  return t;\n}\n\nfunction P(e, n) {\n  return t(e) ? e.fields.find(e => e.name.toLowerCase() === n) : null;\n}\n\nfunction z(e, n) {\n  const {\n    attributeTable: r,\n    bandCount: a\n  } = e;\n  if (!t(r) && H(e)) return !0;\n  if (!t(r) || a > 1) return !1;\n\n  if (n) {\n    if (null == r.fields.find(e => e.name.toLowerCase() === n.toLowerCase())) return !1;\n  }\n\n  return !0;\n}\n\nfunction W(e) {\n  const {\n    bandCount: n,\n    colormap: r\n  } = e;\n  return t(r) && r.length && 1 === n;\n}\n\nfunction U(e) {\n  if (!W(e)) return null;\n  let r;\n  const {\n    attributeTable: a,\n    colormap: l\n  } = e;\n\n  if (t(a)) {\n    const e = P(a, \"value\"),\n          t = F(a, null, !0);\n    \"string\" === t.type && (r = {}, a.features.forEach(n => {\n      const a = n.attributes;\n      r[a[e.name]] = t ? a[t.name] : a[e.name];\n    }));\n  }\n\n  return g.createFromColormap(n(l), r);\n}\n\nfunction A(e) {\n  return \"elevation\" === e.dataType;\n}\n\nfunction D(e, t) {\n  var n;\n  if (!A(e)) return null;\n  const {\n    extent: a\n  } = e,\n        l = a.width * r(a.spatialReference);\n  return t = null != (n = t) ? n : \"multi-directional\", new y({\n    hillshadeType: t,\n    scalingType: l > 5e6 ? \"adjusted\" : \"none\"\n  });\n}\n\nfunction J(e) {\n  const {\n    attributeTable: n,\n    bandCount: r\n  } = e;\n  return 1 === r && (t(n) || t(e.histograms));\n}\n\nfunction _(e, n) {\n  e = S(e, null == n ? void 0 : n.variableName);\n  const {\n    attributeTable: r\n  } = e;\n  if (!J(e)) return null;\n  const a = t(e.histograms) ? e.histograms[0] : null,\n        l = isFinite(null == n ? void 0 : n.numClasses) ? n.numClasses : 5,\n        o = new i({\n    classificationMethod: null == n ? void 0 : n.classificationMethod,\n    colorRamp: null == n ? void 0 : n.colorRamp\n  });\n  let u = (null == n ? void 0 : n.field) || \"value\";\n  const c = [],\n        f = [],\n        b = 1e3,\n        h = t(r),\n        v = h && r.fields.find(e => \"count\" === e.name.toLowerCase()),\n        g = h && r.fields.find(e => e.name.toLowerCase() === u.toLowerCase());\n\n  if (g) {\n    u = g.name;\n    const e = r.features.length;\n    let t = 0;\n    r.features.forEach(n => t += (v ? n.attributes[v.name] : 50) / e), r.features.forEach(n => {\n      const r = n.attributes[g.name],\n            a = v ? n.attributes[v.name] : 50;\n\n      if (a > 0) {\n        f.push(a);\n        const n = Math.max(1, Math.round(a / e / t * b));\n\n        for (let e = 0; e < n; e++) c.push(r);\n      }\n    });\n  } else {\n    const {\n      pixelType: t\n    } = e,\n          n = (a.max - a.min) / a.size,\n          l = t.indexOf(\"s\") > -1 || t.indexOf(\"u\") > -1,\n          o = l && 1 === n ? Math.floor(a.min + .5) : a.min,\n          i = l && 1 === n ? Math.floor(a.max - .5) : a.max,\n          s = a.size;\n    let u,\n        m = 0;\n    a.counts.forEach(e => m += e / s), a.counts.forEach((e, t) => {\n      if (e > 0) {\n        f.push(e);\n        const l = Math.max(1, Math.round(e / s / m * b));\n        u = h ? r.features[t].attributes[g.name] : 0 === t ? o : t === s - 1 ? i : a.min + n * (t + .5);\n\n        for (let e = 0; e < l; e++) c.push(u);\n      }\n    });\n  }\n\n  const y = (null == n ? void 0 : n.classificationMethod) || \"natural-breaks\";\n  let w = null == n ? void 0 : n.definedInterval;\n  \"defined-interval\" !== y || w || (w = G(e, g, l));\n  const x = p({\n    values: c,\n    valueFrequency: f,\n    normalizationTotal: null,\n    definition: new d({\n      classificationMethod: y,\n      breakCount: l,\n      definedInterval: w\n    })\n  });\n  let T = null == n ? void 0 : n.colors;\n\n  if (!T) {\n    const e = (null == n ? void 0 : n.colorRamp) || M;\n    o.colorRamp = e;\n    const t = m(e, x.classBreaks.length, !0);\n    T = t.map(e => e.slice(1));\n  }\n\n  const R = x.classBreaks.map((e, t) => new s({\n    minValue: e.minValue,\n    maxValue: e.maxValue,\n    label: e.label,\n    symbol: {\n      type: \"simple-fill\",\n      color: T[t]\n    }\n  }));\n  return new C({\n    field: u,\n    classBreakInfos: R,\n    authoringInfo: o\n  });\n}\n\nfunction G(e, n, r) {\n  let a = 0,\n      l = 0;\n\n  if (t(e.attributeTable)) {\n    const t = e.attributeTable;\n    a = l = t.features[0].attributes[n.name], t.features.forEach(e => {\n      const t = e.attributes[n.name];\n      t < a && (a = t), t > l && (l = t);\n    });\n  } else if (t(e.histograms)) {\n    const t = e.histograms;\n    a = t[0].min, l = t[0].max;\n  }\n\n  return (l - a) / r;\n}\n\nfunction H(e) {\n  var t, n, r;\n  return [\"u8\", \"s8\"].indexOf(e.pixelType) > -1 && null != (null == (t = e.statistics) || null == (n = t[0]) ? void 0 : n.min) && null != (null == (r = e.statistics[0]) ? void 0 : r.max) && 1 === e.bandCount;\n}\n\nfunction K(t) {\n  const n = [];\n\n  for (let r = 0; r < t.length - 1; r++) n[r] = new f({\n    algorithm: \"hsv\",\n    fromColor: t[r],\n    toColor: t[r + 1] || new e({\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1\n    })\n  });\n\n  if (t.length > 2) {\n    return new b({\n      colorRamps: n\n    });\n  }\n\n  return n[0];\n}\n\nfunction Q(e) {\n  const {\n    dataType: t\n  } = e;\n  return \"vector-uv\" === t || \"vector-magdir\" === t;\n}\n\nfunction X(e) {\n  const {\n    dataType: t\n  } = e;\n  return \"vector-uv\" === t || \"vector-magdir\" === t;\n}\n\nconst Y = new Map([[\"m/s\", \"meter-per-second\"], [\"km/h\", \"kilometer-per-hour\"], [\"knots\", \"knots\"], [\"ft/s\", \"feet-per-second\"], [\"mph\", \"mile-per-hour\"]]);\n\nfunction Z(e) {\n  if (!Q(e)) return null;\n  let n;\n\n  if (t(e.statistics) && e.statistics.length && (\"vector-magdir\" === e.dataType || \"vector-uv\" === e.dataType)) {\n    const {\n      minMagnitude: t,\n      maxMagnitude: r\n    } = ne(e.dataType, e.statistics);\n    n = [{\n      type: \"size\",\n      field: \"Magnitude\",\n      minSize: 10,\n      maxSize: 40,\n      minDataValue: t,\n      maxDataValue: r\n    }];\n  }\n\n  const r = t(e.multidimensionalInfo) ? Y.get(e.multidimensionalInfo.variables[0].unit) : null,\n        a = new w({\n    visualVariables: n,\n    inputUnit: r,\n    rotationType: \"geographic\"\n  });\n  return a.visualVariables = [...a.sizeVariables, ...a.rotationVariables], a;\n}\n\nfunction $(e) {\n  var t;\n  return {\n    color: null == (t = e.symbolLayers[0].material) ? void 0 : t.color,\n    type: \"esriSFS\",\n    style: \"esriSFSSolid\"\n  };\n}\n\nfunction ee(e) {\n  if (\"uniqueValue\" === e.type) {\n    var t;\n    const n = e.uniqueValueInfos,\n          r = n[0].symbol;\n    return null != r && null != (t = r.symbolLayers) && t.length && (e.uniqueValueInfos = n.map(e => ({\n      value: e.value,\n      label: e.label,\n      symbol: e.symbol ? $(e.symbol) : null\n    }))), e;\n  }\n\n  if (\"classBreaks\" === e.type) {\n    var n;\n    const t = e.classBreakInfos,\n          r = t[0].symbol;\n    return null != r && null != (n = r.symbolLayers) && n.length && (e.classBreakInfos = t.map(e => ({\n      classMinValue: e.classMinValue,\n      classMaxValue: e.classMaxValue,\n      label: e.label,\n      symbol: e.symbol ? $(e.symbol) : null\n    }))), e;\n  }\n\n  return e;\n}\n\nfunction te(e) {\n  if (!X(e)) return null;\n  let n;\n\n  if (t(e.statistics) && e.statistics.length > 0 && (\"vector-magdir\" === e.dataType || \"vector-uv\" === e.dataType)) {\n    const {\n      minMagnitude: t,\n      maxMagnitude: r\n    } = ne(e.dataType, e.statistics);\n    n = [{\n      type: \"color\",\n      field: \"Magnitude\",\n      stops: [{\n        value: t,\n        color: \"#1020C0\"\n      }, {\n        value: r,\n        color: \"#C02010\"\n      }]\n    }];\n  }\n\n  return new o({\n    visualVariables: n\n  });\n}\n\nfunction ne(e, t) {\n  let n, r;\n  if (\"vector-magdir\" === e) n = t[0].min, r = t[0].max;else {\n    const e = t[0].min,\n          a = t[0].max,\n          l = t[1].min,\n          o = t[1].max;\n    n = 0, r = Math.max(Math.abs(e), Math.abs(l), Math.abs(a), Math.abs(o));\n  }\n  return {\n    minMagnitude: n,\n    maxMagnitude: r\n  };\n}\n\nexport { _ as createClassBreaksRenderer, K as createColorRamp, U as createColormapRenderer, j as createDefaultRenderer, te as createFlowRenderer, D as createShadedReliefRenderer, I as createStretchRenderer, q as createUVRenderer, Z as createVectorFieldRenderer, ne as estimateMagnitudeRange, B as getBandNames, F as getClassField, L as getDefaultBandCombination, V as getDefaultInterpolation, G as getDefinedInterval, P as getField, k as getSupportedRendererTypes, E as getWellKnownBandIndexes, J as isClassBreaksSupported, W as isColormapRendererSupported, X as isFlowRendererSupported, A as isShadedReliefRendererSupported, H as isSingleBand8BitRasterWithStats, z as isUVRendererSupported, Q as isVectorFieldRendererSupported, ee as normalizeRendererJSON };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/renderers/support/rasterRendererHelper.js"],"names":["e","isSome","t","unwrap","n","getMetersPerUnitForSR","r","a","l","o","i","s","PREDEFINED_JSON_COLOR_RAMPS","u","convertColorRampToColormap","m","c","f","d","createGenerateRendererClassBreaks","p","b","h","v","g","y","C","w","x","M","fromJSON","type","colorRamps","fromColor","toColor","T","R","Set","j","attributeTable","colormap","Q","Z","U","q","I","k","W","push","z","J","A","X","V","find","toLowerCase","dataType","S","variableName","bandCount","bandIds","stretchType","some","statistics","histograms","length","L","map","O","has","dynamicRangeAdjustment","colorRamp","outputMin","outputMax","gamma","useGamma","maxPercent","minPercent","numberOfStandardDeviations","multidimensionalInfo","includeStatisticsInStretch","variables","name","toJSON","keyProperties","BandProperties","red","green","blue","nir","E","B","Array","from","keys","BandName","WavelengthMax","WavelengthMin","pixelType","F","P","features","forEach","attributes","add","value","label","symbol","style","outline","color","min","max","toString","sort","valueOf","slice","field","uniqueValueInfos","authoringInfo","fields","N","startsWith","endsWith","H","createFromColormap","D","extent","width","spatialReference","hillshadeType","scalingType","_","isFinite","numClasses","classificationMethod","Math","round","size","indexOf","floor","counts","definedInterval","G","values","valueFrequency","normalizationTotal","definition","breakCount","colors","classBreaks","minValue","maxValue","classBreakInfos","K","algorithm","Y","Map","minMagnitude","maxMagnitude","ne","minSize","maxSize","minDataValue","maxDataValue","get","unit","visualVariables","inputUnit","rotationType","sizeVariables","rotationVariables","$","symbolLayers","material","ee","classMinValue","classMaxValue","te","stops","abs","createClassBreaksRenderer","createColorRamp","createColormapRenderer","createDefaultRenderer","createFlowRenderer","createShadedReliefRenderer","createStretchRenderer","createUVRenderer","createVectorFieldRenderer","estimateMagnitudeRange","getBandNames","getClassField","getDefaultBandCombination","getDefaultInterpolation","getDefinedInterval","getField","getSupportedRendererTypes","getWellKnownBandIndexes","isClassBreaksSupported","isColormapRendererSupported","isFlowRendererSupported","isShadedReliefRendererSupported","isSingleBand8BitRasterWithStats","isUVRendererSupported","isVectorFieldRendererSupported","normalizeRendererJSON"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../Color.js\";import\"../../rasterRenderers.js\";import{isSome as t,unwrap as n}from\"../../core/maybe.js\";import{getMetersPerUnitForSR as r}from\"../../core/unitUtils.js\";import a from\"../../layers/support/Field.js\";import l from\"../../layers/support/RasterInfo.js\";import o from\"../FlowRenderer.js\";import i from\"./AuthoringInfo.js\";import s from\"./ClassBreakInfo.js\";import{PREDEFINED_JSON_COLOR_RAMPS as u,convertColorRampToColormap as m}from\"./colorRampUtils.js\";import c from\"./UniqueValueInfo.js\";import f from\"../../rest/support/AlgorithmicColorRamp.js\";import d from\"../../rest/support/ClassBreaksDefinition.js\";import{createGenerateRendererClassBreaks as p}from\"../../rest/support/generateRendererUtils.js\";import b from\"../../rest/support/MultipartColorRamp.js\";import h from\"../RasterStretchRenderer.js\";import v from\"../UniqueValueRenderer.js\";import g from\"../RasterColormapRenderer.js\";import y from\"../RasterShadedReliefRenderer.js\";import C from\"../ClassBreaksRenderer.js\";import w from\"../VectorFieldRenderer.js\";const x=.25,M=b.fromJSON({type:\"multipart\",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]}),T=b.fromJSON(u[0]),R=new Set([\"scientific\",\"standard-time\",\"vector-uv\",\"vector-magdir\",\"vector-u\",\"vector-v\",\"vector-magnitude\",\"vector-direction\"]);function j(e,n){const{attributeTable:r,colormap:a}=e;if(Q(e)){const n=Z(e);if(t(n))return n}if(t(a)){const n=U(e);if(t(n))return n}if(t(r)){const n=q(e);if(t(n))return n}return I(e,n)}function k(e){const t=[\"raster-stretch\"];return W(e)&&t.push(\"raster-colormap\"),z(e)&&t.push(\"unique-value\"),J(e)&&t.push(\"class-breaks\"),A(e)&&t.push(\"raster-shaded-relief\"),Q(e)&&t.push(\"vector-field\"),X(e)&&t.push(\"flow\"),t}function V(e,t,n){const r=[\"nearest\",\"bilinear\",\"cubic\",\"majority\"].find((e=>e===(null==n?void 0:n.toLowerCase())));if(\"Map\"===t)return null!=r?r:\"bilinear\";if(\"standard-time\"===e.dataType)return null!=r?r:\"nearest\";return\"thematic\"===e.dataType||e.attributeTable||e.colormap?\"nearest\"===r||\"majority\"===r?r:\"nearest\":null!=r?r:\"bilinear\"}function I(e,r){var a,l,o,i;e=S(e,null==r?void 0:r.variableName);const{bandCount:s}=e;let{bandIds:u,stretchType:m}=r||{};null!=(a=u)&&a.some((e=>e>=s))&&(u=null);let c=n(e.statistics),f=n(e.histograms);var d;s>1?(u=null!=(d=u)&&d.length?u:L(e),c=null==c?null:u.map((e=>c[e])),f=null==f?null:u.map((e=>f[e]))):u=[0];null==m&&(m=O(e));let p=!1;switch(m){case\"none\":p=!1;break;case\"percent-clip\":p=!(null!=(l=f)&&l.length);break;default:p=!(null!=(o=c)&&o.length)}const{dataType:b}=e,v=1===(null==(i=u)?void 0:i.length)&&R.has(b)?M:null,g=new h({stretchType:m,dynamicRangeAdjustment:p,colorRamp:v,outputMin:0,outputMax:255,gamma:1===u.length?[1]:[1,1,1],useGamma:!1});return\"percent-clip\"===m?g.maxPercent=g.minPercent=x:\"standard-deviation\"===m&&(g.numberOfStandardDeviations=2),!p&&(t(e.multidimensionalInfo)||null!=r&&r.includeStatisticsInStretch)&&(\"percent-clip\"===m?g.histograms=f:\"min-max\"!==m&&\"standard-deviation\"!==m||(g.statistics=c)),g}function S(e,r){if(null==r)return e;let a=n(e.statistics),o=n(e.histograms);const{multidimensionalInfo:i}=e;if(r&&t(i)){const{statistics:e,histograms:t}=i.variables.find((e=>e.name===r));null!=e&&e.length&&(a=e),null!=t&&t.length&&(o=t)}return l.fromJSON({...e.toJSON(),statistics:a,histograms:o})}function L(e){const t=e.bandCount;if(1===t)return null;if(2===t)return[0];const n=e.keyProperties&&e.keyProperties.BandProperties;let r;if(n&&n.length===t){const{red:e,green:t,blue:a,nir:l}=E(n);null!=e&&null!=t&&null!=a?r=[e,t,a]:null!=l&&null!=e&&null!=t&&(r=[l,e,t])}return!r&&t>=3&&(r=[0,1,2]),r}function B(e,t){var n;const r=e.keyProperties&&e.keyProperties.BandProperties;return(t=null!=(n=t)&&n.length?t:Array.from(Array(e.bandCount).keys())).map((t=>r&&r.length===e.bandCount&&r[t]&&r[t].BandName||\"band_\"+(t+1)))}function E(e){const t={};for(let r=0;r<e.length;r++){var n;const a=e[r],l=null==(n=a.BandName)?void 0:n.toLowerCase();if(\"red\"===l)t.red=r;else if(\"green\"===l)t.green=r;else if(\"blue\"===l)t.blue=r;else if(\"nearinfrared\"===l||\"nearinfrared_1\"===l||\"nir\"===l)t.nir=r;else if(a.WavelengthMax&&a.WavelengthMin){const e=a.WavelengthMin,n=a.WavelengthMax;null==t.blue&&e>=410&&e<=480&&n>=480&&n<=540?t.blue=r:null==t.green&&e>=490&&e<=560&&n>=560&&n<=610?t.green=r:null==t.red&&e>=595&&e<=670&&n>=660&&n<=730?t.red=r:null==t.nir&&e>=700&&e<=860&&n>=800&&n<=950&&(t.nir=r)}}return t}function O(e){let n=\"percent-clip\";const{pixelType:r,dataType:a,histograms:l,statistics:o}=e;return\"u8\"!==r||\"processed\"!==a&&t(l)&&t(o)?\"u8\"===r||\"elevation\"===a||R.has(a)?n=\"min-max\":t(l)?n=\"percent-clip\":t(o)&&(n=\"min-max\",n=\"min-max\"):n=\"none\",n}function q(n,r,a,l){if(!z(n,r))return null;const{attributeTable:o,statistics:s}=n,u=F(o,r),f=P(o,\"red\"),d=P(o,\"green\"),p=P(o,\"blue\"),b=new i,h=[],g=new Set,y=!!(f&&d&&p);if(t(o))o.features.forEach((t=>{const n=t.attributes[u.name];if(!g.has(t.attributes[u.name])&&null!=n){g.add(n);const r=y&&(\"single\"===f.type||\"double\"===f.type)&&(\"single\"===d.type||\"double\"===d.type)&&(\"single\"===p.type||\"double\"===p.type)&&!o.features.some((e=>e.attributes[f.name]>1||e.attributes[d.name]>1||e.attributes[p.name]>1)),a=r?255:1;h.push(new c({value:t.attributes[u.name],label:t.attributes[u.name]+\"\",symbol:{type:\"simple-fill\",style:\"solid\",outline:null,color:new e(y?[t.attributes[f.name]*a,t.attributes[d.name]*a,t.attributes[p.name]*a,1]:[0,0,0,0])}}))}}));else if(null!=s&&s[0])for(let t=s[0].min;t<=s[0].max;t++)h.push(new c({value:t,label:t.toString(),symbol:{type:\"simple-fill\",style:\"solid\",outline:null,color:new e([0,0,0,0])}}));if(h.sort(((e,t)=>e.value&&\"string\"==typeof e.value.valueOf()?0:e.value>t.value?1:-1)),!y){const t=m(T,h.length);h.forEach(((n,r)=>n.symbol.color=new e(t[r].slice(1,4)))),b.colorRamp=T}if(a||l){const t=a||m(l,h.length).map((e=>e.slice(1)));h.forEach(((n,r)=>n.symbol.color=new e(t[r]))),b.colorRamp=l}return new v({field:u.name,uniqueValueInfos:h,authoringInfo:b})}function F(e,n,r){let l;return t(e)?(l=n?e.fields.find((e=>n.toLowerCase()===e.name.toLowerCase())):N(e.fields),l||(r||(l=e.fields.find((e=>\"string\"===e.type))),l||(l=P(e,\"value\")))):l=new a({name:\"value\"}),l}function N(e){let t;for(let n=0;n<e.length;n++){const r=e[n].name.toLowerCase();if(\"string\"===e[n].type){if(r.startsWith(\"class\")){t=e[n];break}null==t&&(r.endsWith(\"name\")||r.endsWith(\"type\"))&&(t=e[n])}}return t}function P(e,n){return t(e)?e.fields.find((e=>e.name.toLowerCase()===n)):null}function z(e,n){const{attributeTable:r,bandCount:a}=e;if(!t(r)&&H(e))return!0;if(!t(r)||a>1)return!1;if(n){if(null==r.fields.find((e=>e.name.toLowerCase()===n.toLowerCase())))return!1}return!0}function W(e){const{bandCount:n,colormap:r}=e;return t(r)&&r.length&&1===n}function U(e){if(!W(e))return null;let r;const{attributeTable:a,colormap:l}=e;if(t(a)){const e=P(a,\"value\"),t=F(a,null,!0);\"string\"===t.type&&(r={},a.features.forEach((n=>{const a=n.attributes;r[a[e.name]]=t?a[t.name]:a[e.name]})))}return g.createFromColormap(n(l),r)}function A(e){return\"elevation\"===e.dataType}function D(e,t){var n;if(!A(e))return null;const{extent:a}=e,l=a.width*r(a.spatialReference);return t=null!=(n=t)?n:\"multi-directional\",new y({hillshadeType:t,scalingType:l>5e6?\"adjusted\":\"none\"})}function J(e){const{attributeTable:n,bandCount:r}=e;return 1===r&&(t(n)||t(e.histograms))}function _(e,n){e=S(e,null==n?void 0:n.variableName);const{attributeTable:r}=e;if(!J(e))return null;const a=t(e.histograms)?e.histograms[0]:null,l=isFinite(null==n?void 0:n.numClasses)?n.numClasses:5,o=new i({classificationMethod:null==n?void 0:n.classificationMethod,colorRamp:null==n?void 0:n.colorRamp});let u=(null==n?void 0:n.field)||\"value\";const c=[],f=[],b=1e3,h=t(r),v=h&&r.fields.find((e=>\"count\"===e.name.toLowerCase())),g=h&&r.fields.find((e=>e.name.toLowerCase()===u.toLowerCase()));if(g){u=g.name;const e=r.features.length;let t=0;r.features.forEach((n=>t+=(v?n.attributes[v.name]:50)/e)),r.features.forEach((n=>{const r=n.attributes[g.name],a=v?n.attributes[v.name]:50;if(a>0){f.push(a);const n=Math.max(1,Math.round(a/e/t*b));for(let e=0;e<n;e++)c.push(r)}}))}else{const{pixelType:t}=e,n=(a.max-a.min)/a.size,l=t.indexOf(\"s\")>-1||t.indexOf(\"u\")>-1,o=l&&1===n?Math.floor(a.min+.5):a.min,i=l&&1===n?Math.floor(a.max-.5):a.max,s=a.size;let u,m=0;a.counts.forEach((e=>m+=e/s)),a.counts.forEach(((e,t)=>{if(e>0){f.push(e);const l=Math.max(1,Math.round(e/s/m*b));u=h?r.features[t].attributes[g.name]:0===t?o:t===s-1?i:a.min+n*(t+.5);for(let e=0;e<l;e++)c.push(u)}}))}const y=(null==n?void 0:n.classificationMethod)||\"natural-breaks\";let w=null==n?void 0:n.definedInterval;\"defined-interval\"!==y||w||(w=G(e,g,l));const x=p({values:c,valueFrequency:f,normalizationTotal:null,definition:new d({classificationMethod:y,breakCount:l,definedInterval:w})});let T=null==n?void 0:n.colors;if(!T){const e=(null==n?void 0:n.colorRamp)||M;o.colorRamp=e;const t=m(e,x.classBreaks.length,!0);T=t.map((e=>e.slice(1)))}const R=x.classBreaks.map(((e,t)=>new s({minValue:e.minValue,maxValue:e.maxValue,label:e.label,symbol:{type:\"simple-fill\",color:T[t]}})));return new C({field:u,classBreakInfos:R,authoringInfo:o})}function G(e,n,r){let a=0,l=0;if(t(e.attributeTable)){const t=e.attributeTable;a=l=t.features[0].attributes[n.name],t.features.forEach((e=>{const t=e.attributes[n.name];t<a&&(a=t),t>l&&(l=t)}))}else if(t(e.histograms)){const t=e.histograms;a=t[0].min,l=t[0].max}return(l-a)/r}function H(e){var t,n,r;return[\"u8\",\"s8\"].indexOf(e.pixelType)>-1&&null!=(null==(t=e.statistics)||null==(n=t[0])?void 0:n.min)&&null!=(null==(r=e.statistics[0])?void 0:r.max)&&1===e.bandCount}function K(t){const n=[];for(let r=0;r<t.length-1;r++)n[r]=new f({algorithm:\"hsv\",fromColor:t[r],toColor:t[r+1]||new e({r:255,g:255,b:255,a:1})});if(t.length>2){return new b({colorRamps:n})}return n[0]}function Q(e){const{dataType:t}=e;return\"vector-uv\"===t||\"vector-magdir\"===t}function X(e){const{dataType:t}=e;return\"vector-uv\"===t||\"vector-magdir\"===t}const Y=new Map([[\"m/s\",\"meter-per-second\"],[\"km/h\",\"kilometer-per-hour\"],[\"knots\",\"knots\"],[\"ft/s\",\"feet-per-second\"],[\"mph\",\"mile-per-hour\"]]);function Z(e){if(!Q(e))return null;let n;if(t(e.statistics)&&e.statistics.length&&(\"vector-magdir\"===e.dataType||\"vector-uv\"===e.dataType)){const{minMagnitude:t,maxMagnitude:r}=ne(e.dataType,e.statistics);n=[{type:\"size\",field:\"Magnitude\",minSize:10,maxSize:40,minDataValue:t,maxDataValue:r}]}const r=t(e.multidimensionalInfo)?Y.get(e.multidimensionalInfo.variables[0].unit):null,a=new w({visualVariables:n,inputUnit:r,rotationType:\"geographic\"});return a.visualVariables=[...a.sizeVariables,...a.rotationVariables],a}function $(e){var t;return{color:null==(t=e.symbolLayers[0].material)?void 0:t.color,type:\"esriSFS\",style:\"esriSFSSolid\"}}function ee(e){if(\"uniqueValue\"===e.type){var t;const n=e.uniqueValueInfos,r=n[0].symbol;return null!=r&&null!=(t=r.symbolLayers)&&t.length&&(e.uniqueValueInfos=n.map((e=>({value:e.value,label:e.label,symbol:e.symbol?$(e.symbol):null})))),e}if(\"classBreaks\"===e.type){var n;const t=e.classBreakInfos,r=t[0].symbol;return null!=r&&null!=(n=r.symbolLayers)&&n.length&&(e.classBreakInfos=t.map((e=>({classMinValue:e.classMinValue,classMaxValue:e.classMaxValue,label:e.label,symbol:e.symbol?$(e.symbol):null})))),e}return e}function te(e){if(!X(e))return null;let n;if(t(e.statistics)&&e.statistics.length>0&&(\"vector-magdir\"===e.dataType||\"vector-uv\"===e.dataType)){const{minMagnitude:t,maxMagnitude:r}=ne(e.dataType,e.statistics);n=[{type:\"color\",field:\"Magnitude\",stops:[{value:t,color:\"#1020C0\"},{value:r,color:\"#C02010\"}]}]}return new o({visualVariables:n})}function ne(e,t){let n,r;if(\"vector-magdir\"===e)n=t[0].min,r=t[0].max;else{const e=t[0].min,a=t[0].max,l=t[1].min,o=t[1].max;n=0,r=Math.max(Math.abs(e),Math.abs(l),Math.abs(a),Math.abs(o))}return{minMagnitude:n,maxMagnitude:r}}export{_ as createClassBreaksRenderer,K as createColorRamp,U as createColormapRenderer,j as createDefaultRenderer,te as createFlowRenderer,D as createShadedReliefRenderer,I as createStretchRenderer,q as createUVRenderer,Z as createVectorFieldRenderer,ne as estimateMagnitudeRange,B as getBandNames,F as getClassField,L as getDefaultBandCombination,V as getDefaultInterpolation,G as getDefinedInterval,P as getField,k as getSupportedRendererTypes,E as getWellKnownBandIndexes,J as isClassBreaksSupported,W as isColormapRendererSupported,X as isFlowRendererSupported,A as isShadedReliefRendererSupported,H as isSingleBand8BitRasterWithStats,z as isUVRendererSupported,Q as isVectorFieldRendererSupported,ee as normalizeRendererJSON};\n"]},"metadata":{},"sourceType":"module"}