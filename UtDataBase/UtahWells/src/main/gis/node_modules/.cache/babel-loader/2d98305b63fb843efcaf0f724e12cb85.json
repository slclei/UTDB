{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../core/Error.js\";\nimport { isSome as i, isNone as s, unwrap as a } from \"../../../core/maybe.js\";\nimport { urlToObject as l } from \"../../../core/urlUtils.js\";\nimport { property as r } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/arrayUtils.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport { subclass as n } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport o from \"../RasterInfo.js\";\nimport m from \"../RasterStorageInfo.js\";\nimport { readServiceTileInfo as c } from \"../serviceTileInfoProperty.js\";\nimport h from \"../TileInfo.js\";\nimport { TilemapCache as u } from \"../TilemapCache.js\";\nimport f from \"./BaseRaster.js\";\nimport { setValidBoundary as p } from \"../rasterFunctions/pixelUtils.js\";\nimport d from \"../rasterTransforms/GCSShiftTransform.js\";\nimport y from \"../../../rest/support/FeatureSet.js\";\nimport x from \"../../../geometry/SpatialReference.js\";\nimport g from \"../../../geometry/Extent.js\";\nimport v from \"../../../geometry/Point.js\";\nlet S = class extends f {\n  constructor() {\n    super(...arguments), this._levelOffset = 0, this._slices = null, this._tilemapCache = null, this.datasetFormat = \"RasterTileServer\";\n  }\n\n  async open(e) {\n    await this.init();\n    const s = e && e.signal,\n          a = this.sourceJSON ? {\n      data: this.sourceJSON\n    } : await this.request(this.url, {\n      query: {\n        f: \"json\"\n      },\n      signal: s\n    });\n    a.ssl && (this.url = this.url.replace(/^http:/i, \"https:\"));\n    const r = a.data;\n    if (this.sourceJSON = r, !r) throw new t(\"imageserverraster:open\", \"cannot initialize tiled image service, missing service info\");\n    if (!r.tileInfo) throw new t(\"imageserverraster:open\", \"use ImageryLayer to open non-tiled image services\");\n\n    this._fixScaleInServiceInfo();\n\n    const n = [\"jpg\", \"jpeg\", \"png\", \"png8\", \"png24\", \"png32\", \"mixed\"];\n    this.tileType = r.cacheType, null == this.tileType && (n.indexOf(r.tileInfo.format.toLowerCase()) > -1 ? this.tileType = \"Map\" : \"lerc\" === r.tileInfo.format.toLowerCase() ? this.tileType = \"Elevation\" : this.tileType = \"Raster\"), this.datasetName = r.name.slice(r.name.indexOf(\"/\") + 1);\n    const o = await this._fetchRasterInfo({\n      signal: s\n    });\n    if (!i(o)) throw new t(\"image-server-raster:open\", \"cannot initialize image service\");\n    {\n      const e = \"Map\" === this.tileType ? c(r.tileInfo, r) : h.fromJSON(r.tileInfo),\n            {\n        extent: t,\n        pixelSize: i\n      } = o,\n            s = .5 / o.width * i.x;\n      let a, l;\n      const n = e.lodAt(Math.max.apply(null, e.lods.map(e => e.level)));\n      \"Map\" !== this.tileType && 0 !== r.maxScale && (\"Raster\" === this.tileType ? (a = e.lods.find(e => e.resolution === i.x), a || (a = e.lods[e.lods.length - 1])) : (a = e.lods.find(e => Math.abs(e.scale - r.maxScale) < s), a || (a = e.lods.filter(e => e.scale > r.maxScale).sort((e, t) => e.scale > t.scale ? 1 : -1)[0])), i.x = i.y = a.resolution, o.width = Math.ceil((t.xmax - t.xmin) / i.x - .1), o.height = Math.ceil((t.ymax - t.ymin) / i.y - .1)), a || (a = n);\n      const u = e.lodAt(Math.min.apply(null, e.lods.map(e => e.level)));\n      \"Map\" === this.tileType ? this._levelOffset = e.lods[0].level : 0 !== r.minScale && \"Elevation\" === this.tileType && (l = e.lods.find(e => Math.abs(e.scale - r.minScale) < s), this._levelOffset = l.level - u.level), l || (l = u);\n      const f = Math.max(i.x, i.y);\n      (Math.abs(i.x - i.y) > s || !e.lods.some(e => Math.abs(e.resolution - f) < s)) && (i.x = i.y = a.resolution, o.width = Math.ceil((t.xmax - t.xmin) / i.x - .1), o.height = Math.ceil((t.ymax - t.ymin) / i.y - .1));\n      const p = a.level - l.level,\n            [d, y] = e.size,\n            x = [];\n      e.lods.forEach(e => {\n        e.level >= l.level && e.level <= a.level && x.push({\n          x: e.resolution,\n          y: e.resolution\n        });\n      }), x.sort((e, t) => e.x - t.x);\n      const g = this.computeBlockBoundary(t, d, y, e.origin, x, p),\n            v = x.length > 1 ? x.slice(1) : null;\n      o.storageInfo = new m({\n        blockWidth: e.size[0],\n        blockHeight: e.size[1],\n        pyramidBlockWidth: e.size[0],\n        pyramidBlockHeight: e.size[1],\n        pyramidResolutions: v,\n        compression: e.format,\n        origin: e.origin,\n        firstPyramidLevel: 1,\n        maximumPyramidLevel: p,\n        tileInfo: e,\n        blockBoundary: g\n      }), this._fixGCSShift(o), this._set(\"rasterInfo\", o);\n    }\n\n    if (r.capabilities.toLowerCase().indexOf(\"tilemap\") > -1) {\n      const e = {\n        tileInfo: o.storageInfo.tileInfo,\n        parsedUrl: l(this.url),\n        url: this.url,\n        tileServers: [],\n        type: \"tile\"\n      };\n      this._tilemapCache = new u({\n        layer: e\n      });\n    }\n  }\n\n  async fetchRawTile(e, t, i) {\n    let s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (this._slices && null == s.sliceId) return null;\n    const {\n      storageInfo: a,\n      extent: l\n    } = this.rasterInfo,\n          r = a.maximumPyramidLevel - e + this._levelOffset,\n          n = `${this.url}/tile/${r}/${t}/${i}`,\n          o = this._slices ? {\n      sliceId: s.sliceId || 0\n    } : null,\n          {\n      data: m\n    } = await this.request(n, {\n      query: o,\n      responseType: \"array-buffer\",\n      signal: s.signal\n    });\n    if (!m) return null;\n    const c = await this.decodePixelBlock(m, {\n      width: a.tileInfo.size[0],\n      height: a.tileInfo.size[1],\n      planes: null,\n      pixelType: null,\n      isPoint: \"Elevation\" === this.tileType\n    }),\n          h = a.blockBoundary[e];\n    if (\"jpg\" !== a.compression || i > h.minCol && i < h.maxCol && t > h.minRow && t < h.maxRow) return c;\n    const {\n      origin: u,\n      blockWidth: f,\n      blockHeight: d\n    } = a,\n          {\n      x: y,\n      y: x\n    } = this.getPyramidPixelSize(e),\n          g = Math.round((l.xmin - u.x) / y) % f,\n          v = Math.round((l.xmax - u.x) / y) % f || f,\n          S = Math.round((u.y - l.ymax) / x) % d,\n          w = Math.round((u.y - l.ymin) / x) % d || d,\n          I = i === h.minCol ? g : 0,\n          b = t === h.minRow ? S : 0,\n          j = i === h.maxCol ? v : f,\n          T = t === h.maxRow ? w : d;\n    return p(c, {\n      x: I,\n      y: b\n    }, {\n      width: j - I,\n      height: T - b\n    }), c;\n  }\n\n  getSliceIndex(e) {\n    if (!this._slices || s(e) || 0 === e.length) return null;\n    const t = e;\n\n    for (let i = 0; i < this._slices.length; i++) {\n      const e = this._slices[i].multidimensionalDefinition;\n      if (e.length === t.length && !e.some(e => {\n        const i = t.find(t => e.variableName === t.variableName && t.dimensionName === e.dimensionName);\n        if (!i) return !0;\n        return (Array.isArray(e.values[0]) ? `${e.values[0][0]}-${e.values[0][1]}` : e.values[0]) !== (Array.isArray(i.values[0]) ? `${i.values[0][0]}-${i.values[0][1]}` : i.values[0]);\n      })) return i;\n    }\n\n    return null;\n  }\n\n  async fetchVariableStatisticsHistograms(e, t) {\n    const i = this.request(this.url + \"/statistics\", {\n      query: {\n        variable: e,\n        f: \"json\"\n      },\n      signal: t\n    }).then(e => {\n      var t;\n      return null == (t = e.data) ? void 0 : t.statistics;\n    }),\n          s = this.request(this.url + \"/histograms\", {\n      query: {\n        variable: e,\n        f: \"json\"\n      },\n      signal: t\n    }).then(e => {\n      var t;\n      return null == (t = e.data) ? void 0 : t.histograms;\n    }),\n          a = await Promise.all([i, s]);\n    return a[0] && a[0].forEach(e => {\n      e.avg = e.mean, e.stddev = e.standardDeviation;\n    }), {\n      statistics: a[0] || null,\n      histograms: a[1] || null\n    };\n  }\n\n  async computeBestPyramidLevelForLocation(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!this._tilemapCache) return 0;\n    let i = this.identifyPixelLocation(e, 0, a(t.datumTransformation));\n    if (null === i) return null;\n    let s = 0;\n    const {\n      maximumPyramidLevel: l\n    } = this.rasterInfo.storageInfo;\n    let r = l - s + this._levelOffset;\n    const n = i.srcLocation;\n\n    for (; r >= 0;) {\n      try {\n        if (\"available\" === (await this._tilemapCache.fetchAvailability(r, i.row, i.col, t))) break;\n      } catch {}\n\n      if (r--, s++, i = this.identifyPixelLocation(n, s, a(t.datumTransformation)), null === i) return null;\n    }\n\n    return -1 === r || null == i ? null : s;\n  }\n\n  async _fetchRasterInfo(e) {\n    const t = this.sourceJSON,\n          i = Math.ceil((t.extent.xmax - t.extent.xmin) / t.pixelSizeX - .1),\n          s = Math.ceil((t.extent.ymax - t.extent.ymin) / t.pixelSizeY - .1),\n          a = x.fromJSON(t.spatialReference || t.extent.spatialReference);\n    if (\"Map\" === this.tileType) return new o({\n      width: i,\n      height: s,\n      bandCount: 3,\n      extent: g.fromJSON(t.extent),\n      spatialReference: a,\n      pixelSize: new v({\n        x: t.pixelSizeX,\n        y: t.pixelSizeY,\n        spatialReference: a\n      }),\n      pixelType: \"u8\",\n      statistics: null,\n      keyProperties: {\n        DataType: \"processed\"\n      }\n    });\n\n    const {\n      slice: l,\n      signal: r\n    } = e,\n          n = !!t.hasRasterAttributeTable && this.request(this.url + \"/rasterAttributeTable\", {\n      query: {\n        slice: l,\n        f: \"json\"\n      },\n      signal: r\n    }).then(e => y.fromJSON(e.data)).catch(() => null),\n          m = !!t.hasColormap && this.request(this.url + \"/colormap\", {\n      query: {\n        slice: l,\n        f: \"json\"\n      },\n      signal: r\n    }).then(e => {\n      var t;\n      return null == (t = e.data) ? void 0 : t.colormap;\n    }),\n          c = !!t.hasHistograms && this.request(this.url + \"/histograms\", {\n      query: {\n        slice: l,\n        f: \"json\"\n      },\n      signal: r\n    }).then(e => {\n      var t;\n      return null == (t = e.data) ? void 0 : t.histograms;\n    }),\n          h = this.request(this.url + \"/keyProperties\", {\n      query: {\n        f: \"json\"\n      },\n      signal: r\n    }).then(e => e.data).catch(() => {}),\n          u = !!t.hasMultidimensions && this._fetchMultidimensionalInfo(),\n          f = !!t.hasMultidimensions && this.request(this.url + \"/slices\", {\n      query: {\n        f: \"json\"\n      },\n      signal: r\n    }).then(e => e.data && e.data.slices).catch(() => {});\n\n    return Promise.all([n, m, c, h, u, f]).then(e => {\n      let l = null;\n\n      if (t.minValues && t.minValues.length === t.bandCount) {\n        l = [];\n\n        for (let e = 0; e < t.minValues.length; e++) l.push({\n          min: t.minValues[e],\n          max: t.maxValues[e],\n          avg: t.meanValues[e],\n          stddev: t.stdvValues[e]\n        });\n      }\n\n      return this._slices = e[5] || null, new o({\n        width: i,\n        height: s,\n        bandCount: t.bandCount,\n        extent: g.fromJSON(t.extent),\n        spatialReference: a,\n        pixelSize: new v({\n          x: t.pixelSizeX,\n          y: t.pixelSizeY,\n          spatialReference: a\n        }),\n        pixelType: t.pixelType.toLowerCase(),\n        statistics: l,\n        attributeTable: e[0] || null,\n        colormap: e[1] || null,\n        histograms: e[2] || null,\n        keyProperties: e[3] || {},\n        multidimensionalInfo: e[4] || null\n      });\n    });\n  }\n\n  async _fetchMultidimensionalInfo(e) {\n    var t;\n    const i = await this.request(this.url + \"/multidimensionalInfo\", {\n      query: {\n        f: \"json\"\n      },\n      signal: e\n    }).then(e => {\n      var t;\n      return null == (t = e.data) ? void 0 : t.multidimensionalInfo;\n    });\n    return null != (t = i.variables) && t.length && i.variables.forEach(e => {\n      var t;\n      null != (t = e.statistics) && t.length && e.statistics.forEach(e => {\n        e.avg = e.mean, e.stddev = e.standardDeviation;\n      });\n    }), i;\n  }\n\n  _fixScaleInServiceInfo() {\n    const {\n      sourceJSON: e\n    } = this;\n    e.minScale && e.minScale < 0 && (e.minScale = 0), e.maxScale && e.maxScale < 0 && (e.maxScale = 0);\n  }\n\n  _fixGCSShift(e) {\n    const {\n      extent: t,\n      spatialReference: i\n    } = e;\n    0 === t.xmin && 360 === t.xmax && i.wkid && i.isGeographic && (e.nativeExtent = e.extent, e.transform = new d(), e.extent = e.transform.forwardTransform(t));\n  }\n\n};\ne([r({\n  type: String,\n  json: {\n    write: !0\n  }\n})], S.prototype, \"datasetFormat\", void 0), e([r()], S.prototype, \"tileType\", void 0), S = e([n(\"esri.layers.support.rasterDatasets.ImageServerRaster\")], S);\nconst w = S;\nexport { w as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/layers/support/rasterDatasets/ImageServerRaster.js"],"names":["_","e","t","isSome","i","isNone","s","unwrap","a","urlToObject","l","property","r","subclass","n","o","m","readServiceTileInfo","c","h","TilemapCache","u","f","setValidBoundary","p","d","y","x","g","v","S","constructor","arguments","_levelOffset","_slices","_tilemapCache","datasetFormat","open","init","signal","sourceJSON","data","request","url","query","ssl","replace","tileInfo","_fixScaleInServiceInfo","tileType","cacheType","indexOf","format","toLowerCase","datasetName","name","slice","_fetchRasterInfo","fromJSON","extent","pixelSize","width","lodAt","Math","max","apply","lods","map","level","maxScale","find","resolution","length","abs","scale","filter","sort","ceil","xmax","xmin","height","ymax","ymin","min","minScale","some","size","forEach","push","computeBlockBoundary","origin","storageInfo","blockWidth","blockHeight","pyramidBlockWidth","pyramidBlockHeight","pyramidResolutions","compression","firstPyramidLevel","maximumPyramidLevel","blockBoundary","_fixGCSShift","_set","capabilities","parsedUrl","tileServers","type","layer","fetchRawTile","sliceId","rasterInfo","responseType","decodePixelBlock","planes","pixelType","isPoint","minCol","maxCol","minRow","maxRow","getPyramidPixelSize","round","w","I","b","j","T","getSliceIndex","multidimensionalDefinition","variableName","dimensionName","Array","isArray","values","fetchVariableStatisticsHistograms","variable","then","statistics","histograms","Promise","all","avg","mean","stddev","standardDeviation","computeBestPyramidLevelForLocation","identifyPixelLocation","datumTransformation","srcLocation","fetchAvailability","row","col","pixelSizeX","pixelSizeY","spatialReference","bandCount","keyProperties","DataType","hasRasterAttributeTable","catch","hasColormap","colormap","hasHistograms","hasMultidimensions","_fetchMultidimensionalInfo","slices","minValues","maxValues","meanValues","stdvValues","attributeTable","multidimensionalInfo","variables","wkid","isGeographic","nativeExtent","transform","forwardTransform","String","json","write","prototype","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../core/Error.js\";import{isSome as i,isNone as s,unwrap as a}from\"../../../core/maybe.js\";import{urlToObject as l}from\"../../../core/urlUtils.js\";import{property as r}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/arrayUtils.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import{subclass as n}from\"../../../core/accessorSupport/decorators/subclass.js\";import o from\"../RasterInfo.js\";import m from\"../RasterStorageInfo.js\";import{readServiceTileInfo as c}from\"../serviceTileInfoProperty.js\";import h from\"../TileInfo.js\";import{TilemapCache as u}from\"../TilemapCache.js\";import f from\"./BaseRaster.js\";import{setValidBoundary as p}from\"../rasterFunctions/pixelUtils.js\";import d from\"../rasterTransforms/GCSShiftTransform.js\";import y from\"../../../rest/support/FeatureSet.js\";import x from\"../../../geometry/SpatialReference.js\";import g from\"../../../geometry/Extent.js\";import v from\"../../../geometry/Point.js\";let S=class extends f{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat=\"RasterTileServer\"}async open(e){await this.init();const s=e&&e.signal,a=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:\"json\"},signal:s});a.ssl&&(this.url=this.url.replace(/^http:/i,\"https:\"));const r=a.data;if(this.sourceJSON=r,!r)throw new t(\"imageserverraster:open\",\"cannot initialize tiled image service, missing service info\");if(!r.tileInfo)throw new t(\"imageserverraster:open\",\"use ImageryLayer to open non-tiled image services\");this._fixScaleInServiceInfo();const n=[\"jpg\",\"jpeg\",\"png\",\"png8\",\"png24\",\"png32\",\"mixed\"];this.tileType=r.cacheType,null==this.tileType&&(n.indexOf(r.tileInfo.format.toLowerCase())>-1?this.tileType=\"Map\":\"lerc\"===r.tileInfo.format.toLowerCase()?this.tileType=\"Elevation\":this.tileType=\"Raster\"),this.datasetName=r.name.slice(r.name.indexOf(\"/\")+1);const o=await this._fetchRasterInfo({signal:s});if(!i(o))throw new t(\"image-server-raster:open\",\"cannot initialize image service\");{const e=\"Map\"===this.tileType?c(r.tileInfo,r):h.fromJSON(r.tileInfo),{extent:t,pixelSize:i}=o,s=.5/o.width*i.x;let a,l;const n=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));\"Map\"!==this.tileType&&0!==r.maxScale&&(\"Raster\"===this.tileType?(a=e.lods.find((e=>e.resolution===i.x)),a||(a=e.lods[e.lods.length-1])):(a=e.lods.find((e=>Math.abs(e.scale-r.maxScale)<s)),a||(a=e.lods.filter((e=>e.scale>r.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=a.resolution,o.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),o.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),a||(a=n);const u=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));\"Map\"===this.tileType?this._levelOffset=e.lods[0].level:0!==r.minScale&&\"Elevation\"===this.tileType&&(l=e.lods.find((e=>Math.abs(e.scale-r.minScale)<s)),this._levelOffset=l.level-u.level),l||(l=u);const f=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>s||!e.lods.some((e=>Math.abs(e.resolution-f)<s)))&&(i.x=i.y=a.resolution,o.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),o.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const p=a.level-l.level,[d,y]=e.size,x=[];e.lods.forEach((e=>{e.level>=l.level&&e.level<=a.level&&x.push({x:e.resolution,y:e.resolution})})),x.sort(((e,t)=>e.x-t.x));const g=this.computeBlockBoundary(t,d,y,e.origin,x,p),v=x.length>1?x.slice(1):null;o.storageInfo=new m({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],pyramidResolutions:v,compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:p,tileInfo:e,blockBoundary:g}),this._fixGCSShift(o),this._set(\"rasterInfo\",o)}if(r.capabilities.toLowerCase().indexOf(\"tilemap\")>-1){const e={tileInfo:o.storageInfo.tileInfo,parsedUrl:l(this.url),url:this.url,tileServers:[],type:\"tile\"};this._tilemapCache=new u({layer:e})}}async fetchRawTile(e,t,i,s={}){if(this._slices&&null==s.sliceId)return null;const{storageInfo:a,extent:l}=this.rasterInfo,r=a.maximumPyramidLevel-e+this._levelOffset,n=`${this.url}/tile/${r}/${t}/${i}`,o=this._slices?{sliceId:s.sliceId||0}:null,{data:m}=await this.request(n,{query:o,responseType:\"array-buffer\",signal:s.signal});if(!m)return null;const c=await this.decodePixelBlock(m,{width:a.tileInfo.size[0],height:a.tileInfo.size[1],planes:null,pixelType:null,isPoint:\"Elevation\"===this.tileType}),h=a.blockBoundary[e];if(\"jpg\"!==a.compression||i>h.minCol&&i<h.maxCol&&t>h.minRow&&t<h.maxRow)return c;const{origin:u,blockWidth:f,blockHeight:d}=a,{x:y,y:x}=this.getPyramidPixelSize(e),g=Math.round((l.xmin-u.x)/y)%f,v=Math.round((l.xmax-u.x)/y)%f||f,S=Math.round((u.y-l.ymax)/x)%d,w=Math.round((u.y-l.ymin)/x)%d||d,I=i===h.minCol?g:0,b=t===h.minRow?S:0,j=i===h.maxCol?v:f,T=t===h.maxRow?w:d;return p(c,{x:I,y:b},{width:j-I,height:T-b}),c}getSliceIndex(e){if(!this._slices||s(e)||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));if(!i)return!0;return(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+\"/statistics\",{query:{variable:e,f:\"json\"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),s=this.request(this.url+\"/histograms\",{query:{variable:e,f:\"json\"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),a=await Promise.all([i,s]);return a[0]&&a[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:a[0]||null,histograms:a[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,a(t.datumTransformation));if(null===i)return null;let s=0;const{maximumPyramidLevel:l}=this.rasterInfo.storageInfo;let r=l-s+this._levelOffset;const n=i.srcLocation;for(;r>=0;){try{if(\"available\"===await this._tilemapCache.fetchAvailability(r,i.row,i.col,t))break}catch{}if(r--,s++,i=this.identifyPixelLocation(n,s,a(t.datumTransformation)),null===i)return null}return-1===r||null==i?null:s}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),s=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),a=x.fromJSON(t.spatialReference||t.extent.spatialReference);if(\"Map\"===this.tileType)return new o({width:i,height:s,bandCount:3,extent:g.fromJSON(t.extent),spatialReference:a,pixelSize:new v({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:\"u8\",statistics:null,keyProperties:{DataType:\"processed\"}});const{slice:l,signal:r}=e,n=!!t.hasRasterAttributeTable&&this.request(this.url+\"/rasterAttributeTable\",{query:{slice:l,f:\"json\"},signal:r}).then((e=>y.fromJSON(e.data))).catch((()=>null)),m=!!t.hasColormap&&this.request(this.url+\"/colormap\",{query:{slice:l,f:\"json\"},signal:r}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),c=!!t.hasHistograms&&this.request(this.url+\"/histograms\",{query:{slice:l,f:\"json\"},signal:r}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),h=this.request(this.url+\"/keyProperties\",{query:{f:\"json\"},signal:r}).then((e=>e.data)).catch((()=>{})),u=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),f=!!t.hasMultidimensions&&this.request(this.url+\"/slices\",{query:{f:\"json\"},signal:r}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return Promise.all([n,m,c,h,u,f]).then((e=>{let l=null;if(t.minValues&&t.minValues.length===t.bandCount){l=[];for(let e=0;e<t.minValues.length;e++)l.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new o({width:i,height:s,bandCount:t.bandCount,extent:g.fromJSON(t.extent),spatialReference:a,pixelSize:new v({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:t.pixelType.toLowerCase(),statistics:l,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+\"/multidimensionalInfo\",{query:{f:\"json\"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=i.variables)&&t.length&&i.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),i}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;0===t.xmin&&360===t.xmax&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new d,e.extent=e.transform.forwardTransform(t))}};e([r({type:String,json:{write:!0}})],S.prototype,\"datasetFormat\",void 0),e([r()],S.prototype,\"tileType\",void 0),S=e([n(\"esri.layers.support.rasterDatasets.ImageServerRaster\")],S);const w=S;export{w as default};\n"]},"metadata":{},"sourceType":"module"}