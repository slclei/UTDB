{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { AllocationTracer as t } from \"../support/AllocationTracer.js\";\nimport { ResourceType as r } from \"./enums.js\";\n\nclass s {\n  constructor() {\n    this.RECORD_ALLOCATIONS = !1;\n  }\n\n}\n\nconst e = new s();\n\nclass n {\n  constructor() {\n    for (this._current = new Array(), this._max = new Array(), this._allocations = new t(e.RECORD_ALLOCATIONS); this._current.length < r.COUNT;) this._current.push(0), this._max.push(0);\n  }\n\n  resetMax() {\n    for (this._max.length = 0; this._max.length < this._current.length;) this._max.push(0);\n  }\n\n  increment(t, r) {\n    const s = ++this._current[t];\n    this._max[t] = Math.max(s, this._max[t]), this._allocations.add(r);\n  }\n\n  decrement(t, r) {\n    --this._current[t], this._allocations.remove(r);\n  }\n\n  get max() {\n    return this._max;\n  }\n\n  get current() {\n    return this._current;\n  }\n\n  get total() {\n    return this.current.reduce((t, r) => t + r, 0);\n  }\n\n  printResourceCount() {\n    if (this.total > 0) {\n      console.log(\"Live objects:\");\n\n      for (let t = 0; t < r.COUNT; ++t) {\n        const s = this._current[t];\n        s > 0 && console.log(`${r[t]}: ${s}`);\n      }\n    }\n\n    this._allocations.print();\n  }\n\n}\n\nexport { n as InstanceCounter, e as test };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/webgl/InstanceCounter.js"],"names":["AllocationTracer","t","ResourceType","r","s","constructor","RECORD_ALLOCATIONS","e","n","_current","Array","_max","_allocations","length","COUNT","push","resetMax","increment","Math","max","add","decrement","remove","current","total","reduce","printResourceCount","console","log","print","InstanceCounter","test"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,gBAAgB,IAAIC,CAA3B,QAAiC,gCAAjC;AAAkE,SAAOC,YAAY,IAAIC,CAAvB,QAA6B,YAA7B;;AAA0C,MAAMC,CAAN,CAAO;AAACC,EAAAA,WAAW,GAAE;AAAC,SAAKC,kBAAL,GAAwB,CAAC,CAAzB;AAA2B;;AAA1C;;AAA2C,MAAMC,CAAC,GAAC,IAAIH,CAAJ,EAAR;;AAAc,MAAMI,CAAN,CAAO;AAACH,EAAAA,WAAW,GAAE;AAAC,SAAI,KAAKI,QAAL,GAAc,IAAIC,KAAJ,EAAd,EAAwB,KAAKC,IAAL,GAAU,IAAID,KAAJ,EAAlC,EAA4C,KAAKE,YAAL,GAAkB,IAAIX,CAAJ,CAAMM,CAAC,CAACD,kBAAR,CAAlE,EAA8F,KAAKG,QAAL,CAAcI,MAAd,GAAqBV,CAAC,CAACW,KAArH,GAA4H,KAAKL,QAAL,CAAcM,IAAd,CAAmB,CAAnB,GAAsB,KAAKJ,IAAL,CAAUI,IAAV,CAAe,CAAf,CAAtB;AAAwC;;AAAAC,EAAAA,QAAQ,GAAE;AAAC,SAAI,KAAKL,IAAL,CAAUE,MAAV,GAAiB,CAArB,EAAuB,KAAKF,IAAL,CAAUE,MAAV,GAAiB,KAAKJ,QAAL,CAAcI,MAAtD,GAA8D,KAAKF,IAAL,CAAUI,IAAV,CAAe,CAAf;AAAkB;;AAAAE,EAAAA,SAAS,CAAChB,CAAD,EAAGE,CAAH,EAAK;AAAC,UAAMC,CAAC,GAAC,EAAE,KAAKK,QAAL,CAAcR,CAAd,CAAV;AAA2B,SAAKU,IAAL,CAAUV,CAAV,IAAaiB,IAAI,CAACC,GAAL,CAASf,CAAT,EAAW,KAAKO,IAAL,CAAUV,CAAV,CAAX,CAAb,EAAsC,KAAKW,YAAL,CAAkBQ,GAAlB,CAAsBjB,CAAtB,CAAtC;AAA+D;;AAAAkB,EAAAA,SAAS,CAACpB,CAAD,EAAGE,CAAH,EAAK;AAAC,MAAE,KAAKM,QAAL,CAAcR,CAAd,CAAF,EAAmB,KAAKW,YAAL,CAAkBU,MAAlB,CAAyBnB,CAAzB,CAAnB;AAA+C;;AAAO,MAAHgB,GAAG,GAAE;AAAC,WAAO,KAAKR,IAAZ;AAAiB;;AAAW,MAAPY,OAAO,GAAE;AAAC,WAAO,KAAKd,QAAZ;AAAqB;;AAAS,MAALe,KAAK,GAAE;AAAC,WAAO,KAAKD,OAAL,CAAaE,MAAb,CAAqB,CAACxB,CAAD,EAAGE,CAAH,KAAOF,CAAC,GAACE,CAA9B,EAAiC,CAAjC,CAAP;AAA2C;;AAAAuB,EAAAA,kBAAkB,GAAE;AAAC,QAAG,KAAKF,KAAL,GAAW,CAAd,EAAgB;AAACG,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AAA6B,WAAI,IAAI3B,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACE,CAAC,CAACW,KAAhB,EAAsB,EAAEb,CAAxB,EAA0B;AAAC,cAAMG,CAAC,GAAC,KAAKK,QAAL,CAAcR,CAAd,CAAR;AAAyBG,QAAAA,CAAC,GAAC,CAAF,IAAKuB,OAAO,CAACC,GAAR,CAAa,GAAEzB,CAAC,CAACF,CAAD,CAAI,KAAIG,CAAE,EAA1B,CAAL;AAAkC;AAAC;;AAAA,SAAKQ,YAAL,CAAkBiB,KAAlB;AAA0B;;AAA9tB;;AAA+tB,SAAOrB,CAAC,IAAIsB,eAAZ,EAA4BvB,CAAC,IAAIwB,IAAjC","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{AllocationTracer as t}from\"../support/AllocationTracer.js\";import{ResourceType as r}from\"./enums.js\";class s{constructor(){this.RECORD_ALLOCATIONS=!1}}const e=new s;class n{constructor(){for(this._current=new Array,this._max=new Array,this._allocations=new t(e.RECORD_ALLOCATIONS);this._current.length<r.COUNT;)this._current.push(0),this._max.push(0)}resetMax(){for(this._max.length=0;this._max.length<this._current.length;)this._max.push(0)}increment(t,r){const s=++this._current[t];this._max[t]=Math.max(s,this._max[t]),this._allocations.add(r)}decrement(t,r){--this._current[t],this._allocations.remove(r)}get max(){return this._max}get current(){return this._current}get total(){return this.current.reduce(((t,r)=>t+r),0)}printResourceCount(){if(this.total>0){console.log(\"Live objects:\");for(let t=0;t<r.COUNT;++t){const s=this._current[t];s>0&&console.log(`${r[t]}: ${s}`)}}this._allocations.print()}}export{n as InstanceCounter,e as test};\n"]},"metadata":{},"sourceType":"module"}