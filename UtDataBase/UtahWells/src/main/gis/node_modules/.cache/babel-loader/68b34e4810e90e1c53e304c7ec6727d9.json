{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../request.js\";\nimport { createQueryParamsHelper as r } from \"../core/queryUtils.js\";\nimport { normalizeCentralMeridian as t } from \"../geometry/support/normalizeUtils.js\";\nimport { collectGeometries as i, isInputGeometryZAware as s, fetchServiceDescription as a, dropZValuesOffInputGeometry as o } from \"./networkService.js\";\nimport { parseUrl as n } from \"./utils.js\";\nimport u from \"./support/ClosestFacilitySolveResult.js\";\nconst l = r({\n  accumulateAttributes: {\n    name: \"accumulateAttributeNames\"\n  },\n  attributeParameterValues: !0,\n  directionsTimeAttribute: {\n    name: \"directionsTimeAttributeName\"\n  },\n  impedanceAttribute: {\n    name: \"impedanceAttributeName\"\n  },\n  facilities: !0,\n  incidents: !0,\n  outSpatialReference: {\n    name: \"outSR\",\n    getter: e => e.outSpatialReference.wkid\n  },\n  pointBarriers: {\n    name: \"barriers\"\n  },\n  polylineBarriers: !0,\n  polygonBarriers: !0,\n  restrictionAttributes: {\n    name: \"restrictionAttributeNames\"\n  },\n  returnPointBarriers: {\n    name: \"returnBarriers\"\n  },\n  returnRoutes: {\n    name: \"returnCFRoutes\"\n  },\n  travelMode: !0\n});\n\nasync function c(r, c, m) {\n  const f = [],\n        p = [],\n        y = {},\n        B = {},\n        d = n(r),\n        {\n    path: b\n  } = d;\n  c.incidents && c.incidents.features && i(c.incidents.features, p, \"incidents.features\", y), c.facilities && c.facilities.features && i(c.facilities.features, p, \"facilities.features\", y), c.pointBarriers && c.pointBarriers.features && i(c.pointBarriers.features, p, \"pointBarriers.features\", y), c.polylineBarriers && c.polylineBarriers.features && i(c.polylineBarriers.features, p, \"polylineBarriers.features\", y), c.polygonBarriers && c.polygonBarriers.features && i(c.polygonBarriers.features, p, \"polygonBarriers.features\", y);\n  const g = await t(p);\n\n  for (const e in y) {\n    const r = y[e];\n    f.push(e), B[e] = g.slice(r[0], r[1]);\n  }\n\n  if (s(B, f)) {\n    let e = null;\n\n    try {\n      e = await a(b, c.apiKey, m);\n    } catch {}\n\n    e && !e.hasZ && o(B, f);\n  }\n\n  for (const e in B) B[e].forEach((r, t) => {\n    c.get(e)[t].geometry = r;\n  });\n\n  const A = { ...m,\n    query: { ...d.query,\n      ...l.toQueryParams(c),\n      f: \"json\"\n    }\n  },\n        {\n    data: j\n  } = await e(`${b}/solveClosestFacility`, A);\n  return u.fromJSON(j);\n}\n\nexport { c as solve };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/rest/closestFacility.js"],"names":["e","createQueryParamsHelper","r","normalizeCentralMeridian","t","collectGeometries","i","isInputGeometryZAware","s","fetchServiceDescription","a","dropZValuesOffInputGeometry","o","parseUrl","n","u","l","accumulateAttributes","name","attributeParameterValues","directionsTimeAttribute","impedanceAttribute","facilities","incidents","outSpatialReference","getter","wkid","pointBarriers","polylineBarriers","polygonBarriers","restrictionAttributes","returnPointBarriers","returnRoutes","travelMode","c","m","f","p","y","B","d","path","b","features","g","push","slice","apiKey","hasZ","forEach","get","geometry","A","query","toQueryParams","data","j","fromJSON","solve"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../request.js\";import{createQueryParamsHelper as r}from\"../core/queryUtils.js\";import{normalizeCentralMeridian as t}from\"../geometry/support/normalizeUtils.js\";import{collectGeometries as i,isInputGeometryZAware as s,fetchServiceDescription as a,dropZValuesOffInputGeometry as o}from\"./networkService.js\";import{parseUrl as n}from\"./utils.js\";import u from\"./support/ClosestFacilitySolveResult.js\";const l=r({accumulateAttributes:{name:\"accumulateAttributeNames\"},attributeParameterValues:!0,directionsTimeAttribute:{name:\"directionsTimeAttributeName\"},impedanceAttribute:{name:\"impedanceAttributeName\"},facilities:!0,incidents:!0,outSpatialReference:{name:\"outSR\",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:\"barriers\"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:\"restrictionAttributeNames\"},returnPointBarriers:{name:\"returnBarriers\"},returnRoutes:{name:\"returnCFRoutes\"},travelMode:!0});async function c(r,c,m){const f=[],p=[],y={},B={},d=n(r),{path:b}=d;c.incidents&&c.incidents.features&&i(c.incidents.features,p,\"incidents.features\",y),c.facilities&&c.facilities.features&&i(c.facilities.features,p,\"facilities.features\",y),c.pointBarriers&&c.pointBarriers.features&&i(c.pointBarriers.features,p,\"pointBarriers.features\",y),c.polylineBarriers&&c.polylineBarriers.features&&i(c.polylineBarriers.features,p,\"polylineBarriers.features\",y),c.polygonBarriers&&c.polygonBarriers.features&&i(c.polygonBarriers.features,p,\"polygonBarriers.features\",y);const g=await t(p);for(const e in y){const r=y[e];f.push(e),B[e]=g.slice(r[0],r[1])}if(s(B,f)){let e=null;try{e=await a(b,c.apiKey,m)}catch{}e&&!e.hasZ&&o(B,f)}for(const e in B)B[e].forEach(((r,t)=>{c.get(e)[t].geometry=r}));const A={...m,query:{...d.query,...l.toQueryParams(c),f:\"json\"}},{data:j}=await e(`${b}/solveClosestFacility`,A);return u.fromJSON(j)}export{c as solve};\n"]},"metadata":{},"sourceType":"module"}