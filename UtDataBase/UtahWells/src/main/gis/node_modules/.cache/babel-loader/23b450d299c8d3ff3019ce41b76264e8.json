{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../../../../core/Error.js\";\nimport t from \"../../../../core/has.js\";\nimport { clone as i } from \"../../../../core/lang.js\";\nimport r from \"../../../../core/Logger.js\";\nimport { isSome as l, unwrap as n, isNone as s, unwrapOr as o } from \"../../../../core/maybe.js\";\nimport { pt2px as a } from \"../../../../core/screenUtils.js\";\nimport { getVVType as u } from \"../../engine/webgl/Utils.js\";\nimport { getVVFlags as d } from \"../../engine/webgl/util/vvFlagUtils.js\";\nimport { createSymbolSchema as f } from \"./createSymbolSchema.js\";\nexport { createSymbolSchema } from \"./createSymbolSchema.js\";\nimport { getPtMaxVVSize as c } from \"./support/pixelBuffering.js\";\nimport { simplifyVisualVariables as p } from \"./support/rendererUtils.js\";\nimport { createClusterRenderer as m } from \"../support/clusterUtils.js\";\nimport { toJSONGeometryType as y } from \"../support/util.js\";\nconst g = r.getLogger(\"esri.views.2d.layers.features.schemaUtils\"),\n      b = \"ValidationError\",\n      x = {\n  esriGeometryPoint: [\"above-right\", \"above-center\", \"above-left\", \"center-center\", \"center-left\", \"center-right\", \"below-center\", \"below-left\", \"below-right\"],\n  esriGeometryPolygon: [\"always-horizontal\"],\n  esriGeometryPolyline: [\"center-along\"],\n  esriGeometryMultipoint: null\n};\n\nfunction v(e) {\n  return e;\n}\n\nfunction h(e) {\n  let t = 0,\n      i = 0,\n      r = !1,\n      n = !0,\n      s = !0;\n\n  if (l(e)) {\n    if (i = c(e), \"visualVariables\" in e && (t = d(e.visualVariables || []), r = \"dot-density\" === e.type), \"dictionary\" === e.type) return {\n      maxVVSize: i,\n      supportsOutlineFills: !1,\n      vvFlags: t,\n      stride: {\n        fill: \"default\"\n      }\n    };\n\n    if (!r) {\n      const t = e.getSymbols();\n      \"backgroundFillSymbol\" in e && e.backgroundFillSymbol && t.push(e.backgroundFillSymbol);\n\n      for (const e of t) if (\"cim\" === e.type && (n = !1), \"simple-fill\" === e.type || \"picture-fill\" === e.type) {\n        const t = e.outline;\n        t && \"none\" !== t.style && \"solid\" !== t.style && (s = !1);\n        const i = t && \"none\" !== t.style && \"solid\" !== t.style,\n              r = \"simple-fill\" === e.type && \"none\" !== e.style && \"solid\" !== e.style;\n        (\"picture-fill\" === e.type || r || i) && (n = !1);\n      }\n    }\n  }\n\n  return r && (s = !1), {\n    vvFlags: t,\n    maxVVSize: i,\n    supportsOutlineFills: s,\n    stride: {\n      fill: r ? \"dot-density\" : n ? \"simple\" : \"default\"\n    }\n  };\n}\n\nfunction w(t, i) {\n  const r = t.labelPlacement,\n        l = x[i];\n  if (!t.symbol) return g.warn(\"No ILabelClass symbol specified.\"), !0;\n  if (!l) return g.error(new e(\"mapview-labeling:unsupported-geometry-type\", `Unable to create labels for Feature Layer, ${i} is not supported`)), !0;\n\n  if (!l.some(e => e === r)) {\n    const e = l[0];\n    r && g.warn(`Found invalid label placement type ${r} for ${i}. Defaulting to ${e}`), t.labelPlacement = e;\n  }\n\n  return !1;\n}\n\nfunction F(e, t) {\n  const r = i(e);\n  return r.some(e => w(e, t)) ? [] : r;\n}\n\nfunction I(e) {\n  return t(\"esri-2d-update-debug\") && console.debug(\"Created new schema\", E(e, !0)), E(e);\n}\n\nfunction E(e) {\n  let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n\n  try {\n    var i, r;\n    const l = O(e, t),\n          n = {};\n    l.map(t => S(n, e, t));\n    return {\n      source: {\n        definitionExpression: e.definitionExpression,\n        fields: e.fields.map(e => e.toJSON()),\n        gdbVersion: e.gdbVersion,\n        historicMoment: null == (i = e.historicMoment) ? void 0 : i.getTime(),\n        outFields: e.availableFields,\n        pixelBuffer: e.pixelBuffer,\n        spatialReference: e.spatialReference.toJSON(),\n        timeExtent: null == (r = e.timeExtent) ? void 0 : r.toJSON(),\n        customParameters: e.customParameters\n      },\n      attributes: {\n        fields: {},\n        indexCount: 0\n      },\n      processors: l,\n      targets: n\n    };\n  } catch (l) {\n    if (l.fieldName === b) return g.error(l), null;\n    throw l;\n  }\n}\n\nfunction S(t, i, r) {\n  switch (r.target) {\n    case \"feature\":\n      return void V(t, T(i), r);\n\n    case \"aggregate\":\n      {\n        if (!(\"featureReduction\" in i)) return;\n        const l = i.featureReduction;\n        if (\"selection\" === l.type) throw new e(b, \"Mapview does not support `selection` reduction type\", l);\n        return V(t, T(i), r), void N(t, l, r);\n      }\n  }\n}\n\nfunction z(e, t) {\n  for (const i in t) {\n    const r = t[i];\n    if (r.target !== e.name) continue;\n    const l = e.attributes[i];\n    l ? (l.context.mesh = l.context.mesh || r.context.mesh, l.context.storage = l.context.storage || r.context.storage) : e.attributes[i] = r;\n  }\n\n  return e;\n}\n\nfunction T(e) {\n  var t, i, r, l, s;\n  return [null != (t = null == (i = n(e.filter)) ? void 0 : i.toJSON()) ? t : null, null != (r = null == (l = n(null == (s = n(e.featureEffect)) ? void 0 : s.filter)) ? void 0 : l.toJSON()) ? r : null];\n}\n\nfunction V(e, t, i) {\n  return e.feature || (e.feature = {\n    name: \"feature\",\n    input: \"source\",\n    filters: t,\n    attributes: {}\n  }), z(e.feature, i.attributes.fields), e;\n}\n\nfunction N(e, t, i) {\n  return e.aggregate || (e.aggregate = {\n    name: \"aggregate\",\n    input: \"feature\",\n    filters: null,\n    attributes: {},\n    params: {\n      clusterRadius: a(t.clusterRadius / 2),\n      clusterPixelBuffer: 64 * Math.ceil(a(t.clusterMaxSize) / 64),\n      fields: i.aggregateFields\n    }\n  }), z(e.aggregate, i.attributes.fields), e;\n}\n\nfunction j(e, t) {\n  return t.field ? M(e, { ...t,\n    type: \"field\",\n    field: t.field\n  }) : t.valueExpression ? M(e, { ...t,\n    type: \"expression\",\n    valueExpression: t.valueExpression\n  }) : {\n    field: null,\n    fieldIndex: null\n  };\n}\n\nfunction M(e, t) {\n  switch (t.type) {\n    case \"expression\":\n      {\n        const i = v(t.valueExpression);\n\n        if (!e.fields[i]) {\n          const r = e.indexCount++;\n          e.fields[i] = { ...t,\n            name: i,\n            fieldIndex: r\n          };\n        }\n\n        return {\n          fieldIndex: e.fields[i].fieldIndex\n        };\n      }\n\n    case \"label-expression\":\n      {\n        const i = v(JSON.stringify(t.label));\n\n        if (!e.fields[i]) {\n          const r = e.indexCount++;\n          e.fields[i] = { ...t,\n            name: i,\n            fieldIndex: r\n          };\n        }\n\n        return {\n          fieldIndex: e.fields[i].fieldIndex\n        };\n      }\n\n    case \"field\":\n      {\n        const i = t.field;\n        return \"aggregate\" === t.target && e.fields[i] || (e.fields[i] = { ...t,\n          name: i\n        }), {\n          field: i\n        };\n      }\n\n    case \"statistic\":\n      return e.fields[t.name] = { ...t\n      }, {\n        field: t.name\n      };\n  }\n}\n\nfunction O(e) {\n  let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n  const i = new Array();\n  let r = 0;\n  return i.push(B(e, r++, t)), i;\n}\n\nfunction R(e, t, i, r, l) {\n  let n = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : !1;\n  const s = M(t, {\n    type: \"label-expression\",\n    target: r,\n    context: {\n      mesh: !0\n    },\n    resultType: \"string\",\n    label: {\n      labelExpression: i.labelExpression,\n      labelExpressionInfo: i.labelExpressionInfo ? {\n        expression: i.labelExpressionInfo.expression\n      } : null,\n      symbol: !!i.symbol,\n      where: i.where\n    }\n  }),\n        {\n    fieldIndex: o\n  } = s,\n        a = h(e);\n  return { ...f(i, a, n),\n    fieldIndex: o,\n    target: r,\n    index: l\n  };\n}\n\nfunction B(t, i) {\n  let r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n  const n = {\n    indexCount: 0,\n    fields: {}\n  },\n        s = \"featureReduction\" in t && t.featureReduction,\n        o = s ? \"aggregate\" : \"feature\";\n\n  if (\"sublayers\" in t) {\n    const i = {\n      type: \"subtype\",\n      subtypeField: t.subtypeField,\n      renderers: {},\n      stride: {\n        fill: \"default\"\n      }\n    },\n          s = {\n      type: \"subtype\",\n      mapping: {},\n      target: \"feature\"\n    },\n          a = {\n      type: \"subtype\",\n      classes: {}\n    },\n          u = {\n      type: \"symbol\",\n      target: \"feature\",\n      aggregateFields: [],\n      attributes: n,\n      storage: s,\n      mesh: {\n        matcher: i,\n        aggregateMatcher: null,\n        labels: a,\n        sortKey: null\n      }\n    },\n          d = new Set();\n    let f = 0;\n\n    for (const {\n      renderer: c,\n      subtypeCode: p,\n      labelingInfo: m,\n      labelsVisible: y\n    } of t.sublayers) {\n      const t = L(n, o, c, r),\n            u = C(n, o, c),\n            g = y && m;\n      if (\"visualVariables\" in c && c.visualVariables && c.visualVariables.length) throw new e(b, \"Visual variables are currently not supported for subtype layers\");\n      if (\"dictionary\" === t.type) throw new e(b, \"Dictionary renderer is not supported in subtype layers\");\n      if (\"subtype\" === t.type) throw new e(b, \"Nested subtype renderers is not supported\");\n      if (l(u) && \"subtype\" === u.type) throw new e(b, \"Nested subtype storage is not supported\");\n      if (l(u) && \"dot-density\" === u.type) throw new e(b, \"Dot density attributes are not supported in subtype layers\");\n      if (d.has(p)) throw new e(b, \"Subtype codes for sublayers must be unique\");\n      d.add(p), i.renderers[p] = t, s.mapping[p] = u, g && (a.classes[p] = g.map(e => R(c, n, e, \"feature\", f++, r)));\n    }\n\n    return u;\n  }\n\n  if (\"heatmap\" === t.renderer.type) {\n    const {\n      blurRadius: e,\n      fieldOffset: i,\n      field: r\n    } = t.renderer;\n    return {\n      type: \"heatmap\",\n      aggregateFields: [],\n      attributes: n,\n      target: o,\n      storage: null,\n      mesh: {\n        blurRadius: e,\n        fieldOffset: i,\n        field: j(n, {\n          target: o,\n          field: r,\n          resultType: \"numeric\"\n        }).field\n      }\n    };\n  }\n\n  {\n    const i = [],\n          l = \"aggregate\" === o ? m(i, t.renderer, s, null) : t.renderer;\n    P(n, i);\n    const a = L(n, o, l, r);\n    let u = null;\n    const d = C(n, o, l),\n          c = y(t.geometryType);\n    let p = t.labelsVisible && t.labelingInfo || [],\n        g = [];\n\n    if (s) {\n      if (\"selection\" === s.type) throw new e(b, \"Mapview does not support `selection` reduction type\", s);\n\n      if (s.symbol) {\n        const e = h(l);\n        u = {\n          type: \"simple\",\n          symbol: f(s.symbol, e, r),\n          stride: e.stride\n        };\n      }\n\n      g = s && s.labelsVisible && s.labelingInfo || [];\n    }\n\n    p = F(p, c), g = F(g, c);\n    let x = 0;\n    const v = [...p.map(e => R(l, n, e, \"feature\", x++, r)), ...g.map(e => R(l, n, e, \"aggregate\", x++, r))],\n          w = k(n, t.orderBy);\n    return {\n      type: \"symbol\",\n      target: o,\n      attributes: n,\n      aggregateFields: i,\n      storage: d,\n      mesh: {\n        matcher: a,\n        labels: {\n          type: \"simple\",\n          classes: v\n        },\n        aggregateMatcher: u,\n        sortKey: w\n      }\n    };\n  }\n}\n\nfunction k(t, i) {\n  if (s(i) || !i.length) return null;\n  i.length > 1 && g.warn(`Layer rendering currently only supports ordering by 1 orderByInfo, but found ${i.length}. All but the first will be discarded`);\n  const r = i[0],\n        l = \"ascending\" === r.order ? \"asc\" : \"desc\";\n  if (r.field) return {\n    field: r.field,\n    order: l\n  };\n\n  if (r.valueExpression) {\n    return {\n      fieldIndex: M(t, {\n        type: \"expression\",\n        target: \"feature\",\n        valueExpression: r.valueExpression,\n        resultType: \"numeric\"\n      }).fieldIndex,\n      order: l\n    };\n  }\n\n  return g.error(new e(b, \"Expected to find a field or valueExpression for OrderByInfo\", r)), null;\n}\n\nfunction P(e, t) {\n  const i = {\n    mesh: !0,\n    storage: !0\n  };\n\n  for (const r of t) {\n    const {\n      name: t,\n      outStatistic: l\n    } = r,\n          {\n      statisticType: n,\n      onStatisticField: s\n    } = l;\n    let o = null,\n        a = null,\n        u = null;\n    const d = \"numeric\",\n          f = \"feature\";\n\n    if (\"onStatisticValueExpression\" in l) {\n      a = M(e, {\n        type: \"expression\",\n        target: f,\n        valueExpression: l.onStatisticValueExpression,\n        resultType: d\n      }).fieldIndex;\n    } else if (\"onStatisticNormalizationField\" in l) {\n      o = M(e, {\n        type: \"field\",\n        target: f,\n        field: s,\n        resultType: d\n      }).field, u = l.onStatisticNormalizationField;\n    } else {\n      o = M(e, {\n        type: \"field\",\n        target: f,\n        field: s,\n        resultType: d\n      }).field;\n    }\n\n    M(e, {\n      type: \"statistic\",\n      target: \"aggregate\",\n      name: t,\n      context: i,\n      inField: o,\n      inNormalizationField: u,\n      inFieldIndex: a,\n      statisticType: n\n    });\n  }\n}\n\nfunction C(e, t, i) {\n  switch (i.type) {\n    case \"dot-density\":\n      return U(e, t, i.attributes);\n\n    case \"simple\":\n    case \"class-breaks\":\n    case \"unique-value\":\n    case \"dictionary\":\n      return J(e, t, i.visualVariables);\n\n    case \"heatmap\":\n      return null;\n  }\n}\n\nfunction U(e, t, i) {\n  if (!i || !i.length) return {\n    type: \"dot-density\",\n    mapping: [],\n    target: t\n  };\n  return {\n    type: \"dot-density\",\n    mapping: i.map((i, r) => {\n      const {\n        field: l,\n        fieldIndex: n\n      } = j(e, {\n        valueExpression: i.valueExpression,\n        field: i.field,\n        resultType: \"numeric\",\n        target: t\n      });\n      return {\n        binding: r,\n        field: l,\n        fieldIndex: n\n      };\n    }),\n    target: t\n  };\n}\n\nfunction J(e, t, i) {\n  if (!i || !i.length) return {\n    type: \"visual-variable\",\n    mapping: [],\n    target: t\n  };\n  const r = {\n    storage: !0\n  },\n        l = \"numeric\";\n  return {\n    type: \"visual-variable\",\n    mapping: p(i).map(i => {\n      var n;\n      const s = u(i.type),\n            {\n        field: o,\n        fieldIndex: a\n      } = j(e, {\n        target: t,\n        valueExpression: i.valueExpression,\n        field: i.field,\n        context: r,\n        resultType: l\n      });\n\n      switch (i.type) {\n        case \"size\":\n          return \"$view.scale\" === i.valueExpression ? null : {\n            type: \"size\",\n            binding: s,\n            field: o,\n            fieldIndex: a,\n            normalizationField: j(e, {\n              target: t,\n              field: i.normalizationField,\n              context: r,\n              resultType: l\n            }).field,\n            valueRepresentation: null != (n = i.valueRepresentation) ? n : null\n          };\n\n        case \"color\":\n          return {\n            type: \"color\",\n            binding: s,\n            field: o,\n            fieldIndex: a,\n            normalizationField: j(e, {\n              target: t,\n              field: i.normalizationField,\n              context: r,\n              resultType: l\n            }).field\n          };\n\n        case \"opacity\":\n          return {\n            type: \"opacity\",\n            binding: s,\n            field: o,\n            fieldIndex: a,\n            normalizationField: j(e, {\n              target: t,\n              field: i.normalizationField,\n              context: r,\n              resultType: l\n            }).field\n          };\n\n        case \"rotation\":\n          return {\n            type: \"rotation\",\n            binding: s,\n            field: o,\n            fieldIndex: a\n          };\n      }\n    }).filter(e => e),\n    target: t\n  };\n}\n\nfunction L(e, t, i) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n  const l = o(e, {\n    indexCount: 0,\n    fields: {}\n  });\n\n  switch (i.type) {\n    case \"simple\":\n    case \"dot-density\":\n      return $(l, i, r);\n\n    case \"class-breaks\":\n      return D(l, t, i, r);\n\n    case \"unique-value\":\n      return q(l, t, i, r);\n\n    case \"dictionary\":\n      return G(l, i, r);\n  }\n}\n\nfunction $(e, t) {\n  let i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n  const r = t.getSymbols(),\n        l = r.length ? r[0] : null,\n        n = h(t);\n  return {\n    type: \"simple\",\n    symbol: f(l, n, i),\n    stride: n.stride\n  };\n}\n\nfunction D(e, t, i) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n  const l = {\n    mesh: !0,\n    use: \"renderer.field\"\n  },\n        n = i.backgroundFillSymbol,\n        {\n    field: s,\n    fieldIndex: o\n  } = j(e, {\n    target: t,\n    field: i.field,\n    valueExpression: i.valueExpression,\n    resultType: \"numeric\",\n    context: l\n  }),\n        a = i.normalizationType,\n        u = \"log\" === a ? \"esriNormalizeByLog\" : \"percent-of-total\" === a ? \"esriNormalizeByPercentOfTotal\" : \"field\" === a ? \"esriNormalizeByField\" : null,\n        d = h(i),\n        c = i.classBreakInfos.map(e => ({\n    symbol: f(e.symbol, d, r),\n    min: e.minValue,\n    max: e.maxValue\n  })).sort((e, t) => e.min - t.min);\n  return {\n    type: \"interval\",\n    attributes: e.fields,\n    field: s,\n    fieldIndex: o,\n    backgroundFillSymbol: f(n, d, r),\n    defaultSymbol: f(i.defaultSymbol, d, r),\n    intervals: c,\n    normalizationField: i.normalizationField,\n    normalizationTotal: i.normalizationTotal,\n    normalizationType: u,\n    isMaxInclusive: i.isMaxInclusive,\n    stride: d.stride\n  };\n}\n\nfunction q(t, i, r) {\n  let l = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n  const n = [],\n        s = r.backgroundFillSymbol,\n        o = {\n    target: i,\n    context: {\n      mesh: !0\n    },\n    resultType: \"string\"\n  };\n  if (r.field && \"string\" != typeof r.field) throw new e(b, \"Expected renderer.field to be a string\", r);\n  const {\n    field: a,\n    fieldIndex: u\n  } = j(t, { ...o,\n    field: r.field,\n    valueExpression: r.valueExpression\n  }),\n        d = h(r);\n\n  for (const e of r.uniqueValueInfos) n.push({\n    value: \"\" + e.value,\n    symbol: f(e.symbol, d, l)\n  });\n\n  return {\n    type: \"map\",\n    attributes: t.fields,\n    field: a,\n    fieldIndex: u,\n    field2: j(t, { ...o,\n      field: r.field2\n    }).field,\n    field3: j(t, { ...o,\n      field: r.field3\n    }).field,\n    fieldDelimiter: r.fieldDelimiter,\n    backgroundFillSymbol: f(s, d),\n    defaultSymbol: f(r.defaultSymbol, d),\n    map: n,\n    stride: d.stride\n  };\n}\n\nfunction G(e, t) {\n  let i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n  const r = h(t);\n  return {\n    type: \"dictionary\",\n    config: t.config,\n    fieldMap: t.fieldMap,\n    scaleExpression: t.scaleExpression,\n    url: t.url,\n    symbolOptions: r,\n    stride: r.stride\n  };\n}\n\nexport { P as addAggregateFields, L as createMatcherSchema, I as createSchema, h as createSymbolSchemaOptions };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/layers/features/schemaUtils.js"],"names":["e","t","clone","i","r","isSome","l","unwrap","n","isNone","s","unwrapOr","o","pt2px","a","getVVType","u","getVVFlags","d","createSymbolSchema","f","getPtMaxVVSize","c","simplifyVisualVariables","p","createClusterRenderer","m","toJSONGeometryType","y","g","getLogger","b","x","esriGeometryPoint","esriGeometryPolygon","esriGeometryPolyline","esriGeometryMultipoint","v","h","visualVariables","type","maxVVSize","supportsOutlineFills","vvFlags","stride","fill","getSymbols","backgroundFillSymbol","push","outline","style","w","labelPlacement","symbol","warn","error","some","F","I","console","debug","E","O","map","S","source","definitionExpression","fields","toJSON","gdbVersion","historicMoment","getTime","outFields","availableFields","pixelBuffer","spatialReference","timeExtent","customParameters","attributes","indexCount","processors","targets","fieldName","target","V","T","featureReduction","N","z","name","context","mesh","storage","filter","featureEffect","feature","input","filters","aggregate","params","clusterRadius","clusterPixelBuffer","Math","ceil","clusterMaxSize","aggregateFields","j","field","M","valueExpression","fieldIndex","JSON","stringify","label","Array","B","R","resultType","labelExpression","labelExpressionInfo","expression","where","index","subtypeField","renderers","mapping","classes","matcher","aggregateMatcher","labels","sortKey","Set","renderer","subtypeCode","labelingInfo","labelsVisible","sublayers","L","C","length","has","add","blurRadius","fieldOffset","P","geometryType","k","orderBy","order","outStatistic","statisticType","onStatisticField","onStatisticValueExpression","onStatisticNormalizationField","inField","inNormalizationField","inFieldIndex","U","J","binding","normalizationField","valueRepresentation","$","D","q","G","use","normalizationType","classBreakInfos","min","minValue","max","maxValue","sort","defaultSymbol","intervals","normalizationTotal","isMaxInclusive","uniqueValueInfos","value","field2","field3","fieldDelimiter","config","fieldMap","scaleExpression","url","symbolOptions","addAggregateFields","createMatcherSchema","createSchema","createSymbolSchemaOptions"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Error.js\";import t from\"../../../../core/has.js\";import{clone as i}from\"../../../../core/lang.js\";import r from\"../../../../core/Logger.js\";import{isSome as l,unwrap as n,isNone as s,unwrapOr as o}from\"../../../../core/maybe.js\";import{pt2px as a}from\"../../../../core/screenUtils.js\";import{getVVType as u}from\"../../engine/webgl/Utils.js\";import{getVVFlags as d}from\"../../engine/webgl/util/vvFlagUtils.js\";import{createSymbolSchema as f}from\"./createSymbolSchema.js\";export{createSymbolSchema}from\"./createSymbolSchema.js\";import{getPtMaxVVSize as c}from\"./support/pixelBuffering.js\";import{simplifyVisualVariables as p}from\"./support/rendererUtils.js\";import{createClusterRenderer as m}from\"../support/clusterUtils.js\";import{toJSONGeometryType as y}from\"../support/util.js\";const g=r.getLogger(\"esri.views.2d.layers.features.schemaUtils\"),b=\"ValidationError\",x={esriGeometryPoint:[\"above-right\",\"above-center\",\"above-left\",\"center-center\",\"center-left\",\"center-right\",\"below-center\",\"below-left\",\"below-right\"],esriGeometryPolygon:[\"always-horizontal\"],esriGeometryPolyline:[\"center-along\"],esriGeometryMultipoint:null};function v(e){return e}function h(e){let t=0,i=0,r=!1,n=!0,s=!0;if(l(e)){if(i=c(e),\"visualVariables\"in e&&(t=d(e.visualVariables||[]),r=\"dot-density\"===e.type),\"dictionary\"===e.type)return{maxVVSize:i,supportsOutlineFills:!1,vvFlags:t,stride:{fill:\"default\"}};if(!r){const t=e.getSymbols();\"backgroundFillSymbol\"in e&&e.backgroundFillSymbol&&t.push(e.backgroundFillSymbol);for(const e of t)if(\"cim\"===e.type&&(n=!1),\"simple-fill\"===e.type||\"picture-fill\"===e.type){const t=e.outline;t&&\"none\"!==t.style&&\"solid\"!==t.style&&(s=!1);const i=t&&\"none\"!==t.style&&\"solid\"!==t.style,r=\"simple-fill\"===e.type&&\"none\"!==e.style&&\"solid\"!==e.style;(\"picture-fill\"===e.type||r||i)&&(n=!1)}}}return r&&(s=!1),{vvFlags:t,maxVVSize:i,supportsOutlineFills:s,stride:{fill:r?\"dot-density\":n?\"simple\":\"default\"}}}function w(t,i){const r=t.labelPlacement,l=x[i];if(!t.symbol)return g.warn(\"No ILabelClass symbol specified.\"),!0;if(!l)return g.error(new e(\"mapview-labeling:unsupported-geometry-type\",`Unable to create labels for Feature Layer, ${i} is not supported`)),!0;if(!l.some((e=>e===r))){const e=l[0];r&&g.warn(`Found invalid label placement type ${r} for ${i}. Defaulting to ${e}`),t.labelPlacement=e}return!1}function F(e,t){const r=i(e);return r.some((e=>w(e,t)))?[]:r}function I(e){return t(\"esri-2d-update-debug\")&&console.debug(\"Created new schema\",E(e,!0)),E(e)}function E(e,t=!1){try{var i,r;const l=O(e,t),n={};l.map((t=>S(n,e,t)));return{source:{definitionExpression:e.definitionExpression,fields:e.fields.map((e=>e.toJSON())),gdbVersion:e.gdbVersion,historicMoment:null==(i=e.historicMoment)?void 0:i.getTime(),outFields:e.availableFields,pixelBuffer:e.pixelBuffer,spatialReference:e.spatialReference.toJSON(),timeExtent:null==(r=e.timeExtent)?void 0:r.toJSON(),customParameters:e.customParameters},attributes:{fields:{},indexCount:0},processors:l,targets:n}}catch(l){if(l.fieldName===b)return g.error(l),null;throw l}}function S(t,i,r){switch(r.target){case\"feature\":return void V(t,T(i),r);case\"aggregate\":{if(!(\"featureReduction\"in i))return;const l=i.featureReduction;if(\"selection\"===l.type)throw new e(b,\"Mapview does not support `selection` reduction type\",l);return V(t,T(i),r),void N(t,l,r)}}}function z(e,t){for(const i in t){const r=t[i];if(r.target!==e.name)continue;const l=e.attributes[i];l?(l.context.mesh=l.context.mesh||r.context.mesh,l.context.storage=l.context.storage||r.context.storage):e.attributes[i]=r}return e}function T(e){var t,i,r,l,s;return[null!=(t=null==(i=n(e.filter))?void 0:i.toJSON())?t:null,null!=(r=null==(l=n(null==(s=n(e.featureEffect))?void 0:s.filter))?void 0:l.toJSON())?r:null]}function V(e,t,i){return e.feature||(e.feature={name:\"feature\",input:\"source\",filters:t,attributes:{}}),z(e.feature,i.attributes.fields),e}function N(e,t,i){return e.aggregate||(e.aggregate={name:\"aggregate\",input:\"feature\",filters:null,attributes:{},params:{clusterRadius:a(t.clusterRadius/2),clusterPixelBuffer:64*Math.ceil(a(t.clusterMaxSize)/64),fields:i.aggregateFields}}),z(e.aggregate,i.attributes.fields),e}function j(e,t){return t.field?M(e,{...t,type:\"field\",field:t.field}):t.valueExpression?M(e,{...t,type:\"expression\",valueExpression:t.valueExpression}):{field:null,fieldIndex:null}}function M(e,t){switch(t.type){case\"expression\":{const i=v(t.valueExpression);if(!e.fields[i]){const r=e.indexCount++;e.fields[i]={...t,name:i,fieldIndex:r}}return{fieldIndex:e.fields[i].fieldIndex}}case\"label-expression\":{const i=v(JSON.stringify(t.label));if(!e.fields[i]){const r=e.indexCount++;e.fields[i]={...t,name:i,fieldIndex:r}}return{fieldIndex:e.fields[i].fieldIndex}}case\"field\":{const i=t.field;return\"aggregate\"===t.target&&e.fields[i]||(e.fields[i]={...t,name:i}),{field:i}}case\"statistic\":return e.fields[t.name]={...t},{field:t.name}}}function O(e,t=!1){const i=new Array;let r=0;return i.push(B(e,r++,t)),i}function R(e,t,i,r,l,n=!1){const s=M(t,{type:\"label-expression\",target:r,context:{mesh:!0},resultType:\"string\",label:{labelExpression:i.labelExpression,labelExpressionInfo:i.labelExpressionInfo?{expression:i.labelExpressionInfo.expression}:null,symbol:!!i.symbol,where:i.where}}),{fieldIndex:o}=s,a=h(e);return{...f(i,a,n),fieldIndex:o,target:r,index:l}}function B(t,i,r=!1){const n={indexCount:0,fields:{}},s=\"featureReduction\"in t&&t.featureReduction,o=s?\"aggregate\":\"feature\";if(\"sublayers\"in t){const i={type:\"subtype\",subtypeField:t.subtypeField,renderers:{},stride:{fill:\"default\"}},s={type:\"subtype\",mapping:{},target:\"feature\"},a={type:\"subtype\",classes:{}},u={type:\"symbol\",target:\"feature\",aggregateFields:[],attributes:n,storage:s,mesh:{matcher:i,aggregateMatcher:null,labels:a,sortKey:null}},d=new Set;let f=0;for(const{renderer:c,subtypeCode:p,labelingInfo:m,labelsVisible:y}of t.sublayers){const t=L(n,o,c,r),u=C(n,o,c),g=y&&m;if(\"visualVariables\"in c&&c.visualVariables&&c.visualVariables.length)throw new e(b,\"Visual variables are currently not supported for subtype layers\");if(\"dictionary\"===t.type)throw new e(b,\"Dictionary renderer is not supported in subtype layers\");if(\"subtype\"===t.type)throw new e(b,\"Nested subtype renderers is not supported\");if(l(u)&&\"subtype\"===u.type)throw new e(b,\"Nested subtype storage is not supported\");if(l(u)&&\"dot-density\"===u.type)throw new e(b,\"Dot density attributes are not supported in subtype layers\");if(d.has(p))throw new e(b,\"Subtype codes for sublayers must be unique\");d.add(p),i.renderers[p]=t,s.mapping[p]=u,g&&(a.classes[p]=g.map((e=>R(c,n,e,\"feature\",f++,r))))}return u}if(\"heatmap\"===t.renderer.type){const{blurRadius:e,fieldOffset:i,field:r}=t.renderer;return{type:\"heatmap\",aggregateFields:[],attributes:n,target:o,storage:null,mesh:{blurRadius:e,fieldOffset:i,field:j(n,{target:o,field:r,resultType:\"numeric\"}).field}}}{const i=[],l=\"aggregate\"===o?m(i,t.renderer,s,null):t.renderer;P(n,i);const a=L(n,o,l,r);let u=null;const d=C(n,o,l),c=y(t.geometryType);let p=t.labelsVisible&&t.labelingInfo||[],g=[];if(s){if(\"selection\"===s.type)throw new e(b,\"Mapview does not support `selection` reduction type\",s);if(s.symbol){const e=h(l);u={type:\"simple\",symbol:f(s.symbol,e,r),stride:e.stride}}g=s&&s.labelsVisible&&s.labelingInfo||[]}p=F(p,c),g=F(g,c);let x=0;const v=[...p.map((e=>R(l,n,e,\"feature\",x++,r))),...g.map((e=>R(l,n,e,\"aggregate\",x++,r)))],w=k(n,t.orderBy);return{type:\"symbol\",target:o,attributes:n,aggregateFields:i,storage:d,mesh:{matcher:a,labels:{type:\"simple\",classes:v},aggregateMatcher:u,sortKey:w}}}}function k(t,i){if(s(i)||!i.length)return null;i.length>1&&g.warn(`Layer rendering currently only supports ordering by 1 orderByInfo, but found ${i.length}. All but the first will be discarded`);const r=i[0],l=\"ascending\"===r.order?\"asc\":\"desc\";if(r.field)return{field:r.field,order:l};if(r.valueExpression){return{fieldIndex:M(t,{type:\"expression\",target:\"feature\",valueExpression:r.valueExpression,resultType:\"numeric\"}).fieldIndex,order:l}}return g.error(new e(b,\"Expected to find a field or valueExpression for OrderByInfo\",r)),null}function P(e,t){const i={mesh:!0,storage:!0};for(const r of t){const{name:t,outStatistic:l}=r,{statisticType:n,onStatisticField:s}=l;let o=null,a=null,u=null;const d=\"numeric\",f=\"feature\";if(\"onStatisticValueExpression\"in l){a=M(e,{type:\"expression\",target:f,valueExpression:l.onStatisticValueExpression,resultType:d}).fieldIndex}else if(\"onStatisticNormalizationField\"in l){o=M(e,{type:\"field\",target:f,field:s,resultType:d}).field,u=l.onStatisticNormalizationField}else{o=M(e,{type:\"field\",target:f,field:s,resultType:d}).field}M(e,{type:\"statistic\",target:\"aggregate\",name:t,context:i,inField:o,inNormalizationField:u,inFieldIndex:a,statisticType:n})}}function C(e,t,i){switch(i.type){case\"dot-density\":return U(e,t,i.attributes);case\"simple\":case\"class-breaks\":case\"unique-value\":case\"dictionary\":return J(e,t,i.visualVariables);case\"heatmap\":return null}}function U(e,t,i){if(!i||!i.length)return{type:\"dot-density\",mapping:[],target:t};return{type:\"dot-density\",mapping:i.map(((i,r)=>{const{field:l,fieldIndex:n}=j(e,{valueExpression:i.valueExpression,field:i.field,resultType:\"numeric\",target:t});return{binding:r,field:l,fieldIndex:n}})),target:t}}function J(e,t,i){if(!i||!i.length)return{type:\"visual-variable\",mapping:[],target:t};const r={storage:!0},l=\"numeric\";return{type:\"visual-variable\",mapping:p(i).map((i=>{var n;const s=u(i.type),{field:o,fieldIndex:a}=j(e,{target:t,valueExpression:i.valueExpression,field:i.field,context:r,resultType:l});switch(i.type){case\"size\":return\"$view.scale\"===i.valueExpression?null:{type:\"size\",binding:s,field:o,fieldIndex:a,normalizationField:j(e,{target:t,field:i.normalizationField,context:r,resultType:l}).field,valueRepresentation:null!=(n=i.valueRepresentation)?n:null};case\"color\":return{type:\"color\",binding:s,field:o,fieldIndex:a,normalizationField:j(e,{target:t,field:i.normalizationField,context:r,resultType:l}).field};case\"opacity\":return{type:\"opacity\",binding:s,field:o,fieldIndex:a,normalizationField:j(e,{target:t,field:i.normalizationField,context:r,resultType:l}).field};case\"rotation\":return{type:\"rotation\",binding:s,field:o,fieldIndex:a}}})).filter((e=>e)),target:t}}function L(e,t,i,r=!1){const l=o(e,{indexCount:0,fields:{}});switch(i.type){case\"simple\":case\"dot-density\":return $(l,i,r);case\"class-breaks\":return D(l,t,i,r);case\"unique-value\":return q(l,t,i,r);case\"dictionary\":return G(l,i,r)}}function $(e,t,i=!1){const r=t.getSymbols(),l=r.length?r[0]:null,n=h(t);return{type:\"simple\",symbol:f(l,n,i),stride:n.stride}}function D(e,t,i,r=!1){const l={mesh:!0,use:\"renderer.field\"},n=i.backgroundFillSymbol,{field:s,fieldIndex:o}=j(e,{target:t,field:i.field,valueExpression:i.valueExpression,resultType:\"numeric\",context:l}),a=i.normalizationType,u=\"log\"===a?\"esriNormalizeByLog\":\"percent-of-total\"===a?\"esriNormalizeByPercentOfTotal\":\"field\"===a?\"esriNormalizeByField\":null,d=h(i),c=i.classBreakInfos.map((e=>({symbol:f(e.symbol,d,r),min:e.minValue,max:e.maxValue}))).sort(((e,t)=>e.min-t.min));return{type:\"interval\",attributes:e.fields,field:s,fieldIndex:o,backgroundFillSymbol:f(n,d,r),defaultSymbol:f(i.defaultSymbol,d,r),intervals:c,normalizationField:i.normalizationField,normalizationTotal:i.normalizationTotal,normalizationType:u,isMaxInclusive:i.isMaxInclusive,stride:d.stride}}function q(t,i,r,l=!1){const n=[],s=r.backgroundFillSymbol,o={target:i,context:{mesh:!0},resultType:\"string\"};if(r.field&&\"string\"!=typeof r.field)throw new e(b,\"Expected renderer.field to be a string\",r);const{field:a,fieldIndex:u}=j(t,{...o,field:r.field,valueExpression:r.valueExpression}),d=h(r);for(const e of r.uniqueValueInfos)n.push({value:\"\"+e.value,symbol:f(e.symbol,d,l)});return{type:\"map\",attributes:t.fields,field:a,fieldIndex:u,field2:j(t,{...o,field:r.field2}).field,field3:j(t,{...o,field:r.field3}).field,fieldDelimiter:r.fieldDelimiter,backgroundFillSymbol:f(s,d),defaultSymbol:f(r.defaultSymbol,d),map:n,stride:d.stride}}function G(e,t,i=!1){const r=h(t);return{type:\"dictionary\",config:t.config,fieldMap:t.fieldMap,scaleExpression:t.scaleExpression,url:t.url,symbolOptions:r,stride:r.stride}}export{P as addAggregateFields,L as createMatcherSchema,I as createSchema,h as createSymbolSchemaOptions};\n"]},"metadata":{},"sourceType":"module"}