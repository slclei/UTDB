{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { clamp as t } from \"../../../../../core/mathUtils.js\";\nimport { TILE_SIZE as s } from \"../definitions.js\";\nimport { StaticBitSet as e } from \"../../../layers/features/support/StaticBitSet.js\";\nconst i = 2,\n      o = 1,\n      h = 0,\n      r = 1,\n      n = 2;\n\nclass c {\n  constructor(t, s) {\n    this.width = t, this.height = s;\n    const i = Math.ceil(t / o),\n          h = Math.ceil(s / o);\n    this._cols = i, this._rows = h, this._cells = e.create(i * h);\n  }\n\n  insertMetrics(t) {\n    const s = this._hasCollision(t);\n\n    return s === h && this._markMetrics(t), s;\n  }\n\n  getCellId(t, s) {\n    return t + s * this._cols;\n  }\n\n  has(t) {\n    return this._cells.has(t);\n  }\n\n  hasRange(t, s) {\n    return this._cells.hasRange(t, s);\n  }\n\n  set(t) {\n    this._cells.set(t);\n  }\n\n  setRange(t, s) {\n    this._cells.setRange(t, s);\n  }\n\n  _hasCollision(t) {\n    const s = t.id;\n    let e = 0,\n        o = 0;\n    t.save();\n\n    do {\n      const s = t.boundsCount;\n      e += s;\n\n      for (let e = 0; e < s; e++) {\n        const s = t.boundsComputedAnchorX(e),\n              h = t.boundsComputedAnchorY(e),\n              c = t.boundsWidth(e) + i,\n              l = t.boundsHeight(e) + i;\n\n        switch (this._collide(s, h, c, l)) {\n          case n:\n            return n;\n\n          case r:\n            o++;\n        }\n      }\n    } while (t.peekId() === s && t.next());\n\n    return t.restore(), e === o ? r : h;\n  }\n\n  _collide(s, e, i, c) {\n    const l = s - i / 2,\n          _ = e - c / 2,\n          a = l + i,\n          u = _ + c;\n\n    if (a < 0 || u < 0 || l > this.width || _ > this.height) return r;\n    const d = t(Math.floor(l / o), 0, this._cols),\n          g = t(Math.floor(_ / o), 0, this._rows),\n          f = t(Math.ceil(a / o), 0, this._cols),\n          m = t(Math.ceil(u / o), 0, this._rows);\n\n    for (let t = g; t <= m; t++) for (let s = d; s <= f; s++) {\n      const e = this.getCellId(s, t);\n      if (this.has(e)) return n;\n    }\n\n    return h;\n  }\n\n  _mark(s, e, i, h) {\n    const r = s - i / 2,\n          n = e - h / 2,\n          c = r + i,\n          l = n + h,\n          _ = t(Math.floor(r / o), 0, this._cols),\n          a = t(Math.floor(n / o), 0, this._rows),\n          u = t(Math.ceil(c / o), 0, this._cols),\n          d = t(Math.ceil(l / o), 0, this._rows);\n\n    for (let t = a; t <= d; t++) for (let s = _; s <= u; s++) {\n      const e = this.getCellId(s, t);\n      this.set(e);\n    }\n\n    return !1;\n  }\n\n  _markMetrics(t) {\n    const s = t.id;\n\n    do {\n      const s = t.boundsCount;\n\n      for (let e = 0; e < s; e++) {\n        const s = t.boundsComputedAnchorX(e),\n              o = t.boundsComputedAnchorY(e),\n              h = t.boundsWidth(e) + i,\n              r = t.boundsHeight(e) + i;\n\n        this._mark(s, o, h, r);\n      }\n    } while (t.peekId() === s && t.next());\n  }\n\n}\n\nclass l {\n  constructor(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    this._bucketSize = t, this._rowsLength = s / t, this._colsLength = s / t, this._elementsPerBucket = e, this._grid = this._initGrid();\n  }\n\n  checkOverlap(t, s) {\n    const e = Math.floor(t / this._bucketSize),\n          i = Math.floor(s / this._bucketSize);\n    return e < 0 || e >= this._rowsLength || i < 0 || i >= this._colsLength || this._grid[i * this._colsLength + e] >= this._elementsPerBucket;\n  }\n\n  markUsed(t, s) {\n    const e = Math.floor(t / this._bucketSize),\n          i = Math.floor(s / this._bucketSize);\n    this._grid[i * this._colsLength + e] += 1;\n  }\n\n  reset() {\n    this._grid = this._initGrid();\n  }\n\n  _initGrid() {\n    return new Uint8Array(this._rowsLength * this._colsLength);\n  }\n\n}\n\nexport { c as CollisionBitsetGrid, l as CollisionGrid, n as HAS_COLLISION, h as NONE, r as OUTSIDE_EXTENT };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/webgl/collisions/CollisionGrid.js"],"names":["clamp","t","TILE_SIZE","s","StaticBitSet","e","i","o","h","r","n","c","constructor","width","height","Math","ceil","_cols","_rows","_cells","create","insertMetrics","_hasCollision","_markMetrics","getCellId","has","hasRange","set","setRange","id","save","boundsCount","boundsComputedAnchorX","boundsComputedAnchorY","boundsWidth","l","boundsHeight","_collide","peekId","next","restore","_","a","u","d","floor","g","f","m","_mark","_bucketSize","_rowsLength","_colsLength","_elementsPerBucket","_grid","_initGrid","checkOverlap","markUsed","reset","Uint8Array","CollisionBitsetGrid","CollisionGrid","HAS_COLLISION","NONE","OUTSIDE_EXTENT"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{clamp as t}from\"../../../../../core/mathUtils.js\";import{TILE_SIZE as s}from\"../definitions.js\";import{StaticBitSet as e}from\"../../../layers/features/support/StaticBitSet.js\";const i=2,o=1,h=0,r=1,n=2;class c{constructor(t,s){this.width=t,this.height=s;const i=Math.ceil(t/o),h=Math.ceil(s/o);this._cols=i,this._rows=h,this._cells=e.create(i*h)}insertMetrics(t){const s=this._hasCollision(t);return s===h&&this._markMetrics(t),s}getCellId(t,s){return t+s*this._cols}has(t){return this._cells.has(t)}hasRange(t,s){return this._cells.hasRange(t,s)}set(t){this._cells.set(t)}setRange(t,s){this._cells.setRange(t,s)}_hasCollision(t){const s=t.id;let e=0,o=0;t.save();do{const s=t.boundsCount;e+=s;for(let e=0;e<s;e++){const s=t.boundsComputedAnchorX(e),h=t.boundsComputedAnchorY(e),c=t.boundsWidth(e)+i,l=t.boundsHeight(e)+i;switch(this._collide(s,h,c,l)){case n:return n;case r:o++}}}while(t.peekId()===s&&t.next());return t.restore(),e===o?r:h}_collide(s,e,i,c){const l=s-i/2,_=e-c/2,a=l+i,u=_+c;if(a<0||u<0||l>this.width||_>this.height)return r;const d=t(Math.floor(l/o),0,this._cols),g=t(Math.floor(_/o),0,this._rows),f=t(Math.ceil(a/o),0,this._cols),m=t(Math.ceil(u/o),0,this._rows);for(let t=g;t<=m;t++)for(let s=d;s<=f;s++){const e=this.getCellId(s,t);if(this.has(e))return n}return h}_mark(s,e,i,h){const r=s-i/2,n=e-h/2,c=r+i,l=n+h,_=t(Math.floor(r/o),0,this._cols),a=t(Math.floor(n/o),0,this._rows),u=t(Math.ceil(c/o),0,this._cols),d=t(Math.ceil(l/o),0,this._rows);for(let t=a;t<=d;t++)for(let s=_;s<=u;s++){const e=this.getCellId(s,t);this.set(e)}return!1}_markMetrics(t){const s=t.id;do{const s=t.boundsCount;for(let e=0;e<s;e++){const s=t.boundsComputedAnchorX(e),o=t.boundsComputedAnchorY(e),h=t.boundsWidth(e)+i,r=t.boundsHeight(e)+i;this._mark(s,o,h,r)}}while(t.peekId()===s&&t.next())}}class l{constructor(t,e=2){this._bucketSize=t,this._rowsLength=s/t,this._colsLength=s/t,this._elementsPerBucket=e,this._grid=this._initGrid()}checkOverlap(t,s){const e=Math.floor(t/this._bucketSize),i=Math.floor(s/this._bucketSize);return e<0||e>=this._rowsLength||i<0||i>=this._colsLength||this._grid[i*this._colsLength+e]>=this._elementsPerBucket}markUsed(t,s){const e=Math.floor(t/this._bucketSize),i=Math.floor(s/this._bucketSize);this._grid[i*this._colsLength+e]+=1}reset(){this._grid=this._initGrid()}_initGrid(){return new Uint8Array(this._rowsLength*this._colsLength)}}export{c as CollisionBitsetGrid,l as CollisionGrid,n as HAS_COLLISION,h as NONE,r as OUTSIDE_EXTENT};\n"]},"metadata":{},"sourceType":"module"}