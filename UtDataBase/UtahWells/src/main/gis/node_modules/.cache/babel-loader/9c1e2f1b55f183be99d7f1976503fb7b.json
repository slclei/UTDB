{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../../../../../core/Error.js\";\nimport t from \"../../../../../core/Logger.js\";\nimport { isNone as r, isSome as s } from \"../../../../../core/maybe.js\";\nimport i from \"../../../../../core/pbf.js\";\nimport { convertToGeometry as n, unquantizeOptimizedGeometry as a } from \"../../../../../layers/graphics/featureConversionUtils.js\";\nimport { OptimizedFeature as h } from \"../../../../../layers/graphics/OptimizedFeature.js\";\nimport o from \"../../../../../layers/graphics/OptimizedGeometry.js\";\nimport { FeatureSetReader as d } from \"./FeatureSetReader.js\";\nimport { parseHeader as u } from \"./FeatureSetReaderPBFHeader.js\";\nconst c = t.getLogger(\"esri.view.2d.layers.features.support.FeatureSetReaderPBF\"),\n      g = !0,\n      l = 268435455,\n      _ = 128,\n      f = 128e3,\n      y = {\n  small: {\n    delta: new Int32Array(_),\n    decoded: new Int32Array(_)\n  },\n  large: {\n    delta: new Int32Array(f),\n    decoded: new Int32Array(f)\n  }\n};\n\nfunction I(e) {\n  return e <= y.small.delta.length ? y.small : (e <= y.large.delta.length || (y.large.delta = new Int32Array(Math.round(1.25 * e)), y.large.decoded = new Int32Array(Math.round(1.25 * e))), y.large);\n}\n\nfunction p(e) {\n  return e.toLowerCase().trim();\n}\n\nfunction m(t) {\n  try {\n    const e = 2,\n          r = new i(new Uint8Array(t), new DataView(t));\n\n    for (; r.next();) {\n      if (r.tag() === e) return x(r.getMessage());\n      r.skip();\n    }\n  } catch (r) {\n    const t = new e(\"query:parsing-pbf\", \"Error while parsing FeatureSet PBF payload\", {\n      error: r\n    });\n    c.error(t);\n  }\n\n  return null;\n}\n\nfunction x(e) {\n  const t = 1;\n\n  for (; e.next();) {\n    if (e.tag() === t) return e.getMessage();\n    e.skip();\n  }\n\n  return null;\n}\n\nfunction S(e) {\n  const t = 1,\n        r = 2,\n        s = 3,\n        i = 4,\n        n = 5,\n        a = 6,\n        h = 7,\n        o = 8,\n        d = 9,\n        u = e.getLength(),\n        c = e.pos() + u;\n\n  for (; e.pos() < c && e.next();) switch (e.tag()) {\n    case t:\n      return e.getString();\n\n    case r:\n      return e.getFloat();\n\n    case s:\n      return e.getDouble();\n\n    case i:\n      return e.getSInt32();\n\n    case n:\n      return e.getUInt32();\n\n    case a:\n      return e.getInt64();\n\n    case h:\n      return e.getUInt64();\n\n    case o:\n      return e.getSInt64();\n\n    case d:\n      return e.getBool();\n\n    default:\n      return e.skip(), null;\n  }\n\n  return null;\n}\n\nfunction F(e, t, r, s, i, n) {\n  return .5 * Math.abs(e * s + r * n + i * t - e * n - r * t - i * s);\n}\n\nfunction G(e, t, r, s) {\n  return 0 === e * s - r * t && e * r + t * s > 0;\n}\n\nclass v extends d {\n  constructor(e, t, r, s) {\n    super(e, s), this._hasNext = !1, this._isPoints = !1, this._featureIndex = -1, this._featureOffset = 0, this._cache = {\n      area: 0,\n      unquantGeometry: void 0,\n      geometry: void 0,\n      centroid: void 0,\n      legacyFeature: void 0,\n      optFeature: void 0\n    }, this._geometryType = s.geometryType, this._reader = t, this._header = r, this._hasNext = r.hasFeatures, this._isPoints = \"esriGeometryPoint\" === s.geometryType;\n  }\n\n  static fromBuffer(e, t) {\n    let r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n    const s = t.geometryType,\n          i = m(e),\n          n = u(i, \"esriGeometryPoint\" === s, r),\n          a = d.createInstance();\n    return new v(a, i, n, t);\n  }\n\n  get geometryType() {\n    return this._geometryType;\n  }\n\n  get size() {\n    return this._header.featureCount;\n  }\n\n  get hasZ() {\n    return !1;\n  }\n\n  get hasM() {\n    return !1;\n  }\n\n  get stride() {\n    return 2 + (this.hasZ ? 1 : 0) + (this.hasM ? 1 : 0);\n  }\n\n  get hasFeatures() {\n    return this._header.hasFeatures;\n  }\n\n  get hasNext() {\n    return this._hasNext;\n  }\n\n  get exceededTransferLimit() {\n    return this._header.exceededTransferLimit;\n  }\n\n  hasField(e) {\n    return this._header.hasField(e) || this._header.hasField(p(e));\n  }\n\n  getFieldNames() {\n    return this._header.fields.map(e => e.fieldName);\n  }\n\n  getSize() {\n    return this.size;\n  }\n\n  getQuantizationTransform() {\n    return this._header.transform;\n  }\n\n  getCursor() {\n    return this.copy();\n  }\n\n  getIndex() {\n    return this._featureIndex;\n  }\n\n  setIndex(e) {\n    this._cache.area = 0, this._cache.unquantGeometry = void 0, this._cache.geometry = void 0, this._cache.centroid = void 0, this._cache.legacyFeature = void 0, this._cache.optFeature = void 0, this._featureIndex = e;\n  }\n\n  getAttributeHash() {\n    let e = \"\";\n    return this._header.fields.forEach(_ref => {\n      let {\n        index: t\n      } = _ref;\n      e += this._readAttributeAtIndex(t) + \".\";\n    }), e;\n  }\n\n  getObjectId() {\n    return this._readAttributeAtIndex(this._header.objectIdFieldIndex);\n  }\n\n  getDisplayId() {\n    return this._header.displayIds[this._featureIndex];\n  }\n\n  setDisplayId(e) {\n    this._header.displayIds[this._featureIndex] = e;\n  }\n\n  getGroupId() {\n    return this._header.groupIds[this._featureIndex];\n  }\n\n  setGroupId(e) {\n    this._header.groupIds[this._featureIndex] = e;\n  }\n\n  readLegacyFeature() {\n    if (void 0 === this._cache.legacyFeature) {\n      var e;\n      const t = this.readCentroid(),\n            r = {\n        attributes: this.readAttributes(),\n        geometry: this._isPoints ? this.readLegacyPointGeometry() : this.readLegacyGeometry(),\n        centroid: null != (e = t && {\n          x: t.coords[0],\n          y: t.coords[1]\n        }) ? e : null\n      };\n      return this._cache.legacyFeature = r, r;\n    }\n\n    return this._cache.legacyFeature;\n  }\n\n  readOptimizedFeature() {\n    if (void 0 === this._cache.optFeature) {\n      const e = new h(this.readGeometry(), this.readAttributes(), this.readCentroid());\n      return e.objectId = this.getObjectId(), e.displayId = this.getDisplayId(), this._cache.optFeature = e, e;\n    }\n\n    return this._cache.optFeature;\n  }\n\n  getXHydrated() {\n    const e = this._header.centroid[2 * this._featureIndex],\n          t = this.getQuantizationTransform();\n    return r(t) ? e : e * t.scale[0] + t.translate[0];\n  }\n\n  getYHydrated() {\n    const e = this._header.centroid[2 * this._featureIndex + 1],\n          t = this.getQuantizationTransform();\n    return r(t) ? e : t.translate[1] - e * t.scale[1];\n  }\n\n  getX() {\n    return this._header.centroid[2 * this._featureIndex] * this._sx + this._tx;\n  }\n\n  getY() {\n    return this._header.centroid[2 * this._featureIndex + 1] * this._sy + this._ty;\n  }\n\n  readLegacyPointGeometry() {\n    return {\n      x: this.getX(),\n      y: this.getY()\n    };\n  }\n\n  readLegacyGeometry(e) {\n    const t = this.readGeometry(e);\n    return n(t, this.geometryType, !1, !1);\n  }\n\n  readLegacyCentroid() {\n    const e = this.readCentroid();\n    if (!e) return null;\n    const [t, r] = e.coords;\n    return {\n      x: t,\n      y: r\n    };\n  }\n\n  readGeometryArea() {\n    return this._cache.area || this.readGeometry(!0), this._cache.area;\n  }\n\n  readUnquantizedGeometry() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;\n\n    if (void 0 === this._cache.unquantGeometry) {\n      const t = this.readGeometry(e);\n      if (!t) return this._cache.unquantGeometry = null, null;\n      const r = I(t.coords.length).decoded,\n            s = t.clone(r),\n            i = s.coords;\n      let n = 0;\n\n      for (const e of s.lengths) {\n        for (let t = 1; t < e; t++) {\n          const e = 2 * (n + t),\n                r = 2 * (n + t - 1);\n          i[e] += i[r], i[e + 1] += i[r + 1];\n        }\n\n        n += e;\n      }\n\n      return this._cache.unquantGeometry = s, s;\n    }\n\n    return this._cache.unquantGeometry;\n  }\n\n  readHydratedGeometry() {\n    if (this._isPoints) {\n      if (this._header.centroid[2 * this._featureIndex] === l) return null;\n      const e = this.getXHydrated(),\n            t = this.getYHydrated();\n      return new o([], [e, t]);\n    }\n\n    const e = this.readGeometry();\n    if (!e) return null;\n    const t = e.clone(),\n          r = this.getQuantizationTransform();\n    return s(r) && a(t, t, this.hasZ, this.hasM, r), t;\n  }\n\n  readGeometry() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;\n\n    if (void 0 === this._cache.geometry) {\n      let r = null;\n\n      if (this._isPoints) {\n        if (this._header.centroid[2 * this._featureIndex] === l) return null;\n        const e = this.getX(),\n              t = this.getY();\n        r = new o([], [e, t]);\n      } else {\n        const s = this._header.offsets.geometry[this._featureIndex],\n              i = this._reader;\n        if (0 === s) return null;\n        i.move(s);\n\n        try {\n          r = e ? this._parseGeometryForDisplay(i) : this._parseGeometry(i);\n        } catch (t) {\n          return console.error(\"Failed to parse geometry!\", t), null;\n        }\n      }\n\n      return this._cache.geometry = r, r;\n    }\n\n    return this._cache.geometry;\n  }\n\n  readCentroid() {\n    if (void 0 === this._cache.centroid) {\n      let e = null;\n      const t = this._header.centroid[2 * this._featureIndex] + this._tx,\n            r = this._header.centroid[2 * this._featureIndex + 1] + this._ty;\n      return t === l ? (e = this._computeCentroid(), e && (this._header.centroid[2 * this._featureIndex] = e.coords[0] - this._tx, this._header.centroid[2 * this._featureIndex + 1] = e.coords[1] - this._ty)) : e = new o([], [t, r]), this._cache.centroid = e, e;\n    }\n\n    return this._cache.centroid;\n  }\n\n  copy() {\n    const e = this._reader.clone(),\n          t = new v(this.instance, e, this._header, this.fullSchema());\n\n    return this.copyInto(t), t;\n  }\n\n  next() {\n    for (this._cache.area = 0, this._cache.unquantGeometry = void 0, this._cache.geometry = void 0, this._cache.centroid = void 0, this._cache.legacyFeature = void 0, this._cache.optFeature = void 0; ++this._featureIndex < this.size && !this._getExists(););\n\n    return this._featureIndex < this.size;\n  }\n\n  _readAttribute(e, t) {\n    const r = this._header.hasField(e) ? e : p(e),\n          s = this._header.getFieldIndex(r);\n\n    if (null == s) return;\n\n    const i = this._readAttributeAtIndex(s);\n\n    if (!t) return i;\n    if (null == i) return i;\n    return this._header.isDateField(r) ? new Date(i) : i;\n  }\n\n  _readAttributes() {\n    const e = {};\n    return this._header.fields.forEach(_ref2 => {\n      let {\n        fieldName: t,\n        index: r\n      } = _ref2;\n      e[t] = this._readAttributeAtIndex(r);\n    }), e;\n  }\n\n  copyInto(e) {\n    super.copyInto(e), e._featureIndex = this._featureIndex, e._featureOffset = this._featureOffset, e._hasNext = this._hasNext;\n  }\n\n  _readAttributeAtIndex(e) {\n    const t = this._header.offsets.attributes[this._featureIndex * this._header.fieldCount + e],\n          r = this._reader;\n    return r.move(t), S(r);\n  }\n\n  _parseGeometry(e) {\n    const t = 2,\n          r = 3,\n          s = e.getLength(),\n          i = e.pos() + s,\n          n = [],\n          a = [];\n\n    for (; e.pos() < i && e.next();) switch (e.tag()) {\n      case t:\n        {\n          const t = e.getUInt32(),\n                r = e.pos() + t;\n\n          for (; e.pos() < r;) a.push(e.getUInt32());\n\n          break;\n        }\n\n      case r:\n        {\n          const t = e.getUInt32(),\n                r = e.pos() + t;\n\n          for (n.push(e.getSInt32() + this._tx), n.push(e.getSInt32() + this._ty), this.hasZ && e.getSInt32(), this.hasM && e.getSInt32(); e.pos() < r;) n.push(e.getSInt32()), n.push(e.getSInt32()), this.hasZ && e.getSInt32(), this.hasM && e.getSInt32();\n\n          break;\n        }\n\n      default:\n        e.skip();\n    }\n\n    return new o(a, n);\n  }\n\n  _parseGeometryForDisplay(e) {\n    const t = 2,\n          r = 3,\n          s = e.getLength(),\n          i = e.pos() + s,\n          n = [],\n          a = [];\n    let h = 0,\n        d = 0,\n        u = null,\n        c = 0;\n    const l = \"esriGeometryPolygon\" === this.geometryType;\n\n    for (; e.pos() < i && e.next();) switch (e.tag()) {\n      case t:\n        {\n          const t = e.getUInt32(),\n                r = e.pos() + t;\n\n          for (; e.pos() < r;) {\n            const t = e.getUInt32();\n            n.push(t), h += t;\n          }\n\n          u = I(2 * h).delta;\n          break;\n        }\n\n      case r:\n        {\n          e.getUInt32();\n          const t = 2 + (this.hasZ ? 1 : 0) + (this.hasM ? 1 : 0);\n\n          for (const r of n) if (d + t * r > u.length) for (let t = 0; t < r; t++) e.getSInt32(), e.getSInt32(), this.hasZ && e.getSInt32(), this.hasM && e.getSInt32();else if (l && g) {\n            const t = this.getAreaSimplificationThreshold(r, this._header.vertexCount);\n            let s = 2,\n                i = 1;\n            const n = !1;\n            let h = e.getSInt32(),\n                o = e.getSInt32();\n            u[d++] = h, u[d++] = o, this.hasZ && e.getSInt32(), this.hasM && e.getSInt32();\n            let g = e.getSInt32(),\n                l = e.getSInt32();\n\n            for (this.hasZ && e.getSInt32(), this.hasM && e.getSInt32(); s < r;) {\n              let r = e.getSInt32(),\n                  n = e.getSInt32();\n              this.hasZ && e.getSInt32(), this.hasM && e.getSInt32();\n\n              const a = h + g,\n                    _ = o + l;\n\n              F(h, o, a, _, a + r, _ + n) >= t ? (c += -.5 * (a - h) * (_ + o), i > 1 && G(u[d - 2], u[d - 1], g, l) ? (u[d - 2] += g, u[d - 1] += l) : (u[d++] = g, u[d++] = l, i++), h = a, o = _) : (r += g, n += l), g = r, l = n, s++;\n            }\n\n            i < 3 || n ? d -= 2 * i : (c += -.5 * (h + g - h) * (o + l + o), G(u[d - 2], u[d - 1], g, l) ? (u[d - 2] += g, u[d - 1] += l, a.push(i)) : (u[d++] = g, u[d++] = l, a.push(++i)));\n          } else {\n            let t = 0,\n                s = e.getSInt32(),\n                i = e.getSInt32();\n            this.hasZ && e.getSInt32(), this.hasM && e.getSInt32(), u[d++] = s, u[d++] = i, t += 1;\n\n            for (let n = 1; n < r; n++) {\n              const r = e.getSInt32(),\n                    a = e.getSInt32(),\n                    h = s + r,\n                    o = i + a;\n              c += -.5 * (h - s) * (o + i), this.hasZ && e.getSInt32(), this.hasM && e.getSInt32(), n > 2 && G(u[d - 2], u[d - 1], r, a) ? (u[d - 2] += r, u[d - 1] += a) : (u[d++] = r, u[d++] = a, t += 1), s = h, i = o;\n            }\n\n            a.push(t);\n          }\n\n          break;\n        }\n\n      default:\n        e.skip();\n    }\n\n    if (this._cache.area = c, !a.length) return null;\n\n    if (this._tx || this._ty) {\n      let e = 0;\n\n      for (const t of a) u[2 * e] += this._tx, u[2 * e + 1] += this._ty, e += t;\n    }\n\n    return new o(a, u);\n  }\n\n}\n\nexport { v as FeatureSetReaderPBF };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/layers/features/support/FeatureSetReaderPBF.js"],"names":["e","t","isNone","r","isSome","s","i","convertToGeometry","n","unquantizeOptimizedGeometry","a","OptimizedFeature","h","o","FeatureSetReader","d","parseHeader","u","c","getLogger","g","l","_","f","y","small","delta","Int32Array","decoded","large","I","length","Math","round","p","toLowerCase","trim","m","Uint8Array","DataView","next","tag","x","getMessage","skip","error","S","getLength","pos","getString","getFloat","getDouble","getSInt32","getUInt32","getInt64","getUInt64","getSInt64","getBool","F","abs","G","v","constructor","_hasNext","_isPoints","_featureIndex","_featureOffset","_cache","area","unquantGeometry","geometry","centroid","legacyFeature","optFeature","_geometryType","geometryType","_reader","_header","hasFeatures","fromBuffer","createInstance","size","featureCount","hasZ","hasM","stride","hasNext","exceededTransferLimit","hasField","getFieldNames","fields","map","fieldName","getSize","getQuantizationTransform","transform","getCursor","copy","getIndex","setIndex","getAttributeHash","forEach","index","_readAttributeAtIndex","getObjectId","objectIdFieldIndex","getDisplayId","displayIds","setDisplayId","getGroupId","groupIds","setGroupId","readLegacyFeature","readCentroid","attributes","readAttributes","readLegacyPointGeometry","readLegacyGeometry","coords","readOptimizedFeature","readGeometry","objectId","displayId","getXHydrated","scale","translate","getYHydrated","getX","_sx","_tx","getY","_sy","_ty","readLegacyCentroid","readGeometryArea","readUnquantizedGeometry","clone","lengths","readHydratedGeometry","offsets","move","_parseGeometryForDisplay","_parseGeometry","console","_computeCentroid","instance","fullSchema","copyInto","_getExists","_readAttribute","getFieldIndex","isDateField","Date","_readAttributes","fieldCount","push","getAreaSimplificationThreshold","vertexCount","FeatureSetReaderPBF"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../core/Error.js\";import t from\"../../../../../core/Logger.js\";import{isNone as r,isSome as s}from\"../../../../../core/maybe.js\";import i from\"../../../../../core/pbf.js\";import{convertToGeometry as n,unquantizeOptimizedGeometry as a}from\"../../../../../layers/graphics/featureConversionUtils.js\";import{OptimizedFeature as h}from\"../../../../../layers/graphics/OptimizedFeature.js\";import o from\"../../../../../layers/graphics/OptimizedGeometry.js\";import{FeatureSetReader as d}from\"./FeatureSetReader.js\";import{parseHeader as u}from\"./FeatureSetReaderPBFHeader.js\";const c=t.getLogger(\"esri.view.2d.layers.features.support.FeatureSetReaderPBF\"),g=!0,l=268435455,_=128,f=128e3,y={small:{delta:new Int32Array(_),decoded:new Int32Array(_)},large:{delta:new Int32Array(f),decoded:new Int32Array(f)}};function I(e){return e<=y.small.delta.length?y.small:(e<=y.large.delta.length||(y.large.delta=new Int32Array(Math.round(1.25*e)),y.large.decoded=new Int32Array(Math.round(1.25*e))),y.large)}function p(e){return e.toLowerCase().trim()}function m(t){try{const e=2,r=new i(new Uint8Array(t),new DataView(t));for(;r.next();){if(r.tag()===e)return x(r.getMessage());r.skip()}}catch(r){const t=new e(\"query:parsing-pbf\",\"Error while parsing FeatureSet PBF payload\",{error:r});c.error(t)}return null}function x(e){const t=1;for(;e.next();){if(e.tag()===t)return e.getMessage();e.skip()}return null}function S(e){const t=1,r=2,s=3,i=4,n=5,a=6,h=7,o=8,d=9,u=e.getLength(),c=e.pos()+u;for(;e.pos()<c&&e.next();)switch(e.tag()){case t:return e.getString();case r:return e.getFloat();case s:return e.getDouble();case i:return e.getSInt32();case n:return e.getUInt32();case a:return e.getInt64();case h:return e.getUInt64();case o:return e.getSInt64();case d:return e.getBool();default:return e.skip(),null}return null}function F(e,t,r,s,i,n){return.5*Math.abs(e*s+r*n+i*t-e*n-r*t-i*s)}function G(e,t,r,s){return 0===e*s-r*t&&e*r+t*s>0}class v extends d{constructor(e,t,r,s){super(e,s),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._geometryType=s.geometryType,this._reader=t,this._header=r,this._hasNext=r.hasFeatures,this._isPoints=\"esriGeometryPoint\"===s.geometryType}static fromBuffer(e,t,r=!1){const s=t.geometryType,i=m(e),n=u(i,\"esriGeometryPoint\"===s,r),a=d.createInstance();return new v(a,i,n,t)}get geometryType(){return this._geometryType}get size(){return this._header.featureCount}get hasZ(){return!1}get hasM(){return!1}get stride(){return 2+(this.hasZ?1:0)+(this.hasM?1:0)}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}hasField(e){return this._header.hasField(e)||this._header.hasField(p(e))}getFieldNames(){return this._header.fields.map((e=>e.fieldName))}getSize(){return this.size}getQuantizationTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e=\"\";return this._header.fields.forEach((({index:t})=>{e+=this._readAttributeAtIndex(t)+\".\"})),e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}getGroupId(){return this._header.groupIds[this._featureIndex]}setGroupId(e){this._header.groupIds[this._featureIndex]=e}readLegacyFeature(){if(void 0===this._cache.legacyFeature){var e;const t=this.readCentroid(),r={attributes:this.readAttributes(),geometry:this._isPoints?this.readLegacyPointGeometry():this.readLegacyGeometry(),centroid:null!=(e=t&&{x:t.coords[0],y:t.coords[1]})?e:null};return this._cache.legacyFeature=r,r}return this._cache.legacyFeature}readOptimizedFeature(){if(void 0===this._cache.optFeature){const e=new h(this.readGeometry(),this.readAttributes(),this.readCentroid());return e.objectId=this.getObjectId(),e.displayId=this.getDisplayId(),this._cache.optFeature=e,e}return this._cache.optFeature}getXHydrated(){const e=this._header.centroid[2*this._featureIndex],t=this.getQuantizationTransform();return r(t)?e:e*t.scale[0]+t.translate[0]}getYHydrated(){const e=this._header.centroid[2*this._featureIndex+1],t=this.getQuantizationTransform();return r(t)?e:t.translate[1]-e*t.scale[1]}getX(){return this._header.centroid[2*this._featureIndex]*this._sx+this._tx}getY(){return this._header.centroid[2*this._featureIndex+1]*this._sy+this._ty}readLegacyPointGeometry(){return{x:this.getX(),y:this.getY()}}readLegacyGeometry(e){const t=this.readGeometry(e);return n(t,this.geometryType,!1,!1)}readLegacyCentroid(){const e=this.readCentroid();if(!e)return null;const[t,r]=e.coords;return{x:t,y:r}}readGeometryArea(){return this._cache.area||this.readGeometry(!0),this._cache.area}readUnquantizedGeometry(e=!1){if(void 0===this._cache.unquantGeometry){const t=this.readGeometry(e);if(!t)return this._cache.unquantGeometry=null,null;const r=I(t.coords.length).decoded,s=t.clone(r),i=s.coords;let n=0;for(const e of s.lengths){for(let t=1;t<e;t++){const e=2*(n+t),r=2*(n+t-1);i[e]+=i[r],i[e+1]+=i[r+1]}n+=e}return this._cache.unquantGeometry=s,s}return this._cache.unquantGeometry}readHydratedGeometry(){if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===l)return null;const e=this.getXHydrated(),t=this.getYHydrated();return new o([],[e,t])}const e=this.readGeometry();if(!e)return null;const t=e.clone(),r=this.getQuantizationTransform();return s(r)&&a(t,t,this.hasZ,this.hasM,r),t}readGeometry(e=!1){if(void 0===this._cache.geometry){let r=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===l)return null;const e=this.getX(),t=this.getY();r=new o([],[e,t])}else{const s=this._header.offsets.geometry[this._featureIndex],i=this._reader;if(0===s)return null;i.move(s);try{r=e?this._parseGeometryForDisplay(i):this._parseGeometry(i)}catch(t){return console.error(\"Failed to parse geometry!\",t),null}}return this._cache.geometry=r,r}return this._cache.geometry}readCentroid(){if(void 0===this._cache.centroid){let e=null;const t=this._header.centroid[2*this._featureIndex]+this._tx,r=this._header.centroid[2*this._featureIndex+1]+this._ty;return t===l?(e=this._computeCentroid(),e&&(this._header.centroid[2*this._featureIndex]=e.coords[0]-this._tx,this._header.centroid[2*this._featureIndex+1]=e.coords[1]-this._ty)):e=new o([],[t,r]),this._cache.centroid=e,e}return this._cache.centroid}copy(){const e=this._reader.clone(),t=new v(this.instance,e,this._header,this.fullSchema());return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this.size&&!this._getExists(););return this._featureIndex<this.size}_readAttribute(e,t){const r=this._header.hasField(e)?e:p(e),s=this._header.getFieldIndex(r);if(null==s)return;const i=this._readAttributeAtIndex(s);if(!t)return i;if(null==i)return i;return this._header.isDateField(r)?new Date(i):i}_readAttributes(){const e={};return this._header.fields.forEach((({fieldName:t,index:r})=>{e[t]=this._readAttributeAtIndex(r)})),e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext}_readAttributeAtIndex(e){const t=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],r=this._reader;return r.move(t),S(r)}_parseGeometry(e){const t=2,r=3,s=e.getLength(),i=e.pos()+s,n=[],a=[];for(;e.pos()<i&&e.next();)switch(e.tag()){case t:{const t=e.getUInt32(),r=e.pos()+t;for(;e.pos()<r;)a.push(e.getUInt32());break}case r:{const t=e.getUInt32(),r=e.pos()+t;for(n.push(e.getSInt32()+this._tx),n.push(e.getSInt32()+this._ty),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();e.pos()<r;)n.push(e.getSInt32()),n.push(e.getSInt32()),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();break}default:e.skip()}return new o(a,n)}_parseGeometryForDisplay(e){const t=2,r=3,s=e.getLength(),i=e.pos()+s,n=[],a=[];let h=0,d=0,u=null,c=0;const l=\"esriGeometryPolygon\"===this.geometryType;for(;e.pos()<i&&e.next();)switch(e.tag()){case t:{const t=e.getUInt32(),r=e.pos()+t;for(;e.pos()<r;){const t=e.getUInt32();n.push(t),h+=t}u=I(2*h).delta;break}case r:{e.getUInt32();const t=2+(this.hasZ?1:0)+(this.hasM?1:0);for(const r of n)if(d+t*r>u.length)for(let t=0;t<r;t++)e.getSInt32(),e.getSInt32(),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();else if(l&&g){const t=this.getAreaSimplificationThreshold(r,this._header.vertexCount);let s=2,i=1;const n=!1;let h=e.getSInt32(),o=e.getSInt32();u[d++]=h,u[d++]=o,this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();let g=e.getSInt32(),l=e.getSInt32();for(this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();s<r;){let r=e.getSInt32(),n=e.getSInt32();this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();const a=h+g,_=o+l;F(h,o,a,_,a+r,_+n)>=t?(c+=-.5*(a-h)*(_+o),i>1&&G(u[d-2],u[d-1],g,l)?(u[d-2]+=g,u[d-1]+=l):(u[d++]=g,u[d++]=l,i++),h=a,o=_):(r+=g,n+=l),g=r,l=n,s++}i<3||n?d-=2*i:(c+=-.5*(h+g-h)*(o+l+o),G(u[d-2],u[d-1],g,l)?(u[d-2]+=g,u[d-1]+=l,a.push(i)):(u[d++]=g,u[d++]=l,a.push(++i)))}else{let t=0,s=e.getSInt32(),i=e.getSInt32();this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32(),u[d++]=s,u[d++]=i,t+=1;for(let n=1;n<r;n++){const r=e.getSInt32(),a=e.getSInt32(),h=s+r,o=i+a;c+=-.5*(h-s)*(o+i),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32(),n>2&&G(u[d-2],u[d-1],r,a)?(u[d-2]+=r,u[d-1]+=a):(u[d++]=r,u[d++]=a,t+=1),s=h,i=o}a.push(t)}break}default:e.skip()}if(this._cache.area=c,!a.length)return null;if(this._tx||this._ty){let e=0;for(const t of a)u[2*e]+=this._tx,u[2*e+1]+=this._ty,e+=t}return new o(a,u)}}export{v as FeatureSetReaderPBF};\n"]},"metadata":{},"sourceType":"module"}