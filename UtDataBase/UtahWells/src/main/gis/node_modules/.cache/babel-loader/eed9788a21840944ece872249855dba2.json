{"ast":null,"code":"/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n */\nimport { getAssetPath, HTMLElement, h, Host, Build, proxyCustomElement } from '@stencil/core/internal/client';\nimport { a as getElementDir } from './dom.js';\nimport { c as createObserver } from './observers.js';\nconst CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\"\n};\n/**\n * Icon data cache.\n * Exported for testing purposes.\n * @private\n */\n\nconst iconCache = {};\n/**\n * Icon request cache.\n * Exported for testing purposes.\n * @private\n */\n\nconst requestCache = {};\nconst scaleToPx = {\n  s: 16,\n  m: 24,\n  l: 32\n};\n\nasync function fetchIcon(_ref) {\n  let {\n    icon,\n    scale\n  } = _ref;\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n  const id = `${iconName}${size}${filled ? \"F\" : \"\"}`;\n\n  if (iconCache[id]) {\n    return iconCache[id];\n  }\n\n  if (!requestCache[id]) {\n    requestCache[id] = fetch(getAssetPath(`./assets/icon/${id}.json`)).then(resp => resp.json()).catch(() => {\n      console.error(`\"${id}\" is not a valid calcite-ui-icon name`);\n      return \"\";\n    });\n  }\n\n  const path = await requestCache[id];\n  iconCache[id] = path;\n  return path;\n}\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n * @private\n */\n\n\nfunction normalizeIconName(name) {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n\n  if (parts.length === 1) {\n    return numberLeadingName ? `i${name}` : name;\n  }\n\n  return parts.map((part, index) => {\n    if (index === 0) {\n      return numberLeadingName ? `i${part.toUpperCase()}` : part;\n    }\n\n    return part.charAt(0).toUpperCase() + part.slice(1);\n  }).join(\"\");\n}\n\nconst iconCss = \"@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}.calcite-animate{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}.calcite-animate__in{-webkit-animation-name:in;animation-name:in}.calcite-animate__in-down{-webkit-animation-name:in-down;animation-name:in-down}.calcite-animate__in-up{-webkit-animation-name:in-up;animation-name:in-up}.calcite-animate__in-scale{-webkit-animation-name:in-scale;animation-name:in-scale}:root{--calcite-popper-transition:var(--calcite-animation-timing)}:host([hidden]){display:none}:host{display:-ms-inline-flexbox;display:inline-flex;color:var(--calcite-ui-icon-color)}:host([scale=s]){height:1rem;width:1rem;min-width:1rem;min-height:1rem}:host([scale=m]){height:1.5rem;width:1.5rem;min-width:1.5rem;min-height:1.5rem}:host([scale=l]){height:2rem;width:2rem;min-width:2rem;min-height:2rem}.flip-rtl{-webkit-transform:scaleX(-1);transform:scaleX(-1)}.svg{display:block}\";\nlet Icon = class extends HTMLElement {\n  constructor() {\n    super();\n\n    this.__registerHost();\n\n    this.__attachShadow(); //--------------------------------------------------------------------------\n    //\n    //  Properties\n    //\n    //--------------------------------------------------------------------------\n\n    /**\n     * The name of the icon to display. The value of this property must match the icon name from https://esri.github.io/calcite-ui-icons/.\n     */\n\n\n    this.icon = null;\n    /**\n     * When true, the icon will be flipped when the element direction is 'rtl'.\n     */\n\n    this.flipRtl = false;\n    /**\n     * Icon scale.\n     */\n\n    this.scale = \"m\";\n    this.visible = false;\n  } //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n\n  connectedCallback() {\n    this.waitUntilVisible(() => {\n      this.visible = true;\n      this.loadIconPathData();\n    });\n  }\n\n  disconnectedCallback() {\n    var _a;\n\n    (_a = this.intersectionObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  async componentWillLoad() {\n    this.loadIconPathData();\n  }\n\n  render() {\n    const {\n      el,\n      flipRtl,\n      pathData,\n      scale,\n      textLabel\n    } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return h(Host, {\n      \"aria-hidden\": (!semantic).toString(),\n      \"aria-label\": semantic ? textLabel : null,\n      role: semantic ? \"img\" : null\n    }, h(\"svg\", {\n      class: {\n        [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n        svg: true\n      },\n      fill: \"currentColor\",\n      height: \"100%\",\n      viewBox: `0 0 ${size} ${size}`,\n      width: \"100%\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, paths.map(path => typeof path === \"string\" ? h(\"path\", {\n      d: path\n    }) : h(\"path\", {\n      d: path.d,\n      opacity: \"opacity\" in path ? path.opacity : 1\n    }))));\n  } //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n\n  async loadIconPathData() {\n    const {\n      icon,\n      scale,\n      visible\n    } = this;\n\n    if (!Build.isBrowser || !icon || !visible) {\n      return;\n    }\n\n    this.pathData = await fetchIcon({\n      icon,\n      scale\n    });\n  }\n\n  waitUntilVisible(callback) {\n    this.intersectionObserver = createObserver(\"intersection\", entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          this.intersectionObserver.disconnect();\n          this.intersectionObserver = null;\n          callback();\n        }\n      });\n    }, {\n      rootMargin: \"50px\"\n    });\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n\n  static get assetsDirs() {\n    return [\"assets\"];\n  }\n\n  get el() {\n    return this;\n  }\n\n  static get watchers() {\n    return {\n      \"icon\": [\"loadIconPathData\"],\n      \"scale\": [\"loadIconPathData\"]\n    };\n  }\n\n  static get style() {\n    return iconCss;\n  }\n\n};\nIcon = /*@__PURE__*/proxyCustomElement(Icon, [1, \"calcite-icon\", {\n  \"icon\": [513],\n  \"flipRtl\": [516, \"flip-rtl\"],\n  \"scale\": [513],\n  \"textLabel\": [1, \"text-label\"],\n  \"pathData\": [32],\n  \"visible\": [32]\n}]);\n\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  const components = [\"calcite-icon\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"calcite-icon\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Icon);\n        }\n\n        break;\n    }\n  });\n}\n\ndefineCustomElement();\nexport { Icon as I, defineCustomElement as d };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@esri/calcite-components/dist/components/icon.js"],"names":["getAssetPath","HTMLElement","h","Host","Build","proxyCustomElement","a","getElementDir","c","createObserver","CSS","icon","flipRtl","iconCache","requestCache","scaleToPx","s","m","l","fetchIcon","scale","size","name","normalizeIconName","filled","charAt","length","iconName","substring","id","fetch","then","resp","json","catch","console","error","path","numberLeadingName","isNaN","Number","parts","split","map","part","index","toUpperCase","slice","join","iconCss","Icon","constructor","__registerHost","__attachShadow","visible","connectedCallback","waitUntilVisible","loadIconPathData","disconnectedCallback","_a","intersectionObserver","disconnect","componentWillLoad","render","el","pathData","textLabel","dir","semantic","paths","concat","toString","role","class","svg","fill","height","viewBox","width","xmlns","d","opacity","isBrowser","callback","entries","forEach","entry","isIntersecting","rootMargin","observe","assetsDirs","watchers","style","defineCustomElement","customElements","components","tagName","get","define","I"],"mappings":"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","sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n */\nimport { getAssetPath, HTMLElement, h, Host, Build, proxyCustomElement } from '@stencil/core/internal/client';\nimport { a as getElementDir } from './dom.js';\nimport { c as createObserver } from './observers.js';\n\nconst CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\"\n};\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n * @private\n */\nconst iconCache = {};\n/**\n * Icon request cache.\n * Exported for testing purposes.\n * @private\n */\nconst requestCache = {};\nconst scaleToPx = {\n  s: 16,\n  m: 24,\n  l: 32\n};\nasync function fetchIcon({ icon, scale }) {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n  const id = `${iconName}${size}${filled ? \"F\" : \"\"}`;\n  if (iconCache[id]) {\n    return iconCache[id];\n  }\n  if (!requestCache[id]) {\n    requestCache[id] = fetch(getAssetPath(`./assets/icon/${id}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n      console.error(`\"${id}\" is not a valid calcite-ui-icon name`);\n      return \"\";\n    });\n  }\n  const path = await requestCache[id];\n  iconCache[id] = path;\n  return path;\n}\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n * @private\n */\nfunction normalizeIconName(name) {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  if (parts.length === 1) {\n    return numberLeadingName ? `i${name}` : name;\n  }\n  return parts\n    .map((part, index) => {\n    if (index === 0) {\n      return numberLeadingName ? `i${part.toUpperCase()}` : part;\n    }\n    return part.charAt(0).toUpperCase() + part.slice(1);\n  })\n    .join(\"\");\n}\n\nconst iconCss = \"@-webkit-keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-down{0%{opacity:0;-webkit-transform:translate3D(0, -5px, 0);transform:translate3D(0, -5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;-webkit-transform:translate3D(0, 5px, 0);transform:translate3D(0, 5px, 0)}100%{opacity:1;-webkit-transform:translate3D(0, 0, 0);transform:translate3D(0, 0, 0)}}@-webkit-keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}@keyframes in-scale{0%{opacity:0;-webkit-transform:scale3D(0.95, 0.95, 1);transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;-webkit-transform:scale3D(1, 1, 1);transform:scale3D(1, 1, 1)}}:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}.calcite-animate{opacity:0;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:var(--calcite-animation-timing);animation-duration:var(--calcite-animation-timing)}.calcite-animate__in{-webkit-animation-name:in;animation-name:in}.calcite-animate__in-down{-webkit-animation-name:in-down;animation-name:in-down}.calcite-animate__in-up{-webkit-animation-name:in-up;animation-name:in-up}.calcite-animate__in-scale{-webkit-animation-name:in-scale;animation-name:in-scale}:root{--calcite-popper-transition:var(--calcite-animation-timing)}:host([hidden]){display:none}:host{display:-ms-inline-flexbox;display:inline-flex;color:var(--calcite-ui-icon-color)}:host([scale=s]){height:1rem;width:1rem;min-width:1rem;min-height:1rem}:host([scale=m]){height:1.5rem;width:1.5rem;min-width:1.5rem;min-height:1.5rem}:host([scale=l]){height:2rem;width:2rem;min-width:2rem;min-height:2rem}.flip-rtl{-webkit-transform:scaleX(-1);transform:scaleX(-1)}.svg{display:block}\";\n\nlet Icon = class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    //--------------------------------------------------------------------------\n    //\n    //  Properties\n    //\n    //--------------------------------------------------------------------------\n    /**\n     * The name of the icon to display. The value of this property must match the icon name from https://esri.github.io/calcite-ui-icons/.\n     */\n    this.icon = null;\n    /**\n     * When true, the icon will be flipped when the element direction is 'rtl'.\n     */\n    this.flipRtl = false;\n    /**\n     * Icon scale.\n     */\n    this.scale = \"m\";\n    this.visible = false;\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  connectedCallback() {\n    this.waitUntilVisible(() => {\n      this.visible = true;\n      this.loadIconPathData();\n    });\n  }\n  disconnectedCallback() {\n    var _a;\n    (_a = this.intersectionObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n    this.intersectionObserver = null;\n  }\n  async componentWillLoad() {\n    this.loadIconPathData();\n  }\n  render() {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (h(Host, { \"aria-hidden\": (!semantic).toString(), \"aria-label\": semantic ? textLabel : null, role: semantic ? \"img\" : null }, h(\"svg\", { class: {\n        [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n        svg: true\n      }, fill: \"currentColor\", height: \"100%\", viewBox: `0 0 ${size} ${size}`, width: \"100%\", xmlns: \"http://www.w3.org/2000/svg\" }, paths.map((path) => typeof path === \"string\" ? (h(\"path\", { d: path })) : (h(\"path\", { d: path.d, opacity: \"opacity\" in path ? path.opacity : 1 }))))));\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  async loadIconPathData() {\n    const { icon, scale, visible } = this;\n    if (!Build.isBrowser || !icon || !visible) {\n      return;\n    }\n    this.pathData = await fetchIcon({ icon, scale });\n  }\n  waitUntilVisible(callback) {\n    this.intersectionObserver = createObserver(\"intersection\", (entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          this.intersectionObserver.disconnect();\n          this.intersectionObserver = null;\n          callback();\n        }\n      });\n    }, { rootMargin: \"50px\" });\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n    this.intersectionObserver.observe(this.el);\n  }\n  static get assetsDirs() { return [\"assets\"]; }\n  get el() { return this; }\n  static get watchers() { return {\n    \"icon\": [\"loadIconPathData\"],\n    \"scale\": [\"loadIconPathData\"]\n  }; }\n  static get style() { return iconCss; }\n};\nIcon = /*@__PURE__*/ proxyCustomElement(Icon, [1, \"calcite-icon\", {\n    \"icon\": [513],\n    \"flipRtl\": [516, \"flip-rtl\"],\n    \"scale\": [513],\n    \"textLabel\": [1, \"text-label\"],\n    \"pathData\": [32],\n    \"visible\": [32]\n  }]);\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"calcite-icon\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"calcite-icon\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Icon);\n      }\n      break;\n  } });\n}\ndefineCustomElement();\n\nexport { Icon as I, defineCustomElement as d };\n"]},"metadata":{},"sourceType":"module"}