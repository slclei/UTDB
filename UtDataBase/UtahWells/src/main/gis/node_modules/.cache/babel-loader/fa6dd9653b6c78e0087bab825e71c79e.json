{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { equals as i } from \"../../core/arrayUtils.js\";\nimport { ObjectStack as n } from \"../../core/ObjectStack.js\";\nimport { g as r, f as o, c as t, n as c, d as e, b as s, a as u } from \"../../chunks/vec3.js\";\nimport { a, c as g } from \"../../chunks/vec3f64.js\";\nimport { sv3d as f } from \"./vectorStacks.js\";\n\nfunction d(i) {\n  return i ? {\n    origin: a(i.origin),\n    direction: a(i.direction)\n  } : {\n    origin: g(),\n    direction: g()\n  };\n}\n\nfunction m(n, r) {\n  return i(n.origin, r.origin) && i(n.direction, r.direction);\n}\n\nfunction j(i, n) {\n  const r = S.get();\n  return r.origin = i, r.direction = n, r;\n}\n\nfunction l(i) {\n  let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : d();\n  return k(i.origin, i.direction, n);\n}\n\nfunction p(i, n) {\n  let t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : d();\n  return r(t.origin, i), o(t.direction, n, i), t;\n}\n\nfunction k(i, n) {\n  let o = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : d();\n  return r(o.origin, i), r(o.direction, n), o;\n}\n\nfunction h(i, n) {\n  const r = t(f.get(), c(f.get(), i.direction), o(f.get(), n, i.origin));\n  return e(r, r);\n}\n\nfunction v(i, n) {\n  return Math.sqrt(h(i, n));\n}\n\nfunction b(i, n, r) {\n  const t = e(i.direction, o(r, n, i.origin));\n  return s(r, i.origin, u(r, i.direction, t)), r;\n}\n\nfunction q() {\n  return {\n    origin: null,\n    direction: null\n  };\n}\n\nconst S = new n(q);\nexport { b as closestPoint, l as copy, d as create, v as distance, h as distance2, m as equals, p as fromPoints, k as fromValues, j as wrap };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/geometry/support/ray.js"],"names":["equals","i","ObjectStack","n","g","r","f","o","c","t","d","e","b","s","a","u","sv3d","origin","direction","m","j","S","get","l","k","p","h","v","Math","sqrt","q","closestPoint","copy","create","distance","distance2","fromPoints","fromValues","wrap"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{equals as i}from\"../../core/arrayUtils.js\";import{ObjectStack as n}from\"../../core/ObjectStack.js\";import{g as r,f as o,c as t,n as c,d as e,b as s,a as u}from\"../../chunks/vec3.js\";import{a,c as g}from\"../../chunks/vec3f64.js\";import{sv3d as f}from\"./vectorStacks.js\";function d(i){return i?{origin:a(i.origin),direction:a(i.direction)}:{origin:g(),direction:g()}}function m(n,r){return i(n.origin,r.origin)&&i(n.direction,r.direction)}function j(i,n){const r=S.get();return r.origin=i,r.direction=n,r}function l(i,n=d()){return k(i.origin,i.direction,n)}function p(i,n,t=d()){return r(t.origin,i),o(t.direction,n,i),t}function k(i,n,o=d()){return r(o.origin,i),r(o.direction,n),o}function h(i,n){const r=t(f.get(),c(f.get(),i.direction),o(f.get(),n,i.origin));return e(r,r)}function v(i,n){return Math.sqrt(h(i,n))}function b(i,n,r){const t=e(i.direction,o(r,n,i.origin));return s(r,i.origin,u(r,i.direction,t)),r}function q(){return{origin:null,direction:null}}const S=new n(q);export{b as closestPoint,l as copy,d as create,v as distance,h as distance2,m as equals,p as fromPoints,k as fromValues,j as wrap};\n"]},"metadata":{},"sourceType":"module"}