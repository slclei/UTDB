{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { Bloom as e } from \"./Bloom.js\";\nimport { Blur as t } from \"./Blur.js\";\nimport { Colorize as o } from \"./Colorize.js\";\nimport { DropShadow as s } from \"./DropShadow.js\";\nimport { Opacity as r } from \"./Opacity.js\";\n\nfunction c(e) {\n  switch (e) {\n    case \"bloom\":\n    case \"blur\":\n    case \"opacity\":\n    case \"drop-shadow\":\n      return e;\n\n    default:\n      return \"colorize\";\n  }\n}\n\nconst f = {\n  colorize: () => new o(),\n  blur: () => new t(),\n  bloom: () => new e(),\n  opacity: () => new r(),\n  \"drop-shadow\": () => new s()\n};\n\nclass i {\n  constructor(e) {\n    this._requestRender = e, this._effectMap = new Map();\n  }\n\n  dispose() {\n    this._requestRender && (this._requestRender = null), this._effectMap.forEach(e => e.dispose()), this._effectMap.clear();\n  }\n\n  getPostProcessingEffects(e) {\n    if (!e || 0 === e.length) return [];\n    const t = [];\n\n    for (const o of e) {\n      const e = c(o.type);\n\n      let s = this._effectMap.get(e);\n\n      s || (s = f[e](), this._effectMap.set(e, s)), t.push({\n        postProcessingEffect: s,\n        effect: o\n      });\n    }\n\n    return t;\n  }\n\n}\n\nexport { i as EffectManager };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/webgl/effects/post-processing/EffectManager.js"],"names":["Bloom","e","Blur","t","Colorize","o","DropShadow","s","Opacity","r","c","f","colorize","blur","bloom","opacity","i","constructor","_requestRender","_effectMap","Map","dispose","forEach","clear","getPostProcessingEffects","length","type","get","set","push","postProcessingEffect","effect","EffectManager"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,KAAK,IAAIC,CAAhB,QAAsB,YAAtB;AAAmC,SAAOC,IAAI,IAAIC,CAAf,QAAqB,WAArB;AAAiC,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,eAAzB;AAAyC,SAAOC,UAAU,IAAIC,CAArB,QAA2B,iBAA3B;AAA6C,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,cAAxB;;AAAuC,SAASC,CAAT,CAAWT,CAAX,EAAa;AAAC,UAAOA,CAAP;AAAU,SAAI,OAAJ;AAAY,SAAI,MAAJ;AAAW,SAAI,SAAJ;AAAc,SAAI,aAAJ;AAAkB,aAAOA,CAAP;;AAAS;AAAQ,aAAM,UAAN;AAAlF;AAAoG;;AAAA,MAAMU,CAAC,GAAC;AAACC,EAAAA,QAAQ,EAAC,MAAI,IAAIP,CAAJ,EAAd;AAAoBQ,EAAAA,IAAI,EAAC,MAAI,IAAIV,CAAJ,EAA7B;AAAmCW,EAAAA,KAAK,EAAC,MAAI,IAAIb,CAAJ,EAA7C;AAAmDc,EAAAA,OAAO,EAAC,MAAI,IAAIN,CAAJ,EAA/D;AAAqE,iBAAc,MAAI,IAAIF,CAAJ;AAAvF,CAAR;;AAAsG,MAAMS,CAAN,CAAO;AAACC,EAAAA,WAAW,CAAChB,CAAD,EAAG;AAAC,SAAKiB,cAAL,GAAoBjB,CAApB,EAAsB,KAAKkB,UAAL,GAAgB,IAAIC,GAAJ,EAAtC;AAA8C;;AAAAC,EAAAA,OAAO,GAAE;AAAC,SAAKH,cAAL,KAAsB,KAAKA,cAAL,GAAoB,IAA1C,GAAgD,KAAKC,UAAL,CAAgBG,OAAhB,CAAyBrB,CAAC,IAAEA,CAAC,CAACoB,OAAF,EAA5B,CAAhD,EAA0F,KAAKF,UAAL,CAAgBI,KAAhB,EAA1F;AAAkH;;AAAAC,EAAAA,wBAAwB,CAACvB,CAAD,EAAG;AAAC,QAAG,CAACA,CAAD,IAAI,MAAIA,CAAC,CAACwB,MAAb,EAAoB,OAAM,EAAN;AAAS,UAAMtB,CAAC,GAAC,EAAR;;AAAW,SAAI,MAAME,CAAV,IAAeJ,CAAf,EAAiB;AAAC,YAAMA,CAAC,GAACS,CAAC,CAACL,CAAC,CAACqB,IAAH,CAAT;;AAAkB,UAAInB,CAAC,GAAC,KAAKY,UAAL,CAAgBQ,GAAhB,CAAoB1B,CAApB,CAAN;;AAA6BM,MAAAA,CAAC,KAAGA,CAAC,GAACI,CAAC,CAACV,CAAD,CAAD,EAAF,EAAS,KAAKkB,UAAL,CAAgBS,GAAhB,CAAoB3B,CAApB,EAAsBM,CAAtB,CAAZ,CAAD,EAAuCJ,CAAC,CAAC0B,IAAF,CAAO;AAACC,QAAAA,oBAAoB,EAACvB,CAAtB;AAAwBwB,QAAAA,MAAM,EAAC1B;AAA/B,OAAP,CAAvC;AAAiF;;AAAA,WAAOF,CAAP;AAAS;;AAAzZ;;AAA0Z,SAAOa,CAAC,IAAIgB,aAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{Bloom as e}from\"./Bloom.js\";import{Blur as t}from\"./Blur.js\";import{Colorize as o}from\"./Colorize.js\";import{DropShadow as s}from\"./DropShadow.js\";import{Opacity as r}from\"./Opacity.js\";function c(e){switch(e){case\"bloom\":case\"blur\":case\"opacity\":case\"drop-shadow\":return e;default:return\"colorize\"}}const f={colorize:()=>new o,blur:()=>new t,bloom:()=>new e,opacity:()=>new r,\"drop-shadow\":()=>new s};class i{constructor(e){this._requestRender=e,this._effectMap=new Map}dispose(){this._requestRender&&(this._requestRender=null),this._effectMap.forEach((e=>e.dispose())),this._effectMap.clear()}getPostProcessingEffects(e){if(!e||0===e.length)return[];const t=[];for(const o of e){const e=c(o.type);let s=this._effectMap.get(e);s||(s=f[e](),this._effectMap.set(e,s)),t.push({postProcessingEffect:s,effect:o})}return t}}export{i as EffectManager};\n"]},"metadata":{},"sourceType":"module"}