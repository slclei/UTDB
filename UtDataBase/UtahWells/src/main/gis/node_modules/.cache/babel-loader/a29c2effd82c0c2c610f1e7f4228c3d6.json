{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../../../../request.js\";\nimport { throwIfAborted as t } from \"../../../../core/promiseUtils.js\";\nimport r from \"../../tiling/TileKey.js\";\n\nclass l {\n  constructor(e) {\n    this.url = e;\n  }\n\n  async fetchTileIndex() {\n    return this._tileIndexPromise || (this._tileIndexPromise = e(this.url).then(e => e.data.index)), this._tileIndexPromise;\n  }\n\n  async dataKey(e, r) {\n    const l = await this.fetchTileIndex();\n    return t(r), this._getIndexedDataKey(l, e);\n  }\n\n  _getIndexedDataKey(e, t) {\n    const l = [t];\n    if (t.level < 0 || t.row < 0 || t.col < 0 || t.row >> t.level > 0 || t.col >> t.level > 0) return null;\n    let i = t;\n\n    for (; 0 !== i.level;) i = new r(i.level - 1, i.row >> 1, i.col >> 1, i.world), l.push(i);\n\n    let o,\n        s,\n        n = e,\n        a = l.pop();\n    if (1 === n) return a;\n\n    for (; l.length;) if (o = l.pop(), s = (1 & o.col) + ((1 & o.row) << 1), n) {\n      if (0 === n[s]) {\n        a = null;\n        break;\n      }\n\n      if (1 === n[s]) {\n        a = o;\n        break;\n      }\n\n      a = o, n = n[s];\n    }\n\n    return a;\n  }\n\n}\n\nexport { l as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/vectorTiles/TilemapIndex.js"],"names":["e","throwIfAborted","t","r","l","constructor","url","fetchTileIndex","_tileIndexPromise","then","data","index","dataKey","_getIndexedDataKey","level","row","col","i","world","push","o","s","n","a","pop","length","default"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,wBAAb;AAAsC,SAAOC,cAAc,IAAIC,CAAzB,QAA+B,kCAA/B;AAAkE,OAAOC,CAAP,MAAa,yBAAb;;AAAuC,MAAMC,CAAN,CAAO;AAACC,EAAAA,WAAW,CAACL,CAAD,EAAG;AAAC,SAAKM,GAAL,GAASN,CAAT;AAAW;;AAAoB,QAAdO,cAAc,GAAE;AAAC,WAAO,KAAKC,iBAAL,KAAyB,KAAKA,iBAAL,GAAuBR,CAAC,CAAC,KAAKM,GAAN,CAAD,CAAYG,IAAZ,CAAkBT,CAAC,IAAEA,CAAC,CAACU,IAAF,CAAOC,KAA5B,CAAhD,GAAqF,KAAKH,iBAAjG;AAAmH;;AAAa,QAAPI,OAAO,CAACZ,CAAD,EAAGG,CAAH,EAAK;AAAC,UAAMC,CAAC,GAAC,MAAM,KAAKG,cAAL,EAAd;AAAoC,WAAOL,CAAC,CAACC,CAAD,CAAD,EAAK,KAAKU,kBAAL,CAAwBT,CAAxB,EAA0BJ,CAA1B,CAAZ;AAAyC;;AAAAa,EAAAA,kBAAkB,CAACb,CAAD,EAAGE,CAAH,EAAK;AAAC,UAAME,CAAC,GAAC,CAACF,CAAD,CAAR;AAAY,QAAGA,CAAC,CAACY,KAAF,GAAQ,CAAR,IAAWZ,CAAC,CAACa,GAAF,GAAM,CAAjB,IAAoBb,CAAC,CAACc,GAAF,GAAM,CAA1B,IAA6Bd,CAAC,CAACa,GAAF,IAAOb,CAAC,CAACY,KAAT,GAAe,CAA5C,IAA+CZ,CAAC,CAACc,GAAF,IAAOd,CAAC,CAACY,KAAT,GAAe,CAAjE,EAAmE,OAAO,IAAP;AAAY,QAAIG,CAAC,GAACf,CAAN;;AAAQ,WAAK,MAAIe,CAAC,CAACH,KAAX,GAAkBG,CAAC,GAAC,IAAId,CAAJ,CAAMc,CAAC,CAACH,KAAF,GAAQ,CAAd,EAAgBG,CAAC,CAACF,GAAF,IAAO,CAAvB,EAAyBE,CAAC,CAACD,GAAF,IAAO,CAAhC,EAAkCC,CAAC,CAACC,KAApC,CAAF,EAA6Cd,CAAC,CAACe,IAAF,CAAOF,CAAP,CAA7C;;AAAuD,QAAIG,CAAJ;AAAA,QAAMC,CAAN;AAAA,QAAQC,CAAC,GAACtB,CAAV;AAAA,QAAYuB,CAAC,GAACnB,CAAC,CAACoB,GAAF,EAAd;AAAsB,QAAG,MAAIF,CAAP,EAAS,OAAOC,CAAP;;AAAS,WAAKnB,CAAC,CAACqB,MAAP,GAAe,IAAGL,CAAC,GAAChB,CAAC,CAACoB,GAAF,EAAF,EAAUH,CAAC,GAAC,CAAC,IAAED,CAAC,CAACJ,GAAL,KAAW,CAAC,IAAEI,CAAC,CAACL,GAAL,KAAW,CAAtB,CAAZ,EAAqCO,CAAxC,EAA0C;AAAC,UAAG,MAAIA,CAAC,CAACD,CAAD,CAAR,EAAY;AAACE,QAAAA,CAAC,GAAC,IAAF;AAAO;AAAM;;AAAA,UAAG,MAAID,CAAC,CAACD,CAAD,CAAR,EAAY;AAACE,QAAAA,CAAC,GAACH,CAAF;AAAI;AAAM;;AAAAG,MAAAA,CAAC,GAACH,CAAF,EAAIE,CAAC,GAACA,CAAC,CAACD,CAAD,CAAP;AAAW;;AAAA,WAAOE,CAAP;AAAS;;AAAhnB;;AAAinB,SAAOnB,CAAC,IAAIsB,OAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../../../request.js\";import{throwIfAborted as t}from\"../../../../core/promiseUtils.js\";import r from\"../../tiling/TileKey.js\";class l{constructor(e){this.url=e}async fetchTileIndex(){return this._tileIndexPromise||(this._tileIndexPromise=e(this.url).then((e=>e.data.index))),this._tileIndexPromise}async dataKey(e,r){const l=await this.fetchTileIndex();return t(r),this._getIndexedDataKey(l,e)}_getIndexedDataKey(e,t){const l=[t];if(t.level<0||t.row<0||t.col<0||t.row>>t.level>0||t.col>>t.level>0)return null;let i=t;for(;0!==i.level;)i=new r(i.level-1,i.row>>1,i.col>>1,i.world),l.push(i);let o,s,n=e,a=l.pop();if(1===n)return a;for(;l.length;)if(o=l.pop(),s=(1&o.col)+((1&o.row)<<1),n){if(0===n[s]){a=null;break}if(1===n[s]){a=o;break}a=o,n=n[s]}return a}}export{l as default};\n"]},"metadata":{},"sourceType":"module"}