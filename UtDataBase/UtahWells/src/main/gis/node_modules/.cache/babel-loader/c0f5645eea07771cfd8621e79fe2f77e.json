{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { c as t } from \"../../../chunks/mat3f32.js\";\nimport { Bitmap as e } from \"./Bitmap.js\";\nimport { TiledDisplayObject as s } from \"./webgl/TiledDisplayObject.js\";\n\nclass r extends s {\n  constructor(t, s, r, i, a) {\n    let n = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n    super(t, s, r, i, a), this.bitmap = new e(n, \"standard\", !1), this.bitmap.coordScale = [i, a], this.bitmap.once(\"isReady\", () => this.ready());\n  }\n\n  destroy() {\n    super.destroy(), this.bitmap.destroy();\n  }\n\n  beforeRender(t) {\n    super.beforeRender(t), this.bitmap.beforeRender(t);\n  }\n\n  afterRender(t) {\n    super.afterRender(t), this.bitmap.afterRender(t);\n  }\n\n  set stencilRef(t) {\n    this.bitmap.stencilRef = t;\n  }\n\n  get stencilRef() {\n    return this.bitmap.stencilRef;\n  }\n\n  _createTransforms() {\n    return {\n      dvs: t(),\n      tileMat3: t()\n    };\n  }\n\n  setTransform(t, e) {\n    super.setTransform(t, e), this.bitmap.transforms.dvs = this.transforms.dvs;\n  }\n\n  onAttach() {\n    this.bitmap.stage = this.stage;\n  }\n\n  onDetach() {\n    this.bitmap && (this.bitmap.stage = null);\n  }\n\n}\n\nexport { r as BitmapTile };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/BitmapTile.js"],"names":["c","t","Bitmap","e","TiledDisplayObject","s","r","constructor","i","a","n","bitmap","coordScale","once","ready","destroy","beforeRender","afterRender","stencilRef","_createTransforms","dvs","tileMat3","setTransform","transforms","onAttach","stage","onDetach","BitmapTile"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,4BAAlB;AAA+C,SAAOC,MAAM,IAAIC,CAAjB,QAAuB,aAAvB;AAAqC,SAAOC,kBAAkB,IAAIC,CAA7B,QAAmC,+BAAnC;;AAAmE,MAAMC,CAAN,SAAgBD,CAAhB,CAAiB;AAACE,EAAAA,WAAW,CAACN,CAAD,EAAGI,CAAH,EAAKC,CAAL,EAAOE,CAAP,EAASC,CAAT,EAAkB;AAAA,QAAPC,CAAO,uEAAL,IAAK;AAAC,UAAMT,CAAN,EAAQI,CAAR,EAAUC,CAAV,EAAYE,CAAZ,EAAcC,CAAd,GAAiB,KAAKE,MAAL,GAAY,IAAIR,CAAJ,CAAMO,CAAN,EAAQ,UAAR,EAAmB,CAAC,CAApB,CAA7B,EAAoD,KAAKC,MAAL,CAAYC,UAAZ,GAAuB,CAACJ,CAAD,EAAGC,CAAH,CAA3E,EAAiF,KAAKE,MAAL,CAAYE,IAAZ,CAAiB,SAAjB,EAA4B,MAAI,KAAKC,KAAL,EAAhC,CAAjF;AAAgI;;AAAAC,EAAAA,OAAO,GAAE;AAAC,UAAMA,OAAN,IAAgB,KAAKJ,MAAL,CAAYI,OAAZ,EAAhB;AAAsC;;AAAAC,EAAAA,YAAY,CAACf,CAAD,EAAG;AAAC,UAAMe,YAAN,CAAmBf,CAAnB,GAAsB,KAAKU,MAAL,CAAYK,YAAZ,CAAyBf,CAAzB,CAAtB;AAAkD;;AAAAgB,EAAAA,WAAW,CAAChB,CAAD,EAAG;AAAC,UAAMgB,WAAN,CAAkBhB,CAAlB,GAAqB,KAAKU,MAAL,CAAYM,WAAZ,CAAwBhB,CAAxB,CAArB;AAAgD;;AAAc,MAAViB,UAAU,CAACjB,CAAD,EAAG;AAAC,SAAKU,MAAL,CAAYO,UAAZ,GAAuBjB,CAAvB;AAAyB;;AAAc,MAAViB,UAAU,GAAE;AAAC,WAAO,KAAKP,MAAL,CAAYO,UAAnB;AAA8B;;AAAAC,EAAAA,iBAAiB,GAAE;AAAC,WAAM;AAACC,MAAAA,GAAG,EAACnB,CAAC,EAAN;AAASoB,MAAAA,QAAQ,EAACpB,CAAC;AAAnB,KAAN;AAA6B;;AAAAqB,EAAAA,YAAY,CAACrB,CAAD,EAAGE,CAAH,EAAK;AAAC,UAAMmB,YAAN,CAAmBrB,CAAnB,EAAqBE,CAArB,GAAwB,KAAKQ,MAAL,CAAYY,UAAZ,CAAuBH,GAAvB,GAA2B,KAAKG,UAAL,CAAgBH,GAAnE;AAAuE;;AAAAI,EAAAA,QAAQ,GAAE;AAAC,SAAKb,MAAL,CAAYc,KAAZ,GAAkB,KAAKA,KAAvB;AAA6B;;AAAAC,EAAAA,QAAQ,GAAE;AAAC,SAAKf,MAAL,KAAc,KAAKA,MAAL,CAAYc,KAAZ,GAAkB,IAAhC;AAAsC;;AAA7oB;;AAA8oB,SAAOnB,CAAC,IAAIqB,UAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{c as t}from\"../../../chunks/mat3f32.js\";import{Bitmap as e}from\"./Bitmap.js\";import{TiledDisplayObject as s}from\"./webgl/TiledDisplayObject.js\";class r extends s{constructor(t,s,r,i,a,n=null){super(t,s,r,i,a),this.bitmap=new e(n,\"standard\",!1),this.bitmap.coordScale=[i,a],this.bitmap.once(\"isReady\",(()=>this.ready()))}destroy(){super.destroy(),this.bitmap.destroy()}beforeRender(t){super.beforeRender(t),this.bitmap.beforeRender(t)}afterRender(t){super.afterRender(t),this.bitmap.afterRender(t)}set stencilRef(t){this.bitmap.stencilRef=t}get stencilRef(){return this.bitmap.stencilRef}_createTransforms(){return{dvs:t(),tileMat3:t()}}setTransform(t,e){super.setTransform(t,e),this.bitmap.transforms.dvs=this.transforms.dvs}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap&&(this.bitmap.stage=null)}}export{r as BitmapTile};\n"]},"metadata":{},"sourceType":"module"}