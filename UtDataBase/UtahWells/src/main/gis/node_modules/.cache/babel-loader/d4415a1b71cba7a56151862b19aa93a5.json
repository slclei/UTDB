{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nfunction e(e) {\n  let n = \"\";\n\n  for (const o in e) {\n    const t = e[o];\n    if (\"boolean\" == typeof t) t && (n += `#define ${o}\\n`);else if (\"number\" == typeof t) n += `#define ${o} ${t.toFixed()}\\n`;else if (\"object\" == typeof t) {\n      const e = t.options;\n      let f = 0;\n\n      for (const o in e) n += `#define ${e[o]} ${(f++).toFixed()}\\n`;\n\n      n += `#define ${o} ${e[t.value]}\\n`;\n    }\n  }\n\n  return n;\n}\n\nexport { e as glslifyDefineMap };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/webgl/programUtils.js"],"names":["e","n","o","t","toFixed","options","f","value","glslifyDefineMap"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,CAAT,CAAWA,CAAX,EAAa;AAAC,MAAIC,CAAC,GAAC,EAAN;;AAAS,OAAI,MAAMC,CAAV,IAAeF,CAAf,EAAiB;AAAC,UAAMG,CAAC,GAACH,CAAC,CAACE,CAAD,CAAT;AAAa,QAAG,aAAW,OAAOC,CAArB,EAAuBA,CAAC,KAAGF,CAAC,IAAG,WAAUC,CAAE,IAAnB,CAAD,CAAvB,KAAqD,IAAG,YAAU,OAAOC,CAApB,EAAsBF,CAAC,IAAG,WAAUC,CAAE,IAAGC,CAAC,CAACC,OAAF,EAAY,IAA/B,CAAtB,KAA8D,IAAG,YAAU,OAAOD,CAApB,EAAsB;AAAC,YAAMH,CAAC,GAACG,CAAC,CAACE,OAAV;AAAkB,UAAIC,CAAC,GAAC,CAAN;;AAAQ,WAAI,MAAMJ,CAAV,IAAeF,CAAf,EAAiBC,CAAC,IAAG,WAAUD,CAAC,CAACE,CAAD,CAAI,IAAG,CAACI,CAAC,EAAF,EAAMF,OAAN,EAAgB,IAAtC;;AAA0CH,MAAAA,CAAC,IAAG,WAAUC,CAAE,IAAGF,CAAC,CAACG,CAAC,CAACI,KAAH,CAAU,IAA9B;AAAkC;AAAC;;AAAA,SAAON,CAAP;AAAS;;AAAA,SAAOD,CAAC,IAAIQ,gBAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nfunction e(e){let n=\"\";for(const o in e){const t=e[o];if(\"boolean\"==typeof t)t&&(n+=`#define ${o}\\n`);else if(\"number\"==typeof t)n+=`#define ${o} ${t.toFixed()}\\n`;else if(\"object\"==typeof t){const e=t.options;let f=0;for(const o in e)n+=`#define ${e[o]} ${(f++).toFixed()}\\n`;n+=`#define ${o} ${e[t.value]}\\n`}}return n}export{e as glslifyDefineMap};\n"]},"metadata":{},"sourceType":"module"}