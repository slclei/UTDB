{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { isArrayLike as r } from \"../../../../../core/arrayUtils.js\";\nimport { isNone as e } from \"../../../../../core/maybe.js\";\nimport { WGLDrawPhase as s } from \"../enums.js\";\n\nclass t {\n  constructor(r, e) {\n    var t;\n    this.brushes = r, this.name = e.name, this.drawPhase = e.drawPhase || s.MAP, this._targetFn = e.target, this.effects = e.effects || [], this.enableDefaultDraw = null != (t = e.enableDefaultDraw) ? t : () => !0;\n  }\n\n  render(r) {\n    const {\n      context: e,\n      profiler: s\n    } = r,\n          t = this._targetFn(),\n          a = this.drawPhase & r.drawPhase;\n\n    if (s.recordPassStart(this.name), a) {\n      this.enableDefaultDraw() && this._doRender(r, t), s.recordPassEnd();\n\n      for (const a of this.effects) {\n        if (!a.enable()) continue;\n        const o = a.apply;\n        s.recordPassStart(this.name + \".\" + o.name), s.recordBrushStart(o.name);\n        const n = a.args && a.args(),\n              {\n          x: i,\n          y: d,\n          width: f,\n          height: h\n        } = e.getViewport(),\n              c = e.getBoundFramebufferObject();\n        o.bind(r, n);\n        const p = o.createOptions(r, n),\n              u = r.passOptions;\n        r.passOptions = p, this._doRender(r, t, o.defines), r.passOptions = u, o.draw(r, n), o.unbind(r, n), e.bindFramebuffer(c), e.setViewport(i, d, f, h), s.recordBrushEnd(), s.recordPassEnd();\n      }\n    }\n  }\n\n  _doRender(s, t, a) {\n    if (!e(t)) if (r(t)) {\n      for (const r of t) if (r.visible) for (const e of this.brushes) s.profiler.recordBrushStart(e.name), e.prepareState(s, r, a), e.draw(s, r, a), s.profiler.recordBrushEnd();\n    } else for (const r of this.brushes) s.profiler.recordBrushStart(r.name), r.prepareState(s, t, a), r.draw(s, t, a), s.profiler.recordBrushEnd();\n  }\n\n}\n\nexport { t as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/webgl/painter/RenderPass.js"],"names":["isArrayLike","r","isNone","e","WGLDrawPhase","s","t","constructor","brushes","name","drawPhase","MAP","_targetFn","target","effects","enableDefaultDraw","render","context","profiler","a","recordPassStart","_doRender","recordPassEnd","enable","o","apply","recordBrushStart","n","args","x","i","y","d","width","f","height","h","getViewport","c","getBoundFramebufferObject","bind","p","createOptions","u","passOptions","defines","draw","unbind","bindFramebuffer","setViewport","recordBrushEnd","visible","prepareState","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{isArrayLike as r}from\"../../../../../core/arrayUtils.js\";import{isNone as e}from\"../../../../../core/maybe.js\";import{WGLDrawPhase as s}from\"../enums.js\";class t{constructor(r,e){var t;this.brushes=r,this.name=e.name,this.drawPhase=e.drawPhase||s.MAP,this._targetFn=e.target,this.effects=e.effects||[],this.enableDefaultDraw=null!=(t=e.enableDefaultDraw)?t:()=>!0}render(r){const{context:e,profiler:s}=r,t=this._targetFn(),a=this.drawPhase&r.drawPhase;if(s.recordPassStart(this.name),a){this.enableDefaultDraw()&&this._doRender(r,t),s.recordPassEnd();for(const a of this.effects){if(!a.enable())continue;const o=a.apply;s.recordPassStart(this.name+\".\"+o.name),s.recordBrushStart(o.name);const n=a.args&&a.args(),{x:i,y:d,width:f,height:h}=e.getViewport(),c=e.getBoundFramebufferObject();o.bind(r,n);const p=o.createOptions(r,n),u=r.passOptions;r.passOptions=p,this._doRender(r,t,o.defines),r.passOptions=u,o.draw(r,n),o.unbind(r,n),e.bindFramebuffer(c),e.setViewport(i,d,f,h),s.recordBrushEnd(),s.recordPassEnd()}}}_doRender(s,t,a){if(!e(t))if(r(t)){for(const r of t)if(r.visible)for(const e of this.brushes)s.profiler.recordBrushStart(e.name),e.prepareState(s,r,a),e.draw(s,r,a),s.profiler.recordBrushEnd()}else for(const r of this.brushes)s.profiler.recordBrushStart(r.name),r.prepareState(s,t,a),r.draw(s,t,a),s.profiler.recordBrushEnd()}}export{t as default};\n"]},"metadata":{},"sourceType":"module"}