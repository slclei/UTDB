{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../../../../../request.js\";\nimport t from \"../../../../../core/Error.js\";\nimport r from \"../../../../../core/has.js\";\nimport s from \"../../../../../core/Logger.js\";\nimport { isSome as i, unwrapOr as a, isNone as o } from \"../../../../../core/maybe.js\";\nimport { throwIfAborted as n, isAbortError as u } from \"../../../../../core/promiseUtils.js\";\nimport { createSourceAdapter as c } from \"../controllers/support/sourceAdapters.js\";\nimport { DataTileSource as l } from \"./DataTileSource.js\";\nimport { QueueProcessor as p } from \"../../../../support/QueueProcessor.js\";\nconst d = s.getLogger(\"esri.views.2d.layers.features.sources.BaseFeatureSource\"),\n      y = 4;\n\nclass h extends l {\n  constructor(e) {\n    super(e), this.type = \"feature\", this.mode = \"on-demand\", this._adapter = c(e.serviceInfo), this._queue = new p({\n      concurrency: 8,\n      process: async e => {\n        if (n(e), i(e.tile)) {\n          const t = e.tile.key.id,\n                {\n            signal: s\n          } = e,\n                i = r(\"esri-tiles-debug\") ? {\n            tile: t.replace(/\\//g, \".\"),\n            depth: e.depth\n          } : void 0,\n                a = await this._adapter.executeQuery(e.query, {\n            signal: s,\n            query: { ...i,\n              ...this._schema.customParameters\n            }\n          });\n          return a.level = e.tile.key.level, a;\n        }\n\n        return this._adapter.executeQuery(e.query, { ...e,\n          query: this._schema.customParameters\n        });\n      }\n    }), this._patchQueue = new p({\n      concurrency: 8,\n      process: async e => {\n        if (n(e), i(e.tile)) {\n          const t = e.tile.key.id,\n                {\n            signal: s\n          } = e,\n                i = r(\"esri-tiles-debug\") ? {\n            tile: t.replace(/\\//g, \".\"),\n            depth: e.depth\n          } : void 0,\n                a = await this._adapter.executeQuery(e.query, {\n            signal: s,\n            query: { ...i,\n              ...this._schema.customParameters\n            }\n          });\n          return a.level = e.tile.key.level, a;\n        }\n\n        return this._adapter.executeQuery(e.query, { ...e,\n          query: this._schema.customParameters\n        });\n      }\n    });\n  }\n\n  destroy() {\n    super.destroy(), this._adapter.destroy(), this._queue.destroy(), this._patchQueue.destroy();\n  }\n\n  get updating() {\n    return !!this._queue.length || Array.from(this._subscriptions.values()).some(e => !e.done);\n  }\n\n  get maxRecordCountFactor() {\n    const {\n      query: e\n    } = this._serviceInfo.capabilities;\n    return e.supportsMaxRecordCountFactor ? y : null;\n  }\n\n  get maxPageSize() {\n    var e;\n    const {\n      query: t\n    } = this._serviceInfo.capabilities;\n    return (null != (e = t.maxRecordCount) ? e : 8e3) * a(this.maxRecordCountFactor, 1);\n  }\n\n  get pageSize() {\n    return Math.min(8e3, this.maxPageSize);\n  }\n\n  enableEvent(e, t) {}\n\n  subscribe(e) {\n    super.subscribe(e);\n\n    const r = this._subscriptions.get(e.id);\n\n    this._fetchDataTile(e).catch(r => {\n      u(r) || d.error(new t(\"mapview-query-error\", \"Encountered error when fetching tile\", {\n        tile: e,\n        error: r\n      }));\n    }).then(() => r.end());\n  }\n\n  unsubscribe(e) {\n    super.unsubscribe(e);\n  }\n\n  readers(e) {\n    return this._subscriptions.get(e).readers();\n  }\n\n  async query(e) {\n    return this._adapter.executeQuery(e, {\n      query: this._schema.customParameters\n    });\n  }\n\n  async queryLastEditDate() {\n    const t = this._serviceInfo.source,\n          r = { ...t.query,\n      f: \"json\"\n    };\n    return (await e(t.path, {\n      query: r,\n      responseType: \"json\"\n    })).data.editingInfo.lastEditDate;\n  }\n\n  createTileQuery(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var s;\n    const i = this._serviceInfo.geometryType,\n          a = this.createQuery(t);\n    a.quantizationParameters = null != (s = t.quantizationParameters) ? s : e.getQuantizationParameters(), a.resultType = \"tile\", a.geometry = e.extent, this._serviceInfo.capabilities.query.supportsQuantization ? \"esriGeometryPolyline\" === i && (a.maxAllowableOffset = e.resolution * r(\"feature-polyline-generalization-factor\")) : \"esriGeometryPolyline\" !== i && \"esriGeometryPolygon\" !== i || (a.maxAllowableOffset = e.resolution, \"esriGeometryPolyline\" === i && (a.maxAllowableOffset *= r(\"feature-polyline-generalization-factor\")));\n    const o = this._serviceInfo.capabilities.query;\n    return a.defaultSpatialReferenceEnabled = o.supportsDefaultSpatialReference, a.compactGeometryEnabled = o.supportsCompactGeometry, a;\n  }\n\n  async _executePatchQuery(e, t, r, s) {\n    const a = t.clone();\n    a.outFields = [this._serviceInfo.objectIdField, ...r], a.returnCentroid = !1, a.returnGeometry = !1;\n    const o = i(a.start) ? a.start / 8e3 : 0,\n          n = s.signal;\n    return this._patchQueue.push({\n      tile: e,\n      query: a,\n      signal: n,\n      depth: o\n    });\n  }\n\n  async _resend(e, t) {\n    const {\n      query: r,\n      message: s\n    } = e,\n          a = i(r.outFields) ? r.outFields : [],\n          u = this._queryInfo.outFields,\n          c = u.filter(e => !a.includes(e));\n    if (o(s.addOrUpdate)) this._onMessage({ ...s,\n      type: \"append\"\n    });else if (c.length) try {\n      const e = this._subscriptions.get(s.id).tile,\n            i = await this._executePatchQuery(e, r, c, t);\n\n      n(t), r.outFields = u, s.addOrUpdate.joinAttributes(i), this._onMessage({ ...s,\n        end: s.end,\n        type: \"append\"\n      });\n    } catch (l) {} else this._onMessage({ ...s,\n      type: \"append\"\n    });\n  }\n\n  async _resendSubscription(e) {\n    if (e.empty) return this._onMessage({\n      id: e.tile.id,\n      addOrUpdate: null,\n      end: !1,\n      type: \"append\"\n    });\n    const t = e.signal;\n\n    for (const r of e.requests.done) await this._resend(r, {\n      signal: t\n    });\n\n    return i(e.edits) ? this._onMessage(e.edits) : void 0;\n  }\n\n  async resend() {\n    const e = Array.from(this._subscriptions.values());\n    await Promise.all(e.map(e => this._resendSubscription(e)));\n  }\n\n}\n\nexport { h as BaseFeatureSource };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/layers/features/sources/BaseFeatureSource.js"],"names":["e","t","r","s","isSome","i","unwrapOr","a","isNone","o","throwIfAborted","n","isAbortError","u","createSourceAdapter","c","DataTileSource","l","QueueProcessor","p","d","getLogger","y","h","constructor","type","mode","_adapter","serviceInfo","_queue","concurrency","process","tile","key","id","signal","replace","depth","executeQuery","query","_schema","customParameters","level","_patchQueue","destroy","updating","length","Array","from","_subscriptions","values","some","done","maxRecordCountFactor","_serviceInfo","capabilities","supportsMaxRecordCountFactor","maxPageSize","maxRecordCount","pageSize","Math","min","enableEvent","subscribe","get","_fetchDataTile","catch","error","then","end","unsubscribe","readers","queryLastEditDate","source","f","path","responseType","data","editingInfo","lastEditDate","createTileQuery","geometryType","createQuery","quantizationParameters","getQuantizationParameters","resultType","geometry","extent","supportsQuantization","maxAllowableOffset","resolution","defaultSpatialReferenceEnabled","supportsDefaultSpatialReference","compactGeometryEnabled","supportsCompactGeometry","_executePatchQuery","clone","outFields","objectIdField","returnCentroid","returnGeometry","start","push","_resend","message","_queryInfo","filter","includes","addOrUpdate","_onMessage","joinAttributes","_resendSubscription","empty","requests","edits","resend","Promise","all","map","BaseFeatureSource"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../request.js\";import t from\"../../../../../core/Error.js\";import r from\"../../../../../core/has.js\";import s from\"../../../../../core/Logger.js\";import{isSome as i,unwrapOr as a,isNone as o}from\"../../../../../core/maybe.js\";import{throwIfAborted as n,isAbortError as u}from\"../../../../../core/promiseUtils.js\";import{createSourceAdapter as c}from\"../controllers/support/sourceAdapters.js\";import{DataTileSource as l}from\"./DataTileSource.js\";import{QueueProcessor as p}from\"../../../../support/QueueProcessor.js\";const d=s.getLogger(\"esri.views.2d.layers.features.sources.BaseFeatureSource\"),y=4;class h extends l{constructor(e){super(e),this.type=\"feature\",this.mode=\"on-demand\",this._adapter=c(e.serviceInfo),this._queue=new p({concurrency:8,process:async e=>{if(n(e),i(e.tile)){const t=e.tile.key.id,{signal:s}=e,i=r(\"esri-tiles-debug\")?{tile:t.replace(/\\//g,\".\"),depth:e.depth}:void 0,a=await this._adapter.executeQuery(e.query,{signal:s,query:{...i,...this._schema.customParameters}});return a.level=e.tile.key.level,a}return this._adapter.executeQuery(e.query,{...e,query:this._schema.customParameters})}}),this._patchQueue=new p({concurrency:8,process:async e=>{if(n(e),i(e.tile)){const t=e.tile.key.id,{signal:s}=e,i=r(\"esri-tiles-debug\")?{tile:t.replace(/\\//g,\".\"),depth:e.depth}:void 0,a=await this._adapter.executeQuery(e.query,{signal:s,query:{...i,...this._schema.customParameters}});return a.level=e.tile.key.level,a}return this._adapter.executeQuery(e.query,{...e,query:this._schema.customParameters})}})}destroy(){super.destroy(),this._adapter.destroy(),this._queue.destroy(),this._patchQueue.destroy()}get updating(){return!!this._queue.length||Array.from(this._subscriptions.values()).some((e=>!e.done))}get maxRecordCountFactor(){const{query:e}=this._serviceInfo.capabilities;return e.supportsMaxRecordCountFactor?y:null}get maxPageSize(){var e;const{query:t}=this._serviceInfo.capabilities;return(null!=(e=t.maxRecordCount)?e:8e3)*a(this.maxRecordCountFactor,1)}get pageSize(){return Math.min(8e3,this.maxPageSize)}enableEvent(e,t){}subscribe(e){super.subscribe(e);const r=this._subscriptions.get(e.id);this._fetchDataTile(e).catch((r=>{u(r)||d.error(new t(\"mapview-query-error\",\"Encountered error when fetching tile\",{tile:e,error:r}))})).then((()=>r.end()))}unsubscribe(e){super.unsubscribe(e)}readers(e){return this._subscriptions.get(e).readers()}async query(e){return this._adapter.executeQuery(e,{query:this._schema.customParameters})}async queryLastEditDate(){const t=this._serviceInfo.source,r={...t.query,f:\"json\"};return(await e(t.path,{query:r,responseType:\"json\"})).data.editingInfo.lastEditDate}createTileQuery(e,t={}){var s;const i=this._serviceInfo.geometryType,a=this.createQuery(t);a.quantizationParameters=null!=(s=t.quantizationParameters)?s:e.getQuantizationParameters(),a.resultType=\"tile\",a.geometry=e.extent,this._serviceInfo.capabilities.query.supportsQuantization?\"esriGeometryPolyline\"===i&&(a.maxAllowableOffset=e.resolution*r(\"feature-polyline-generalization-factor\")):\"esriGeometryPolyline\"!==i&&\"esriGeometryPolygon\"!==i||(a.maxAllowableOffset=e.resolution,\"esriGeometryPolyline\"===i&&(a.maxAllowableOffset*=r(\"feature-polyline-generalization-factor\")));const o=this._serviceInfo.capabilities.query;return a.defaultSpatialReferenceEnabled=o.supportsDefaultSpatialReference,a.compactGeometryEnabled=o.supportsCompactGeometry,a}async _executePatchQuery(e,t,r,s){const a=t.clone();a.outFields=[this._serviceInfo.objectIdField,...r],a.returnCentroid=!1,a.returnGeometry=!1;const o=i(a.start)?a.start/8e3:0,n=s.signal;return this._patchQueue.push({tile:e,query:a,signal:n,depth:o})}async _resend(e,t){const{query:r,message:s}=e,a=i(r.outFields)?r.outFields:[],u=this._queryInfo.outFields,c=u.filter((e=>!a.includes(e)));if(o(s.addOrUpdate))this._onMessage({...s,type:\"append\"});else if(c.length)try{const e=this._subscriptions.get(s.id).tile,i=await this._executePatchQuery(e,r,c,t);n(t),r.outFields=u,s.addOrUpdate.joinAttributes(i),this._onMessage({...s,end:s.end,type:\"append\"})}catch(l){}else this._onMessage({...s,type:\"append\"})}async _resendSubscription(e){if(e.empty)return this._onMessage({id:e.tile.id,addOrUpdate:null,end:!1,type:\"append\"});const t=e.signal;for(const r of e.requests.done)await this._resend(r,{signal:t});return i(e.edits)?this._onMessage(e.edits):void 0}async resend(){const e=Array.from(this._subscriptions.values());await Promise.all(e.map((e=>this._resendSubscription(e))))}}export{h as BaseFeatureSource};\n"]},"metadata":{},"sourceType":"module"}