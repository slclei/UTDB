{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../../../../request.js\";\nimport { result as t } from \"../../../../core/asyncUtils.js\";\nimport r from \"../../../../core/Error.js\";\nimport n from \"../../../../core/Logger.js\";\nimport { isSome as a, unwrap as s } from \"../../../../core/maybe.js\";\nimport { throwIfAbortError as o } from \"../../../../core/promiseUtils.js\";\nimport { Version as i } from \"../../../../core/Version.js\";\nimport { d as u } from \"../../../../chunks/vec3f64.js\";\nimport { empty as l, expandWithVec3 as c } from \"../../../../geometry/support/aaBoundingBox.js\";\nimport { requestImage as p } from \"../../../../support/requestImageUtils.js\";\nimport { CullFaceOptions as m, AlphaDiscardMode as f } from \"../../webgl-engine/lib/basicInterfaces.js\";\nimport { Geometry as d } from \"../../webgl-engine/lib/Geometry.js\";\nimport { Texture as g } from \"../../webgl-engine/lib/Texture.js\";\nimport { DefaultMaterial as y } from \"../../webgl-engine/materials/DefaultMaterial.js\";\nimport { TextureWrapMode as x } from \"../../../webgl/enums.js\";\nconst b = n.getLogger(\"esri.views.3d.layers.graphics.objectResourceUtils\");\n\nasync function w(e, t) {\n  const r = await h(e, t);\n  return {\n    resource: r,\n    textures: await P(r.textureDefinitions, t)\n  };\n}\n\nasync function h(r, n) {\n  const i = a(n) && n.streamDataRequester;\n  if (i) return v(r, i, n);\n  const u = await t(e(r, s(n)));\n  if (!0 === u.ok) return u.value.data;\n  o(u.error), j(u.error);\n}\n\nasync function v(e, r, n) {\n  const a = await t(r.request(e, \"json\", n));\n  if (!0 === a.ok) return a.value;\n  o(a.error), j(a.error.details.url);\n}\n\nfunction j(e) {\n  throw new r(\"\", `Request for object resource failed: ${e}`);\n}\n\nfunction A(e) {\n  const t = e.params,\n        r = t.topology;\n  let n = !0;\n\n  switch (t.vertexAttributes || (b.warn(\"Geometry must specify vertex attributes\"), n = !1), t.topology) {\n    case \"PerAttributeArray\":\n      break;\n\n    case \"Indexed\":\n    case null:\n    case void 0:\n      {\n        const e = t.faces;\n\n        if (e) {\n          if (t.vertexAttributes) for (const r in t.vertexAttributes) {\n            const t = e[r];\n            t && t.values ? (null != t.valueType && \"UInt32\" !== t.valueType && (b.warn(`Unsupported indexed geometry indices type '${t.valueType}', only UInt32 is currently supported`), n = !1), null != t.valuesPerElement && 1 !== t.valuesPerElement && (b.warn(`Unsupported indexed geometry values per element '${t.valuesPerElement}', only 1 is currently supported`), n = !1)) : (b.warn(`Indexed geometry does not specify face indices for '${r}' attribute`), n = !1);\n          }\n        } else b.warn(\"Indexed geometries must specify faces\"), n = !1;\n\n        break;\n      }\n\n    default:\n      b.warn(`Unsupported topology '${r}'`), n = !1;\n  }\n\n  e.params.material || (b.warn(\"Geometry requires material\"), n = !1);\n  const a = e.params.vertexAttributes;\n\n  for (const s in a) {\n    a[s].values || (b.warn(\"Geometries with externally defined attributes are not yet supported\"), n = !1);\n  }\n\n  return n;\n}\n\nfunction M(e, t) {\n  const r = [],\n        n = [],\n        s = [],\n        o = [],\n        l = e.resource,\n        c = i.parse(l.version || \"1.0\", \"wosr\");\n  k.validate(c);\n  const p = l.model.name,\n        f = l.model.geometries,\n        x = l.materialDefinitions,\n        b = e.textures;\n  let w = 0;\n  const h = new Map();\n\n  for (let i = 0; i < f.length; i++) {\n    const e = f[i];\n    if (!A(e)) continue;\n    const l = T(e),\n          c = e.params.vertexAttributes,\n          p = [];\n\n    for (const t in c) {\n      const e = c[t],\n            r = e.values;\n      p.push([t, {\n        data: r,\n        size: e.valuesPerElement,\n        exclusive: !0\n      }]);\n    }\n\n    const v = [];\n\n    if (\"PerAttributeArray\" !== e.params.topology) {\n      const t = e.params.faces;\n\n      for (const e in t) v.push([e, new Uint32Array(t[e].values)]);\n    }\n\n    const j = b && b[l.texture];\n\n    if (j && !h.has(l.texture)) {\n      const {\n        image: e,\n        params: t\n      } = j,\n            r = new g(e, t);\n      o.push(r), h.set(l.texture, r);\n    }\n\n    const M = h.get(l.texture),\n          U = M ? M.id : void 0;\n    let P = s[l.material] ? s[l.material][l.texture] : null;\n\n    if (!P) {\n      const e = x[l.material.substring(l.material.lastIndexOf(\"/\") + 1)].params;\n      1 === e.transparency && (e.transparency = 0);\n      const r = j && j.alphaChannelUsage,\n            n = e.transparency > 0 || \"transparency\" === r || \"maskAndTransparency\" === r,\n            o = j ? I(j.alphaChannelUsage) : void 0,\n            i = {\n        ambient: u(e.diffuse),\n        diffuse: u(e.diffuse),\n        opacity: 1 - (e.transparency || 0),\n        transparent: n,\n        textureAlphaMode: o,\n        textureAlphaCutoff: .33,\n        textureId: U,\n        initTextureTransparent: !0,\n        doubleSided: !0,\n        cullFace: m.None,\n        colorMixMode: e.externalColorMixMode || \"tint\",\n        textureAlphaPremultiplied: !!j && !!j.params.preMultiplyAlpha\n      };\n      a(t) && t.materialParamsMixin && Object.assign(i, t.materialParamsMixin), P = new y(i), s[l.material] || (s[l.material] = {}), s[l.material][l.texture] = P;\n    }\n\n    n.push(P);\n    const k = new d(p, v);\n    w += v.position ? v.position.length : 0, r.push(k);\n  }\n\n  return {\n    name: p,\n    stageResources: {\n      textures: o,\n      materials: n,\n      geometries: r\n    },\n    pivotOffset: l.model.pivotOffset,\n    boundingBox: U(r),\n    numberOfVertices: w,\n    lodThreshold: null\n  };\n}\n\nfunction U(e) {\n  const t = l();\n  return e.forEach(e => {\n    const r = e.boundingInfo;\n    a(r) && (c(t, r.getBBMin()), c(t, r.getBBMax()));\n  }), t;\n}\n\nasync function P(e, t) {\n  const r = [];\n\n  for (const o in e) {\n    const n = e[o],\n          s = n.images[0].data;\n\n    if (!s) {\n      b.warn(\"Externally referenced texture data is not yet supported\");\n      continue;\n    }\n\n    const i = n.encoding + \";base64,\" + s,\n          u = \"/textureDefinitions/\" + o,\n          l = \"rgba\" === n.channels ? n.alphaChannelUsage || \"transparency\" : \"none\",\n          c = {\n      noUnpackFlip: !0,\n      wrap: {\n        s: x.REPEAT,\n        t: x.REPEAT\n      },\n      preMultiplyAlpha: I(l) !== f.Opaque\n    },\n          m = a(t) && t.disableTextures ? Promise.resolve(null) : p(i, t);\n    r.push(m.then(e => ({\n      refId: u,\n      image: e,\n      params: c,\n      alphaChannelUsage: l\n    })));\n  }\n\n  const n = await Promise.all(r),\n        s = {};\n\n  for (const a of n) s[a.refId] = a;\n\n  return s;\n}\n\nfunction I(e) {\n  switch (e) {\n    case \"mask\":\n      return f.Mask;\n\n    case \"maskAndTransparency\":\n      return f.MaskBlend;\n\n    case \"none\":\n      return f.Opaque;\n\n    default:\n      return f.Blend;\n  }\n}\n\nfunction T(e) {\n  const t = e.params;\n  return {\n    id: 1,\n    material: t.material,\n    texture: t.texture,\n    region: t.texture\n  };\n}\n\nconst k = new i(1, 2, \"wosr\");\nexport { P as createTextureResources, w as load, M as processLoadResult };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/3d/layers/graphics/wosrLoader.js"],"names":["e","result","t","r","n","isSome","a","unwrap","s","throwIfAbortError","o","Version","i","d","u","empty","l","expandWithVec3","c","requestImage","p","CullFaceOptions","m","AlphaDiscardMode","f","Geometry","Texture","g","DefaultMaterial","y","TextureWrapMode","x","b","getLogger","w","h","resource","textures","P","textureDefinitions","streamDataRequester","v","ok","value","data","error","j","request","details","url","A","params","topology","vertexAttributes","warn","faces","values","valueType","valuesPerElement","material","M","parse","version","k","validate","model","name","geometries","materialDefinitions","Map","length","T","push","size","exclusive","Uint32Array","texture","has","image","set","get","U","id","substring","lastIndexOf","transparency","alphaChannelUsage","I","ambient","diffuse","opacity","transparent","textureAlphaMode","textureAlphaCutoff","textureId","initTextureTransparent","doubleSided","cullFace","None","colorMixMode","externalColorMixMode","textureAlphaPremultiplied","preMultiplyAlpha","materialParamsMixin","Object","assign","position","stageResources","materials","pivotOffset","boundingBox","numberOfVertices","lodThreshold","forEach","boundingInfo","getBBMin","getBBMax","images","encoding","channels","noUnpackFlip","wrap","REPEAT","Opaque","disableTextures","Promise","resolve","then","refId","all","Mask","MaskBlend","Blend","region","createTextureResources","load","processLoadResult"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../../../request.js\";import{result as t}from\"../../../../core/asyncUtils.js\";import r from\"../../../../core/Error.js\";import n from\"../../../../core/Logger.js\";import{isSome as a,unwrap as s}from\"../../../../core/maybe.js\";import{throwIfAbortError as o}from\"../../../../core/promiseUtils.js\";import{Version as i}from\"../../../../core/Version.js\";import{d as u}from\"../../../../chunks/vec3f64.js\";import{empty as l,expandWithVec3 as c}from\"../../../../geometry/support/aaBoundingBox.js\";import{requestImage as p}from\"../../../../support/requestImageUtils.js\";import{CullFaceOptions as m,AlphaDiscardMode as f}from\"../../webgl-engine/lib/basicInterfaces.js\";import{Geometry as d}from\"../../webgl-engine/lib/Geometry.js\";import{Texture as g}from\"../../webgl-engine/lib/Texture.js\";import{DefaultMaterial as y}from\"../../webgl-engine/materials/DefaultMaterial.js\";import{TextureWrapMode as x}from\"../../../webgl/enums.js\";const b=n.getLogger(\"esri.views.3d.layers.graphics.objectResourceUtils\");async function w(e,t){const r=await h(e,t);return{resource:r,textures:await P(r.textureDefinitions,t)}}async function h(r,n){const i=a(n)&&n.streamDataRequester;if(i)return v(r,i,n);const u=await t(e(r,s(n)));if(!0===u.ok)return u.value.data;o(u.error),j(u.error)}async function v(e,r,n){const a=await t(r.request(e,\"json\",n));if(!0===a.ok)return a.value;o(a.error),j(a.error.details.url)}function j(e){throw new r(\"\",`Request for object resource failed: ${e}`)}function A(e){const t=e.params,r=t.topology;let n=!0;switch(t.vertexAttributes||(b.warn(\"Geometry must specify vertex attributes\"),n=!1),t.topology){case\"PerAttributeArray\":break;case\"Indexed\":case null:case void 0:{const e=t.faces;if(e){if(t.vertexAttributes)for(const r in t.vertexAttributes){const t=e[r];t&&t.values?(null!=t.valueType&&\"UInt32\"!==t.valueType&&(b.warn(`Unsupported indexed geometry indices type '${t.valueType}', only UInt32 is currently supported`),n=!1),null!=t.valuesPerElement&&1!==t.valuesPerElement&&(b.warn(`Unsupported indexed geometry values per element '${t.valuesPerElement}', only 1 is currently supported`),n=!1)):(b.warn(`Indexed geometry does not specify face indices for '${r}' attribute`),n=!1)}}else b.warn(\"Indexed geometries must specify faces\"),n=!1;break}default:b.warn(`Unsupported topology '${r}'`),n=!1}e.params.material||(b.warn(\"Geometry requires material\"),n=!1);const a=e.params.vertexAttributes;for(const s in a){a[s].values||(b.warn(\"Geometries with externally defined attributes are not yet supported\"),n=!1)}return n}function M(e,t){const r=[],n=[],s=[],o=[],l=e.resource,c=i.parse(l.version||\"1.0\",\"wosr\");k.validate(c);const p=l.model.name,f=l.model.geometries,x=l.materialDefinitions,b=e.textures;let w=0;const h=new Map;for(let i=0;i<f.length;i++){const e=f[i];if(!A(e))continue;const l=T(e),c=e.params.vertexAttributes,p=[];for(const t in c){const e=c[t],r=e.values;p.push([t,{data:r,size:e.valuesPerElement,exclusive:!0}])}const v=[];if(\"PerAttributeArray\"!==e.params.topology){const t=e.params.faces;for(const e in t)v.push([e,new Uint32Array(t[e].values)])}const j=b&&b[l.texture];if(j&&!h.has(l.texture)){const{image:e,params:t}=j,r=new g(e,t);o.push(r),h.set(l.texture,r)}const M=h.get(l.texture),U=M?M.id:void 0;let P=s[l.material]?s[l.material][l.texture]:null;if(!P){const e=x[l.material.substring(l.material.lastIndexOf(\"/\")+1)].params;1===e.transparency&&(e.transparency=0);const r=j&&j.alphaChannelUsage,n=e.transparency>0||\"transparency\"===r||\"maskAndTransparency\"===r,o=j?I(j.alphaChannelUsage):void 0,i={ambient:u(e.diffuse),diffuse:u(e.diffuse),opacity:1-(e.transparency||0),transparent:n,textureAlphaMode:o,textureAlphaCutoff:.33,textureId:U,initTextureTransparent:!0,doubleSided:!0,cullFace:m.None,colorMixMode:e.externalColorMixMode||\"tint\",textureAlphaPremultiplied:!!j&&!!j.params.preMultiplyAlpha};a(t)&&t.materialParamsMixin&&Object.assign(i,t.materialParamsMixin),P=new y(i),s[l.material]||(s[l.material]={}),s[l.material][l.texture]=P}n.push(P);const k=new d(p,v);w+=v.position?v.position.length:0,r.push(k)}return{name:p,stageResources:{textures:o,materials:n,geometries:r},pivotOffset:l.model.pivotOffset,boundingBox:U(r),numberOfVertices:w,lodThreshold:null}}function U(e){const t=l();return e.forEach((e=>{const r=e.boundingInfo;a(r)&&(c(t,r.getBBMin()),c(t,r.getBBMax()))})),t}async function P(e,t){const r=[];for(const o in e){const n=e[o],s=n.images[0].data;if(!s){b.warn(\"Externally referenced texture data is not yet supported\");continue}const i=n.encoding+\";base64,\"+s,u=\"/textureDefinitions/\"+o,l=\"rgba\"===n.channels?n.alphaChannelUsage||\"transparency\":\"none\",c={noUnpackFlip:!0,wrap:{s:x.REPEAT,t:x.REPEAT},preMultiplyAlpha:I(l)!==f.Opaque},m=a(t)&&t.disableTextures?Promise.resolve(null):p(i,t);r.push(m.then((e=>({refId:u,image:e,params:c,alphaChannelUsage:l}))))}const n=await Promise.all(r),s={};for(const a of n)s[a.refId]=a;return s}function I(e){switch(e){case\"mask\":return f.Mask;case\"maskAndTransparency\":return f.MaskBlend;case\"none\":return f.Opaque;default:return f.Blend}}function T(e){const t=e.params;return{id:1,material:t.material,texture:t.texture,region:t.texture}}const k=new i(1,2,\"wosr\");export{P as createTextureResources,w as load,M as processLoadResult};\n"]},"metadata":{},"sourceType":"module"}