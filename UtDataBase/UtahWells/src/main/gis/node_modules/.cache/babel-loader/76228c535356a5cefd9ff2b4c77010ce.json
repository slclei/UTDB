{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { isSome as t, isNone as e } from \"../../../../../core/maybe.js\";\nimport { HITTEST_RADIUS as i, ATTRIBUTE_DATA_GPGPU as s } from \"../definitions.js\";\nimport { Effect as o } from \"./Effect.js\";\nimport { PixelFormat as n, PixelType as r } from \"../../../../webgl/enums.js\";\n\nclass l extends o {\n  constructor() {\n    super(...arguments), this.name = this.constructor.name, this.defines = [\"hittest\"];\n  }\n\n  dispose() {\n    t(this._fbo) && this._fbo.dispose();\n  }\n\n  createOptions(_ref, e) {\n    let {\n      pixelRatio: t\n    } = _ref;\n    let s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : i;\n    if (!e.length) return null;\n    const o = e.shift(),\n          n = o.point.x,\n          r = o.point.y;\n    return this._outstanding = o, {\n      type: \"hittest\",\n      distance: s * t,\n      position: [n, r]\n    };\n  }\n\n  bind(t) {\n    const {\n      context: i,\n      attributeView: o\n    } = t;\n    if (!o.size) return;\n    const n = o.getBlock(s);\n    if (e(n)) return;\n    const r = n.getFBO(i);\n    i.setViewport(0, 0, o.size, o.size), i.bindFramebuffer(r), i.setColorMask(!0, !0, !0, !0), i.setClearColor(0, 0, 0, 0), i.clear(i.gl.COLOR_BUFFER_BIT | i.gl.DEPTH_BUFFER_BIT);\n  }\n\n  unbind(t) {}\n\n  draw(t) {\n    const {\n      context: i,\n      attributeView: o\n    } = t,\n          l = o.getBlock(s);\n    if (e(this._outstanding)) return;\n    const u = this._outstanding.resolver;\n    if (e(l)) return u.resolve([]), void (this._outstanding = null);\n    const c = l.getFBO(i),\n          h = new Uint8Array(c.width * c.height * 4);\n    c.readPixels(0, 0, c.width, c.height, n.RGBA, r.UNSIGNED_BYTE, h);\n    const a = [];\n\n    for (let e = 0; e < h.length; e += 4) h[e] && a.push(e / 4);\n\n    this._outstanding = null, u.resolve(a);\n  }\n\n}\n\nexport { l as HittestEffect };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/webgl/effects/HittestEffect.js"],"names":["isSome","t","isNone","e","HITTEST_RADIUS","i","ATTRIBUTE_DATA_GPGPU","s","Effect","o","PixelFormat","n","PixelType","r","l","constructor","arguments","name","defines","dispose","_fbo","createOptions","pixelRatio","length","shift","point","x","y","_outstanding","type","distance","position","bind","context","attributeView","size","getBlock","getFBO","setViewport","bindFramebuffer","setColorMask","setClearColor","clear","gl","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","unbind","draw","u","resolver","resolve","c","h","Uint8Array","width","height","readPixels","RGBA","UNSIGNED_BYTE","a","push","HittestEffect"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{isSome as t,isNone as e}from\"../../../../../core/maybe.js\";import{HITTEST_RADIUS as i,ATTRIBUTE_DATA_GPGPU as s}from\"../definitions.js\";import{Effect as o}from\"./Effect.js\";import{PixelFormat as n,PixelType as r}from\"../../../../webgl/enums.js\";class l extends o{constructor(){super(...arguments),this.name=this.constructor.name,this.defines=[\"hittest\"]}dispose(){t(this._fbo)&&this._fbo.dispose()}createOptions({pixelRatio:t},e,s=i){if(!e.length)return null;const o=e.shift(),n=o.point.x,r=o.point.y;return this._outstanding=o,{type:\"hittest\",distance:s*t,position:[n,r]}}bind(t){const{context:i,attributeView:o}=t;if(!o.size)return;const n=o.getBlock(s);if(e(n))return;const r=n.getFBO(i);i.setViewport(0,0,o.size,o.size),i.bindFramebuffer(r),i.setColorMask(!0,!0,!0,!0),i.setClearColor(0,0,0,0),i.clear(i.gl.COLOR_BUFFER_BIT|i.gl.DEPTH_BUFFER_BIT)}unbind(t){}draw(t){const{context:i,attributeView:o}=t,l=o.getBlock(s);if(e(this._outstanding))return;const u=this._outstanding.resolver;if(e(l))return u.resolve([]),void(this._outstanding=null);const c=l.getFBO(i),h=new Uint8Array(c.width*c.height*4);c.readPixels(0,0,c.width,c.height,n.RGBA,r.UNSIGNED_BYTE,h);const a=[];for(let e=0;e<h.length;e+=4)h[e]&&a.push(e/4);this._outstanding=null,u.resolve(a)}}export{l as HittestEffect};\n"]},"metadata":{},"sourceType":"module"}