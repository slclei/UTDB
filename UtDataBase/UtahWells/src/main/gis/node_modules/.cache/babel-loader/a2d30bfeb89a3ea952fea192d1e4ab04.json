{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport r from \"../../config.js\";\nimport e from \"../../core/Error.js\";\nimport t from \"../Portal.js\";\nimport { project as o } from \"../../rest/geometryService/project.js\";\nimport n from \"../../rest/support/ProjectParameters.js\";\n\nasync function i() {\n  let o = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let n = arguments.length > 1 ? arguments[1] : undefined;\n  var i, l;\n  if (r.geometryServiceUrl) return r.geometryServiceUrl;\n  if (!o) throw new e(\"internal:geometry-service-url-not-configured\");\n  let a;\n  a = \"portal\" in o ? o.portal || t.getDefault() : o, await a.load({\n    signal: n\n  });\n  const c = null == (i = a.helperServices) || null == (l = i.geometry) ? void 0 : l.url;\n  if (!c) throw new e(\"internal:geometry-service-url-not-configured\");\n  return c;\n}\n\nasync function l(r, t) {\n  let l = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let a = arguments.length > 3 ? arguments[3] : undefined;\n  const c = await i(l, a),\n        s = new n();\n  s.geometries = [r], s.outSpatialReference = t;\n  const m = await o(c, s, {\n    signal: a\n  });\n  if (m && Array.isArray(m) && 1 === m.length) return m[0];\n  throw new e(\"internal:geometry-service-projection-failed\");\n}\n\nexport { i as getGeometryServiceURL, l as projectGeometry };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/portal/support/geometryServiceUtils.js"],"names":["r","e","t","project","o","n","i","l","geometryServiceUrl","a","portal","getDefault","load","signal","c","helperServices","geometry","url","s","geometries","outSpatialReference","m","Array","isArray","length","getGeometryServiceURL","projectGeometry"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAP,MAAa,iBAAb;AAA+B,OAAOC,CAAP,MAAa,qBAAb;AAAmC,OAAOC,CAAP,MAAa,cAAb;AAA4B,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,uCAAxB;AAAgE,OAAOC,CAAP,MAAa,yCAAb;;AAAuD,eAAeC,CAAf,GAA0B;AAAA,MAATF,CAAS,uEAAP,IAAO;AAAA,MAAFC,CAAE;AAAC,MAAIC,CAAJ,EAAMC,CAAN;AAAQ,MAAGP,CAAC,CAACQ,kBAAL,EAAwB,OAAOR,CAAC,CAACQ,kBAAT;AAA4B,MAAG,CAACJ,CAAJ,EAAM,MAAM,IAAIH,CAAJ,CAAM,8CAAN,CAAN;AAA4D,MAAIQ,CAAJ;AAAMA,EAAAA,CAAC,GAAC,YAAWL,CAAX,GAAaA,CAAC,CAACM,MAAF,IAAUR,CAAC,CAACS,UAAF,EAAvB,GAAsCP,CAAxC,EAA0C,MAAMK,CAAC,CAACG,IAAF,CAAO;AAACC,IAAAA,MAAM,EAACR;AAAR,GAAP,CAAhD;AAAmE,QAAMS,CAAC,GAAC,SAAOR,CAAC,GAACG,CAAC,CAACM,cAAX,KAA4B,SAAOR,CAAC,GAACD,CAAC,CAACU,QAAX,CAA5B,GAAiD,KAAK,CAAtD,GAAwDT,CAAC,CAACU,GAAlE;AAAsE,MAAG,CAACH,CAAJ,EAAM,MAAM,IAAIb,CAAJ,CAAM,8CAAN,CAAN;AAA4D,SAAOa,CAAP;AAAS;;AAAA,eAAeP,CAAf,CAAiBP,CAAjB,EAAmBE,CAAnB,EAA8B;AAAA,MAATK,CAAS,uEAAP,IAAO;AAAA,MAAFE,CAAE;AAAC,QAAMK,CAAC,GAAC,MAAMR,CAAC,CAACC,CAAD,EAAGE,CAAH,CAAf;AAAA,QAAqBS,CAAC,GAAC,IAAIb,CAAJ,EAAvB;AAA6Ba,EAAAA,CAAC,CAACC,UAAF,GAAa,CAACnB,CAAD,CAAb,EAAiBkB,CAAC,CAACE,mBAAF,GAAsBlB,CAAvC;AAAyC,QAAMmB,CAAC,GAAC,MAAMjB,CAAC,CAACU,CAAD,EAAGI,CAAH,EAAK;AAACL,IAAAA,MAAM,EAACJ;AAAR,GAAL,CAAf;AAAgC,MAAGY,CAAC,IAAEC,KAAK,CAACC,OAAN,CAAcF,CAAd,CAAH,IAAqB,MAAIA,CAAC,CAACG,MAA9B,EAAqC,OAAOH,CAAC,CAAC,CAAD,CAAR;AAAY,QAAM,IAAIpB,CAAJ,CAAM,6CAAN,CAAN;AAA2D;;AAAA,SAAOK,CAAC,IAAImB,qBAAZ,EAAkClB,CAAC,IAAImB,eAAvC","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport r from\"../../config.js\";import e from\"../../core/Error.js\";import t from\"../Portal.js\";import{project as o}from\"../../rest/geometryService/project.js\";import n from\"../../rest/support/ProjectParameters.js\";async function i(o=null,n){var i,l;if(r.geometryServiceUrl)return r.geometryServiceUrl;if(!o)throw new e(\"internal:geometry-service-url-not-configured\");let a;a=\"portal\"in o?o.portal||t.getDefault():o,await a.load({signal:n});const c=null==(i=a.helperServices)||null==(l=i.geometry)?void 0:l.url;if(!c)throw new e(\"internal:geometry-service-url-not-configured\");return c}async function l(r,t,l=null,a){const c=await i(l,a),s=new n;s.geometries=[r],s.outSpatialReference=t;const m=await o(c,s,{signal:a});if(m&&Array.isArray(m)&&1===m.length)return m[0];throw new e(\"internal:geometry-service-projection-failed\")}export{i as getGeometryServiceURL,l as projectGeometry};\n"]},"metadata":{},"sourceType":"module"}