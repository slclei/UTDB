{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../chunks/tslib.es6.js\";\nimport r from \"../PopupTemplate.js\";\nimport { read as t, rasterRendererTypes as o, websceneRasterRendererTypes as i } from \"../rasterRenderers.js\";\nimport s from \"../core/Error.js\";\nimport { isSome as a } from \"../core/maybe.js\";\nimport { MultiOriginJSONMixin as n } from \"../core/MultiOriginJSONSupport.js\";\nimport { throwIfAbortError as l } from \"../core/promiseUtils.js\";\nimport { property as p } from \"../core/accessorSupport/decorators/property.js\";\nimport \"../core/arrayUtils.js\";\nimport \"../core/has.js\";\nimport { Integer as d } from \"../core/accessorSupport/ensureType.js\";\nimport { enumeration as u } from \"../core/accessorSupport/decorators/enumeration.js\";\nimport { reader as m } from \"../core/accessorSupport/decorators/reader.js\";\nimport { subclass as c } from \"../core/accessorSupport/decorators/subclass.js\";\nimport y from \"./Layer.js\";\nimport { BlendLayer as h } from \"./mixins/BlendLayer.js\";\nimport { CustomParametersMixin as f } from \"./mixins/CustomParametersMixin.js\";\nimport { ImageryTileMixin as v } from \"./mixins/ImageryTileMixin.js\";\nimport { OperationalLayer as g } from \"./mixins/OperationalLayer.js\";\nimport { PortalLayer as j } from \"./mixins/PortalLayer.js\";\nimport { RefreshableLayer as b } from \"./mixins/RefreshableLayer.js\";\nimport { ScaleRangeLayer as S } from \"./mixins/ScaleRangeLayer.js\";\nimport { TemporalLayer as T } from \"./mixins/TemporalLayer.js\";\nimport { legendEnabled as w } from \"./support/commonProperties.js\";\nimport P from \"./support/Field.js\";\nimport { interpolationKebab as I } from \"./support/rasterEnums.js\";\nimport R from \"./support/rasterDatasets/RasterFactory.js\";\nimport { createPopupTemplate as O } from \"../support/popupUtils.js\";\nlet x = class extends h(S(g(j(f(v(T(b(n(y))))))))) {\n  constructor() {\n    super(...arguments), this.bandIds = null, this.interpolation = null, this.legendEnabled = !0, this.isReference = null, this.listMode = \"show\", this.sourceJSON = null, this.version = null, this.title = null, this.type = \"imagery-tile\", this.operationalLayerType = \"ArcGISTiledImageServiceLayer\", this.popupEnabled = !0, this.popupTemplate = null, this.fields = null;\n  }\n\n  normalizeCtorArgs(e, r) {\n    return \"string\" == typeof e ? {\n      url: e,\n      ...r\n    } : e;\n  }\n\n  load(e) {\n    const r = a(e) ? e.signal : null;\n    return this.addResolvingPromise(this.loadFromPortal({\n      supportedTypes: [\"Image Service\"]\n    }, e).catch(l).then(() => this._openRaster(r))), Promise.resolve(this);\n  }\n\n  get defaultPopupTemplate() {\n    return this.createPopupTemplate();\n  }\n\n  get rasterFields() {\n    var e, r;\n    let t = [new P({\n      name: \"Raster.ServicePixelValue\",\n      alias: \"Pixel Value\",\n      domain: null,\n      editable: !1,\n      length: 50,\n      type: \"string\"\n    })];\n    const o = null == (e = this.rasterInfo) || null == (r = e.attributeTable) ? void 0 : r.fields,\n          i = \"Raster.\";\n\n    if (o) {\n      const e = o.filter(e => \"oid\" !== e.type && \"value\" !== e.name.toLowerCase()).map(e => {\n        const r = e.clone();\n        return r.name = i + e.name, r;\n      });\n      t = t.concat(e);\n    }\n\n    const s = this.rasterInfo.dataType;\n\n    if ((\"vector-magdir\" === s || \"vector-uv\" === s) && a(this.rasterInfo.multidimensionalInfo)) {\n      var n;\n      const e = null == (n = this.rasterInfo.multidimensionalInfo.variables[0].unit) ? void 0 : n.trim(),\n            r = \"Magnitude\" + (e ? ` (${e})` : \"\");\n      t.push(new P({\n        name: \"Raster.Magnitude\",\n        alias: r,\n        domain: null,\n        editable: !1,\n        type: \"double\"\n      })), t.push(new P({\n        name: \"Raster.Direction\",\n        alias: \"Direction (Â°)\",\n        domain: null,\n        editable: !1,\n        type: \"double\"\n      }));\n    }\n\n    return t;\n  }\n\n  set renderer(e) {\n    this._set(\"renderer\", e), this.updateRenderer();\n  }\n\n  readRenderer(e, r, o) {\n    const i = r && r.layerDefinition && r.layerDefinition.drawingInfo && r.layerDefinition.drawingInfo.renderer,\n          s = t(i, o) || void 0;\n    if (null != s) return s;\n  }\n\n  createPopupTemplate(e) {\n    return O({\n      fields: this.rasterFields,\n      title: this.title\n    }, e);\n  }\n\n  write(e, r) {\n    const {\n      raster: t\n    } = this;\n    if (this.loaded ? \"RasterTileServer\" === t.datasetFormat && (\"Raster\" === t.tileType || \"Map\" === t.tileType) : this.url && /\\/ImageServer(\\/|\\/?$)/i.test(this.url)) return super.write(e, r);\n\n    if (r && r.messages) {\n      const e = `${r.origin}/${r.layerContainerType || \"operational-layers\"}`;\n      r.messages.push(new s(\"layer:unsupported\", `Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`, {\n        layer: this\n      }));\n    }\n\n    return null;\n  }\n\n  async _openRaster(e) {\n    this.raster ? (this.raster.rasterInfo || (await this.raster.open()), this.url = this.raster.url) : this.raster = await R.open({\n      url: this.url,\n      sourceJSON: this.sourceJSON,\n      ioConfig: {\n        sampling: \"closest\",\n        ...this.ioConfig,\n        customFetchParameters: this.customParameters\n      },\n      signal: e\n    });\n    const {\n      rasterInfo: r\n    } = this.raster;\n    if (!r) throw new s(\"imagery-tile-layer:load\", \"cannot load resources on \" + this.url);\n\n    if (this.sourceJSON = this.sourceJSON || this.raster.sourceJSON, null != this.sourceJSON) {\n      const e = \"Map\" === this.raster.tileType && null != this.sourceJSON.minLOD && null != this.sourceJSON.maxLOD ? this.sourceJSON : { ...this.sourceJSON,\n        minScale: 0,\n        maxScale: 0\n      };\n      this.read(e, {\n        origin: \"service\"\n      });\n    }\n\n    null == this.title && (this.title = this.raster.datasetName), \"Map\" === this.raster.tileType && (this.popupEnabled = !1), this._configDefaultSettings(), this.watch(\"customParameters\", e => this.raster.ioConfig.customFetchParameters = e);\n  }\n\n};\ne([p({\n  type: [d],\n  json: {\n    write: {\n      overridePolicy() {\n        var e;\n        return {\n          enabled: !this.loaded || \"Raster\" === this.raster.tileType || \"0,1,2\" !== (null == (e = this.bandIds) ? void 0 : e.join(\",\"))\n        };\n      }\n\n    }\n  }\n})], x.prototype, \"bandIds\", void 0), e([p({\n  json: {\n    write: {\n      overridePolicy() {\n        return {\n          enabled: !this.loaded || \"Raster\" === this.raster.tileType || \"bilinear\" !== this.interpolation\n        };\n      }\n\n    }\n  }\n}), u(I)], x.prototype, \"interpolation\", void 0), e([p({\n  json: {\n    write: !0\n  }\n})], x.prototype, \"multidimensionalDefinition\", void 0), e([p(w)], x.prototype, \"legendEnabled\", void 0), e([p({\n  type: Boolean,\n  json: {\n    read: !1,\n    write: {\n      enabled: !0,\n      overridePolicy: () => ({\n        enabled: !1\n      })\n    }\n  }\n})], x.prototype, \"isReference\", void 0), e([p({\n  type: [\"show\", \"hide\"]\n})], x.prototype, \"listMode\", void 0), e([p()], x.prototype, \"sourceJSON\", void 0), e([p({\n  readOnly: !0,\n  json: {\n    origins: {\n      service: {\n        read: {\n          source: \"currentVersion\"\n        }\n      }\n    }\n  }\n})], x.prototype, \"version\", void 0), e([p()], x.prototype, \"title\", void 0), e([p({\n  readOnly: !0,\n  json: {\n    read: !1\n  }\n})], x.prototype, \"type\", void 0), e([p({\n  type: [\"ArcGISTiledImageServiceLayer\"]\n})], x.prototype, \"operationalLayerType\", void 0), e([p({\n  type: Boolean,\n  value: !0,\n  json: {\n    read: {\n      source: \"disablePopup\",\n      reader: (e, r) => !r.disablePopup\n    },\n    write: {\n      target: \"disablePopup\",\n\n      overridePolicy() {\n        return {\n          enabled: !this.loaded || \"Raster\" === this.raster.tileType\n        };\n      },\n\n      writer(e, r, t) {\n        r[t] = !e;\n      }\n\n    }\n  }\n})], x.prototype, \"popupEnabled\", void 0), e([p({\n  type: r,\n  json: {\n    read: {\n      source: \"popupInfo\"\n    },\n    write: {\n      target: \"popupInfo\",\n\n      overridePolicy() {\n        return {\n          enabled: !this.loaded || \"Raster\" === this.raster.tileType\n        };\n      }\n\n    }\n  }\n})], x.prototype, \"popupTemplate\", void 0), e([p({\n  readOnly: !0\n})], x.prototype, \"defaultPopupTemplate\", null), e([p({\n  readOnly: !0,\n  type: [P]\n})], x.prototype, \"fields\", void 0), e([p({\n  readOnly: !0,\n  type: [P]\n})], x.prototype, \"rasterFields\", null), e([p({\n  types: o,\n  json: {\n    name: \"layerDefinition.drawingInfo.renderer\",\n    write: {\n      overridePolicy() {\n        var e;\n        const r = \"raster-stretch\" === (null == (e = this.renderer) ? void 0 : e.type) && \"none\" === this.renderer.stretchType && !this.renderer.useGamma;\n        return {\n          enabled: !this.loaded || \"Raster\" === this.raster.tileType || !r\n        };\n      }\n\n    },\n    origins: {\n      \"web-scene\": {\n        types: i,\n        name: \"layerDefinition.drawingInfo.renderer\",\n        write: {\n          overridePolicy: e => ({\n            enabled: e && \"vector-field\" !== e.type && \"flow\" !== e.type\n          })\n        }\n      }\n    }\n  }\n})], x.prototype, \"renderer\", null), e([m(\"renderer\")], x.prototype, \"readRenderer\", null), x = e([c(\"esri.layers.ImageryTileLayer\")], x);\nconst L = x;\nexport { L as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/layers/ImageryTileLayer.js"],"names":["_","e","r","read","t","rasterRendererTypes","o","websceneRasterRendererTypes","i","s","isSome","a","MultiOriginJSONMixin","n","throwIfAbortError","l","property","p","Integer","d","enumeration","u","reader","m","subclass","c","y","BlendLayer","h","CustomParametersMixin","f","ImageryTileMixin","v","OperationalLayer","g","PortalLayer","j","RefreshableLayer","b","ScaleRangeLayer","S","TemporalLayer","T","legendEnabled","w","P","interpolationKebab","I","R","createPopupTemplate","O","x","constructor","bandIds","interpolation","isReference","listMode","sourceJSON","version","title","type","operationalLayerType","popupEnabled","popupTemplate","fields","normalizeCtorArgs","url","load","signal","addResolvingPromise","loadFromPortal","supportedTypes","catch","then","_openRaster","Promise","resolve","defaultPopupTemplate","rasterFields","name","alias","domain","editable","length","rasterInfo","attributeTable","filter","toLowerCase","map","clone","concat","dataType","multidimensionalInfo","variables","unit","trim","push","renderer","_set","updateRenderer","readRenderer","layerDefinition","drawingInfo","write","raster","loaded","datasetFormat","tileType","test","messages","origin","layerContainerType","id","declaredClass","layer","open","ioConfig","sampling","customFetchParameters","customParameters","minLOD","maxLOD","minScale","maxScale","datasetName","_configDefaultSettings","watch","json","overridePolicy","enabled","join","prototype","Boolean","readOnly","origins","service","source","value","disablePopup","target","writer","types","stretchType","useGamma","L","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../chunks/tslib.es6.js\";import r from\"../PopupTemplate.js\";import{read as t,rasterRendererTypes as o,websceneRasterRendererTypes as i}from\"../rasterRenderers.js\";import s from\"../core/Error.js\";import{isSome as a}from\"../core/maybe.js\";import{MultiOriginJSONMixin as n}from\"../core/MultiOriginJSONSupport.js\";import{throwIfAbortError as l}from\"../core/promiseUtils.js\";import{property as p}from\"../core/accessorSupport/decorators/property.js\";import\"../core/arrayUtils.js\";import\"../core/has.js\";import{Integer as d}from\"../core/accessorSupport/ensureType.js\";import{enumeration as u}from\"../core/accessorSupport/decorators/enumeration.js\";import{reader as m}from\"../core/accessorSupport/decorators/reader.js\";import{subclass as c}from\"../core/accessorSupport/decorators/subclass.js\";import y from\"./Layer.js\";import{BlendLayer as h}from\"./mixins/BlendLayer.js\";import{CustomParametersMixin as f}from\"./mixins/CustomParametersMixin.js\";import{ImageryTileMixin as v}from\"./mixins/ImageryTileMixin.js\";import{OperationalLayer as g}from\"./mixins/OperationalLayer.js\";import{PortalLayer as j}from\"./mixins/PortalLayer.js\";import{RefreshableLayer as b}from\"./mixins/RefreshableLayer.js\";import{ScaleRangeLayer as S}from\"./mixins/ScaleRangeLayer.js\";import{TemporalLayer as T}from\"./mixins/TemporalLayer.js\";import{legendEnabled as w}from\"./support/commonProperties.js\";import P from\"./support/Field.js\";import{interpolationKebab as I}from\"./support/rasterEnums.js\";import R from\"./support/rasterDatasets/RasterFactory.js\";import{createPopupTemplate as O}from\"../support/popupUtils.js\";let x=class extends(h(S(g(j(f(v(T(b(n(y)))))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode=\"show\",this.sourceJSON=null,this.version=null,this.title=null,this.type=\"imagery-tile\",this.operationalLayerType=\"ArcGISTiledImageServiceLayer\",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,r){return\"string\"==typeof e?{url:e,...r}:e}load(e){const r=a(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:[\"Image Service\"]},e).catch(l).then((()=>this._openRaster(r)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,r;let t=[new P({name:\"Raster.ServicePixelValue\",alias:\"Pixel Value\",domain:null,editable:!1,length:50,type:\"string\"})];const o=null==(e=this.rasterInfo)||null==(r=e.attributeTable)?void 0:r.fields,i=\"Raster.\";if(o){const e=o.filter((e=>\"oid\"!==e.type&&\"value\"!==e.name.toLowerCase())).map((e=>{const r=e.clone();return r.name=i+e.name,r}));t=t.concat(e)}const s=this.rasterInfo.dataType;if((\"vector-magdir\"===s||\"vector-uv\"===s)&&a(this.rasterInfo.multidimensionalInfo)){var n;const e=null==(n=this.rasterInfo.multidimensionalInfo.variables[0].unit)?void 0:n.trim(),r=\"Magnitude\"+(e?` (${e})`:\"\");t.push(new P({name:\"Raster.Magnitude\",alias:r,domain:null,editable:!1,type:\"double\"})),t.push(new P({name:\"Raster.Direction\",alias:\"Direction (Â°)\",domain:null,editable:!1,type:\"double\"}))}return t}set renderer(e){this._set(\"renderer\",e),this.updateRenderer()}readRenderer(e,r,o){const i=r&&r.layerDefinition&&r.layerDefinition.drawingInfo&&r.layerDefinition.drawingInfo.renderer,s=t(i,o)||void 0;if(null!=s)return s}createPopupTemplate(e){return O({fields:this.rasterFields,title:this.title},e)}write(e,r){const{raster:t}=this;if(this.loaded?\"RasterTileServer\"===t.datasetFormat&&(\"Raster\"===t.tileType||\"Map\"===t.tileType):this.url&&/\\/ImageServer(\\/|\\/?$)/i.test(this.url))return super.write(e,r);if(r&&r.messages){const e=`${r.origin}/${r.layerContainerType||\"operational-layers\"}`;r.messages.push(new s(\"layer:unsupported\",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await R.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:{sampling:\"closest\",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});const{rasterInfo:r}=this.raster;if(!r)throw new s(\"imagery-tile-layer:load\",\"cannot load resources on \"+this.url);if(this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e=\"Map\"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:\"service\"})}null==this.title&&(this.title=this.raster.datasetName),\"Map\"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.watch(\"customParameters\",(e=>this.raster.ioConfig.customFetchParameters=e))}};e([p({type:[d],json:{write:{overridePolicy(){var e;return{enabled:!this.loaded||\"Raster\"===this.raster.tileType||\"0,1,2\"!==(null==(e=this.bandIds)?void 0:e.join(\",\"))}}}}})],x.prototype,\"bandIds\",void 0),e([p({json:{write:{overridePolicy(){return{enabled:!this.loaded||\"Raster\"===this.raster.tileType||\"bilinear\"!==this.interpolation}}}}}),u(I)],x.prototype,\"interpolation\",void 0),e([p({json:{write:!0}})],x.prototype,\"multidimensionalDefinition\",void 0),e([p(w)],x.prototype,\"legendEnabled\",void 0),e([p({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],x.prototype,\"isReference\",void 0),e([p({type:[\"show\",\"hide\"]})],x.prototype,\"listMode\",void 0),e([p()],x.prototype,\"sourceJSON\",void 0),e([p({readOnly:!0,json:{origins:{service:{read:{source:\"currentVersion\"}}}}})],x.prototype,\"version\",void 0),e([p()],x.prototype,\"title\",void 0),e([p({readOnly:!0,json:{read:!1}})],x.prototype,\"type\",void 0),e([p({type:[\"ArcGISTiledImageServiceLayer\"]})],x.prototype,\"operationalLayerType\",void 0),e([p({type:Boolean,value:!0,json:{read:{source:\"disablePopup\",reader:(e,r)=>!r.disablePopup},write:{target:\"disablePopup\",overridePolicy(){return{enabled:!this.loaded||\"Raster\"===this.raster.tileType}},writer(e,r,t){r[t]=!e}}}})],x.prototype,\"popupEnabled\",void 0),e([p({type:r,json:{read:{source:\"popupInfo\"},write:{target:\"popupInfo\",overridePolicy(){return{enabled:!this.loaded||\"Raster\"===this.raster.tileType}}}}})],x.prototype,\"popupTemplate\",void 0),e([p({readOnly:!0})],x.prototype,\"defaultPopupTemplate\",null),e([p({readOnly:!0,type:[P]})],x.prototype,\"fields\",void 0),e([p({readOnly:!0,type:[P]})],x.prototype,\"rasterFields\",null),e([p({types:o,json:{name:\"layerDefinition.drawingInfo.renderer\",write:{overridePolicy(){var e;const r=\"raster-stretch\"===(null==(e=this.renderer)?void 0:e.type)&&\"none\"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||\"Raster\"===this.raster.tileType||!r}}},origins:{\"web-scene\":{types:i,name:\"layerDefinition.drawingInfo.renderer\",write:{overridePolicy:e=>({enabled:e&&\"vector-field\"!==e.type&&\"flow\"!==e.type})}}}}})],x.prototype,\"renderer\",null),e([m(\"renderer\")],x.prototype,\"readRenderer\",null),x=e([c(\"esri.layers.ImageryTileLayer\")],x);const L=x;export{L as default};\n"]},"metadata":{},"sourceType":"module"}