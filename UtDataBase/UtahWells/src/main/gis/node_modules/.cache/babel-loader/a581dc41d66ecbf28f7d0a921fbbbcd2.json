{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../Graphic.js\";\nimport r from \"../../../core/Collection.js\";\nimport s from \"../../../core/Error.js\";\nimport { HandleOwnerMixin as o } from \"../../../core/HandleOwner.js\";\nimport i from \"../../../core/has.js\";\nimport n from \"../../../core/Loadable.js\";\nimport a from \"../../../core/Logger.js\";\nimport { isSome as l, isNone as u } from \"../../../core/maybe.js\";\nimport { EsriPromiseMixin as p } from \"../../../core/Promise.js\";\nimport { open as c } from \"../../../core/workers/workers.js\";\nimport { property as d } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { ensureType as h } from \"../../../core/accessorSupport/ensureType.js\";\nimport { shared as y } from \"../../../core/accessorSupport/decorators/shared.js\";\nimport { subclass as m } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { unapplyEditsZUnitScaling as f } from \"../../../rest/query/operations/editsZScale.js\";\nimport { applyFeatureSetZUnitScaling as g } from \"../../../rest/query/operations/queryZScale.js\";\nimport _ from \"../../../rest/support/FeatureSet.js\";\nimport j from \"../../../geometry/Extent.js\";\nimport S from \"../../../geometry/Polygon.js\";\nimport { typeKebabDictionary as b } from \"../../../geometry/support/typeUtils.js\";\nlet T = 0;\nconst F = a.getLogger(\"esri.layers.graphics.sources.MemorySource\");\nlet G = class extends n.LoadableMixin(p(o(r))) {\n  constructor(e) {\n    super(e), this._idToClientGraphic = null, this.type = \"memory\";\n  }\n\n  load(e) {\n    const t = l(e) ? e.signal : null;\n    return this.addResolvingPromise(this._startWorker(t)), Promise.resolve(this);\n  }\n\n  destroy() {\n    var e;\n    null == (e = this._connection) || e.close(), this._connection = null;\n  }\n\n  get workerGeometryType() {\n    var e;\n    const t = null == (e = this.layer) ? void 0 : e.geometryType;\n    return t ? this._geometryTypeRequiresClientGraphicMapping(t) ? \"polygon\" : t : null;\n  }\n\n  applyEdits(e) {\n    return this.load().then(() => this._applyEdits(e));\n  }\n\n  openPorts() {\n    return this.load().then(() => this._connection.openPorts());\n  }\n\n  async queryFeatures(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    await this.load(t);\n    const r = await this._connection.invoke(\"queryFeatures\", e ? e.toJSON() : null, t);\n    g(e, this.layer.spatialReference, r);\n\n    const s = _.fromJSON(r);\n\n    if (!this._requiresClientGraphicMapping()) return s;\n    const o = this.layer.objectIdField;\n\n    for (const i of s.features) {\n      const e = i.attributes[o],\n            t = this._idToClientGraphic.get(e);\n\n      t && (i.geometry = t.geometry);\n    }\n\n    return s.geometryType = this.layer.geometryType, s;\n  }\n\n  async queryFeaturesJSON(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (this._requiresClientGraphicMapping()) throw new s(\"query-features-json:unsupported\", \"Cannot query in JSON format for client only geometry types (mesh and extent)\");\n    await this.load(t);\n    const r = await this._connection.invoke(\"queryFeatures\", e ? e.toJSON() : null, t);\n    return g(e, this.layer.spatialReference, r), r;\n  }\n\n  queryFeatureCount(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.load(t).then(() => this._connection.invoke(\"queryFeatureCount\", e ? e.toJSON() : null, t));\n  }\n\n  queryObjectIds(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.load(t).then(() => this._connection.invoke(\"queryObjectIds\", e ? e.toJSON() : null, t));\n  }\n\n  queryExtent(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.load(t).then(() => this._connection.invoke(\"queryExtent\", e ? e.toJSON() : null, t)).then(e => ({\n      count: e.count,\n      extent: j.fromJSON(e.extent)\n    }));\n  }\n\n  querySnapping(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.load(t).then(() => this._connection.invoke(\"querySnapping\", e, t));\n  }\n\n  async _applyEdits(e) {\n    if (!this._connection) throw new s(\"feature-layer-source:edit-failure\", \"Memory source not loaded\");\n    const t = this.layer.objectIdField;\n    let r = null;\n    const o = [],\n          i = [];\n    await Promise.all([this._prepareClientMapping(e.addFeatures, null), this._prepareClientMapping(e.updateFeatures, null)]);\n\n    const n = e => \"objectId\" in e && null != e.objectId ? e.objectId : \"attributes\" in e && null != e.attributes[t] ? e.attributes[t] : null;\n\n    if (e.addFeatures && (r = this._prepareAddFeatures(e.addFeatures)), e.deleteFeatures) for (const s of e.deleteFeatures) {\n      const e = n(s);\n      null != e && o.push(e);\n    }\n    const a = e.updateFeatures && this._idToClientGraphic ? new Map() : null;\n    if (e.updateFeatures) for (const s of e.updateFeatures) if (i.push(this._serializeFeature(s)), a) {\n      const e = n(s);\n      null != e && a.set(e, s);\n    }\n    f(r ? r.features : null, i, this.layer.spatialReference);\n    const {\n      fullExtent: l,\n      featureEditResults: u\n    } = await this._connection.invoke(\"applyEdits\", {\n      adds: r ? r.features : [],\n      updates: i,\n      deletes: o\n    });\n    return this.fullExtent = l, r && r.finish(u.uidToObjectId), this._updateClientGraphicIds(a, u), this._createEditsResult(u);\n  }\n\n  async _prepareClientMapping(e, t) {\n    if (\"mesh\" !== this.layerOrSourceGeometryType || u(e)) return;\n    const r = [];\n\n    for (const {\n      geometry: s\n    } of e) !l(s) || \"mesh\" !== s.type || s.hasExtent || s.loaded || r.push(s.load({\n      signal: t\n    }));\n\n    r.length && (await Promise.all(r));\n  }\n\n  _updateClientGraphicIds(e, t) {\n    if (this._idToClientGraphic) {\n      if (e) for (const r of t.updateResults) {\n        if (!r.success) continue;\n        const t = e.get(r.objectId);\n        null != t && this._addIdToClientGraphic(t);\n      }\n\n      for (const e of t.deleteResults) e.success && this._idToClientGraphic.delete(e.objectId);\n    }\n  }\n\n  _createEditsResult(e) {\n    return {\n      addFeatureResults: e.addResults ? e.addResults.map(this._createFeatureEditResult, this) : [],\n      updateFeatureResults: e.updateResults ? e.updateResults.map(this._createFeatureEditResult, this) : [],\n      deleteFeatureResults: e.deleteResults ? e.deleteResults.map(this._createFeatureEditResult, this) : [],\n      addAttachmentResults: [],\n      updateAttachmentResults: [],\n      deleteAttachmentResults: []\n    };\n  }\n\n  _createFeatureEditResult(e) {\n    const t = !0 === e.success ? null : e.error || {\n      code: void 0,\n      description: void 0\n    };\n    return {\n      objectId: e.objectId,\n      globalId: e.globalId,\n      error: t ? new s(\"feature-layer-source:edit-failure\", t.description, {\n        code: t.code\n      }) : null\n    };\n  }\n\n  _prepareAddFeatures(e) {\n    const t = new Map(),\n          r = new Array(e.length);\n    let s = null;\n\n    for (let i = 0; i < e.length; i++) {\n      const o = e[i],\n            n = this._serializeFeature(o);\n\n      !s && l(o.geometry) && (s = o.geometry.type), r[i] = n, t.set(`${n.uid}`, o);\n    }\n\n    const o = this;\n    return {\n      features: r,\n      inferredGeometryType: s,\n\n      finish(e) {\n        const r = o.sourceJSON.objectIdField;\n\n        for (const s in e) {\n          const i = e[s],\n                n = t.get(s);\n          n && (n.attributes || (n.attributes = {}), -1 === i ? delete n.attributes[r] : n.attributes[r] = i, o._addIdToClientGraphic(n));\n        }\n      }\n\n    };\n  }\n\n  _addIdToClientGraphic(e) {\n    if (!this._idToClientGraphic) return;\n    const t = this.sourceJSON.objectIdField,\n          r = e.attributes && e.attributes[t];\n    null != r && this._idToClientGraphic.set(r, e);\n  }\n\n  get layerOrSourceGeometryType() {\n    var e, t, r;\n    return null != (e = null == (t = this.layer) ? void 0 : t.geometryType) ? e : null == (r = this.sourceJSON) ? void 0 : r.geometryType;\n  }\n\n  _requiresClientGraphicMapping() {\n    return this._geometryTypeRequiresClientGraphicMapping(this.layerOrSourceGeometryType);\n  }\n\n  _geometryRequiresClientGraphicMapping(e) {\n    return this._geometryTypeRequiresClientGraphicMapping(e.type);\n  }\n\n  _geometryTypeRequiresClientGraphicMapping(e) {\n    return \"mesh\" === e || \"multipatch\" === e || \"extent\" === e;\n  }\n\n  _serializeFeature(e) {\n    const {\n      attributes: t\n    } = e,\n          r = this._geometryForSerialization(e),\n          s = (T++).toString();\n\n    return r ? {\n      uid: s,\n      geometry: r.toJSON(),\n      attributes: t\n    } : {\n      uid: s,\n      attributes: t\n    };\n  }\n\n  _geometryForSerialization(e) {\n    const {\n      geometry: t\n    } = e;\n    if (u(t)) return null;\n\n    if (this._geometryRequiresClientGraphicMapping(t)) {\n      return t.extent ? S.fromExtent(t.extent) : null;\n    }\n\n    return t;\n  }\n\n  async _startWorker(e) {\n    this._connection = await c(\"MemorySourceWorker\", {\n      strategy: i(\"feature-layers-workers\") ? \"dedicated\" : \"local\",\n      signal: e\n    });\n    const {\n      fields: t,\n      spatialReference: r,\n      objectIdField: s,\n      hasM: o,\n      hasZ: n,\n      timeInfo: a\n    } = this.layer,\n          l = \"defaults\" === this.layer.originOf(\"spatialReference\");\n    await this._prepareClientMapping(this.items, e);\n\n    const u = this._prepareAddFeatures(this.items);\n\n    this.handles.add(this.on(\"before-changes\", e => {\n      F.error(\"Source modifications will not propagate after layer has been loaded. Please use .applyEdits() instead\"), e.preventDefault();\n    }));\n    const p = {\n      features: u.features,\n      fields: t && t.map(e => e.toJSON()),\n      geometryType: b.toJSON(this.workerGeometryType),\n      hasM: \"mesh\" !== this.layerOrSourceGeometryType && o,\n      hasZ: \"mesh\" === this.layerOrSourceGeometryType || n,\n      objectIdField: s,\n      spatialReference: l ? null : r && r.toJSON(),\n      timeInfo: a ? a.toJSON() : null\n    },\n          d = await this._connection.invoke(\"load\", p, {\n      signal: e\n    });\n\n    for (const i of d.warnings) F.warn(i.message, {\n      layer: this.layer,\n      warning: i\n    });\n\n    d.featureErrors.length && F.warn(`Encountered ${d.featureErrors.length} validation errors while loading features`, d.featureErrors);\n    const h = d.layerDefinition;\n    this._geometryTypeRequiresClientGraphicMapping(u.inferredGeometryType) && (h.geometryType = b.toJSON(u.inferredGeometryType)), this.sourceJSON = h, this._requiresClientGraphicMapping() && (this._idToClientGraphic = new Map()), u.finish(d.assignedObjectIds);\n  }\n\n};\ne([y({\n  Type: t,\n  ensureType: h(t)\n})], G.prototype, \"itemType\", void 0), e([d()], G.prototype, \"type\", void 0), e([d({\n  constructOnly: !0\n})], G.prototype, \"layer\", void 0), e([d({\n  readOnly: !0\n})], G.prototype, \"workerGeometryType\", null), e([d()], G.prototype, \"sourceJSON\", void 0), G = e([m(\"esri.layers.graphics.sources.MemorySource\")], G);\nconst R = G;\nexport { G as MemorySource, R as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/layers/graphics/sources/MemorySource.js"],"names":["_","e","t","r","s","HandleOwnerMixin","o","i","n","a","isSome","l","isNone","u","EsriPromiseMixin","p","open","c","property","d","ensureType","h","shared","y","subclass","m","unapplyEditsZUnitScaling","f","applyFeatureSetZUnitScaling","g","j","S","typeKebabDictionary","b","T","F","getLogger","G","LoadableMixin","constructor","_idToClientGraphic","type","load","signal","addResolvingPromise","_startWorker","Promise","resolve","destroy","_connection","close","workerGeometryType","layer","geometryType","_geometryTypeRequiresClientGraphicMapping","applyEdits","then","_applyEdits","openPorts","queryFeatures","invoke","toJSON","spatialReference","fromJSON","_requiresClientGraphicMapping","objectIdField","features","attributes","get","geometry","queryFeaturesJSON","queryFeatureCount","queryObjectIds","queryExtent","count","extent","querySnapping","all","_prepareClientMapping","addFeatures","updateFeatures","objectId","_prepareAddFeatures","deleteFeatures","push","Map","_serializeFeature","set","fullExtent","featureEditResults","adds","updates","deletes","finish","uidToObjectId","_updateClientGraphicIds","_createEditsResult","layerOrSourceGeometryType","hasExtent","loaded","length","updateResults","success","_addIdToClientGraphic","deleteResults","delete","addFeatureResults","addResults","map","_createFeatureEditResult","updateFeatureResults","deleteFeatureResults","addAttachmentResults","updateAttachmentResults","deleteAttachmentResults","error","code","description","globalId","Array","uid","inferredGeometryType","sourceJSON","_geometryRequiresClientGraphicMapping","_geometryForSerialization","toString","fromExtent","strategy","fields","hasM","hasZ","timeInfo","originOf","items","handles","add","on","preventDefault","warnings","warn","message","warning","featureErrors","layerDefinition","assignedObjectIds","Type","prototype","constructOnly","readOnly","R","MemorySource","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../Graphic.js\";import r from\"../../../core/Collection.js\";import s from\"../../../core/Error.js\";import{HandleOwnerMixin as o}from\"../../../core/HandleOwner.js\";import i from\"../../../core/has.js\";import n from\"../../../core/Loadable.js\";import a from\"../../../core/Logger.js\";import{isSome as l,isNone as u}from\"../../../core/maybe.js\";import{EsriPromiseMixin as p}from\"../../../core/Promise.js\";import{open as c}from\"../../../core/workers/workers.js\";import{property as d}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/arrayUtils.js\";import{ensureType as h}from\"../../../core/accessorSupport/ensureType.js\";import{shared as y}from\"../../../core/accessorSupport/decorators/shared.js\";import{subclass as m}from\"../../../core/accessorSupport/decorators/subclass.js\";import{unapplyEditsZUnitScaling as f}from\"../../../rest/query/operations/editsZScale.js\";import{applyFeatureSetZUnitScaling as g}from\"../../../rest/query/operations/queryZScale.js\";import _ from\"../../../rest/support/FeatureSet.js\";import j from\"../../../geometry/Extent.js\";import S from\"../../../geometry/Polygon.js\";import{typeKebabDictionary as b}from\"../../../geometry/support/typeUtils.js\";let T=0;const F=a.getLogger(\"esri.layers.graphics.sources.MemorySource\");let G=class extends(n.LoadableMixin(p(o(r)))){constructor(e){super(e),this._idToClientGraphic=null,this.type=\"memory\"}load(e){const t=l(e)?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){var e;null==(e=this._connection)||e.close(),this._connection=null}get workerGeometryType(){var e;const t=null==(e=this.layer)?void 0:e.geometryType;return t?this._geometryTypeRequiresClientGraphicMapping(t)?\"polygon\":t:null}applyEdits(e){return this.load().then((()=>this._applyEdits(e)))}openPorts(){return this.load().then((()=>this._connection.openPorts()))}async queryFeatures(e,t={}){await this.load(t);const r=await this._connection.invoke(\"queryFeatures\",e?e.toJSON():null,t);g(e,this.layer.spatialReference,r);const s=_.fromJSON(r);if(!this._requiresClientGraphicMapping())return s;const o=this.layer.objectIdField;for(const i of s.features){const e=i.attributes[o],t=this._idToClientGraphic.get(e);t&&(i.geometry=t.geometry)}return s.geometryType=this.layer.geometryType,s}async queryFeaturesJSON(e,t={}){if(this._requiresClientGraphicMapping())throw new s(\"query-features-json:unsupported\",\"Cannot query in JSON format for client only geometry types (mesh and extent)\");await this.load(t);const r=await this._connection.invoke(\"queryFeatures\",e?e.toJSON():null,t);return g(e,this.layer.spatialReference,r),r}queryFeatureCount(e,t={}){return this.load(t).then((()=>this._connection.invoke(\"queryFeatureCount\",e?e.toJSON():null,t)))}queryObjectIds(e,t={}){return this.load(t).then((()=>this._connection.invoke(\"queryObjectIds\",e?e.toJSON():null,t)))}queryExtent(e,t={}){return this.load(t).then((()=>this._connection.invoke(\"queryExtent\",e?e.toJSON():null,t))).then((e=>({count:e.count,extent:j.fromJSON(e.extent)})))}querySnapping(e,t={}){return this.load(t).then((()=>this._connection.invoke(\"querySnapping\",e,t)))}async _applyEdits(e){if(!this._connection)throw new s(\"feature-layer-source:edit-failure\",\"Memory source not loaded\");const t=this.layer.objectIdField;let r=null;const o=[],i=[];await Promise.all([this._prepareClientMapping(e.addFeatures,null),this._prepareClientMapping(e.updateFeatures,null)]);const n=e=>\"objectId\"in e&&null!=e.objectId?e.objectId:\"attributes\"in e&&null!=e.attributes[t]?e.attributes[t]:null;if(e.addFeatures&&(r=this._prepareAddFeatures(e.addFeatures)),e.deleteFeatures)for(const s of e.deleteFeatures){const e=n(s);null!=e&&o.push(e)}const a=e.updateFeatures&&this._idToClientGraphic?new Map:null;if(e.updateFeatures)for(const s of e.updateFeatures)if(i.push(this._serializeFeature(s)),a){const e=n(s);null!=e&&a.set(e,s)}f(r?r.features:null,i,this.layer.spatialReference);const{fullExtent:l,featureEditResults:u}=await this._connection.invoke(\"applyEdits\",{adds:r?r.features:[],updates:i,deletes:o});return this.fullExtent=l,r&&r.finish(u.uidToObjectId),this._updateClientGraphicIds(a,u),this._createEditsResult(u)}async _prepareClientMapping(e,t){if(\"mesh\"!==this.layerOrSourceGeometryType||u(e))return;const r=[];for(const{geometry:s}of e)!l(s)||\"mesh\"!==s.type||s.hasExtent||s.loaded||r.push(s.load({signal:t}));r.length&&await Promise.all(r)}_updateClientGraphicIds(e,t){if(this._idToClientGraphic){if(e)for(const r of t.updateResults){if(!r.success)continue;const t=e.get(r.objectId);null!=t&&this._addIdToClientGraphic(t)}for(const e of t.deleteResults)e.success&&this._idToClientGraphic.delete(e.objectId)}}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=!0===e.success?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new s(\"feature-layer-source:edit-failure\",t.description,{code:t.code}):null}}_prepareAddFeatures(e){const t=new Map,r=new Array(e.length);let s=null;for(let i=0;i<e.length;i++){const o=e[i],n=this._serializeFeature(o);!s&&l(o.geometry)&&(s=o.geometry.type),r[i]=n,t.set(`${n.uid}`,o)}const o=this;return{features:r,inferredGeometryType:s,finish(e){const r=o.sourceJSON.objectIdField;for(const s in e){const i=e[s],n=t.get(s);n&&(n.attributes||(n.attributes={}),-1===i?delete n.attributes[r]:n.attributes[r]=i,o._addIdToClientGraphic(n))}}}}_addIdToClientGraphic(e){if(!this._idToClientGraphic)return;const t=this.sourceJSON.objectIdField,r=e.attributes&&e.attributes[t];null!=r&&this._idToClientGraphic.set(r,e)}get layerOrSourceGeometryType(){var e,t,r;return null!=(e=null==(t=this.layer)?void 0:t.geometryType)?e:null==(r=this.sourceJSON)?void 0:r.geometryType}_requiresClientGraphicMapping(){return this._geometryTypeRequiresClientGraphicMapping(this.layerOrSourceGeometryType)}_geometryRequiresClientGraphicMapping(e){return this._geometryTypeRequiresClientGraphicMapping(e.type)}_geometryTypeRequiresClientGraphicMapping(e){return\"mesh\"===e||\"multipatch\"===e||\"extent\"===e}_serializeFeature(e){const{attributes:t}=e,r=this._geometryForSerialization(e),s=(T++).toString();return r?{uid:s,geometry:r.toJSON(),attributes:t}:{uid:s,attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;if(u(t))return null;if(this._geometryRequiresClientGraphicMapping(t)){return t.extent?S.fromExtent(t.extent):null}return t}async _startWorker(e){this._connection=await c(\"MemorySourceWorker\",{strategy:i(\"feature-layers-workers\")?\"dedicated\":\"local\",signal:e});const{fields:t,spatialReference:r,objectIdField:s,hasM:o,hasZ:n,timeInfo:a}=this.layer,l=\"defaults\"===this.layer.originOf(\"spatialReference\");await this._prepareClientMapping(this.items,e);const u=this._prepareAddFeatures(this.items);this.handles.add(this.on(\"before-changes\",(e=>{F.error(\"Source modifications will not propagate after layer has been loaded. Please use .applyEdits() instead\"),e.preventDefault()})));const p={features:u.features,fields:t&&t.map((e=>e.toJSON())),geometryType:b.toJSON(this.workerGeometryType),hasM:\"mesh\"!==this.layerOrSourceGeometryType&&o,hasZ:\"mesh\"===this.layerOrSourceGeometryType||n,objectIdField:s,spatialReference:l?null:r&&r.toJSON(),timeInfo:a?a.toJSON():null},d=await this._connection.invoke(\"load\",p,{signal:e});for(const i of d.warnings)F.warn(i.message,{layer:this.layer,warning:i});d.featureErrors.length&&F.warn(`Encountered ${d.featureErrors.length} validation errors while loading features`,d.featureErrors);const h=d.layerDefinition;this._geometryTypeRequiresClientGraphicMapping(u.inferredGeometryType)&&(h.geometryType=b.toJSON(u.inferredGeometryType)),this.sourceJSON=h,this._requiresClientGraphicMapping()&&(this._idToClientGraphic=new Map),u.finish(d.assignedObjectIds)}};e([y({Type:t,ensureType:h(t)})],G.prototype,\"itemType\",void 0),e([d()],G.prototype,\"type\",void 0),e([d({constructOnly:!0})],G.prototype,\"layer\",void 0),e([d({readOnly:!0})],G.prototype,\"workerGeometryType\",null),e([d()],G.prototype,\"sourceJSON\",void 0),G=e([m(\"esri.layers.graphics.sources.MemorySource\")],G);const R=G;export{G as MemorySource,R as default};\n"]},"metadata":{},"sourceType":"module"}