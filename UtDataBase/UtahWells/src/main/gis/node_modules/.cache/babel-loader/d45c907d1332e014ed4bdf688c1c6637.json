{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/tslib.es6.js\";\nimport \"../../geometry.js\";\nimport { rasterRendererTypes as t } from \"../../rasterRenderers.js\";\nimport r from \"../../request.js\";\nimport i from \"../../core/Logger.js\";\nimport { isNone as n, isSome as s } from \"../../core/maybe.js\";\nimport { aliasOf as o } from \"../../core/accessorSupport/decorators/aliasOf.js\";\nimport \"../../core/arrayUtils.js\";\nimport \"../../core/has.js\";\nimport \"../../core/accessorSupport/ensureType.js\";\nimport { property as a } from \"../../core/accessorSupport/decorators/property.js\";\nimport { subclass as l } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { getInfo as d } from \"../../geometry/support/spatialReferenceUtils.js\";\nimport { sanitizeUrl as m } from \"../support/arcgisLayerUrl.js\";\nimport { url as u } from \"../support/commonProperties.js\";\nimport p from \"../support/DimensionalDefinition.js\";\nimport h from \"../support/RasterJobHandler.js\";\nimport c from \"../support/TileInfo.js\";\nimport { convertVectorFieldData as f } from \"../support/rasterFunctions/vectorFieldUtils.js\";\nimport { normalizeRendererJSON as y, getDefaultInterpolation as b, getDefaultBandCombination as g, createDefaultRenderer as I } from \"../../renderers/support/rasterRendererHelper.js\";\nimport v from \"../../renderers/support/RasterSymbolizer.js\";\nimport { createStreamlinesMesh as J } from \"../../views/2d/engine/flow/dataUtils.js\";\nimport _ from \"../../geometry/Extent.js\";\nimport x from \"../../geometry/SpatialReference.js\";\n\nconst S = i.getLogger(\"esri.layers.mixins.ImageryTileMixin\"),\n      R = i => {\n  let R = class extends i {\n    constructor() {\n      super(...arguments), this._rasterJobHandler = {\n        instance: null,\n        refCount: 0,\n        connectionPromise: null\n      }, this.bandIds = null, this.copyright = null, this.fullExtent = null, this.interpolation = \"nearest\", this.multidimensionalDefinition = null, this.raster = null, this.rasterInfo = null, this.sourceJSON = null, this.spatialReference = null, this.tileInfo = null, this.symbolizer = null;\n    }\n\n    set url(e) {\n      this._set(\"url\", m(e, S));\n    }\n\n    set renderer(e) {\n      this._set(\"renderer\", e), this.updateRenderer();\n    }\n\n    async convertVectorFieldData(e, t) {\n      if (n(e)) return null;\n      const r = this._rasterJobHandler.instance,\n            i = this.rasterInfo.dataType;\n      return r ? r.convertVectorFieldData({\n        pixelBlock: e,\n        dataType: i\n      }, t) : f(e, i);\n    }\n\n    async createStreamlinesMesh(e, t) {\n      const r = this._rasterJobHandler.instance;\n      return r ? r.createStreamlinesMesh(e, t) : J(e.rendererSettings, e.flowData, s(t.signal) ? t.signal : new AbortController().signal);\n    }\n\n    normalizeRasterFetchOptions(e) {\n      const {\n        multidimensionalInfo: t\n      } = this.rasterInfo;\n      if (n(t)) return e;\n      let r = e.multidimensionalDefinition || this.multidimensionalDefinition;\n      !n(r) && r.length || (r = this._getDefaultSlice());\n      const i = e.timeExtent || this.timeExtent;\n\n      if (s(r) && s(i) && (s(i.start) || s(i.end))) {\n        var o, a;\n        r = r.map(e => e.clone());\n        const l = null == (o = t.variables.find(_ref => {\n          let {\n            name: e\n          } = _ref;\n          return e === r[0].variableName;\n        })) || null == (a = o.dimensions) ? void 0 : a.find(_ref2 => {\n          let {\n            name: e\n          } = _ref2;\n          return \"StdTime\" === e;\n        }),\n              d = r.find(_ref3 => {\n          let {\n            dimensionName: e\n          } = _ref3;\n          return \"StdTime\" === e;\n        });\n        if (!l || !d) return { ...e,\n          multidimensionalDefinition: null\n        };\n        const {\n          start: m,\n          end: u\n        } = i,\n              p = n(m) ? null : m.getTime(),\n              h = n(u) ? null : u.getTime(),\n              c = null != p ? p : h,\n              f = null != h ? h : p;\n\n        if (s(l.values)) {\n          const e = l.values.filter(e => {\n            if (Array.isArray(e)) {\n              if (c === f) return e[0] <= c && e[1] >= c;\n              const t = e[0] <= c && e[1] > c || e[0] < f && e[1] >= f,\n                    r = e[0] >= c && e[1] <= f || e[0] < c && e[1] > f;\n              return t || r;\n            }\n\n            return c === f ? e === c : e >= c && e <= f;\n          });\n\n          if (e.length) {\n            const t = e.sort((e, t) => {\n              var r, i, n, s;\n              if (c === f) return (null != (n = e[0]) ? n : e) - (null != (s = t[0]) ? s : t);\n              return Math.abs((null != (r = e[1]) ? r : e) - f) - Math.abs((null != (i = t[1]) ? i : t) - f);\n            })[0];\n            d.values = [t];\n          } else r = null;\n        } else if (l.hasRegularIntervals && l.extent) {\n          const [e, t] = l.extent;\n          c > t || f < e ? r = null : d.values = c === f ? [c] : [Math.max(e, c), Math.min(t, f)];\n        }\n      }\n\n      return { ...e,\n        multidimensionalDefinition: r\n      };\n    }\n\n    async updateRenderer() {\n      if (!this.loaded) return;\n      if (JSON.stringify(this._cachedRendererJson) === JSON.stringify(this.renderer)) return;\n      const e = this._rasterJobHandler.instance;\n      e && (this.symbolizer.rendererJSON = y(this.renderer.toJSON()), this.symbolizer.bind(), await e.updateSymbolizer(this.symbolizer), this._cachedRendererJson = this.renderer.toJSON());\n    }\n\n    async applyRenderer(e, t) {\n      const r = e && e.pixelBlock;\n      if (!(s(r) && r.pixels && r.pixels.length > 0)) return null;\n      let i;\n      await this.updateRenderer();\n      const n = this._rasterJobHandler.instance,\n            {\n        bandIds: o\n      } = this;\n      return i = n ? await n.symbolize({ ...e,\n        simpleStretchParams: t,\n        bandIds: o\n      }) : this.symbolizer.symbolize({ ...e,\n        simpleStretchParams: t,\n        bandIds: o\n      }), i;\n    }\n\n    getTileUrl(e, t, r) {\n      return \"RasterTileServer\" === this.raster.datasetFormat ? `${this.url}/tile/${e}/${t}/${r}` : \"\";\n    }\n\n    getCompatibleTileInfo(e, t) {\n      let r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n      if (!this.loaded || n(t)) return null;\n      if (r && e.equals(this.spatialReference)) return this.tileInfo;\n      const i = d(e);\n      return c.create({\n        size: 256,\n        spatialReference: e,\n        origin: i ? {\n          x: i.origin[0],\n          y: i.origin[1]\n        } : {\n          x: t.xmin,\n          y: t.ymax\n        }\n      });\n    }\n\n    getCompatibleFullExtent(e) {\n      return this.loaded ? (this._compatibleFullExtent && this._compatibleFullExtent.spatialReference.equals(e) || (this._compatibleFullExtent = this.raster.computeExtent(e)), this._compatibleFullExtent) : null;\n    }\n\n    async fetchTile(e, t, i) {\n      let o = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n      if (o.requestAsImageElement) {\n        const n = this.getTileUrl(e, t, i);\n        return r(n, {\n          responseType: \"image\",\n          query: { ...this.refreshParameters,\n            ...this.raster.ioConfig.customFetchParameters\n          },\n          signal: o.signal\n        }).then(e => e.data);\n      }\n\n      if (s(this.rasterInfo.multidimensionalInfo) && (o = this.normalizeRasterFetchOptions(o), n(o.multidimensionalDefinition))) {\n        const r = o.tileInfo || this.rasterInfo.storageInfo.tileInfo;\n        return {\n          extent: this.raster.getTileExtentFromTileInfo(e, t, i, r),\n          pixelBlock: null\n        };\n      }\n\n      return await this._initJobHandler(), \"raster-shaded-relief\" === this.renderer.type && (o = { ...o,\n        buffer: {\n          cols: 1,\n          rows: 1\n        }\n      }), this.raster.fetchTile(e, t, i, o);\n    }\n\n    async fetchPixels(e, t, r) {\n      let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      return s(this.rasterInfo.multidimensionalInfo) && (i = this.normalizeRasterFetchOptions(i), n(i.multidimensionalDefinition)) ? {\n        extent: e,\n        pixelBlock: null\n      } : (await this._initJobHandler(), this.raster.fetchPixels(e, t, r, i));\n    }\n\n    async identify(e) {\n      let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return s(this.rasterInfo.multidimensionalInfo) && (t = this.normalizeRasterFetchOptions(t), n(t.multidimensionalDefinition)) ? {\n        location: e,\n        value: null\n      } : this.raster.identify(e, t);\n    }\n\n    increaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount++;\n    }\n\n    decreaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount--, this._rasterJobHandler.refCount <= 0 && this._shutdownJobHandler();\n    }\n\n    hasStandardTime() {\n      var e;\n      const t = this.rasterInfo.multidimensionalInfo;\n      if (!s(t) || \"standard-time\" !== this.rasterInfo.dataType) return !1;\n      const r = null == (e = this.multidimensionalDefinition[0]) ? void 0 : e.variableName;\n      return t.variables.some(e => e.name === r && e.dimensions.some(e => \"StdTime\" === e.name));\n    }\n\n    getStandardTimeValue(e) {\n      return new Date(24 * (e - 25569) * 3600 * 1e3).toString();\n    }\n\n    _configDefaultSettings() {\n      this._configDefaultInterpolation(), this.multidimensionalDefinition || (this.multidimensionalDefinition = this._getDefaultSlice()), this._configDefaultRenderer();\n    }\n\n    _initJobHandler() {\n      if (null != this._rasterJobHandler.connectionPromise) return this._rasterJobHandler.connectionPromise;\n      const e = new h();\n      return this._rasterJobHandler.connectionPromise = e.initialize().then(() => {\n        this._rasterJobHandler.instance = e, this.raster.rasterJobHandler = e, this.renderer && this.updateRenderer();\n      }).catch(() => null), this._rasterJobHandler.connectionPromise;\n    }\n\n    _shutdownJobHandler() {\n      this._rasterJobHandler.instance && this._rasterJobHandler.instance.destroy(), this._rasterJobHandler.instance = null, this._rasterJobHandler.connectionPromise = null, this._rasterJobHandler.refCount = 0, this.raster.rasterJobHandler = null;\n    }\n\n    _configDefaultInterpolation() {\n      if (null == this.interpolation) {\n        var e;\n        const t = b(this.rasterInfo, this.raster.tileType, null == (e = this.sourceJSON) ? void 0 : e.defaultResamplingMethod);\n\n        this._set(\"interpolation\", t);\n      }\n    }\n\n    _getDefaultSlice() {\n      const {\n        multidimensionalInfo: e\n      } = this.raster.rasterInfo;\n      if (!s(e)) return null;\n      const t = e.variables[0];\n      return t.dimensions.map(e => {\n        var r, i;\n        return new p({\n          variableName: t.name,\n          dimensionName: e.name,\n          values: [null != (r = null == (i = e.values) ? void 0 : i[0]) ? r : e.extent[0]],\n          isSlice: !0\n        });\n      });\n    }\n\n    _configDefaultRenderer() {\n      const e = this.raster.rasterInfo;\n      var t;\n      (this.bandIds || (this.bandIds = g(e)), this.renderer) || (this.renderer = I(e, {\n        bandIds: this.bandIds,\n        variableName: s(this.multidimensionalDefinition) ? null == (t = this.multidimensionalDefinition[0]) ? void 0 : t.variableName : null\n      }));\n      this.symbolizer ? (this.symbolizer.rendererJSON = y(this.renderer.toJSON()), this.symbolizer.rasterInfo = e) : this.symbolizer = new v({\n        rendererJSON: this.renderer.toJSON(),\n        rasterInfo: e\n      });\n      const r = this.symbolizer.bind();\n      r.success || S.warn(\"imagery-tile-mixin\", r.error || \"The given renderer is not supported by the layer.\");\n    }\n\n  };\n  return e([a()], R.prototype, \"_cachedRendererJson\", void 0), e([a()], R.prototype, \"_compatibleFullExtent\", void 0), e([a()], R.prototype, \"_rasterJobHandler\", void 0), e([a()], R.prototype, \"bandIds\", void 0), e([a({\n    json: {\n      origins: {\n        service: {\n          read: {\n            source: \"copyrightText\"\n          }\n        }\n      }\n    }\n  })], R.prototype, \"copyright\", void 0), e([a({\n    type: _,\n    json: {\n      read: !1\n    }\n  }), o(\"rasterInfo.extent\")], R.prototype, \"fullExtent\", void 0), e([a()], R.prototype, \"interpolation\", void 0), e([a()], R.prototype, \"ioConfig\", void 0), e([a({\n    type: [p]\n  })], R.prototype, \"multidimensionalDefinition\", void 0), e([a()], R.prototype, \"raster\", void 0), e([a({\n    readOnly: !0\n  }), o(\"raster.rasterInfo\")], R.prototype, \"rasterInfo\", void 0), e([a()], R.prototype, \"sourceJSON\", void 0), e([a({\n    type: x,\n    json: {\n      read: !1\n    }\n  }), o(\"rasterInfo.spatialReference\")], R.prototype, \"spatialReference\", void 0), e([a({\n    type: c,\n    json: {\n      read: !1\n    }\n  }), o(\"rasterInfo.storageInfo.tileInfo\")], R.prototype, \"tileInfo\", void 0), e([a(u)], R.prototype, \"url\", null), e([a({\n    types: t\n  })], R.prototype, \"renderer\", null), e([a()], R.prototype, \"symbolizer\", void 0), R = e([l(\"esri.layers.ImageryTileMixin\")], R), R;\n};\n\nexport { R as ImageryTileMixin };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/layers/mixins/ImageryTileMixin.js"],"names":["_","e","rasterRendererTypes","t","r","i","isNone","n","isSome","s","aliasOf","o","property","a","subclass","l","getInfo","d","sanitizeUrl","m","url","u","p","h","c","convertVectorFieldData","f","normalizeRendererJSON","y","getDefaultInterpolation","b","getDefaultBandCombination","g","createDefaultRenderer","I","v","createStreamlinesMesh","J","x","S","getLogger","R","constructor","arguments","_rasterJobHandler","instance","refCount","connectionPromise","bandIds","copyright","fullExtent","interpolation","multidimensionalDefinition","raster","rasterInfo","sourceJSON","spatialReference","tileInfo","symbolizer","_set","renderer","updateRenderer","dataType","pixelBlock","rendererSettings","flowData","signal","AbortController","normalizeRasterFetchOptions","multidimensionalInfo","length","_getDefaultSlice","timeExtent","start","end","map","clone","variables","find","name","variableName","dimensions","dimensionName","getTime","values","filter","Array","isArray","sort","Math","abs","hasRegularIntervals","extent","max","min","loaded","JSON","stringify","_cachedRendererJson","rendererJSON","toJSON","bind","updateSymbolizer","applyRenderer","pixels","symbolize","simpleStretchParams","getTileUrl","datasetFormat","getCompatibleTileInfo","equals","create","size","origin","xmin","ymax","getCompatibleFullExtent","_compatibleFullExtent","computeExtent","fetchTile","requestAsImageElement","responseType","query","refreshParameters","ioConfig","customFetchParameters","then","data","storageInfo","getTileExtentFromTileInfo","_initJobHandler","type","buffer","cols","rows","fetchPixels","identify","location","value","increaseRasterJobHandlerUsage","decreaseRasterJobHandlerUsage","_shutdownJobHandler","hasStandardTime","some","getStandardTimeValue","Date","toString","_configDefaultSettings","_configDefaultInterpolation","_configDefaultRenderer","initialize","rasterJobHandler","catch","destroy","tileType","defaultResamplingMethod","isSlice","success","warn","error","prototype","json","origins","service","read","source","readOnly","types","ImageryTileMixin"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAZ,QAAkB,2BAAlB;AAA8C,OAAM,mBAAN;AAA0B,SAAOC,mBAAmB,IAAIC,CAA9B,QAAoC,0BAApC;AAA+D,OAAOC,CAAP,MAAa,kBAAb;AAAgC,OAAOC,CAAP,MAAa,sBAAb;AAAoC,SAAOC,MAAM,IAAIC,CAAjB,EAAmBC,MAAM,IAAIC,CAA7B,QAAmC,qBAAnC;AAAyD,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,kDAAxB;AAA2E,OAAM,0BAAN;AAAiC,OAAM,mBAAN;AAA0B,OAAM,0CAAN;AAAiD,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,mDAAzB;AAA6E,SAAOC,QAAQ,IAAIC,CAAnB,QAAyB,mDAAzB;AAA6E,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,iDAAxB;AAA0E,SAAOC,WAAW,IAAIC,CAAtB,QAA4B,8BAA5B;AAA2D,SAAOC,GAAG,IAAIC,CAAd,QAAoB,gCAApB;AAAqD,OAAOC,CAAP,MAAa,qCAAb;AAAmD,OAAOC,CAAP,MAAa,gCAAb;AAA8C,OAAOC,CAAP,MAAa,wBAAb;AAAsC,SAAOC,sBAAsB,IAAIC,CAAjC,QAAuC,gDAAvC;AAAwF,SAAOC,qBAAqB,IAAIC,CAAhC,EAAkCC,uBAAuB,IAAIC,CAA7D,EAA+DC,yBAAyB,IAAIC,CAA5F,EAA8FC,qBAAqB,IAAIC,CAAvH,QAA6H,iDAA7H;AAA+K,OAAOC,CAAP,MAAa,6CAAb;AAA2D,SAAOC,qBAAqB,IAAIC,CAAhC,QAAsC,yCAAtC;AAAgF,OAAOrC,CAAP,MAAa,0BAAb;AAAwC,OAAOsC,CAAP,MAAa,oCAAb;;AAAkD,MAAMC,CAAC,GAAClC,CAAC,CAACmC,SAAF,CAAY,qCAAZ,CAAR;AAAA,MAA2DC,CAAC,GAACpC,CAAC,IAAE;AAAC,MAAIoC,CAAC,GAAC,cAAcpC,CAAd,CAAe;AAACqC,IAAAA,WAAW,GAAE;AAAC,YAAM,GAAGC,SAAT,GAAoB,KAAKC,iBAAL,GAAuB;AAACC,QAAAA,QAAQ,EAAC,IAAV;AAAeC,QAAAA,QAAQ,EAAC,CAAxB;AAA0BC,QAAAA,iBAAiB,EAAC;AAA5C,OAA3C,EAA6F,KAAKC,OAAL,GAAa,IAA1G,EAA+G,KAAKC,SAAL,GAAe,IAA9H,EAAmI,KAAKC,UAAL,GAAgB,IAAnJ,EAAwJ,KAAKC,aAAL,GAAmB,SAA3K,EAAqL,KAAKC,0BAAL,GAAgC,IAArN,EAA0N,KAAKC,MAAL,GAAY,IAAtO,EAA2O,KAAKC,UAAL,GAAgB,IAA3P,EAAgQ,KAAKC,UAAL,GAAgB,IAAhR,EAAqR,KAAKC,gBAAL,GAAsB,IAA3S,EAAgT,KAAKC,QAAL,GAAc,IAA9T,EAAmU,KAAKC,UAAL,GAAgB,IAAnV;AAAwV;;AAAO,QAAHtC,GAAG,CAACnB,CAAD,EAAG;AAAC,WAAK0D,IAAL,CAAU,KAAV,EAAgBxC,CAAC,CAAClB,CAAD,EAAGsC,CAAH,CAAjB;AAAwB;;AAAY,QAARqB,QAAQ,CAAC3D,CAAD,EAAG;AAAC,WAAK0D,IAAL,CAAU,UAAV,EAAqB1D,CAArB,GAAwB,KAAK4D,cAAL,EAAxB;AAA8C;;AAA4B,UAAtBpC,sBAAsB,CAACxB,CAAD,EAAGE,CAAH,EAAK;AAAC,UAAGI,CAAC,CAACN,CAAD,CAAJ,EAAQ,OAAO,IAAP;AAAY,YAAMG,CAAC,GAAC,KAAKwC,iBAAL,CAAuBC,QAA/B;AAAA,YAAwCxC,CAAC,GAAC,KAAKiD,UAAL,CAAgBQ,QAA1D;AAAmE,aAAO1D,CAAC,GAACA,CAAC,CAACqB,sBAAF,CAAyB;AAACsC,QAAAA,UAAU,EAAC9D,CAAZ;AAAc6D,QAAAA,QAAQ,EAACzD;AAAvB,OAAzB,EAAmDF,CAAnD,CAAD,GAAuDuB,CAAC,CAACzB,CAAD,EAAGI,CAAH,CAAhE;AAAsE;;AAA2B,UAArB+B,qBAAqB,CAACnC,CAAD,EAAGE,CAAH,EAAK;AAAC,YAAMC,CAAC,GAAC,KAAKwC,iBAAL,CAAuBC,QAA/B;AAAwC,aAAOzC,CAAC,GAACA,CAAC,CAACgC,qBAAF,CAAwBnC,CAAxB,EAA0BE,CAA1B,CAAD,GAA8BkC,CAAC,CAACpC,CAAC,CAAC+D,gBAAH,EAAoB/D,CAAC,CAACgE,QAAtB,EAA+BxD,CAAC,CAACN,CAAC,CAAC+D,MAAH,CAAD,GAAY/D,CAAC,CAAC+D,MAAd,GAAsB,IAAIC,eAAJ,EAAD,CAAsBD,MAA1E,CAAvC;AAAyH;;AAAAE,IAAAA,2BAA2B,CAACnE,CAAD,EAAG;AAAC,YAAK;AAACoE,QAAAA,oBAAoB,EAAClE;AAAtB,UAAyB,KAAKmD,UAAnC;AAA8C,UAAG/C,CAAC,CAACJ,CAAD,CAAJ,EAAQ,OAAOF,CAAP;AAAS,UAAIG,CAAC,GAACH,CAAC,CAACmD,0BAAF,IAA8B,KAAKA,0BAAzC;AAAoE,OAAC7C,CAAC,CAACH,CAAD,CAAF,IAAOA,CAAC,CAACkE,MAAT,KAAkBlE,CAAC,GAAC,KAAKmE,gBAAL,EAApB;AAA6C,YAAMlE,CAAC,GAACJ,CAAC,CAACuE,UAAF,IAAc,KAAKA,UAA3B;;AAAsC,UAAG/D,CAAC,CAACL,CAAD,CAAD,IAAMK,CAAC,CAACJ,CAAD,CAAP,KAAaI,CAAC,CAACJ,CAAC,CAACoE,KAAH,CAAD,IAAYhE,CAAC,CAACJ,CAAC,CAACqE,GAAH,CAA1B,CAAH,EAAsC;AAAC,YAAI/D,CAAJ,EAAME,CAAN;AAAQT,QAAAA,CAAC,GAACA,CAAC,CAACuE,GAAF,CAAO1E,CAAC,IAAEA,CAAC,CAAC2E,KAAF,EAAV,CAAF;AAAwB,cAAM7D,CAAC,GAAC,SAAOJ,CAAC,GAACR,CAAC,CAAC0E,SAAF,CAAYC,IAAZ,CAAkB;AAAA,cAAC;AAACC,YAAAA,IAAI,EAAC9E;AAAN,WAAD;AAAA,iBAAYA,CAAC,KAAGG,CAAC,CAAC,CAAD,CAAD,CAAK4E,YAArB;AAAA,SAAlB,CAAT,KAAiE,SAAOnE,CAAC,GAACF,CAAC,CAACsE,UAAX,CAAjE,GAAwF,KAAK,CAA7F,GAA+FpE,CAAC,CAACiE,IAAF,CAAQ;AAAA,cAAC;AAACC,YAAAA,IAAI,EAAC9E;AAAN,WAAD;AAAA,iBAAY,cAAYA,CAAxB;AAAA,SAAR,CAAvG;AAAA,cAA2IgB,CAAC,GAACb,CAAC,CAAC0E,IAAF,CAAQ;AAAA,cAAC;AAACI,YAAAA,aAAa,EAACjF;AAAf,WAAD;AAAA,iBAAqB,cAAYA,CAAjC;AAAA,SAAR,CAA7I;AAA0L,YAAG,CAACc,CAAD,IAAI,CAACE,CAAR,EAAU,OAAM,EAAC,GAAGhB,CAAJ;AAAMmD,UAAAA,0BAA0B,EAAC;AAAjC,SAAN;AAA6C,cAAK;AAACqB,UAAAA,KAAK,EAACtD,CAAP;AAASuD,UAAAA,GAAG,EAACrD;AAAb,YAAgBhB,CAArB;AAAA,cAAuBiB,CAAC,GAACf,CAAC,CAACY,CAAD,CAAD,GAAK,IAAL,GAAUA,CAAC,CAACgE,OAAF,EAAnC;AAAA,cAA+C5D,CAAC,GAAChB,CAAC,CAACc,CAAD,CAAD,GAAK,IAAL,GAAUA,CAAC,CAAC8D,OAAF,EAA3D;AAAA,cAAuE3D,CAAC,GAAC,QAAMF,CAAN,GAAQA,CAAR,GAAUC,CAAnF;AAAA,cAAqFG,CAAC,GAAC,QAAMH,CAAN,GAAQA,CAAR,GAAUD,CAAjG;;AAAmG,YAAGb,CAAC,CAACM,CAAC,CAACqE,MAAH,CAAJ,EAAe;AAAC,gBAAMnF,CAAC,GAACc,CAAC,CAACqE,MAAF,CAASC,MAAT,CAAiBpF,CAAC,IAAE;AAAC,gBAAGqF,KAAK,CAACC,OAAN,CAActF,CAAd,CAAH,EAAoB;AAAC,kBAAGuB,CAAC,KAAGE,CAAP,EAAS,OAAOzB,CAAC,CAAC,CAAD,CAAD,IAAMuB,CAAN,IAASvB,CAAC,CAAC,CAAD,CAAD,IAAMuB,CAAtB;AAAwB,oBAAMrB,CAAC,GAACF,CAAC,CAAC,CAAD,CAAD,IAAMuB,CAAN,IAASvB,CAAC,CAAC,CAAD,CAAD,GAAKuB,CAAd,IAAiBvB,CAAC,CAAC,CAAD,CAAD,GAAKyB,CAAL,IAAQzB,CAAC,CAAC,CAAD,CAAD,IAAMyB,CAAvC;AAAA,oBAAyCtB,CAAC,GAACH,CAAC,CAAC,CAAD,CAAD,IAAMuB,CAAN,IAASvB,CAAC,CAAC,CAAD,CAAD,IAAMyB,CAAf,IAAkBzB,CAAC,CAAC,CAAD,CAAD,GAAKuB,CAAL,IAAQvB,CAAC,CAAC,CAAD,CAAD,GAAKyB,CAA1E;AAA4E,qBAAOvB,CAAC,IAAEC,CAAV;AAAY;;AAAA,mBAAOoB,CAAC,KAAGE,CAAJ,GAAMzB,CAAC,KAAGuB,CAAV,GAAYvB,CAAC,IAAEuB,CAAH,IAAMvB,CAAC,IAAEyB,CAA5B;AAA8B,WAAjM,CAAR;;AAA4M,cAAGzB,CAAC,CAACqE,MAAL,EAAY;AAAC,kBAAMnE,CAAC,GAACF,CAAC,CAACuF,IAAF,CAAQ,CAACvF,CAAD,EAAGE,CAAH,KAAO;AAAC,kBAAIC,CAAJ,EAAMC,CAAN,EAAQE,CAAR,EAAUE,CAAV;AAAY,kBAAGe,CAAC,KAAGE,CAAP,EAAS,OAAM,CAAC,SAAOnB,CAAC,GAACN,CAAC,CAAC,CAAD,CAAV,IAAeM,CAAf,GAAiBN,CAAlB,KAAsB,SAAOQ,CAAC,GAACN,CAAC,CAAC,CAAD,CAAV,IAAeM,CAAf,GAAiBN,CAAvC,CAAN;AAAgD,qBAAOsF,IAAI,CAACC,GAAL,CAAS,CAAC,SAAOtF,CAAC,GAACH,CAAC,CAAC,CAAD,CAAV,IAAeG,CAAf,GAAiBH,CAAlB,IAAqByB,CAA9B,IAAiC+D,IAAI,CAACC,GAAL,CAAS,CAAC,SAAOrF,CAAC,GAACF,CAAC,CAAC,CAAD,CAAV,IAAeE,CAAf,GAAiBF,CAAlB,IAAqBuB,CAA9B,CAAxC;AAAyE,aAA9J,EAAiK,CAAjK,CAAR;AAA4KT,YAAAA,CAAC,CAACmE,MAAF,GAAS,CAACjF,CAAD,CAAT;AAAa,WAAtM,MAA2MC,CAAC,GAAC,IAAF;AAAO,SAA9a,MAAmb,IAAGW,CAAC,CAAC4E,mBAAF,IAAuB5E,CAAC,CAAC6E,MAA5B,EAAmC;AAAC,gBAAK,CAAC3F,CAAD,EAAGE,CAAH,IAAMY,CAAC,CAAC6E,MAAb;AAAoBpE,UAAAA,CAAC,GAACrB,CAAF,IAAKuB,CAAC,GAACzB,CAAP,GAASG,CAAC,GAAC,IAAX,GAAgBa,CAAC,CAACmE,MAAF,GAAS5D,CAAC,KAAGE,CAAJ,GAAM,CAACF,CAAD,CAAN,GAAU,CAACiE,IAAI,CAACI,GAAL,CAAS5F,CAAT,EAAWuB,CAAX,CAAD,EAAeiE,IAAI,CAACK,GAAL,CAAS3F,CAAT,EAAWuB,CAAX,CAAf,CAAnC;AAAiE;AAAC;;AAAA,aAAM,EAAC,GAAGzB,CAAJ;AAAMmD,QAAAA,0BAA0B,EAAChD;AAAjC,OAAN;AAA0C;;AAAoB,UAAdyD,cAAc,GAAE;AAAC,UAAG,CAAC,KAAKkC,MAAT,EAAgB;AAAO,UAAGC,IAAI,CAACC,SAAL,CAAe,KAAKC,mBAApB,MAA2CF,IAAI,CAACC,SAAL,CAAe,KAAKrC,QAApB,CAA9C,EAA4E;AAAO,YAAM3D,CAAC,GAAC,KAAK2C,iBAAL,CAAuBC,QAA/B;AAAwC5C,MAAAA,CAAC,KAAG,KAAKyD,UAAL,CAAgByC,YAAhB,GAA6BvE,CAAC,CAAC,KAAKgC,QAAL,CAAcwC,MAAd,EAAD,CAA9B,EAAuD,KAAK1C,UAAL,CAAgB2C,IAAhB,EAAvD,EAA8E,MAAMpG,CAAC,CAACqG,gBAAF,CAAmB,KAAK5C,UAAxB,CAApF,EAAwH,KAAKwC,mBAAL,GAAyB,KAAKtC,QAAL,CAAcwC,MAAd,EAApJ,CAAD;AAA6K;;AAAmB,UAAbG,aAAa,CAACtG,CAAD,EAAGE,CAAH,EAAK;AAAC,YAAMC,CAAC,GAACH,CAAC,IAAEA,CAAC,CAAC8D,UAAb;AAAwB,UAAG,EAAEtD,CAAC,CAACL,CAAD,CAAD,IAAMA,CAAC,CAACoG,MAAR,IAAgBpG,CAAC,CAACoG,MAAF,CAASlC,MAAT,GAAgB,CAAlC,CAAH,EAAwC,OAAO,IAAP;AAAY,UAAIjE,CAAJ;AAAM,YAAM,KAAKwD,cAAL,EAAN;AAA4B,YAAMtD,CAAC,GAAC,KAAKqC,iBAAL,CAAuBC,QAA/B;AAAA,YAAwC;AAACG,QAAAA,OAAO,EAACrC;AAAT,UAAY,IAApD;AAAyD,aAAON,CAAC,GAACE,CAAC,GAAC,MAAMA,CAAC,CAACkG,SAAF,CAAY,EAAC,GAAGxG,CAAJ;AAAMyG,QAAAA,mBAAmB,EAACvG,CAA1B;AAA4B6C,QAAAA,OAAO,EAACrC;AAApC,OAAZ,CAAP,GAA2D,KAAK+C,UAAL,CAAgB+C,SAAhB,CAA0B,EAAC,GAAGxG,CAAJ;AAAMyG,QAAAA,mBAAmB,EAACvG,CAA1B;AAA4B6C,QAAAA,OAAO,EAACrC;AAApC,OAA1B,CAA9D,EAAgIN,CAAvI;AAAyI;;AAAAsG,IAAAA,UAAU,CAAC1G,CAAD,EAAGE,CAAH,EAAKC,CAAL,EAAO;AAAC,aAAM,uBAAqB,KAAKiD,MAAL,CAAYuD,aAAjC,GAAgD,GAAE,KAAKxF,GAAI,SAAQnB,CAAE,IAAGE,CAAE,IAAGC,CAAE,EAA/E,GAAiF,EAAvF;AAA0F;;AAAAyG,IAAAA,qBAAqB,CAAC5G,CAAD,EAAGE,CAAH,EAAU;AAAA,UAALC,CAAK,uEAAH,CAAC,CAAE;AAAC,UAAG,CAAC,KAAK2F,MAAN,IAAcxF,CAAC,CAACJ,CAAD,CAAlB,EAAsB,OAAO,IAAP;AAAY,UAAGC,CAAC,IAAEH,CAAC,CAAC6G,MAAF,CAAS,KAAKtD,gBAAd,CAAN,EAAsC,OAAO,KAAKC,QAAZ;AAAqB,YAAMpD,CAAC,GAACY,CAAC,CAAChB,CAAD,CAAT;AAAa,aAAOuB,CAAC,CAACuF,MAAF,CAAS;AAACC,QAAAA,IAAI,EAAC,GAAN;AAAUxD,QAAAA,gBAAgB,EAACvD,CAA3B;AAA6BgH,QAAAA,MAAM,EAAC5G,CAAC,GAAC;AAACiC,UAAAA,CAAC,EAACjC,CAAC,CAAC4G,MAAF,CAAS,CAAT,CAAH;AAAerF,UAAAA,CAAC,EAACvB,CAAC,CAAC4G,MAAF,CAAS,CAAT;AAAjB,SAAD,GAA+B;AAAC3E,UAAAA,CAAC,EAACnC,CAAC,CAAC+G,IAAL;AAAUtF,UAAAA,CAAC,EAACzB,CAAC,CAACgH;AAAd;AAApE,OAAT,CAAP;AAA0G;;AAAAC,IAAAA,uBAAuB,CAACnH,CAAD,EAAG;AAAC,aAAO,KAAK8F,MAAL,IAAa,KAAKsB,qBAAL,IAA4B,KAAKA,qBAAL,CAA2B7D,gBAA3B,CAA4CsD,MAA5C,CAAmD7G,CAAnD,CAA5B,KAAoF,KAAKoH,qBAAL,GAA2B,KAAKhE,MAAL,CAAYiE,aAAZ,CAA0BrH,CAA1B,CAA/G,GAA6I,KAAKoH,qBAA/J,IAAsL,IAA7L;AAAkM;;AAAe,UAATE,SAAS,CAACtH,CAAD,EAAGE,CAAH,EAAKE,CAAL,EAAY;AAAA,UAALM,CAAK,uEAAH,EAAG;;AAAC,UAAGA,CAAC,CAAC6G,qBAAL,EAA2B;AAAC,cAAMjH,CAAC,GAAC,KAAKoG,UAAL,CAAgB1G,CAAhB,EAAkBE,CAAlB,EAAoBE,CAApB,CAAR;AAA+B,eAAOD,CAAC,CAACG,CAAD,EAAG;AAACkH,UAAAA,YAAY,EAAC,OAAd;AAAsBC,UAAAA,KAAK,EAAC,EAAC,GAAG,KAAKC,iBAAT;AAA2B,eAAG,KAAKtE,MAAL,CAAYuE,QAAZ,CAAqBC;AAAnD,WAA5B;AAAsG3D,UAAAA,MAAM,EAACvD,CAAC,CAACuD;AAA/G,SAAH,CAAD,CAA4H4D,IAA5H,CAAkI7H,CAAC,IAAEA,CAAC,CAAC8H,IAAvI,CAAP;AAAqJ;;AAAA,UAAGtH,CAAC,CAAC,KAAK6C,UAAL,CAAgBe,oBAAjB,CAAD,KAA0C1D,CAAC,GAAC,KAAKyD,2BAAL,CAAiCzD,CAAjC,CAAF,EAAsCJ,CAAC,CAACI,CAAC,CAACyC,0BAAH,CAAjF,CAAH,EAAoH;AAAC,cAAMhD,CAAC,GAACO,CAAC,CAAC8C,QAAF,IAAY,KAAKH,UAAL,CAAgB0E,WAAhB,CAA4BvE,QAAhD;AAAyD,eAAM;AAACmC,UAAAA,MAAM,EAAC,KAAKvC,MAAL,CAAY4E,yBAAZ,CAAsChI,CAAtC,EAAwCE,CAAxC,EAA0CE,CAA1C,EAA4CD,CAA5C,CAAR;AAAuD2D,UAAAA,UAAU,EAAC;AAAlE,SAAN;AAA8E;;AAAA,aAAO,MAAM,KAAKmE,eAAL,EAAN,EAA6B,2BAAyB,KAAKtE,QAAL,CAAcuE,IAAvC,KAA8CxH,CAAC,GAAC,EAAC,GAAGA,CAAJ;AAAMyH,QAAAA,MAAM,EAAC;AAACC,UAAAA,IAAI,EAAC,CAAN;AAAQC,UAAAA,IAAI,EAAC;AAAb;AAAb,OAAhD,CAA7B,EAA4G,KAAKjF,MAAL,CAAYkE,SAAZ,CAAsBtH,CAAtB,EAAwBE,CAAxB,EAA0BE,CAA1B,EAA4BM,CAA5B,CAAnH;AAAkJ;;AAAiB,UAAX4H,WAAW,CAACtI,CAAD,EAAGE,CAAH,EAAKC,CAAL,EAAY;AAAA,UAALC,CAAK,uEAAH,EAAG;AAAC,aAAOI,CAAC,CAAC,KAAK6C,UAAL,CAAgBe,oBAAjB,CAAD,KAA0ChE,CAAC,GAAC,KAAK+D,2BAAL,CAAiC/D,CAAjC,CAAF,EAAsCE,CAAC,CAACF,CAAC,CAAC+C,0BAAH,CAAjF,IAAiH;AAACwC,QAAAA,MAAM,EAAC3F,CAAR;AAAU8D,QAAAA,UAAU,EAAC;AAArB,OAAjH,IAA6I,MAAM,KAAKmE,eAAL,EAAN,EAA6B,KAAK7E,MAAL,CAAYkF,WAAZ,CAAwBtI,CAAxB,EAA0BE,CAA1B,EAA4BC,CAA5B,EAA8BC,CAA9B,CAA1K,CAAP;AAAmN;;AAAc,UAARmI,QAAQ,CAACvI,CAAD,EAAQ;AAAA,UAALE,CAAK,uEAAH,EAAG;AAAC,aAAOM,CAAC,CAAC,KAAK6C,UAAL,CAAgBe,oBAAjB,CAAD,KAA0ClE,CAAC,GAAC,KAAKiE,2BAAL,CAAiCjE,CAAjC,CAAF,EAAsCI,CAAC,CAACJ,CAAC,CAACiD,0BAAH,CAAjF,IAAiH;AAACqF,QAAAA,QAAQ,EAACxI,CAAV;AAAYyI,QAAAA,KAAK,EAAC;AAAlB,OAAjH,GAAyI,KAAKrF,MAAL,CAAYmF,QAAZ,CAAqBvI,CAArB,EAAuBE,CAAvB,CAAhJ;AAA0K;;AAAAwI,IAAAA,6BAA6B,GAAE;AAAC,WAAK/F,iBAAL,CAAuBE,QAAvB;AAAkC;;AAAA8F,IAAAA,6BAA6B,GAAE;AAAC,WAAKhG,iBAAL,CAAuBE,QAAvB,IAAkC,KAAKF,iBAAL,CAAuBE,QAAvB,IAAiC,CAAjC,IAAoC,KAAK+F,mBAAL,EAAtE;AAAiG;;AAAAC,IAAAA,eAAe,GAAE;AAAC,UAAI7I,CAAJ;AAAM,YAAME,CAAC,GAAC,KAAKmD,UAAL,CAAgBe,oBAAxB;AAA6C,UAAG,CAAC5D,CAAC,CAACN,CAAD,CAAF,IAAO,oBAAkB,KAAKmD,UAAL,CAAgBQ,QAA5C,EAAqD,OAAM,CAAC,CAAP;AAAS,YAAM1D,CAAC,GAAC,SAAOH,CAAC,GAAC,KAAKmD,0BAAL,CAAgC,CAAhC,CAAT,IAA6C,KAAK,CAAlD,GAAoDnD,CAAC,CAAC+E,YAA9D;AAA2E,aAAO7E,CAAC,CAAC0E,SAAF,CAAYkE,IAAZ,CAAkB9I,CAAC,IAAEA,CAAC,CAAC8E,IAAF,KAAS3E,CAAT,IAAYH,CAAC,CAACgF,UAAF,CAAa8D,IAAb,CAAmB9I,CAAC,IAAE,cAAYA,CAAC,CAAC8E,IAApC,CAAjC,CAAP;AAAqF;;AAAAiE,IAAAA,oBAAoB,CAAC/I,CAAD,EAAG;AAAC,aAAO,IAAIgJ,IAAJ,CAAS,MAAIhJ,CAAC,GAAC,KAAN,IAAa,IAAb,GAAkB,GAA3B,EAAgCiJ,QAAhC,EAAP;AAAkD;;AAAAC,IAAAA,sBAAsB,GAAE;AAAC,WAAKC,2BAAL,IAAmC,KAAKhG,0BAAL,KAAkC,KAAKA,0BAAL,GAAgC,KAAKmB,gBAAL,EAAlE,CAAnC,EAA8H,KAAK8E,sBAAL,EAA9H;AAA4J;;AAAAnB,IAAAA,eAAe,GAAE;AAAC,UAAG,QAAM,KAAKtF,iBAAL,CAAuBG,iBAAhC,EAAkD,OAAO,KAAKH,iBAAL,CAAuBG,iBAA9B;AAAgD,YAAM9C,CAAC,GAAC,IAAIsB,CAAJ,EAAR;AAAc,aAAO,KAAKqB,iBAAL,CAAuBG,iBAAvB,GAAyC9C,CAAC,CAACqJ,UAAF,GAAexB,IAAf,CAAqB,MAAI;AAAC,aAAKlF,iBAAL,CAAuBC,QAAvB,GAAgC5C,CAAhC,EAAkC,KAAKoD,MAAL,CAAYkG,gBAAZ,GAA6BtJ,CAA/D,EAAiE,KAAK2D,QAAL,IAAe,KAAKC,cAAL,EAAhF;AAAsG,OAAhI,EAAmI2F,KAAnI,CAA0I,MAAI,IAA9I,CAAzC,EAA8L,KAAK5G,iBAAL,CAAuBG,iBAA5N;AAA8O;;AAAA8F,IAAAA,mBAAmB,GAAE;AAAC,WAAKjG,iBAAL,CAAuBC,QAAvB,IAAiC,KAAKD,iBAAL,CAAuBC,QAAvB,CAAgC4G,OAAhC,EAAjC,EAA2E,KAAK7G,iBAAL,CAAuBC,QAAvB,GAAgC,IAA3G,EAAgH,KAAKD,iBAAL,CAAuBG,iBAAvB,GAAyC,IAAzJ,EAA8J,KAAKH,iBAAL,CAAuBE,QAAvB,GAAgC,CAA9L,EAAgM,KAAKO,MAAL,CAAYkG,gBAAZ,GAA6B,IAA7N;AAAkO;;AAAAH,IAAAA,2BAA2B,GAAE;AAAC,UAAG,QAAM,KAAKjG,aAAd,EAA4B;AAAC,YAAIlD,CAAJ;AAAM,cAAME,CAAC,GAAC2B,CAAC,CAAC,KAAKwB,UAAN,EAAiB,KAAKD,MAAL,CAAYqG,QAA7B,EAAsC,SAAOzJ,CAAC,GAAC,KAAKsD,UAAd,IAA0B,KAAK,CAA/B,GAAiCtD,CAAC,CAAC0J,uBAAzE,CAAT;;AAA2G,aAAKhG,IAAL,CAAU,eAAV,EAA0BxD,CAA1B;AAA6B;AAAC;;AAAAoE,IAAAA,gBAAgB,GAAE;AAAC,YAAK;AAACF,QAAAA,oBAAoB,EAACpE;AAAtB,UAAyB,KAAKoD,MAAL,CAAYC,UAA1C;AAAqD,UAAG,CAAC7C,CAAC,CAACR,CAAD,CAAL,EAAS,OAAO,IAAP;AAAY,YAAME,CAAC,GAACF,CAAC,CAAC4E,SAAF,CAAY,CAAZ,CAAR;AAAuB,aAAO1E,CAAC,CAAC8E,UAAF,CAAaN,GAAb,CAAkB1E,CAAC,IAAE;AAAC,YAAIG,CAAJ,EAAMC,CAAN;AAAQ,eAAO,IAAIiB,CAAJ,CAAM;AAAC0D,UAAAA,YAAY,EAAC7E,CAAC,CAAC4E,IAAhB;AAAqBG,UAAAA,aAAa,EAACjF,CAAC,CAAC8E,IAArC;AAA0CK,UAAAA,MAAM,EAAC,CAAC,SAAOhF,CAAC,GAAC,SAAOC,CAAC,GAACJ,CAAC,CAACmF,MAAX,IAAmB,KAAK,CAAxB,GAA0B/E,CAAC,CAAC,CAAD,CAApC,IAAyCD,CAAzC,GAA2CH,CAAC,CAAC2F,MAAF,CAAS,CAAT,CAA5C,CAAjD;AAA0GgE,UAAAA,OAAO,EAAC,CAAC;AAAnH,SAAN,CAAP;AAAoI,OAAlK,CAAP;AAA4K;;AAAAP,IAAAA,sBAAsB,GAAE;AAAC,YAAMpJ,CAAC,GAAC,KAAKoD,MAAL,CAAYC,UAApB;AAA+B,UAAInD,CAAJ;AAAM,OAAC,KAAK6C,OAAL,KAAe,KAAKA,OAAL,GAAahB,CAAC,CAAC/B,CAAD,CAA7B,GAAkC,KAAK2D,QAAxC,MAAoD,KAAKA,QAAL,GAAc1B,CAAC,CAACjC,CAAD,EAAG;AAAC+C,QAAAA,OAAO,EAAC,KAAKA,OAAd;AAAsBgC,QAAAA,YAAY,EAACvE,CAAC,CAAC,KAAK2C,0BAAN,CAAD,GAAmC,SAAOjD,CAAC,GAAC,KAAKiD,0BAAL,CAAgC,CAAhC,CAAT,IAA6C,KAAK,CAAlD,GAAoDjD,CAAC,CAAC6E,YAAzF,GAAsG;AAAzI,OAAH,CAAnE;AAAuN,WAAKtB,UAAL,IAAiB,KAAKA,UAAL,CAAgByC,YAAhB,GAA6BvE,CAAC,CAAC,KAAKgC,QAAL,CAAcwC,MAAd,EAAD,CAA9B,EAAuD,KAAK1C,UAAL,CAAgBJ,UAAhB,GAA2BrD,CAAnG,IAAsG,KAAKyD,UAAL,GAAgB,IAAIvB,CAAJ,CAAM;AAACgE,QAAAA,YAAY,EAAC,KAAKvC,QAAL,CAAcwC,MAAd,EAAd;AAAqC9C,QAAAA,UAAU,EAACrD;AAAhD,OAAN,CAAtH;AAAgL,YAAMG,CAAC,GAAC,KAAKsD,UAAL,CAAgB2C,IAAhB,EAAR;AAA+BjG,MAAAA,CAAC,CAACyJ,OAAF,IAAWtH,CAAC,CAACuH,IAAF,CAAO,oBAAP,EAA4B1J,CAAC,CAAC2J,KAAF,IAAS,mDAArC,CAAX;AAAqG;;AAAxrN,GAArB;AAA+sN,SAAO9J,CAAC,CAAC,CAACY,CAAC,EAAF,CAAD,EAAO4B,CAAC,CAACuH,SAAT,EAAmB,qBAAnB,EAAyC,KAAK,CAA9C,CAAD,EAAkD/J,CAAC,CAAC,CAACY,CAAC,EAAF,CAAD,EAAO4B,CAAC,CAACuH,SAAT,EAAmB,uBAAnB,EAA2C,KAAK,CAAhD,CAAnD,EAAsG/J,CAAC,CAAC,CAACY,CAAC,EAAF,CAAD,EAAO4B,CAAC,CAACuH,SAAT,EAAmB,mBAAnB,EAAuC,KAAK,CAA5C,CAAvG,EAAsJ/J,CAAC,CAAC,CAACY,CAAC,EAAF,CAAD,EAAO4B,CAAC,CAACuH,SAAT,EAAmB,SAAnB,EAA6B,KAAK,CAAlC,CAAvJ,EAA4L/J,CAAC,CAAC,CAACY,CAAC,CAAC;AAACoJ,IAAAA,IAAI,EAAC;AAACC,MAAAA,OAAO,EAAC;AAACC,QAAAA,OAAO,EAAC;AAACC,UAAAA,IAAI,EAAC;AAACC,YAAAA,MAAM,EAAC;AAAR;AAAN;AAAT;AAAT;AAAN,GAAD,CAAF,CAAD,EAAiE5H,CAAC,CAACuH,SAAnE,EAA6E,WAA7E,EAAyF,KAAK,CAA9F,CAA7L,EAA8R/J,CAAC,CAAC,CAACY,CAAC,CAAC;AAACsH,IAAAA,IAAI,EAACnI,CAAN;AAAQiK,IAAAA,IAAI,EAAC;AAACG,MAAAA,IAAI,EAAC,CAAC;AAAP;AAAb,GAAD,CAAF,EAA4BzJ,CAAC,CAAC,mBAAD,CAA7B,CAAD,EAAqD8B,CAAC,CAACuH,SAAvD,EAAiE,YAAjE,EAA8E,KAAK,CAAnF,CAA/R,EAAqX/J,CAAC,CAAC,CAACY,CAAC,EAAF,CAAD,EAAO4B,CAAC,CAACuH,SAAT,EAAmB,eAAnB,EAAmC,KAAK,CAAxC,CAAtX,EAAia/J,CAAC,CAAC,CAACY,CAAC,EAAF,CAAD,EAAO4B,CAAC,CAACuH,SAAT,EAAmB,UAAnB,EAA8B,KAAK,CAAnC,CAAla,EAAwc/J,CAAC,CAAC,CAACY,CAAC,CAAC;AAACsH,IAAAA,IAAI,EAAC,CAAC7G,CAAD;AAAN,GAAD,CAAF,CAAD,EAAiBmB,CAAC,CAACuH,SAAnB,EAA6B,4BAA7B,EAA0D,KAAK,CAA/D,CAAzc,EAA2gB/J,CAAC,CAAC,CAACY,CAAC,EAAF,CAAD,EAAO4B,CAAC,CAACuH,SAAT,EAAmB,QAAnB,EAA4B,KAAK,CAAjC,CAA5gB,EAAgjB/J,CAAC,CAAC,CAACY,CAAC,CAAC;AAACyJ,IAAAA,QAAQ,EAAC,CAAC;AAAX,GAAD,CAAF,EAAkB3J,CAAC,CAAC,mBAAD,CAAnB,CAAD,EAA2C8B,CAAC,CAACuH,SAA7C,EAAuD,YAAvD,EAAoE,KAAK,CAAzE,CAAjjB,EAA6nB/J,CAAC,CAAC,CAACY,CAAC,EAAF,CAAD,EAAO4B,CAAC,CAACuH,SAAT,EAAmB,YAAnB,EAAgC,KAAK,CAArC,CAA9nB,EAAsqB/J,CAAC,CAAC,CAACY,CAAC,CAAC;AAACsH,IAAAA,IAAI,EAAC7F,CAAN;AAAQ2H,IAAAA,IAAI,EAAC;AAACG,MAAAA,IAAI,EAAC,CAAC;AAAP;AAAb,GAAD,CAAF,EAA4BzJ,CAAC,CAAC,6BAAD,CAA7B,CAAD,EAA+D8B,CAAC,CAACuH,SAAjE,EAA2E,kBAA3E,EAA8F,KAAK,CAAnG,CAAvqB,EAA6wB/J,CAAC,CAAC,CAACY,CAAC,CAAC;AAACsH,IAAAA,IAAI,EAAC3G,CAAN;AAAQyI,IAAAA,IAAI,EAAC;AAACG,MAAAA,IAAI,EAAC,CAAC;AAAP;AAAb,GAAD,CAAF,EAA4BzJ,CAAC,CAAC,iCAAD,CAA7B,CAAD,EAAmE8B,CAAC,CAACuH,SAArE,EAA+E,UAA/E,EAA0F,KAAK,CAA/F,CAA9wB,EAAg3B/J,CAAC,CAAC,CAACY,CAAC,CAACQ,CAAD,CAAF,CAAD,EAAQoB,CAAC,CAACuH,SAAV,EAAoB,KAApB,EAA0B,IAA1B,CAAj3B,EAAi5B/J,CAAC,CAAC,CAACY,CAAC,CAAC;AAAC0J,IAAAA,KAAK,EAACpK;AAAP,GAAD,CAAF,CAAD,EAAgBsC,CAAC,CAACuH,SAAlB,EAA4B,UAA5B,EAAuC,IAAvC,CAAl5B,EAA+7B/J,CAAC,CAAC,CAACY,CAAC,EAAF,CAAD,EAAO4B,CAAC,CAACuH,SAAT,EAAmB,YAAnB,EAAgC,KAAK,CAArC,CAAh8B,EAAw+BvH,CAAC,GAACxC,CAAC,CAAC,CAACc,CAAC,CAAC,8BAAD,CAAF,CAAD,EAAqC0B,CAArC,CAA3+B,EAAmhCA,CAA1hC;AAA4hC,CAA5yP;;AAA6yP,SAAOA,CAAC,IAAI+H,gBAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../chunks/tslib.es6.js\";import\"../../geometry.js\";import{rasterRendererTypes as t}from\"../../rasterRenderers.js\";import r from\"../../request.js\";import i from\"../../core/Logger.js\";import{isNone as n,isSome as s}from\"../../core/maybe.js\";import{aliasOf as o}from\"../../core/accessorSupport/decorators/aliasOf.js\";import\"../../core/arrayUtils.js\";import\"../../core/has.js\";import\"../../core/accessorSupport/ensureType.js\";import{property as a}from\"../../core/accessorSupport/decorators/property.js\";import{subclass as l}from\"../../core/accessorSupport/decorators/subclass.js\";import{getInfo as d}from\"../../geometry/support/spatialReferenceUtils.js\";import{sanitizeUrl as m}from\"../support/arcgisLayerUrl.js\";import{url as u}from\"../support/commonProperties.js\";import p from\"../support/DimensionalDefinition.js\";import h from\"../support/RasterJobHandler.js\";import c from\"../support/TileInfo.js\";import{convertVectorFieldData as f}from\"../support/rasterFunctions/vectorFieldUtils.js\";import{normalizeRendererJSON as y,getDefaultInterpolation as b,getDefaultBandCombination as g,createDefaultRenderer as I}from\"../../renderers/support/rasterRendererHelper.js\";import v from\"../../renderers/support/RasterSymbolizer.js\";import{createStreamlinesMesh as J}from\"../../views/2d/engine/flow/dataUtils.js\";import _ from\"../../geometry/Extent.js\";import x from\"../../geometry/SpatialReference.js\";const S=i.getLogger(\"esri.layers.mixins.ImageryTileMixin\"),R=i=>{let R=class extends i{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation=\"nearest\",this.multidimensionalDefinition=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set url(e){this._set(\"url\",m(e,S))}set renderer(e){this._set(\"renderer\",e),this.updateRenderer()}async convertVectorFieldData(e,t){if(n(e))return null;const r=this._rasterJobHandler.instance,i=this.rasterInfo.dataType;return r?r.convertVectorFieldData({pixelBlock:e,dataType:i},t):f(e,i)}async createStreamlinesMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createStreamlinesMesh(e,t):J(e.rendererSettings,e.flowData,s(t.signal)?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:t}=this.rasterInfo;if(n(t))return e;let r=e.multidimensionalDefinition||this.multidimensionalDefinition;!n(r)&&r.length||(r=this._getDefaultSlice());const i=e.timeExtent||this.timeExtent;if(s(r)&&s(i)&&(s(i.start)||s(i.end))){var o,a;r=r.map((e=>e.clone()));const l=null==(o=t.variables.find((({name:e})=>e===r[0].variableName)))||null==(a=o.dimensions)?void 0:a.find((({name:e})=>\"StdTime\"===e)),d=r.find((({dimensionName:e})=>\"StdTime\"===e));if(!l||!d)return{...e,multidimensionalDefinition:null};const{start:m,end:u}=i,p=n(m)?null:m.getTime(),h=n(u)?null:u.getTime(),c=null!=p?p:h,f=null!=h?h:p;if(s(l.values)){const e=l.values.filter((e=>{if(Array.isArray(e)){if(c===f)return e[0]<=c&&e[1]>=c;const t=e[0]<=c&&e[1]>c||e[0]<f&&e[1]>=f,r=e[0]>=c&&e[1]<=f||e[0]<c&&e[1]>f;return t||r}return c===f?e===c:e>=c&&e<=f}));if(e.length){const t=e.sort(((e,t)=>{var r,i,n,s;if(c===f)return(null!=(n=e[0])?n:e)-(null!=(s=t[0])?s:t);return Math.abs((null!=(r=e[1])?r:e)-f)-Math.abs((null!=(i=t[1])?i:t)-f)}))[0];d.values=[t]}else r=null}else if(l.hasRegularIntervals&&l.extent){const[e,t]=l.extent;c>t||f<e?r=null:d.values=c===f?[c]:[Math.max(e,c),Math.min(t,f)]}}return{...e,multidimensionalDefinition:r}}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=y(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const r=e&&e.pixelBlock;if(!(s(r)&&r.pixels&&r.pixels.length>0))return null;let i;await this.updateRenderer();const n=this._rasterJobHandler.instance,{bandIds:o}=this;return i=n?await n.symbolize({...e,simpleStretchParams:t,bandIds:o}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:o}),i}getTileUrl(e,t,r){return\"RasterTileServer\"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${r}`:\"\"}getCompatibleTileInfo(e,t,r=!1){if(!this.loaded||n(t))return null;if(r&&e.equals(this.spatialReference))return this.tileInfo;const i=d(e);return c.create({size:256,spatialReference:e,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,o={}){if(o.requestAsImageElement){const n=this.getTileUrl(e,t,i);return r(n,{responseType:\"image\",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:o.signal}).then((e=>e.data))}if(s(this.rasterInfo.multidimensionalInfo)&&(o=this.normalizeRasterFetchOptions(o),n(o.multidimensionalDefinition))){const r=o.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,i,r),pixelBlock:null}}return await this._initJobHandler(),\"raster-shaded-relief\"===this.renderer.type&&(o={...o,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,i,o)}async fetchPixels(e,t,r,i={}){return s(this.rasterInfo.multidimensionalInfo)&&(i=this.normalizeRasterFetchOptions(i),n(i.multidimensionalDefinition))?{extent:e,pixelBlock:null}:(await this._initJobHandler(),this.raster.fetchPixels(e,t,r,i))}async identify(e,t={}){return s(this.rasterInfo.multidimensionalInfo)&&(t=this.normalizeRasterFetchOptions(t),n(t.multidimensionalDefinition))?{location:e,value:null}:this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var e;const t=this.rasterInfo.multidimensionalInfo;if(!s(t)||\"standard-time\"!==this.rasterInfo.dataType)return!1;const r=null==(e=this.multidimensionalDefinition[0])?void 0:e.variableName;return t.variables.some((e=>e.name===r&&e.dimensions.some((e=>\"StdTime\"===e.name))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=this._getDefaultSlice()),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new h;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=b(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set(\"interpolation\",t)}}_getDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(!s(e))return null;const t=e.variables[0];return t.dimensions.map((e=>{var r,i;return new p({variableName:t.name,dimensionName:e.name,values:[null!=(r=null==(i=e.values)?void 0:i[0])?r:e.extent[0]],isSlice:!0})}))}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t;(this.bandIds||(this.bandIds=g(e)),this.renderer)||(this.renderer=I(e,{bandIds:this.bandIds,variableName:s(this.multidimensionalDefinition)?null==(t=this.multidimensionalDefinition[0])?void 0:t.variableName:null}));this.symbolizer?(this.symbolizer.rendererJSON=y(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new v({rendererJSON:this.renderer.toJSON(),rasterInfo:e});const r=this.symbolizer.bind();r.success||S.warn(\"imagery-tile-mixin\",r.error||\"The given renderer is not supported by the layer.\")}};return e([a()],R.prototype,\"_cachedRendererJson\",void 0),e([a()],R.prototype,\"_compatibleFullExtent\",void 0),e([a()],R.prototype,\"_rasterJobHandler\",void 0),e([a()],R.prototype,\"bandIds\",void 0),e([a({json:{origins:{service:{read:{source:\"copyrightText\"}}}}})],R.prototype,\"copyright\",void 0),e([a({type:_,json:{read:!1}}),o(\"rasterInfo.extent\")],R.prototype,\"fullExtent\",void 0),e([a()],R.prototype,\"interpolation\",void 0),e([a()],R.prototype,\"ioConfig\",void 0),e([a({type:[p]})],R.prototype,\"multidimensionalDefinition\",void 0),e([a()],R.prototype,\"raster\",void 0),e([a({readOnly:!0}),o(\"raster.rasterInfo\")],R.prototype,\"rasterInfo\",void 0),e([a()],R.prototype,\"sourceJSON\",void 0),e([a({type:x,json:{read:!1}}),o(\"rasterInfo.spatialReference\")],R.prototype,\"spatialReference\",void 0),e([a({type:c,json:{read:!1}}),o(\"rasterInfo.storageInfo.tileInfo\")],R.prototype,\"tileInfo\",void 0),e([a(u)],R.prototype,\"url\",null),e([a({types:t})],R.prototype,\"renderer\",null),e([a()],R.prototype,\"symbolizer\",void 0),R=e([l(\"esri.layers.ImageryTileMixin\")],R),R};export{R as ImageryTileMixin};\n"]},"metadata":{},"sourceType":"module"}