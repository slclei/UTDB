{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { disposeMaybe as i } from \"../../../../../core/maybe.js\";\nimport { PrimitiveType as t } from \"../../../../webgl/enums.js\";\n\nclass e {\n  constructor(i, t, e) {\n    this.release = e, t && (this._config = t.snapshot()), this._program = this.initializeProgram(i), this._pipeline = this.initializePipeline(i);\n  }\n\n  destroy() {\n    this._program = i(this._program), this._pipeline = this._config = null;\n  }\n\n  reload(t) {\n    i(this._program), this._program = this.initializeProgram(t), this._pipeline = this.initializePipeline(t);\n  }\n\n  get program() {\n    return this._program;\n  }\n\n  get key() {\n    return this._config.key;\n  }\n\n  get configuration() {\n    return this._config;\n  }\n\n  bindPass(i, t) {}\n\n  bindMaterial(i, t) {}\n\n  bindDraw(i) {}\n\n  bindPipelineState(i) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let e = arguments.length > 2 ? arguments[2] : undefined;\n    i.setPipelineState(this.getPipelineState(t, e));\n  }\n\n  ensureAttributeLocations(i) {\n    this.program.assertCompatibleVertexAttributeLocations(i);\n  }\n\n  get primitiveType() {\n    return t.TRIANGLES;\n  }\n\n  getPipelineState(i, t) {\n    return this._pipeline;\n  }\n\n}\n\nexport { e as ShaderTechnique };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderTechnique/ShaderTechnique.js"],"names":["disposeMaybe","i","PrimitiveType","t","e","constructor","release","_config","snapshot","_program","initializeProgram","_pipeline","initializePipeline","destroy","reload","program","key","configuration","bindPass","bindMaterial","bindDraw","bindPipelineState","setPipelineState","getPipelineState","ensureAttributeLocations","assertCompatibleVertexAttributeLocations","primitiveType","TRIANGLES","ShaderTechnique"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,YAAY,IAAIC,CAAvB,QAA6B,8BAA7B;AAA4D,SAAOC,aAAa,IAAIC,CAAxB,QAA8B,4BAA9B;;AAA2D,MAAMC,CAAN,CAAO;AAACC,EAAAA,WAAW,CAACJ,CAAD,EAAGE,CAAH,EAAKC,CAAL,EAAO;AAAC,SAAKE,OAAL,GAAaF,CAAb,EAAeD,CAAC,KAAG,KAAKI,OAAL,GAAaJ,CAAC,CAACK,QAAF,EAAhB,CAAhB,EAA8C,KAAKC,QAAL,GAAc,KAAKC,iBAAL,CAAuBT,CAAvB,CAA5D,EAAsF,KAAKU,SAAL,GAAe,KAAKC,kBAAL,CAAwBX,CAAxB,CAArG;AAAgI;;AAAAY,EAAAA,OAAO,GAAE;AAAC,SAAKJ,QAAL,GAAcR,CAAC,CAAC,KAAKQ,QAAN,CAAf,EAA+B,KAAKE,SAAL,GAAe,KAAKJ,OAAL,GAAa,IAA3D;AAAgE;;AAAAO,EAAAA,MAAM,CAACX,CAAD,EAAG;AAACF,IAAAA,CAAC,CAAC,KAAKQ,QAAN,CAAD,EAAiB,KAAKA,QAAL,GAAc,KAAKC,iBAAL,CAAuBP,CAAvB,CAA/B,EAAyD,KAAKQ,SAAL,GAAe,KAAKC,kBAAL,CAAwBT,CAAxB,CAAxE;AAAmG;;AAAW,MAAPY,OAAO,GAAE;AAAC,WAAO,KAAKN,QAAZ;AAAqB;;AAAO,MAAHO,GAAG,GAAE;AAAC,WAAO,KAAKT,OAAL,CAAaS,GAApB;AAAwB;;AAAiB,MAAbC,aAAa,GAAE;AAAC,WAAO,KAAKV,OAAZ;AAAoB;;AAAAW,EAAAA,QAAQ,CAACjB,CAAD,EAAGE,CAAH,EAAK,CAAE;;AAAAgB,EAAAA,YAAY,CAAClB,CAAD,EAAGE,CAAH,EAAK,CAAE;;AAAAiB,EAAAA,QAAQ,CAACnB,CAAD,EAAG,CAAE;;AAAAoB,EAAAA,iBAAiB,CAACpB,CAAD,EAAY;AAAA,QAATE,CAAS,uEAAP,IAAO;AAAA,QAAFC,CAAE;AAACH,IAAAA,CAAC,CAACqB,gBAAF,CAAmB,KAAKC,gBAAL,CAAsBpB,CAAtB,EAAwBC,CAAxB,CAAnB;AAA+C;;AAAAoB,EAAAA,wBAAwB,CAACvB,CAAD,EAAG;AAAC,SAAKc,OAAL,CAAaU,wCAAb,CAAsDxB,CAAtD;AAAyD;;AAAiB,MAAbyB,aAAa,GAAE;AAAC,WAAOvB,CAAC,CAACwB,SAAT;AAAmB;;AAAAJ,EAAAA,gBAAgB,CAACtB,CAAD,EAAGE,CAAH,EAAK;AAAC,WAAO,KAAKQ,SAAZ;AAAsB;;AAA5tB;;AAA6tB,SAAOP,CAAC,IAAIwB,eAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{disposeMaybe as i}from\"../../../../../core/maybe.js\";import{PrimitiveType as t}from\"../../../../webgl/enums.js\";class e{constructor(i,t,e){this.release=e,t&&(this._config=t.snapshot()),this._program=this.initializeProgram(i),this._pipeline=this.initializePipeline(i)}destroy(){this._program=i(this._program),this._pipeline=this._config=null}reload(t){i(this._program),this._program=this.initializeProgram(t),this._pipeline=this.initializePipeline(t)}get program(){return this._program}get key(){return this._config.key}get configuration(){return this._config}bindPass(i,t){}bindMaterial(i,t){}bindDraw(i){}bindPipelineState(i,t=null,e){i.setPipelineState(this.getPipelineState(t,e))}ensureAttributeLocations(i){this.program.assertCompatibleVertexAttributeLocations(i)}get primitiveType(){return t.TRIANGLES}getPipelineState(i,t){return this._pipeline}}export{e as ShaderTechnique};\n"]},"metadata":{},"sourceType":"module"}