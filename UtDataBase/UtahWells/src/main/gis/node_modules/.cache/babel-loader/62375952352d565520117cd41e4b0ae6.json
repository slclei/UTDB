{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { glsl as o } from \"../../shaderModules/interfaces.js\";\nimport { VertexAttribute as r } from \"../../../lib/VertexAttribute.js\";\n\nfunction e(e, d) {\n  d.attributeColor ? (e.attributes.add(r.COLOR, \"vec4\"), e.varyings.add(\"vColor\", \"vec4\"), e.vertex.code.add(o`void forwardVertexColor() { vColor = color; }`), e.vertex.code.add(o`void forwardNormalizedVertexColor() { vColor = color * 0.003921568627451; }`)) : e.vertex.code.add(o`void forwardVertexColor() {}\nvoid forwardNormalizedVertexColor() {}`);\n}\n\nexport { e as VertexColor };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js"],"names":["glsl","o","VertexAttribute","r","e","d","attributeColor","attributes","add","COLOR","varyings","vertex","code","VertexColor"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,IAAI,IAAIC,CAAf,QAAqB,mCAArB;AAAyD,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,iCAAhC;;AAAkE,SAASC,CAAT,CAAWA,CAAX,EAAaC,CAAb,EAAe;AAACA,EAAAA,CAAC,CAACC,cAAF,IAAkBF,CAAC,CAACG,UAAF,CAAaC,GAAb,CAAiBL,CAAC,CAACM,KAAnB,EAAyB,MAAzB,GAAiCL,CAAC,CAACM,QAAF,CAAWF,GAAX,CAAe,QAAf,EAAwB,MAAxB,CAAjC,EAAiEJ,CAAC,CAACO,MAAF,CAASC,IAAT,CAAcJ,GAAd,CAAkBP,CAAE,+CAApB,CAAjE,EAAqIG,CAAC,CAACO,MAAF,CAASC,IAAT,CAAcJ,GAAd,CAAkBP,CAAE,6EAApB,CAAvJ,IAA0PG,CAAC,CAACO,MAAF,CAASC,IAAT,CAAcJ,GAAd,CAAkBP,CAAE;AACzZ,uCADqY,CAA1P;AAClG;;AAAA,SAAOG,CAAC,IAAIS,WAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{glsl as o}from\"../../shaderModules/interfaces.js\";import{VertexAttribute as r}from\"../../../lib/VertexAttribute.js\";function e(e,d){d.attributeColor?(e.attributes.add(r.COLOR,\"vec4\"),e.varyings.add(\"vColor\",\"vec4\"),e.vertex.code.add(o`void forwardVertexColor() { vColor = color; }`),e.vertex.code.add(o`void forwardNormalizedVertexColor() { vColor = color * 0.003921568627451; }`)):e.vertex.code.add(o`void forwardVertexColor() {}\nvoid forwardNormalizedVertexColor() {}`)}export{e as VertexColor};\n"]},"metadata":{},"sourceType":"module"}