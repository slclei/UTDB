{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport \"../../../../core/has.js\";\nimport { FreeList as e } from \"./FreeList.js\";\nimport { allocateTypedArrayBuffer as t, strideToPackingFactor as r, copyMeshData as i } from \"./Utils.js\";\nconst s = [\"FILL\", \"LINE\", \"MARKER\", \"TEXT\", \"LABEL\"];\n\nfunction o(e) {\n  const t = e.getStrides(),\n        r = {};\n\n  for (let i = 0; i < t.length; i++) r[s[i]] = t[i];\n\n  return r;\n}\n\nconst n = .5;\n\nclass d {\n  constructor(r, i, s, o) {\n    this._strides = r, this._displayList = i, this._freeListsAndStorage = {}, this._dirtyMap = null, this._dirtyMap = s;\n\n    for (const n in r) {\n      this._freeListsAndStorage[n] = {\n        vtxFreeList: o ? new e(o) : null,\n        idxFreeList: o ? new e(o) : null,\n        vertexBuffers: {},\n        indexBuffer: o ? new Uint32Array(o) : null\n      };\n\n      for (const e in r[n]) this._freeListsAndStorage[n].vertexBuffers[e] = {\n        data: o ? t(o, r[n][e]) : null,\n        stride: r[n][e]\n      };\n    }\n  }\n\n  static fromTileData(t, i) {\n    const n = o(t),\n          a = [0, 0, 0, 0, 0],\n          x = [0, 0, 0, 0, 0],\n          u = t.tileDisplayData.displayObjects;\n\n    for (const e of u) for (const t of e.displayRecords) a[t.geometryType] = Math.max(a[t.geometryType], t.vertexFrom + t.vertexCount), x[t.geometryType] = Math.max(x[t.geometryType], t.indexFrom + t.indexCount);\n\n    const f = new d(n, t.tileDisplayData.displayList, i, null);\n\n    for (let o = 0; o < t.tileBufferData.geometries.length; ++o) {\n      const i = a[o],\n            n = x[o],\n            d = t.tileBufferData.geometries[o],\n            u = s[o],\n            l = f._storageFor(u),\n            c = t.tileBufferData.geometries[o].indexBuffer;\n\n      let m;\n      l.indexBuffer = c, l.idxFreeList = new e(c.length), l.idxFreeList.allocate(n);\n\n      for (const e in d.vertexBuffer) {\n        const i = t.tileBufferData.geometries[o].vertexBuffer[e];\n        l.vertexBuffers[e].data = i.data, l.vertexBuffers[e].stride = i.stride;\n        const s = r(i.stride),\n              n = i.data.length * s / i.stride;\n        m || (m = n);\n      }\n\n      l.vtxFreeList = new e(m), l.vtxFreeList.allocate(i);\n    }\n\n    return f;\n  }\n\n  delete(e) {\n    const t = s[e.geometryType];\n    this._freeVertices(t, e.vertexFrom, e.vertexCount), this._freeIndices(t, e.indexFrom, e.indexCount), this._displayList.removeFromList(e), e.vertexFrom = void 0, e.indexFrom = void 0;\n  }\n\n  setMeshData(e, t, r, o, n) {\n    const d = s[e.geometryType];\n    let a, x;\n    e.meshData = null, void 0 === e.vertexFrom ? (x = t.vertexCount, a = this._allocateVertices(d, x)) : t.vertexCount > e.vertexCount ? (this._freeVertices(d, e.vertexFrom, e.vertexCount), x = t.vertexCount, a = this._allocateVertices(d, x)) : t.vertexCount === e.vertexCount ? (a = e.vertexFrom, x = e.vertexCount) : (this._freeVertices(d, e.vertexFrom + t.vertexCount, e.vertexCount - t.vertexCount), a = e.vertexFrom, x = t.vertexCount);\n    let u,\n        f,\n        l,\n        c = !0;\n\n    if (void 0 === e.indexFrom ? (u = n, l = t.indexCount, f = this._allocateIndices(d, l)) : t.indexCount > e.indexCount ? (u = this._displayList.removeFromList(e), this._freeIndices(d, e.indexFrom, e.indexCount), l = t.indexCount, f = this._allocateIndices(d, l)) : t.indexCount === e.indexCount ? (c = !1, f = e.indexFrom, l = e.indexCount) : (u = this._displayList.removeFromList(e), this._freeIndices(d, e.indexFrom + t.indexCount, e.indexCount - t.indexCount), f = e.indexFrom, l = t.indexCount), -1 !== a && -1 !== f) {\n      const s = this._storageFor(d);\n\n      if (i(a, f, s.vertexBuffers, s.indexBuffer, t, r, o), e.vertexFrom = a, e.indexFrom = f, e.vertexCount = t.vertexCount, e.indexCount = t.indexCount, this._dirtyMap) {\n        this._dirtyMap.markDirtyIndices(e.geometryType, e.indexFrom, e.indexCount);\n\n        for (const t in r) this._dirtyMap.markDirtyVertices(e.geometryType, t, e.vertexFrom, e.vertexCount);\n      }\n\n      return c && this._displayList.addToList(e, u), !0;\n    }\n\n    return -1 !== a && this._freeVertices(d, a, x), -1 !== f && this._freeIndices(d, f, l), e.setMeshDataFromBuffers(t, r, o), e.vertexFrom = void 0, e.vertexCount = 0, e.indexFrom = void 0, e.indexCount = 0, !1;\n  }\n\n  tryAddMeshData(e, t) {\n    const r = t.vertexBuffer,\n          o = t.indexBuffer,\n          n = s[e.geometryType],\n          d = this._allocateVertices(n, e.vertexCount);\n\n    if (-1 === d) return this._freeVertices(n, d, e.vertexCount), !1;\n\n    const a = this._allocateIndices(n, e.indexCount);\n\n    if (-1 === a) return this._freeVertices(n, d, e.vertexCount), this._freeIndices(n, a, e.indexCount), !1;\n\n    const x = this._storageFor(n);\n\n    if (i(d, a, x.vertexBuffers, x.indexBuffer, e, r, o), e.vertexFrom = d, e.indexFrom = a, this._dirtyMap) {\n      this._dirtyMap.markDirtyIndices(e.geometryType, e.indexFrom, e.indexCount);\n\n      for (const t in r) this._dirtyMap.markDirtyVertices(e.geometryType, t, d, e.vertexCount);\n    }\n\n    return this._displayList.addToList(e), !0;\n  }\n\n  _allocateVertices(e, t) {\n    const r = this._storageFor(e),\n          i = r.vtxFreeList.allocate(t);\n\n    if (-1 === i) return -1;\n    return r.vtxFreeList.fragmentation > n ? -1 : i;\n  }\n\n  _freeVertices(e, t, r) {\n    this._storageFor(e).vtxFreeList.free(t, r);\n  }\n\n  _freeIndices(e, t, r) {\n    this._storageFor(e).idxFreeList.free(t, r);\n  }\n\n  _allocateIndices(e, t) {\n    const r = this._storageFor(e),\n          i = r.idxFreeList.allocate(t);\n\n    if (-1 === i) return -1;\n    return r.idxFreeList.fragmentation > n ? -1 : i;\n  }\n\n  _storageFor(e) {\n    return this._freeListsAndStorage[e];\n  }\n\n  _stridesFor(e, t) {\n    return this._strides[e][t];\n  }\n\n}\n\nexport { d as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/webgl/DisplayRecordStore.js"],"names":["FreeList","e","allocateTypedArrayBuffer","t","strideToPackingFactor","r","copyMeshData","i","s","o","getStrides","length","n","d","constructor","_strides","_displayList","_freeListsAndStorage","_dirtyMap","vtxFreeList","idxFreeList","vertexBuffers","indexBuffer","Uint32Array","data","stride","fromTileData","a","x","u","tileDisplayData","displayObjects","displayRecords","geometryType","Math","max","vertexFrom","vertexCount","indexFrom","indexCount","f","displayList","tileBufferData","geometries","l","_storageFor","c","m","allocate","vertexBuffer","delete","_freeVertices","_freeIndices","removeFromList","setMeshData","meshData","_allocateVertices","_allocateIndices","markDirtyIndices","markDirtyVertices","addToList","setMeshDataFromBuffers","tryAddMeshData","fragmentation","free","_stridesFor","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport\"../../../../core/has.js\";import{FreeList as e}from\"./FreeList.js\";import{allocateTypedArrayBuffer as t,strideToPackingFactor as r,copyMeshData as i}from\"./Utils.js\";const s=[\"FILL\",\"LINE\",\"MARKER\",\"TEXT\",\"LABEL\"];function o(e){const t=e.getStrides(),r={};for(let i=0;i<t.length;i++)r[s[i]]=t[i];return r}const n=.5;class d{constructor(r,i,s,o){this._strides=r,this._displayList=i,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=s;for(const n in r){this._freeListsAndStorage[n]={vtxFreeList:o?new e(o):null,idxFreeList:o?new e(o):null,vertexBuffers:{},indexBuffer:o?new Uint32Array(o):null};for(const e in r[n])this._freeListsAndStorage[n].vertexBuffers[e]={data:o?t(o,r[n][e]):null,stride:r[n][e]}}}static fromTileData(t,i){const n=o(t),a=[0,0,0,0,0],x=[0,0,0,0,0],u=t.tileDisplayData.displayObjects;for(const e of u)for(const t of e.displayRecords)a[t.geometryType]=Math.max(a[t.geometryType],t.vertexFrom+t.vertexCount),x[t.geometryType]=Math.max(x[t.geometryType],t.indexFrom+t.indexCount);const f=new d(n,t.tileDisplayData.displayList,i,null);for(let o=0;o<t.tileBufferData.geometries.length;++o){const i=a[o],n=x[o],d=t.tileBufferData.geometries[o],u=s[o],l=f._storageFor(u),c=t.tileBufferData.geometries[o].indexBuffer;let m;l.indexBuffer=c,l.idxFreeList=new e(c.length),l.idxFreeList.allocate(n);for(const e in d.vertexBuffer){const i=t.tileBufferData.geometries[o].vertexBuffer[e];l.vertexBuffers[e].data=i.data,l.vertexBuffers[e].stride=i.stride;const s=r(i.stride),n=i.data.length*s/i.stride;m||(m=n)}l.vtxFreeList=new e(m),l.vtxFreeList.allocate(i)}return f}delete(e){const t=s[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,r,o,n){const d=s[e.geometryType];let a,x;e.meshData=null,void 0===e.vertexFrom?(x=t.vertexCount,a=this._allocateVertices(d,x)):t.vertexCount>e.vertexCount?(this._freeVertices(d,e.vertexFrom,e.vertexCount),x=t.vertexCount,a=this._allocateVertices(d,x)):t.vertexCount===e.vertexCount?(a=e.vertexFrom,x=e.vertexCount):(this._freeVertices(d,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),a=e.vertexFrom,x=t.vertexCount);let u,f,l,c=!0;if(void 0===e.indexFrom?(u=n,l=t.indexCount,f=this._allocateIndices(d,l)):t.indexCount>e.indexCount?(u=this._displayList.removeFromList(e),this._freeIndices(d,e.indexFrom,e.indexCount),l=t.indexCount,f=this._allocateIndices(d,l)):t.indexCount===e.indexCount?(c=!1,f=e.indexFrom,l=e.indexCount):(u=this._displayList.removeFromList(e),this._freeIndices(d,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),f=e.indexFrom,l=t.indexCount),-1!==a&&-1!==f){const s=this._storageFor(d);if(i(a,f,s.vertexBuffers,s.indexBuffer,t,r,o),e.vertexFrom=a,e.indexFrom=f,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in r)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return c&&this._displayList.addToList(e,u),!0}return-1!==a&&this._freeVertices(d,a,x),-1!==f&&this._freeIndices(d,f,l),e.setMeshDataFromBuffers(t,r,o),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const r=t.vertexBuffer,o=t.indexBuffer,n=s[e.geometryType],d=this._allocateVertices(n,e.vertexCount);if(-1===d)return this._freeVertices(n,d,e.vertexCount),!1;const a=this._allocateIndices(n,e.indexCount);if(-1===a)return this._freeVertices(n,d,e.vertexCount),this._freeIndices(n,a,e.indexCount),!1;const x=this._storageFor(n);if(i(d,a,x.vertexBuffers,x.indexBuffer,e,r,o),e.vertexFrom=d,e.indexFrom=a,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in r)this._dirtyMap.markDirtyVertices(e.geometryType,t,d,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const r=this._storageFor(e),i=r.vtxFreeList.allocate(t);if(-1===i)return-1;return r.vtxFreeList.fragmentation>n?-1:i}_freeVertices(e,t,r){this._storageFor(e).vtxFreeList.free(t,r)}_freeIndices(e,t,r){this._storageFor(e).idxFreeList.free(t,r)}_allocateIndices(e,t){const r=this._storageFor(e),i=r.idxFreeList.allocate(t);if(-1===i)return-1;return r.idxFreeList.fragmentation>n?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}export{d as default};\n"]},"metadata":{},"sourceType":"module"}