{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { isAbortError as e } from \"../../../../core/promiseUtils.js\";\nimport { StyleUpdateType as t } from \"./enums.js\";\nimport s from \"./WorkerTile.js\";\nimport r from \"./style/StyleRepository.js\";\n\nclass o {\n  constructor() {\n    this._spriteInfo = {}, this._glyphInfo = {};\n  }\n\n  reset() {\n    return this._spriteInfo = {}, this._glyphInfo = {}, Promise.resolve();\n  }\n\n  getLayers() {\n    var e;\n    return null == (e = this._styleRepository) ? void 0 : e.layers;\n  }\n\n  async createTileAndParse(t, r) {\n    const {\n      key: o\n    } = t,\n          i = {};\n\n    for (const e of Object.keys(t.sourceName2DataAndRefKey)) {\n      const s = t.sourceName2DataAndRefKey[e];\n      i[e] = s.refKey;\n    }\n\n    const n = new s(o, i, this, this._styleRepository);\n\n    try {\n      return await n.parse(t, r);\n    } catch (l) {\n      if (n.setObsolete(), n.release(), !e(l)) throw l;\n      return null;\n    }\n  }\n\n  updateStyle(e) {\n    if (!e || 0 === e.length || !this._styleRepository) return;\n    const s = this._styleRepository;\n\n    for (const r of e) {\n      const e = r.type,\n            o = r.data;\n\n      switch (e) {\n        case t.PAINTER_CHANGED:\n          s.setPaintProperties(o.layer, o.paint);\n          break;\n\n        case t.LAYOUT_CHANGED:\n          s.setLayoutProperties(o.layer, o.layout);\n          break;\n\n        case t.LAYER_REMOVED:\n          s.deleteStyleLayer(o.layer);\n          break;\n\n        case t.LAYER_CHANGED:\n          s.setStyleLayer(o.layer, o.index);\n          break;\n\n        case t.SPRITES_CHANGED:\n          this._spriteInfo = {};\n      }\n    }\n  }\n\n  setStyle(e) {\n    this._styleRepository = new r(e), this._spriteInfo = {}, this._glyphInfo = {};\n  }\n\n  fetchSprites(e, t, s) {\n    const r = [],\n          o = this._spriteInfo;\n\n    for (const i of e) {\n      void 0 === o[i.name] && r.push(i);\n    }\n\n    return 0 === r.length ? Promise.resolve() : t.invoke(\"getSprites\", r, {\n      signal: s && s.signal\n    }).then(e => {\n      for (const t in e) {\n        const s = e[t];\n        o[t] = s;\n      }\n    });\n  }\n\n  getSpriteItems() {\n    return this._spriteInfo;\n  }\n\n  fetchGlyphs(e, t, s, r, o) {\n    const i = [];\n    let n = this._glyphInfo[t];\n    return n ? s.forEach(e => {\n      n[e] || i.push(e);\n    }) : (n = this._glyphInfo[t] = [], s.forEach(e => i.push(e))), 0 === i.length ? Promise.resolve() : r.invoke(\"getGlyphs\", {\n      tileID: e,\n      font: t,\n      codePoints: i\n    }, o).then(e => {\n      for (let t = 0; t < e.length; t++) e[t] && (n[t] = e[t]);\n    });\n  }\n\n  getGlyphItems(e) {\n    return this._glyphInfo[e];\n  }\n\n}\n\nexport { o as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/vectorTiles/WorkerTileHandler.js"],"names":["isAbortError","e","StyleUpdateType","t","s","r","o","constructor","_spriteInfo","_glyphInfo","reset","Promise","resolve","getLayers","_styleRepository","layers","createTileAndParse","key","i","Object","keys","sourceName2DataAndRefKey","refKey","n","parse","l","setObsolete","release","updateStyle","length","type","data","PAINTER_CHANGED","setPaintProperties","layer","paint","LAYOUT_CHANGED","setLayoutProperties","layout","LAYER_REMOVED","deleteStyleLayer","LAYER_CHANGED","setStyleLayer","index","SPRITES_CHANGED","setStyle","fetchSprites","name","push","invoke","signal","then","getSpriteItems","fetchGlyphs","forEach","tileID","font","codePoints","getGlyphItems","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{isAbortError as e}from\"../../../../core/promiseUtils.js\";import{StyleUpdateType as t}from\"./enums.js\";import s from\"./WorkerTile.js\";import r from\"./style/StyleRepository.js\";class o{constructor(){this._spriteInfo={},this._glyphInfo={}}reset(){return this._spriteInfo={},this._glyphInfo={},Promise.resolve()}getLayers(){var e;return null==(e=this._styleRepository)?void 0:e.layers}async createTileAndParse(t,r){const{key:o}=t,i={};for(const e of Object.keys(t.sourceName2DataAndRefKey)){const s=t.sourceName2DataAndRefKey[e];i[e]=s.refKey}const n=new s(o,i,this,this._styleRepository);try{return await n.parse(t,r)}catch(l){if(n.setObsolete(),n.release(),!e(l))throw l;return null}}updateStyle(e){if(!e||0===e.length||!this._styleRepository)return;const s=this._styleRepository;for(const r of e){const e=r.type,o=r.data;switch(e){case t.PAINTER_CHANGED:s.setPaintProperties(o.layer,o.paint);break;case t.LAYOUT_CHANGED:s.setLayoutProperties(o.layer,o.layout);break;case t.LAYER_REMOVED:s.deleteStyleLayer(o.layer);break;case t.LAYER_CHANGED:s.setStyleLayer(o.layer,o.index);break;case t.SPRITES_CHANGED:this._spriteInfo={}}}}setStyle(e){this._styleRepository=new r(e),this._spriteInfo={},this._glyphInfo={}}fetchSprites(e,t,s){const r=[],o=this._spriteInfo;for(const i of e){void 0===o[i.name]&&r.push(i)}return 0===r.length?Promise.resolve():t.invoke(\"getSprites\",r,{signal:s&&s.signal}).then((e=>{for(const t in e){const s=e[t];o[t]=s}}))}getSpriteItems(){return this._spriteInfo}fetchGlyphs(e,t,s,r,o){const i=[];let n=this._glyphInfo[t];return n?s.forEach((e=>{n[e]||i.push(e)})):(n=this._glyphInfo[t]=[],s.forEach((e=>i.push(e)))),0===i.length?Promise.resolve():r.invoke(\"getGlyphs\",{tileID:e,font:t,codePoints:i},o).then((e=>{for(let t=0;t<e.length;t++)e[t]&&(n[t]=e[t])}))}getGlyphItems(e){return this._glyphInfo[e]}}export{o as default};\n"]},"metadata":{},"sourceType":"module"}