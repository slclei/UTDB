{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../chunks/tslib.es6.js\";\nimport r from \"../request.js\";\nimport t from \"../core/Error.js\";\nimport o from \"../core/Logger.js\";\nimport { releaseMaybe as i, isSome as s } from \"../core/maybe.js\";\nimport { MultiOriginJSONMixin as a } from \"../core/MultiOriginJSONSupport.js\";\nimport { throwIfAbortError as l, throwIfAborted as n } from \"../core/promiseUtils.js\";\nimport { objectToQuery as p } from \"../core/urlUtils.js\";\nimport { property as c } from \"../core/accessorSupport/decorators/property.js\";\nimport \"../core/arrayUtils.js\";\nimport \"../core/has.js\";\nimport \"../core/accessorSupport/ensureType.js\";\nimport { reader as m } from \"../core/accessorSupport/decorators/reader.js\";\nimport { subclass as h } from \"../core/accessorSupport/decorators/subclass.js\";\nimport d from \"../geometry/HeightModelInfo.js\";\nimport u from \"./Layer.js\";\nimport { ArcGISCachedService as y } from \"./mixins/ArcGISCachedService.js\";\nimport { ArcGISService as v } from \"./mixins/ArcGISService.js\";\nimport { OperationalLayer as f } from \"./mixins/OperationalLayer.js\";\nimport { PortalLayer as g } from \"./mixins/PortalLayer.js\";\nimport { url as S } from \"./support/commonProperties.js\";\nimport { acquireDecoder as j } from \"./support/LercDecoder.js\";\nconst w = o.getLogger(\"esri.layers.ElevationLayer\");\nlet T = class extends y(v(f(g(a(u))))) {\n  constructor() {\n    super(...arguments), this.copyright = null, this.heightModelInfo = null, this.path = null, this.opacity = 1, this.operationalLayerType = \"ArcGISTiledElevationServiceLayer\", this.sourceJSON = null, this.type = \"elevation\", this.url = null, this.version = null, this._lercDecoder = j();\n  }\n\n  normalizeCtorArgs(e, r) {\n    return \"string\" == typeof e ? {\n      url: e,\n      ...r\n    } : e;\n  }\n\n  destroy() {\n    this._lercDecoder = i(this._lercDecoder);\n  }\n\n  set minScale(e) {\n    this.constructed && w.warn(`${this.declaredClass}.minScale support has been removed (since 4.5)`);\n  }\n\n  get minScale() {}\n\n  set maxScale(e) {\n    this.constructed && w.warn(`${this.declaredClass}.maxScale support has been removed (since 4.5)`);\n  }\n\n  get maxScale() {}\n\n  readVersion(e, r) {\n    let t = r.currentVersion;\n    return t || (t = 9.3), t;\n  }\n\n  load(e) {\n    const r = s(e) ? e.signal : null;\n    return this.addResolvingPromise(this.loadFromPortal({\n      supportedTypes: [\"Image Service\"],\n      supportsData: !1,\n      validateItem: e => {\n        for (let r = 0; r < e.typeKeywords.length; r++) if (\"elevation 3d layer\" === e.typeKeywords[r].toLowerCase()) return !0;\n\n        throw new t(\"portal:invalid-layer-item-type\", \"Invalid layer item type '${type}', expected '${expectedType}' \", {\n          type: \"Image Service\",\n          expectedType: \"Image Service Elevation 3D Layer\"\n        });\n      }\n    }, e).catch(l).then(() => this._fetchImageService(r))), Promise.resolve(this);\n  }\n\n  fetchTile(e, t, o, i) {\n    const a = s((i = i || {\n      signal: null\n    }).signal) ? i.signal : i.signal = new AbortController().signal,\n          l = {\n      responseType: \"array-buffer\",\n      signal: a\n    },\n          n = {\n      noDataValue: i.noDataValue,\n      returnFileInfo: !0\n    };\n    return this.load().then(() => this._fetchTileAvailability(e, t, o, i)).then(() => r(this.getTileUrl(e, t, o), l)).then(e => this._lercDecoder.decode(e.data, n, a)).then(e => ({\n      values: e.pixelData,\n      width: e.width,\n      height: e.height,\n      maxZError: e.fileInfo.maxZError,\n      noDataValue: e.noDataValue,\n      minValue: e.minValue,\n      maxValue: e.maxValue\n    }));\n  }\n\n  getTileUrl(e, r, t) {\n    const o = !this.tilemapCache && this.supportsBlankTile,\n          i = p({ ...this.parsedUrl.query,\n      blankTile: !o && null\n    });\n    return `${this.parsedUrl.path}/tile/${e}/${r}/${t}${i ? \"?\" + i : \"\"}`;\n  }\n\n  async queryElevation(e, r) {\n    const {\n      ElevationQuery: t\n    } = await import(\"./support/ElevationQuery.js\");\n    n(r);\n    return new t().query(this, e, r);\n  }\n\n  async createElevationSampler(e, r) {\n    const {\n      ElevationQuery: t\n    } = await import(\"./support/ElevationQuery.js\");\n    n(r);\n    return new t().createSampler(this, e, r);\n  }\n\n  _fetchTileAvailability(e, r, t, o) {\n    return this.tilemapCache ? this.tilemapCache.fetchAvailability(e, r, t, o) : Promise.resolve(\"unknown\");\n  }\n\n  async _fetchImageService(e) {\n    if (this.sourceJSON) return this.sourceJSON;\n    const t = {\n      query: {\n        f: \"json\",\n        ...this.parsedUrl.query\n      },\n      responseType: \"json\",\n      signal: e\n    },\n          o = await r(this.parsedUrl.path, t);\n    o.ssl && (this.url = this.url.replace(/^http:/i, \"https:\")), this.sourceJSON = o.data, this.read(o.data, {\n      origin: \"service\",\n      url: this.parsedUrl\n    });\n  }\n\n  get hasOverriddenFetchTile() {\n    return !this.fetchTile.__isDefault__;\n  }\n\n};\ne([c({\n  json: {\n    read: {\n      source: \"copyrightText\"\n    }\n  }\n})], T.prototype, \"copyright\", void 0), e([c({\n  readOnly: !0,\n  type: d\n})], T.prototype, \"heightModelInfo\", void 0), e([c({\n  type: String,\n  json: {\n    origins: {\n      \"web-scene\": {\n        read: !0,\n        write: !0\n      }\n    },\n    read: !1\n  }\n})], T.prototype, \"path\", void 0), e([c({\n  type: [\"show\", \"hide\"]\n})], T.prototype, \"listMode\", void 0), e([c({\n  json: {\n    read: !1,\n    write: !1,\n    origins: {\n      service: {\n        read: !1,\n        write: !1\n      },\n      \"portal-item\": {\n        read: !1,\n        write: !1\n      },\n      \"web-document\": {\n        read: !1,\n        write: !1\n      }\n    }\n  }\n})], T.prototype, \"minScale\", null), e([c({\n  json: {\n    read: !1,\n    write: !1,\n    origins: {\n      service: {\n        read: !1,\n        write: !1\n      },\n      \"portal-item\": {\n        read: !1,\n        write: !1\n      },\n      \"web-document\": {\n        read: !1,\n        write: !1\n      }\n    }\n  }\n})], T.prototype, \"maxScale\", null), e([c({\n  json: {\n    read: !1,\n    write: !1,\n    origins: {\n      \"web-document\": {\n        read: !1,\n        write: !1\n      }\n    }\n  }\n})], T.prototype, \"opacity\", void 0), e([c({\n  type: [\"ArcGISTiledElevationServiceLayer\"]\n})], T.prototype, \"operationalLayerType\", void 0), e([c()], T.prototype, \"sourceJSON\", void 0), e([c({\n  json: {\n    read: !1\n  },\n  value: \"elevation\",\n  readOnly: !0\n})], T.prototype, \"type\", void 0), e([c(S)], T.prototype, \"url\", void 0), e([c()], T.prototype, \"version\", void 0), e([m(\"version\", [\"currentVersion\"])], T.prototype, \"readVersion\", null), T = e([h(\"esri.layers.ElevationLayer\")], T), T.prototype.fetchTile.__isDefault__ = !0;\nconst x = T;\nexport { x as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/layers/ElevationLayer.js"],"names":["_","e","r","t","o","releaseMaybe","i","isSome","s","MultiOriginJSONMixin","a","throwIfAbortError","l","throwIfAborted","n","objectToQuery","p","property","c","reader","m","subclass","h","d","u","ArcGISCachedService","y","ArcGISService","v","OperationalLayer","f","PortalLayer","g","url","S","acquireDecoder","j","w","getLogger","T","constructor","copyright","heightModelInfo","path","opacity","operationalLayerType","sourceJSON","type","version","_lercDecoder","normalizeCtorArgs","destroy","minScale","constructed","warn","declaredClass","maxScale","readVersion","currentVersion","load","signal","addResolvingPromise","loadFromPortal","supportedTypes","supportsData","validateItem","typeKeywords","length","toLowerCase","expectedType","catch","then","_fetchImageService","Promise","resolve","fetchTile","AbortController","responseType","noDataValue","returnFileInfo","_fetchTileAvailability","getTileUrl","decode","data","values","pixelData","width","height","maxZError","fileInfo","minValue","maxValue","tilemapCache","supportsBlankTile","parsedUrl","query","blankTile","queryElevation","ElevationQuery","createElevationSampler","createSampler","fetchAvailability","ssl","replace","read","origin","hasOverriddenFetchTile","__isDefault__","json","source","prototype","readOnly","String","origins","write","service","value","x","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../chunks/tslib.es6.js\";import r from\"../request.js\";import t from\"../core/Error.js\";import o from\"../core/Logger.js\";import{releaseMaybe as i,isSome as s}from\"../core/maybe.js\";import{MultiOriginJSONMixin as a}from\"../core/MultiOriginJSONSupport.js\";import{throwIfAbortError as l,throwIfAborted as n}from\"../core/promiseUtils.js\";import{objectToQuery as p}from\"../core/urlUtils.js\";import{property as c}from\"../core/accessorSupport/decorators/property.js\";import\"../core/arrayUtils.js\";import\"../core/has.js\";import\"../core/accessorSupport/ensureType.js\";import{reader as m}from\"../core/accessorSupport/decorators/reader.js\";import{subclass as h}from\"../core/accessorSupport/decorators/subclass.js\";import d from\"../geometry/HeightModelInfo.js\";import u from\"./Layer.js\";import{ArcGISCachedService as y}from\"./mixins/ArcGISCachedService.js\";import{ArcGISService as v}from\"./mixins/ArcGISService.js\";import{OperationalLayer as f}from\"./mixins/OperationalLayer.js\";import{PortalLayer as g}from\"./mixins/PortalLayer.js\";import{url as S}from\"./support/commonProperties.js\";import{acquireDecoder as j}from\"./support/LercDecoder.js\";const w=o.getLogger(\"esri.layers.ElevationLayer\");let T=class extends(y(v(f(g(a(u)))))){constructor(...e){super(...e),this.copyright=null,this.heightModelInfo=null,this.path=null,this.opacity=1,this.operationalLayerType=\"ArcGISTiledElevationServiceLayer\",this.sourceJSON=null,this.type=\"elevation\",this.url=null,this.version=null,this._lercDecoder=j()}normalizeCtorArgs(e,r){return\"string\"==typeof e?{url:e,...r}:e}destroy(){this._lercDecoder=i(this._lercDecoder)}set minScale(e){this.constructed&&w.warn(`${this.declaredClass}.minScale support has been removed (since 4.5)`)}get minScale(){}set maxScale(e){this.constructed&&w.warn(`${this.declaredClass}.maxScale support has been removed (since 4.5)`)}get maxScale(){}readVersion(e,r){let t=r.currentVersion;return t||(t=9.3),t}load(e){const r=s(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:[\"Image Service\"],supportsData:!1,validateItem:e=>{for(let r=0;r<e.typeKeywords.length;r++)if(\"elevation 3d layer\"===e.typeKeywords[r].toLowerCase())return!0;throw new t(\"portal:invalid-layer-item-type\",\"Invalid layer item type '${type}', expected '${expectedType}' \",{type:\"Image Service\",expectedType:\"Image Service Elevation 3D Layer\"})}},e).catch(l).then((()=>this._fetchImageService(r)))),Promise.resolve(this)}fetchTile(e,t,o,i){const a=s((i=i||{signal:null}).signal)?i.signal:i.signal=(new AbortController).signal,l={responseType:\"array-buffer\",signal:a},n={noDataValue:i.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(e,t,o,i))).then((()=>r(this.getTileUrl(e,t,o),l))).then((e=>this._lercDecoder.decode(e.data,n,a))).then((e=>({values:e.pixelData,width:e.width,height:e.height,maxZError:e.fileInfo.maxZError,noDataValue:e.noDataValue,minValue:e.minValue,maxValue:e.maxValue})))}getTileUrl(e,r,t){const o=!this.tilemapCache&&this.supportsBlankTile,i=p({...this.parsedUrl.query,blankTile:!o&&null});return`${this.parsedUrl.path}/tile/${e}/${r}/${t}${i?\"?\"+i:\"\"}`}async queryElevation(e,r){const{ElevationQuery:t}=await import(\"./support/ElevationQuery.js\");n(r);return(new t).query(this,e,r)}async createElevationSampler(e,r){const{ElevationQuery:t}=await import(\"./support/ElevationQuery.js\");n(r);return(new t).createSampler(this,e,r)}_fetchTileAvailability(e,r,t,o){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,r,t,o):Promise.resolve(\"unknown\")}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;const t={query:{f:\"json\",...this.parsedUrl.query},responseType:\"json\",signal:e},o=await r(this.parsedUrl.path,t);o.ssl&&(this.url=this.url.replace(/^http:/i,\"https:\")),this.sourceJSON=o.data,this.read(o.data,{origin:\"service\",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};e([c({json:{read:{source:\"copyrightText\"}}})],T.prototype,\"copyright\",void 0),e([c({readOnly:!0,type:d})],T.prototype,\"heightModelInfo\",void 0),e([c({type:String,json:{origins:{\"web-scene\":{read:!0,write:!0}},read:!1}})],T.prototype,\"path\",void 0),e([c({type:[\"show\",\"hide\"]})],T.prototype,\"listMode\",void 0),e([c({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},\"portal-item\":{read:!1,write:!1},\"web-document\":{read:!1,write:!1}}}})],T.prototype,\"minScale\",null),e([c({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},\"portal-item\":{read:!1,write:!1},\"web-document\":{read:!1,write:!1}}}})],T.prototype,\"maxScale\",null),e([c({json:{read:!1,write:!1,origins:{\"web-document\":{read:!1,write:!1}}}})],T.prototype,\"opacity\",void 0),e([c({type:[\"ArcGISTiledElevationServiceLayer\"]})],T.prototype,\"operationalLayerType\",void 0),e([c()],T.prototype,\"sourceJSON\",void 0),e([c({json:{read:!1},value:\"elevation\",readOnly:!0})],T.prototype,\"type\",void 0),e([c(S)],T.prototype,\"url\",void 0),e([c()],T.prototype,\"version\",void 0),e([m(\"version\",[\"currentVersion\"])],T.prototype,\"readVersion\",null),T=e([h(\"esri.layers.ElevationLayer\")],T),T.prototype.fetchTile.__isDefault__=!0;const x=T;export{x as default};\n"]},"metadata":{},"sourceType":"module"}