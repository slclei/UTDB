{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport t from \"../../../core/Logger.js\";\nimport { isAbortError as i } from \"../../../core/promiseUtils.js\";\nimport { property as s } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/arrayUtils.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport { subclass as r } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { equals as a } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport { BitmapTileLayerView2D as l } from \"./BitmapTileLayerView2D.js\";\nimport { LayerView2DMixin as o } from \"./LayerView2D.js\";\nimport { resampleImage as h } from \"./support/imageUtils.js\";\nimport n from \"../tiling/TileInfoView.js\";\nimport c from \"../tiling/TileKey.js\";\nimport u from \"../tiling/TileQueue.js\";\nimport f from \"../tiling/TileStrategy.js\";\nimport p from \"../../layers/LayerView.js\";\nimport { RefreshableLayerView as d } from \"../../layers/RefreshableLayerView.js\";\n\nconst m = [102113, 102100, 3857, 3785, 900913],\n      y = [0, 0],\n      _ = t.getLogger(\"esri.views.2d.layers.WMTSLayerView2D\");\n\nlet w = class extends d(l(o(p))) {\n  constructor() {\n    super(...arguments), this._tileStrategy = null, this._fetchQueue = null, this._tileRequests = new Map(), this.layer = null;\n  }\n\n  get tileMatrixSet() {\n    const e = this._getTileMatrixSetBySpatialReference(this.layer.activeLayer);\n\n    return e ? (e.id !== this.layer.activeLayer.tileMatrixSetId && (this.layer.activeLayer.tileMatrixSetId = e.id), e) : null;\n  }\n\n  update(e) {\n    this._fetchQueue.pause(), this._fetchQueue.state = e.state, this._tileStrategy.update(e), this._fetchQueue.resume();\n  }\n\n  attach() {\n    if (!this.tileMatrixSet) return;\n    const {\n      tileInfo: e\n    } = this.tileMatrixSet;\n    this._tileInfoView = new n(e), this._fetchQueue = new u({\n      tileInfoView: this._tileInfoView,\n      concurrency: 16,\n      process: (e, t) => this.fetchTile(e, t)\n    }), this._tileStrategy = new f({\n      cachePolicy: \"keep\",\n      resampling: !0,\n      acquireTile: e => this.acquireTile(e),\n      releaseTile: e => this.releaseTile(e),\n      tileInfoView: this._tileInfoView\n    }), this.handles.add(this.watch([\"layer.activeLayer.styleId\", \"tileMatrixSet\"], () => this._refresh()), this.declaredClass), super.attach();\n  }\n\n  detach() {\n    var e, t;\n    super.detach(), this.handles.remove(this.declaredClass), null == (e = this._tileStrategy) || e.destroy(), null == (t = this._fetchQueue) || t.destroy(), this._fetchQueue = this._tileStrategy = this._tileInfoView = null;\n  }\n\n  moveStart() {\n    this.requestUpdate();\n  }\n\n  viewChange() {\n    this.requestUpdate();\n  }\n\n  moveEnd() {\n    this.requestUpdate();\n  }\n\n  releaseTile(e) {\n    this._fetchQueue.abort(e.key.id), this._bitmapView.removeChild(e), e.once(\"detach\", () => e.destroy()), this.requestUpdate();\n  }\n\n  acquireTile(e) {\n    const t = this._bitmapView.createTile(e),\n          i = t.bitmap;\n\n    return [i.x, i.y] = this._tileInfoView.getTileCoords(y, t.key), i.resolution = this._tileInfoView.getTileResolution(t.key), [i.width, i.height] = this._tileInfoView.tileInfo.size, this._enqueueTileFetch(t), this._bitmapView.addChild(t), this.requestUpdate(), t;\n  }\n\n  async doRefresh() {\n    this.updateRequested || this.suspended || this._refresh();\n  }\n\n  isUpdating() {\n    var e, t;\n    return null != (e = null == (t = this._fetchQueue) ? void 0 : t.updating) && e;\n  }\n\n  async fetchTile(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const s = \"tilemapCache\" in this.layer ? this.layer.tilemapCache : null,\n          {\n      signal: r,\n      resamplingLevel: a = 0\n    } = t;\n    if (!s) return this._fetchImage(e, r);\n    const l = new c(0, 0, 0, 0);\n    let o;\n\n    try {\n      await s.fetchAvailabilityUpsample(e.level, e.row, e.col, l, {\n        signal: r\n      }), o = await this._fetchImage(l, r);\n    } catch (n) {\n      if (i(n)) throw n;\n\n      if (a < 3) {\n        const i = this._tileInfoView.getTileParentId(e.id);\n\n        if (i) {\n          const s = new c(i),\n                r = await this.fetchTile(s, { ...t,\n            resamplingLevel: a + 1\n          });\n          return h(this._tileInfoView, r, s, e);\n        }\n      }\n\n      throw n;\n    }\n\n    return h(this._tileInfoView, o, l, e);\n  }\n\n  canResume() {\n    const e = super.canResume();\n    return e ? null !== this.tileMatrixSet : e;\n  }\n\n  supportsSpatialReference(e) {\n    return this.layer.activeLayer.tileMatrixSets.some(t => a(t.tileInfo.spatialReference, e));\n  }\n\n  async _enqueueTileFetch(e) {\n    if (!this._fetchQueue.has(e.key.id)) {\n      try {\n        const t = await this._fetchQueue.push(e.key);\n        e.bitmap.source = t, e.bitmap.width = this._tileInfoView.tileInfo.size[0], e.bitmap.height = this._tileInfoView.tileInfo.size[1], e.once(\"attach\", () => this.requestUpdate());\n      } catch (t) {\n        i(t) || _.error(t);\n      }\n\n      this.requestUpdate();\n    }\n  }\n\n  async _fetchImage(e, t) {\n    return this.layer.fetchTile(e.level, e.row, e.col, {\n      signal: t\n    });\n  }\n\n  _refresh() {\n    this._fetchQueue.reset(), this._tileStrategy.tiles.forEach(e => {\n      if (!e.bitmap.source) return;\n      const t = {\n        id: e.key.id,\n        fulfilled: !1,\n        promise: this._fetchQueue.push(e.key).then(t => {\n          e.bitmap.source = t;\n        }).catch(t => {\n          i(t) || (e.bitmap.source = null);\n        }).finally(() => {\n          e.requestRender(), t.fulfilled = !0;\n        })\n      };\n\n      this._tileRequests.set(e, t);\n    });\n  }\n\n  _getTileMatrixSetBySpatialReference(e) {\n    const t = this.view.spatialReference;\n    if (!e.tileMatrixSets) return null;\n    let i = e.tileMatrixSets.find(e => a(e.tileInfo.spatialReference, t));\n    return !i && t.isWebMercator && (i = e.tileMatrixSets.find(e => m.includes(e.tileInfo.spatialReference.wkid))), i;\n  }\n\n};\ne([s()], w.prototype, \"_fetchQueue\", void 0), e([s({\n  readOnly: !0\n})], w.prototype, \"tileMatrixSet\", null), w = e([r(\"esri.views.2d.layers.WMTSLayerView2D\")], w);\nconst g = w;\nexport { g as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/layers/WMTSLayerView2D.js"],"names":["_","e","t","isAbortError","i","property","s","subclass","r","equals","a","BitmapTileLayerView2D","l","LayerView2DMixin","o","resampleImage","h","n","c","u","f","p","RefreshableLayerView","d","m","y","getLogger","w","constructor","arguments","_tileStrategy","_fetchQueue","_tileRequests","Map","layer","tileMatrixSet","_getTileMatrixSetBySpatialReference","activeLayer","id","tileMatrixSetId","update","pause","state","resume","attach","tileInfo","_tileInfoView","tileInfoView","concurrency","process","fetchTile","cachePolicy","resampling","acquireTile","releaseTile","handles","add","watch","_refresh","declaredClass","detach","remove","destroy","moveStart","requestUpdate","viewChange","moveEnd","abort","key","_bitmapView","removeChild","once","createTile","bitmap","x","getTileCoords","resolution","getTileResolution","width","height","size","_enqueueTileFetch","addChild","doRefresh","updateRequested","suspended","isUpdating","updating","tilemapCache","signal","resamplingLevel","_fetchImage","fetchAvailabilityUpsample","level","row","col","getTileParentId","canResume","supportsSpatialReference","tileMatrixSets","some","spatialReference","has","push","source","error","reset","tiles","forEach","fulfilled","promise","then","catch","finally","requestRender","set","view","find","isWebMercator","includes","wkid","prototype","readOnly","g","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import t from\"../../../core/Logger.js\";import{isAbortError as i}from\"../../../core/promiseUtils.js\";import{property as s}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/arrayUtils.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import{subclass as r}from\"../../../core/accessorSupport/decorators/subclass.js\";import{equals as a}from\"../../../geometry/support/spatialReferenceUtils.js\";import{BitmapTileLayerView2D as l}from\"./BitmapTileLayerView2D.js\";import{LayerView2DMixin as o}from\"./LayerView2D.js\";import{resampleImage as h}from\"./support/imageUtils.js\";import n from\"../tiling/TileInfoView.js\";import c from\"../tiling/TileKey.js\";import u from\"../tiling/TileQueue.js\";import f from\"../tiling/TileStrategy.js\";import p from\"../../layers/LayerView.js\";import{RefreshableLayerView as d}from\"../../layers/RefreshableLayerView.js\";const m=[102113,102100,3857,3785,900913],y=[0,0],_=t.getLogger(\"esri.views.2d.layers.WMTSLayerView2D\");let w=class extends(d(l(o(p)))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this._tileRequests=new Map,this.layer=null}get tileMatrixSet(){const e=this._getTileMatrixSetBySpatialReference(this.layer.activeLayer);return e?(e.id!==this.layer.activeLayer.tileMatrixSetId&&(this.layer.activeLayer.tileMatrixSetId=e.id),e):null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume()}attach(){if(!this.tileMatrixSet)return;const{tileInfo:e}=this.tileMatrixSet;this._tileInfoView=new n(e),this._fetchQueue=new u({tileInfoView:this._tileInfoView,concurrency:16,process:(e,t)=>this.fetchTile(e,t)}),this._tileStrategy=new f({cachePolicy:\"keep\",resampling:!0,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this.handles.add(this.watch([\"layer.activeLayer.styleId\",\"tileMatrixSet\"],(()=>this._refresh())),this.declaredClass),super.attach()}detach(){var e,t;super.detach(),this.handles.remove(this.declaredClass),null==(e=this._tileStrategy)||e.destroy(),null==(t=this._fetchQueue)||t.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once(\"detach\",(()=>e.destroy())),this.requestUpdate()}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(y,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(t),this._bitmapView.addChild(t),this.requestUpdate(),t}async doRefresh(){this.updateRequested||this.suspended||this._refresh()}isUpdating(){var e,t;return null!=(e=null==(t=this._fetchQueue)?void 0:t.updating)&&e}async fetchTile(e,t={}){const s=\"tilemapCache\"in this.layer?this.layer.tilemapCache:null,{signal:r,resamplingLevel:a=0}=t;if(!s)return this._fetchImage(e,r);const l=new c(0,0,0,0);let o;try{await s.fetchAvailabilityUpsample(e.level,e.row,e.col,l,{signal:r}),o=await this._fetchImage(l,r)}catch(n){if(i(n))throw n;if(a<3){const i=this._tileInfoView.getTileParentId(e.id);if(i){const s=new c(i),r=await this.fetchTile(s,{...t,resamplingLevel:a+1});return h(this._tileInfoView,r,s,e)}}throw n}return h(this._tileInfoView,o,l,e)}canResume(){const e=super.canResume();return e?null!==this.tileMatrixSet:e}supportsSpatialReference(e){return this.layer.activeLayer.tileMatrixSets.some((t=>a(t.tileInfo.spatialReference,e)))}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once(\"attach\",(()=>this.requestUpdate()))}catch(t){i(t)||_.error(t)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchTile(e.level,e.row,e.col,{signal:t})}_refresh(){this._fetchQueue.reset(),this._tileStrategy.tiles.forEach((e=>{if(!e.bitmap.source)return;const t={id:e.key.id,fulfilled:!1,promise:this._fetchQueue.push(e.key).then((t=>{e.bitmap.source=t})).catch((t=>{i(t)||(e.bitmap.source=null)})).finally((()=>{e.requestRender(),t.fulfilled=!0}))};this._tileRequests.set(e,t)}))}_getTileMatrixSetBySpatialReference(e){const t=this.view.spatialReference;if(!e.tileMatrixSets)return null;let i=e.tileMatrixSets.find((e=>a(e.tileInfo.spatialReference,t)));return!i&&t.isWebMercator&&(i=e.tileMatrixSets.find((e=>m.includes(e.tileInfo.spatialReference.wkid)))),i}};e([s()],w.prototype,\"_fetchQueue\",void 0),e([s({readOnly:!0})],w.prototype,\"tileMatrixSet\",null),w=e([r(\"esri.views.2d.layers.WMTSLayerView2D\")],w);const g=w;export{g as default};\n"]},"metadata":{},"sourceType":"module"}