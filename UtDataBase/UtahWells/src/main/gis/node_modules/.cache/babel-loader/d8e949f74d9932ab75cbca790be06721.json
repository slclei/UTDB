{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../../../core/Error.js\";\nimport { isSome as t } from \"../../../core/maybe.js\";\nimport n from \"../../../geometry/SpatialReference.js\";\nimport { isNumericField as i, numericTypes as o } from \"../../../layers/support/fieldUtils.js\";\nimport { getNormalizedValue as r } from \"../../../statistics/utils.js\";\nimport { loadArcade as l } from \"../../../support/arcadeOnDemand.js\";\nlet s = null;\n\nasync function a(e, t) {\n  if (!t) return [];\n  const i = e.field,\n        o = e.valueExpression,\n        a = e.normalizationType,\n        f = e.normalizationField,\n        c = e.normalizationTotal,\n        u = [],\n        d = e.viewInfoParams;\n  let p = null,\n      m = null;\n\n  if (o) {\n    if (!s) {\n      const {\n        arcadeUtils: e\n      } = await l();\n      s = e;\n    }\n\n    p = s.createFunction(o), m = d && s.getViewInfo({\n      viewingMode: d.viewingMode,\n      scale: d.scale,\n      spatialReference: new n(d.spatialReference)\n    });\n  }\n\n  return t.forEach(e => {\n    const t = e.attributes;\n    let n;\n\n    if (o) {\n      const t = s.createExecContext(e, m);\n      n = s.executeFunction(p, t);\n    } else t && (n = t[i]);\n\n    if (a && isFinite(n)) {\n      const e = t && parseFloat(t[f]);\n      n = r(n, a, e, c);\n    }\n\n    u.push(n);\n  }), u;\n}\n\nfunction f(e) {\n  const t = e.field,\n        n = e.normalizationType,\n        i = e.normalizationField;\n  let o;\n  return \"field\" === n ? o = \"(NOT \" + i + \" = 0)\" : \"log\" !== n && \"natural-log\" !== n && \"square-root\" !== n || (o = `(${t} > 0)`), o;\n}\n\nfunction c(t, n) {\n  return new e(t, n);\n}\n\nfunction u(e, t, n) {\n  const i = null != t ? e + \" >= \" + t : \"\",\n        o = null != n ? e + \" <= \" + n : \"\";\n  let r = \"\";\n  return r = i && o ? m(i, o) : i || o, r ? \"(\" + r + \")\" : \"\";\n}\n\nfunction d(e, t, n, i) {\n  let o = null;\n  return t ? t.name !== e.objectIdField && -1 !== i.indexOf(t.type) || (o = c(n, \"'field' should be one of these types: \" + i.join(\",\"))) : o = c(n, \"'field' is not defined in the layer schema\"), o;\n}\n\nfunction p(e, t, n) {\n  let r;\n  return t ? t.name !== e.objectIdField && i(t) || (r = c(n, \"'field' should be one of these numeric types: \" + o.join(\",\"))) : r = c(n, \"'field' is not defined in the layer schema\"), r;\n}\n\nfunction m(e, n) {\n  let i = t(e) ? e : \"\";\n  return t(n) && n && (i = i ? \"(\" + i + \") AND (\" + n + \")\" : n), i;\n}\n\nfunction y(e, t, n) {\n  const i = h({\n    layer: e,\n    fields: t\n  });\n  if (i.length) return c(n, \"Unknown fields: \" + i.join(\", \") + \". You can only use fields defined in the layer schema\");\n  const o = g({\n    layer: e,\n    fields: t\n  });\n  return o.length ? c(n, \"Unsupported fields: \" + o.join(\", \") + \". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true\") : void 0;\n}\n\nfunction h(e) {\n  const t = e.layer;\n  return e.fields.filter(e => !t.getField(e));\n}\n\nfunction g(e) {\n  const t = e.layer;\n  return e.fields.filter(e => {\n    const n = t.getFieldUsageInfo(e);\n    return !n || !n.supportsStatistics;\n  });\n}\n\nexport { c as createError, a as getDataValues, u as getRangeExpr, f as getSQLFilterForNormalization, m as mergeWhereClauses, y as verifyBasicFieldValidity, d as verifyFieldType, p as verifyNumericField };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/smartMapping/statistics/support/utils.js"],"names":["e","isSome","t","n","isNumericField","i","numericTypes","o","getNormalizedValue","r","loadArcade","l","s","a","field","valueExpression","normalizationType","f","normalizationField","c","normalizationTotal","u","d","viewInfoParams","p","m","arcadeUtils","createFunction","getViewInfo","viewingMode","scale","spatialReference","forEach","attributes","createExecContext","executeFunction","isFinite","parseFloat","push","name","objectIdField","indexOf","type","join","y","h","layer","fields","length","g","filter","getField","getFieldUsageInfo","supportsStatistics","createError","getDataValues","getRangeExpr","getSQLFilterForNormalization","mergeWhereClauses","verifyBasicFieldValidity","verifyFieldType","verifyNumericField"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../../core/Error.js\";import{isSome as t}from\"../../../core/maybe.js\";import n from\"../../../geometry/SpatialReference.js\";import{isNumericField as i,numericTypes as o}from\"../../../layers/support/fieldUtils.js\";import{getNormalizedValue as r}from\"../../../statistics/utils.js\";import{loadArcade as l}from\"../../../support/arcadeOnDemand.js\";let s=null;async function a(e,t){if(!t)return[];const i=e.field,o=e.valueExpression,a=e.normalizationType,f=e.normalizationField,c=e.normalizationTotal,u=[],d=e.viewInfoParams;let p=null,m=null;if(o){if(!s){const{arcadeUtils:e}=await l();s=e}p=s.createFunction(o),m=d&&s.getViewInfo({viewingMode:d.viewingMode,scale:d.scale,spatialReference:new n(d.spatialReference)})}return t.forEach((e=>{const t=e.attributes;let n;if(o){const t=s.createExecContext(e,m);n=s.executeFunction(p,t)}else t&&(n=t[i]);if(a&&isFinite(n)){const e=t&&parseFloat(t[f]);n=r(n,a,e,c)}u.push(n)})),u}function f(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let o;return\"field\"===n?o=\"(NOT \"+i+\" = 0)\":\"log\"!==n&&\"natural-log\"!==n&&\"square-root\"!==n||(o=`(${t} > 0)`),o}function c(t,n){return new e(t,n)}function u(e,t,n){const i=null!=t?e+\" >= \"+t:\"\",o=null!=n?e+\" <= \"+n:\"\";let r=\"\";return r=i&&o?m(i,o):i||o,r?\"(\"+r+\")\":\"\"}function d(e,t,n,i){let o=null;return t?t.name!==e.objectIdField&&-1!==i.indexOf(t.type)||(o=c(n,\"'field' should be one of these types: \"+i.join(\",\"))):o=c(n,\"'field' is not defined in the layer schema\"),o}function p(e,t,n){let r;return t?t.name!==e.objectIdField&&i(t)||(r=c(n,\"'field' should be one of these numeric types: \"+o.join(\",\"))):r=c(n,\"'field' is not defined in the layer schema\"),r}function m(e,n){let i=t(e)?e:\"\";return t(n)&&n&&(i=i?\"(\"+i+\") AND (\"+n+\")\":n),i}function y(e,t,n){const i=h({layer:e,fields:t});if(i.length)return c(n,\"Unknown fields: \"+i.join(\", \")+\". You can only use fields defined in the layer schema\");const o=g({layer:e,fields:t});return o.length?c(n,\"Unsupported fields: \"+o.join(\", \")+\". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true\"):void 0}function h(e){const t=e.layer;return e.fields.filter((e=>!t.getField(e)))}function g(e){const t=e.layer;return e.fields.filter((e=>{const n=t.getFieldUsageInfo(e);return!n||!n.supportsStatistics}))}export{c as createError,a as getDataValues,u as getRangeExpr,f as getSQLFilterForNormalization,m as mergeWhereClauses,y as verifyBasicFieldValidity,d as verifyFieldType,p as verifyNumericField};\n"]},"metadata":{},"sourceType":"module"}