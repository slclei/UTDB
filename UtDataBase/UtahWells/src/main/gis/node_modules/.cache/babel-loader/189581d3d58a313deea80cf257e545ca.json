{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from \"../../core/Error.js\";\nimport { isSome as r } from \"../../core/maybe.js\";\n\nfunction t() {\n  return Promise.all([import(\"./webglDeps.js\"), import(\"./mapViewDeps.js\")]);\n}\n\nconst s = () => t().then(() => import(\"./layers/TileLayerView2D.js\")),\n      a = () => t().then(() => import(\"./layers/FeatureLayerView2D.js\")),\n      i = {\n  \"base-dynamic\": () => t().then(() => import(\"./layers/BaseDynamicLayerView2D.js\")),\n  \"base-tile\": s,\n  \"bing-maps\": s,\n  csv: a,\n  \"geo-rss\": () => t().then(() => import(\"./layers/GeoRSSLayerView2D.js\")),\n  feature: a,\n  geojson: a,\n  graphics: () => t().then(() => import(\"./layers/GraphicsLayerView2D.js\")),\n  group: () => t().then(() => import(\"./layers/GroupLayerView2D.js\")),\n  imagery: () => t().then(() => import(\"./layers/ImageryLayerView2D.js\")),\n  \"imagery-tile\": () => t().then(() => import(\"./layers/ImageryTileLayerView2D.js\")),\n  kml: () => t().then(() => import(\"./layers/KMLLayerView2D.js\")),\n  \"map-image\": () => t().then(() => import(\"./layers/MapImageLayerView2D.js\")),\n  \"map-notes\": () => t().then(() => import(\"./layers/MapNotesLayerView2D.js\")),\n  \"ogc-feature\": () => t().then(() => import(\"./layers/OGCFeatureLayerView2D.js\")),\n  \"open-street-map\": s,\n  route: () => t().then(() => import(\"./layers/RouteLayerView2D.js\")),\n  stream: () => t().then(() => import(\"./layers/StreamLayerView2D.js\")),\n  \"subtype-group\": () => t().then(() => import(\"./layers/SubtypeGroupLayerView2D.js\")),\n  tile: s,\n  \"vector-tile\": () => t().then(() => import(\"./layers/VectorTileLayerView2D.js\")),\n  wcs: () => t().then(() => import(\"./layers/ImageryTileLayerView2D.js\")),\n  \"web-tile\": s,\n  wfs: a,\n  wms: () => t().then(() => import(\"./layers/WMSLayerView2D.js\")),\n  wmts: () => t().then(() => import(\"./layers/WMTSLayerView2D.js\")),\n  analysis: null,\n  \"base-elevation\": null,\n  \"building-scene\": null,\n  elevation: null,\n  \"integrated-mesh\": null,\n  \"point-cloud\": null,\n  voxel: null,\n  scene: null,\n  unknown: null,\n  unsupported: null\n};\n\nfunction o(r) {\n  const t = r.declaredClass ? r.declaredClass.slice(r.declaredClass.lastIndexOf(\".\") + 1) : \"Unknown\",\n        s = t.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n  return new e(`${s}:view-not-supported`, `${t} is not supported in 2D`);\n}\n\nconst l = {\n  hasLayerViewModule: e => r(i[e.type]),\n  importLayerView: e => {\n    const t = i[e.type];\n    if (!r(t)) throw o(e);\n    return t(e);\n  }\n};\nexport { l as layerView2DImporter };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/layerViewModuleImportUtils.js"],"names":["e","isSome","r","t","Promise","all","s","then","a","i","csv","feature","geojson","graphics","group","imagery","kml","route","stream","tile","wcs","wfs","wms","wmts","analysis","elevation","voxel","scene","unknown","unsupported","o","declaredClass","slice","lastIndexOf","replace","toLowerCase","l","hasLayerViewModule","type","importLayerView","layerView2DImporter"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport e from\"../../core/Error.js\";import{isSome as r}from\"../../core/maybe.js\";function t(){return Promise.all([import(\"./webglDeps.js\"),import(\"./mapViewDeps.js\")])}const s=()=>t().then((()=>import(\"./layers/TileLayerView2D.js\"))),a=()=>t().then((()=>import(\"./layers/FeatureLayerView2D.js\"))),i={\"base-dynamic\":()=>t().then((()=>import(\"./layers/BaseDynamicLayerView2D.js\"))),\"base-tile\":s,\"bing-maps\":s,csv:a,\"geo-rss\":()=>t().then((()=>import(\"./layers/GeoRSSLayerView2D.js\"))),feature:a,geojson:a,graphics:()=>t().then((()=>import(\"./layers/GraphicsLayerView2D.js\"))),group:()=>t().then((()=>import(\"./layers/GroupLayerView2D.js\"))),imagery:()=>t().then((()=>import(\"./layers/ImageryLayerView2D.js\"))),\"imagery-tile\":()=>t().then((()=>import(\"./layers/ImageryTileLayerView2D.js\"))),kml:()=>t().then((()=>import(\"./layers/KMLLayerView2D.js\"))),\"map-image\":()=>t().then((()=>import(\"./layers/MapImageLayerView2D.js\"))),\"map-notes\":()=>t().then((()=>import(\"./layers/MapNotesLayerView2D.js\"))),\"ogc-feature\":()=>t().then((()=>import(\"./layers/OGCFeatureLayerView2D.js\"))),\"open-street-map\":s,route:()=>t().then((()=>import(\"./layers/RouteLayerView2D.js\"))),stream:()=>t().then((()=>import(\"./layers/StreamLayerView2D.js\"))),\"subtype-group\":()=>t().then((()=>import(\"./layers/SubtypeGroupLayerView2D.js\"))),tile:s,\"vector-tile\":()=>t().then((()=>import(\"./layers/VectorTileLayerView2D.js\"))),wcs:()=>t().then((()=>import(\"./layers/ImageryTileLayerView2D.js\"))),\"web-tile\":s,wfs:a,wms:()=>t().then((()=>import(\"./layers/WMSLayerView2D.js\"))),wmts:()=>t().then((()=>import(\"./layers/WMTSLayerView2D.js\"))),analysis:null,\"base-elevation\":null,\"building-scene\":null,elevation:null,\"integrated-mesh\":null,\"point-cloud\":null,voxel:null,scene:null,unknown:null,unsupported:null};function o(r){const t=r.declaredClass?r.declaredClass.slice(r.declaredClass.lastIndexOf(\".\")+1):\"Unknown\",s=t.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase();return new e(`${s}:view-not-supported`,`${t} is not supported in 2D`)}const l={hasLayerViewModule:e=>r(i[e.type]),importLayerView:e=>{const t=i[e.type];if(!r(t))throw o(e);return t(e)}};export{l as layerView2DImporter};\n"]},"metadata":{},"sourceType":"module"}