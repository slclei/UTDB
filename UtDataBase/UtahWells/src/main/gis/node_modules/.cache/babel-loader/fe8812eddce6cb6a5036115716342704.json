{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport \"../../../tiling/PagedTileQueue.js\";\nimport \"../../../tiling/TileInfoView.js\";\nimport e from \"../../../tiling/TileKey.js\";\nimport \"../../../tiling/TileQueue.js\";\nimport \"../../../tiling/TileStrategy.js\";\nimport { PATCH_PIXEL_BUFFER_ALLOC_SIZE as t, TILE_SIZE as r } from \"../definitions.js\";\nimport { getDisplayIdTexel as i } from \"../DisplayId.js\";\nimport { WGLGeometryType as s } from \"../enums.js\";\nimport { getStrides as n } from \"../Utils.js\";\nimport { VertexDataWriter as a } from \"./VertexDataWriter.js\";\nimport { getPow2NeighborKey as u } from \"../../../layers/features/support/tileUtils.js\";\nconst h = 1,\n      c = 2,\n      o = 4,\n      l = 8,\n      _ = 16,\n      d = 32,\n      p = 64,\n      g = 128;\n\nfunction x(e) {\n  switch (e) {\n    case h:\n    case l:\n    case d:\n      return -1;\n\n    case c:\n    case p:\n      return 0;\n\n    case o:\n    case _:\n    case g:\n      return 1;\n  }\n}\n\nfunction f(e) {\n  switch (e) {\n    case h:\n    case c:\n    case o:\n      return -1;\n\n    case l:\n    case _:\n      return 0;\n\n    case d:\n    case p:\n    case g:\n      return 1;\n  }\n}\n\nconst m = h | l | d,\n      w = o | _ | g,\n      y = h | c | o,\n      v = d | p | g;\n\nclass E {\n  constructor(e, t, r, i, s) {\n    this._hasAggregate = !1, this.hasRecords = !1, this._data = {\n      self: new Map(),\n      neighbors: new Array()\n    }, this._current = {\n      geometryType: 0,\n      writer: null,\n      overlaps: 0,\n      start: 0,\n      insertAfter: 0,\n      sortKey: 0,\n      id: 0,\n      materialKey: 0,\n      indexStart: 0,\n      vertStart: 0,\n      isDotDensity: !1,\n      bufferingEnabled: !1,\n      metricBoxLenPointer: 0\n    }, this.hint = t, this.tileKey = e, this._hasAggregate = i, this._pixelBufferEnabled = s, this._strideOptions = r;\n  }\n\n  get hasAggregates() {\n    return this._hasAggregate;\n  }\n\n  get hasPixelBufferEnabled() {\n    return this._pixelBufferEnabled;\n  }\n\n  serialize(t) {\n    const r = [];\n    return r.push(this._serializeTileVertexData(this.tileKey, this.tileKey, this._data.self)), this._data.neighbors.forEach((i, s) => {\n      const n = 1 << s,\n            a = x(n),\n            h = f(n),\n            c = u(new e(this.tileKey), a, h, t),\n            o = this._serializeTileVertexData(this.tileKey, c.id, i.vertexData);\n\n      o.message.bufferIds = i.displayIds, r.push(o);\n    }), r;\n  }\n\n  _serializeTileVertexData(e, t, r) {\n    var i, n, a, u, h;\n    const c = new Array();\n    return {\n      message: {\n        tileKeyOrigin: e,\n        tileKey: t,\n        data: {\n          [s.MARKER]: null == (i = r.get(s.MARKER)) ? void 0 : i.serialize(c),\n          [s.FILL]: null == (n = r.get(s.FILL)) ? void 0 : n.serialize(c),\n          [s.LINE]: null == (a = r.get(s.LINE)) ? void 0 : a.serialize(c),\n          [s.TEXT]: null == (u = r.get(s.TEXT)) ? void 0 : u.serialize(c),\n          [s.LABEL]: null == (h = r.get(s.LABEL)) ? void 0 : h.serialize(c)\n        }\n      },\n      transferList: c\n    };\n  }\n\n  featureStart(e, t) {\n    this._current.insertAfter = e, this._current.sortKey = t;\n  }\n\n  featureEnd() {}\n\n  recordStart(e, t, r, i) {\n    this._current.writer = this._getVertexWriter(r), this._current.overlaps = 0, this._current.indexStart = this._current.writer.indexCount, this._current.vertStart = this._current.writer.vertexCount, this._current.bufferingEnabled = i, this._current.id = e, this._current.materialKey = t, this._current.geometryType = r, this._current.isDotDensity = !1, this._current.writer.recordStart();\n  }\n\n  recordCount() {\n    return this._current.writer.recordCount;\n  }\n\n  vertexCount() {\n    return this._current.writer.vertexCount;\n  }\n\n  indexCount() {\n    return this._current.writer.indexCount;\n  }\n\n  vertexEnsureSize(e) {\n    this._current.writer.vertexEnsureSize(e);\n  }\n\n  indexEnsureSize(e) {\n    this._current.writer.indexEnsureSize(e);\n  }\n\n  vertexBounds(e, t, r, i) {\n    this._current.bufferingEnabled && this._addOverlap(e, t, r, i);\n  }\n\n  vertexWrite(e) {\n    this._current.writer.writeVertex(e);\n  }\n\n  vertexWriteF32(e) {\n    this._current.writer.writeVertexF32(e);\n  }\n\n  vertexEnd() {}\n\n  vertexWriter() {\n    return this._current.writer.vertexWriter;\n  }\n\n  indexWrite(e) {\n    this._current.writer.writeIndex(e);\n  }\n\n  indexWriter() {\n    return this._current.writer.indexWriter;\n  }\n\n  metricWriter() {\n    return this._current.writer.metricWriter;\n  }\n\n  metricStart(e, t, r, n, a, u, h, c) {\n    this._current.writer = this._getVertexWriter(s.LABEL);\n    const o = this._current.writer.metricWriter;\n    o.push(i(e)), o.push(t), o.push(r), o.push(n), o.push(a), o.push(u), o.push(h), o.push(c), o.push(255), this._current.metricBoxLenPointer = o.push(0);\n  }\n\n  metricEnd() {\n    const e = this._current.writer.metricWriter;\n    0 === e.getValue(this._current.metricBoxLenPointer) && e.seek(e.length - 10);\n  }\n\n  metricBoxWrite(e, t, r, i) {\n    const s = this._current.writer.metricWriter;\n    s.incr(this._current.metricBoxLenPointer), s.push(0), s.push(0), s.push(e), s.push(t), s.push(r), s.push(i);\n  }\n\n  recordEnd() {\n    const e = this._current.vertStart,\n          r = this._current.writer.vertexCount - e;\n    if (!r) return !1;\n    this.hasRecords = !0;\n    const i = this._current.indexStart,\n          u = this._current.writer.indexCount - i;\n    if (this._current.writer.recordEnd(this._current.id, this._current.materialKey, this._current.insertAfter, i, u, e, r, this._current.sortKey), !this._pixelBufferEnabled || this._hasAggregate || 0 === this._current.overlaps || this._current.geometryType === s.LABEL) return !0;\n    const h = this._current.writer;\n\n    for (let s = 0; s < 8; s++) {\n      const e = 1 << s;\n\n      if (!!(this._current.overlaps & e)) {\n        this._data.neighbors[s] || (this._data.neighbors[s] = {\n          vertexData: new Map(),\n          displayIds: new Set()\n        });\n        const r = this._data.neighbors[s],\n              i = this._current.geometryType;\n\n        if (!r.vertexData.has(i)) {\n          const e = n(i, this._strideOptions).geometry,\n                s = new a(i, e, t);\n          r.vertexData.set(i, s);\n        }\n\n        const u = r.vertexData.get(this._current.geometryType),\n              c = 8,\n              o = 512 * -x(e) * c,\n              l = 512 * -f(e) * c;\n        u.copyLastFrom(h, o, l), r.displayIds.add(this._current.id);\n      }\n    }\n\n    return !0;\n  }\n\n  _addOverlap(e, t, i, s) {\n    const n = 255 ^ ((e < 0 + i ? w : e >= r - i ? m : w | m) | (t < 0 + s ? v : t >= r - s ? y : v | y));\n    this._current.overlaps |= n;\n  }\n\n  _getVertexWriter(e) {\n    if (!this._data.self.has(e)) {\n      const t = this._data.self,\n            r = n(e, this._strideOptions).geometry;\n      t.set(e, new a(e, r, this.hint.records));\n    }\n\n    return this._data.self.get(e);\n  }\n\n}\n\nexport { E as MeshData };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/webgl/mesh/MeshData.js"],"names":["e","PATCH_PIXEL_BUFFER_ALLOC_SIZE","t","TILE_SIZE","r","getDisplayIdTexel","i","WGLGeometryType","s","getStrides","n","VertexDataWriter","a","getPow2NeighborKey","u","h","c","o","l","_","d","p","g","x","f","m","w","y","v","E","constructor","_hasAggregate","hasRecords","_data","self","Map","neighbors","Array","_current","geometryType","writer","overlaps","start","insertAfter","sortKey","id","materialKey","indexStart","vertStart","isDotDensity","bufferingEnabled","metricBoxLenPointer","hint","tileKey","_pixelBufferEnabled","_strideOptions","hasAggregates","hasPixelBufferEnabled","serialize","push","_serializeTileVertexData","forEach","vertexData","message","bufferIds","displayIds","tileKeyOrigin","data","MARKER","get","FILL","LINE","TEXT","LABEL","transferList","featureStart","featureEnd","recordStart","_getVertexWriter","indexCount","vertexCount","recordCount","vertexEnsureSize","indexEnsureSize","vertexBounds","_addOverlap","vertexWrite","writeVertex","vertexWriteF32","writeVertexF32","vertexEnd","vertexWriter","indexWrite","writeIndex","indexWriter","metricWriter","metricStart","metricEnd","getValue","seek","length","metricBoxWrite","incr","recordEnd","Set","has","geometry","set","copyLastFrom","add","records","MeshData"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport\"../../../tiling/PagedTileQueue.js\";import\"../../../tiling/TileInfoView.js\";import e from\"../../../tiling/TileKey.js\";import\"../../../tiling/TileQueue.js\";import\"../../../tiling/TileStrategy.js\";import{PATCH_PIXEL_BUFFER_ALLOC_SIZE as t,TILE_SIZE as r}from\"../definitions.js\";import{getDisplayIdTexel as i}from\"../DisplayId.js\";import{WGLGeometryType as s}from\"../enums.js\";import{getStrides as n}from\"../Utils.js\";import{VertexDataWriter as a}from\"./VertexDataWriter.js\";import{getPow2NeighborKey as u}from\"../../../layers/features/support/tileUtils.js\";const h=1,c=2,o=4,l=8,_=16,d=32,p=64,g=128;function x(e){switch(e){case h:case l:case d:return-1;case c:case p:return 0;case o:case _:case g:return 1}}function f(e){switch(e){case h:case c:case o:return-1;case l:case _:return 0;case d:case p:case g:return 1}}const m=h|l|d,w=o|_|g,y=h|c|o,v=d|p|g;class E{constructor(e,t,r,i,s){this._hasAggregate=!1,this.hasRecords=!1,this._data={self:new Map,neighbors:new Array},this._current={geometryType:0,writer:null,overlaps:0,start:0,insertAfter:0,sortKey:0,id:0,materialKey:0,indexStart:0,vertStart:0,isDotDensity:!1,bufferingEnabled:!1,metricBoxLenPointer:0},this.hint=t,this.tileKey=e,this._hasAggregate=i,this._pixelBufferEnabled=s,this._strideOptions=r}get hasAggregates(){return this._hasAggregate}get hasPixelBufferEnabled(){return this._pixelBufferEnabled}serialize(t){const r=[];return r.push(this._serializeTileVertexData(this.tileKey,this.tileKey,this._data.self)),this._data.neighbors.forEach(((i,s)=>{const n=1<<s,a=x(n),h=f(n),c=u(new e(this.tileKey),a,h,t),o=this._serializeTileVertexData(this.tileKey,c.id,i.vertexData);o.message.bufferIds=i.displayIds,r.push(o)})),r}_serializeTileVertexData(e,t,r){var i,n,a,u,h;const c=new Array;return{message:{tileKeyOrigin:e,tileKey:t,data:{[s.MARKER]:null==(i=r.get(s.MARKER))?void 0:i.serialize(c),[s.FILL]:null==(n=r.get(s.FILL))?void 0:n.serialize(c),[s.LINE]:null==(a=r.get(s.LINE))?void 0:a.serialize(c),[s.TEXT]:null==(u=r.get(s.TEXT))?void 0:u.serialize(c),[s.LABEL]:null==(h=r.get(s.LABEL))?void 0:h.serialize(c)}},transferList:c}}featureStart(e,t){this._current.insertAfter=e,this._current.sortKey=t}featureEnd(){}recordStart(e,t,r,i){this._current.writer=this._getVertexWriter(r),this._current.overlaps=0,this._current.indexStart=this._current.writer.indexCount,this._current.vertStart=this._current.writer.vertexCount,this._current.bufferingEnabled=i,this._current.id=e,this._current.materialKey=t,this._current.geometryType=r,this._current.isDotDensity=!1,this._current.writer.recordStart()}recordCount(){return this._current.writer.recordCount}vertexCount(){return this._current.writer.vertexCount}indexCount(){return this._current.writer.indexCount}vertexEnsureSize(e){this._current.writer.vertexEnsureSize(e)}indexEnsureSize(e){this._current.writer.indexEnsureSize(e)}vertexBounds(e,t,r,i){this._current.bufferingEnabled&&this._addOverlap(e,t,r,i)}vertexWrite(e){this._current.writer.writeVertex(e)}vertexWriteF32(e){this._current.writer.writeVertexF32(e)}vertexEnd(){}vertexWriter(){return this._current.writer.vertexWriter}indexWrite(e){this._current.writer.writeIndex(e)}indexWriter(){return this._current.writer.indexWriter}metricWriter(){return this._current.writer.metricWriter}metricStart(e,t,r,n,a,u,h,c){this._current.writer=this._getVertexWriter(s.LABEL);const o=this._current.writer.metricWriter;o.push(i(e)),o.push(t),o.push(r),o.push(n),o.push(a),o.push(u),o.push(h),o.push(c),o.push(255),this._current.metricBoxLenPointer=o.push(0)}metricEnd(){const e=this._current.writer.metricWriter;0===e.getValue(this._current.metricBoxLenPointer)&&e.seek(e.length-10)}metricBoxWrite(e,t,r,i){const s=this._current.writer.metricWriter;s.incr(this._current.metricBoxLenPointer),s.push(0),s.push(0),s.push(e),s.push(t),s.push(r),s.push(i)}recordEnd(){const e=this._current.vertStart,r=this._current.writer.vertexCount-e;if(!r)return!1;this.hasRecords=!0;const i=this._current.indexStart,u=this._current.writer.indexCount-i;if(this._current.writer.recordEnd(this._current.id,this._current.materialKey,this._current.insertAfter,i,u,e,r,this._current.sortKey),!this._pixelBufferEnabled||this._hasAggregate||0===this._current.overlaps||this._current.geometryType===s.LABEL)return!0;const h=this._current.writer;for(let s=0;s<8;s++){const e=1<<s;if(!!(this._current.overlaps&e)){this._data.neighbors[s]||(this._data.neighbors[s]={vertexData:new Map,displayIds:new Set});const r=this._data.neighbors[s],i=this._current.geometryType;if(!r.vertexData.has(i)){const e=n(i,this._strideOptions).geometry,s=new a(i,e,t);r.vertexData.set(i,s)}const u=r.vertexData.get(this._current.geometryType),c=8,o=512*-x(e)*c,l=512*-f(e)*c;u.copyLastFrom(h,o,l),r.displayIds.add(this._current.id)}}return!0}_addOverlap(e,t,i,s){const n=255^((e<0+i?w:e>=r-i?m:w|m)|(t<0+s?v:t>=r-s?y:v|y));this._current.overlaps|=n}_getVertexWriter(e){if(!this._data.self.has(e)){const t=this._data.self,r=n(e,this._strideOptions).geometry;t.set(e,new a(e,r,this.hint.records))}return this._data.self.get(e)}}export{E as MeshData};\n"]},"metadata":{},"sourceType":"module"}