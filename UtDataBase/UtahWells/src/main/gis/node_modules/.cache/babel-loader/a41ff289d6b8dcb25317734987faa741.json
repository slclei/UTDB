{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { workerMessages as e } from \"../../kernel.js\";\nimport t from \"../Error.js\";\nimport o from \"../Logger.js\";\nimport { onAbortOrThrow as s, isPromiseLike as r, isAbortError as n } from \"../promiseUtils.js\";\nimport { newJobId as a, receiveMessage as i, toInvokeError as l, postMessage as d, MessageType as h } from \"./utils.js\";\nimport { createWorker as c } from \"./workerFactory.js\";\nconst p = o.getLogger(\"esri.core.workers\"),\n      {\n  ABORT: b,\n  INVOKE: m,\n  OPEN: _,\n  OPENED: u,\n  RESPONSE: g\n} = h;\n\nclass j {\n  constructor(e, t) {\n    this._outJobs = new Map(), this._inJobs = new Map(), this.worker = e, this.id = t, e.addEventListener(\"message\", this._onMessage.bind(this)), e.addEventListener(\"error\", e => {\n      e.preventDefault(), p.error(e);\n    });\n  }\n\n  static async create(e) {\n    const t = await c();\n    return new j(t, e);\n  }\n\n  terminate() {\n    this.worker.terminate();\n  }\n\n  async open(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      signal: o\n    } = t,\n          r = a();\n    return new Promise((t, n) => {\n      const a = {\n        resolve: t,\n        reject: n,\n        abortHandle: s(o, () => {\n          this._outJobs.delete(r), this._post({\n            type: b,\n            jobId: r\n          });\n        })\n      };\n      this._outJobs.set(r, a), this._post({\n        type: _,\n        jobId: r,\n        modulePath: e\n      });\n    });\n  }\n\n  _onMessage(e) {\n    const t = i(e);\n    if (t) switch (t.type) {\n      case u:\n        this._onOpenedMessage(t);\n\n        break;\n\n      case g:\n        this._onResponseMessage(t);\n\n        break;\n\n      case b:\n        this._onAbortMessage(t);\n\n        break;\n\n      case m:\n        this._onInvokeMessage(t);\n\n    }\n  }\n\n  _onAbortMessage(e) {\n    const t = this._inJobs,\n          o = e.jobId,\n          s = t.get(o);\n    s && (s.controller && s.controller.abort(), t.delete(o));\n  }\n\n  _onInvokeMessage(t) {\n    const {\n      methodName: o,\n      jobId: s,\n      data: a,\n      abortable: i\n    } = t,\n          d = i ? new AbortController() : null,\n          h = this._inJobs,\n          c = e[o];\n    let p;\n\n    try {\n      if (\"function\" != typeof c) throw new TypeError(`${o} is not a function`);\n      p = c.call(null, a, {\n        signal: d ? d.signal : null\n      });\n    } catch (b) {\n      return void this._post({\n        type: g,\n        jobId: s,\n        error: l(b)\n      });\n    }\n\n    r(p) ? (h.set(s, {\n      controller: d,\n      promise: p\n    }), p.then(e => {\n      h.has(s) && (h.delete(s), this._post({\n        type: g,\n        jobId: s\n      }, e));\n    }, e => {\n      h.has(s) && (h.delete(s), e || (e = {\n        message: \"Error encountered at method\" + o\n      }), n(e) || this._post({\n        type: g,\n        jobId: s,\n        error: l(e || {\n          message: `Error encountered at method ${o}`\n        })\n      }));\n    })) : this._post({\n      type: g,\n      jobId: s\n    }, p);\n  }\n\n  _onOpenedMessage(e) {\n    var t;\n\n    const {\n      jobId: o,\n      data: s\n    } = e,\n          r = this._outJobs.get(o);\n\n    r && (this._outJobs.delete(o), null == (t = r.abortHandle) || t.remove(), r.resolve(s));\n  }\n\n  _onResponseMessage(e) {\n    var o;\n\n    const {\n      jobId: s,\n      error: r,\n      data: n\n    } = e,\n          a = this._outJobs.get(s);\n\n    a && (this._outJobs.delete(s), null == (o = a.abortHandle) || o.remove(), r ? a.reject(t.fromJSON(JSON.parse(r))) : a.resolve(n));\n  }\n\n  _post(e, t, o) {\n    return d(this.worker, e, t, o);\n  }\n\n}\n\nexport { j as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/core/workers/WorkerOwner.js"],"names":["workerMessages","e","t","o","onAbortOrThrow","s","isPromiseLike","r","isAbortError","n","newJobId","a","receiveMessage","i","toInvokeError","l","postMessage","d","MessageType","h","createWorker","c","p","getLogger","ABORT","b","INVOKE","m","OPEN","_","OPENED","u","RESPONSE","g","j","constructor","_outJobs","Map","_inJobs","worker","id","addEventListener","_onMessage","bind","preventDefault","error","create","terminate","open","signal","Promise","resolve","reject","abortHandle","delete","_post","type","jobId","set","modulePath","_onOpenedMessage","_onResponseMessage","_onAbortMessage","_onInvokeMessage","get","controller","abort","methodName","data","abortable","AbortController","TypeError","call","promise","then","has","message","remove","fromJSON","JSON","parse","default"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{workerMessages as e}from\"../../kernel.js\";import t from\"../Error.js\";import o from\"../Logger.js\";import{onAbortOrThrow as s,isPromiseLike as r,isAbortError as n}from\"../promiseUtils.js\";import{newJobId as a,receiveMessage as i,toInvokeError as l,postMessage as d,MessageType as h}from\"./utils.js\";import{createWorker as c}from\"./workerFactory.js\";const p=o.getLogger(\"esri.core.workers\"),{ABORT:b,INVOKE:m,OPEN:_,OPENED:u,RESPONSE:g}=h;class j{constructor(e,t){this._outJobs=new Map,this._inJobs=new Map,this.worker=e,this.id=t,e.addEventListener(\"message\",this._onMessage.bind(this)),e.addEventListener(\"error\",(e=>{e.preventDefault(),p.error(e)}))}static async create(e){const t=await c();return new j(t,e)}terminate(){this.worker.terminate()}async open(e,t={}){const{signal:o}=t,r=a();return new Promise(((t,n)=>{const a={resolve:t,reject:n,abortHandle:s(o,(()=>{this._outJobs.delete(r),this._post({type:b,jobId:r})}))};this._outJobs.set(r,a),this._post({type:_,jobId:r,modulePath:e})}))}_onMessage(e){const t=i(e);if(t)switch(t.type){case u:this._onOpenedMessage(t);break;case g:this._onResponseMessage(t);break;case b:this._onAbortMessage(t);break;case m:this._onInvokeMessage(t)}}_onAbortMessage(e){const t=this._inJobs,o=e.jobId,s=t.get(o);s&&(s.controller&&s.controller.abort(),t.delete(o))}_onInvokeMessage(t){const{methodName:o,jobId:s,data:a,abortable:i}=t,d=i?new AbortController:null,h=this._inJobs,c=e[o];let p;try{if(\"function\"!=typeof c)throw new TypeError(`${o} is not a function`);p=c.call(null,a,{signal:d?d.signal:null})}catch(b){return void this._post({type:g,jobId:s,error:l(b)})}r(p)?(h.set(s,{controller:d,promise:p}),p.then((e=>{h.has(s)&&(h.delete(s),this._post({type:g,jobId:s},e))}),(e=>{h.has(s)&&(h.delete(s),e||(e={message:\"Error encountered at method\"+o}),n(e)||this._post({type:g,jobId:s,error:l(e||{message:`Error encountered at method ${o}`})}))}))):this._post({type:g,jobId:s},p)}_onOpenedMessage(e){var t;const{jobId:o,data:s}=e,r=this._outJobs.get(o);r&&(this._outJobs.delete(o),null==(t=r.abortHandle)||t.remove(),r.resolve(s))}_onResponseMessage(e){var o;const{jobId:s,error:r,data:n}=e,a=this._outJobs.get(s);a&&(this._outJobs.delete(s),null==(o=a.abortHandle)||o.remove(),r?a.reject(t.fromJSON(JSON.parse(r))):a.resolve(n))}_post(e,t,o){return d(this.worker,e,t,o)}}export{j as default};\n"]},"metadata":{},"sourceType":"module"}