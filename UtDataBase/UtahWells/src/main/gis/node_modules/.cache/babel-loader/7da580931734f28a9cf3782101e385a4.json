{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/tslib.es6.js\";\nimport { JSONSupport as r } from \"../../core/JSONSupport.js\";\nimport { aliasOf as t } from \"../../core/accessorSupport/decorators/aliasOf.js\";\nimport \"../../core/arrayUtils.js\";\nimport \"../../core/has.js\";\nimport \"../../core/accessorSupport/ensureType.js\";\nimport { property as o } from \"../../core/accessorSupport/decorators/property.js\";\nimport { subclass as i } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { writer as s } from \"../../core/accessorSupport/decorators/writer.js\";\nimport { isSupportedRendererType as n, combineRenderingRules as a, convertRendererToRenderingRule as p, convertRenderingRuleToRFT as l } from \"./imageryRendererUtils.js\";\nimport c from \"./MosaicRule.js\";\nimport { interpolationKebab as m, noDataInterpretationKebab as y } from \"./rasterEnums.js\";\nimport u from \"./RasterFunction.js\";\nlet d = class extends r {\n  constructor() {\n    super(...arguments), this.layer = null, this.adjustAspectRatio = void 0, this.bandIds = void 0, this.compression = void 0, this.compressionQuality = void 0, this.compressionTolerance = .01, this.format = null, this.interpolation = null, this.noData = null, this.noDataInterpretation = void 0, this.pixelType = void 0, this.lercVersion = 2;\n  }\n\n  writeAdjustAspectRatio(e, r, t) {\n    this.layer.version < 10.3 || (r[t] = e);\n  }\n\n  writeCompressionQuality(e, r, t) {\n    this.format && this.format.toLowerCase().indexOf(\"jpg\") > -1 && null != e && (r[t] = e);\n  }\n\n  writeCompressionTolerance(e, r, t) {\n    \"lerc\" === this.format && null != e && (r[t] = e);\n  }\n\n  writeLercVersion(e, r, t) {\n    \"lerc\" === this.format && this.layer.version >= 10.5 && (r[t] = e);\n  }\n\n  get version() {\n    const e = this.layer;\n    return e.commitProperty(\"bandIds\"), e.commitProperty(\"format\"), e.commitProperty(\"compressionQuality\"), e.commitProperty(\"compressionTolerance\"), e.commitProperty(\"interpolation\"), e.commitProperty(\"noData\"), e.commitProperty(\"noDataInterpretation\"), e.commitProperty(\"mosaicRule\"), e.commitProperty(\"renderingRule\"), e.commitProperty(\"adjustAspectRatio\"), e.commitProperty(\"pixelFilter\"), e.commitProperty(\"renderer\"), e.commitProperty(\"definitionExpression\"), (this._get(\"version\") || 0) + 1;\n  }\n\n  set version(e) {\n    this._set(\"version\", e);\n  }\n\n  get mosaicRule() {\n    const e = this.layer;\n    let r = e.mosaicRule;\n    const t = e.definitionExpression;\n    return r ? t && t !== r.where && (r = r.clone(), r.where = t) : t && (r = new c({\n      where: t\n    })), r;\n  }\n\n  get renderingRule() {\n    const e = this.layer;\n    let r = e.renderingRule;\n    const t = e.pixelFilter,\n          o = !e.format || e.format.indexOf(\"jpg\") > -1 || e.format.indexOf(\"png\") > -1;\n    return r = this._addResampleRasterFunction(r), o && !t && (r = this.combineRendererWithRenderingRule()), r;\n  }\n\n  combineRendererWithRenderingRule() {\n    var e;\n    const r = this.layer,\n          {\n      rasterInfo: t,\n      renderingRule: o,\n      renderer: i\n    } = r;\n    if (!i || !n(i)) return o;\n    return a(p(i, {\n      rasterAttributeTable: t.attributeTable,\n      pixelType: t.pixelType,\n      dataType: t.dataType,\n      bandProperties: null == (e = t.keyProperties) ? void 0 : e.BandProperties,\n      convertColorRampToColormap: r.version < 10.6,\n      convertToRFT: !(null == o || !o.rasterFunctionDefinition)\n    }), o);\n  }\n\n  _addResampleRasterFunction(e) {\n    var r;\n    if (!(\"vector-field\" === (null == (r = this.layer.renderer) ? void 0 : r.type)) || \"Resample\" === (null == e ? void 0 : e.functionName)) return e;\n    const t = \"esriImageServiceDataTypeVector-UV\" === this.layer.serviceDataType ? 7 : 10;\n    let o = new u({\n      functionName: \"Resample\",\n      functionArguments: {\n        ResamplingType: t,\n        InputCellSize: {\n          x: this.layer.pixelSizeX,\n          y: this.layer.pixelSizeY\n        }\n      }\n    });\n    return o = null != e && e.rasterFunctionDefinition ? new u({\n      rasterFunctionDefinition: l(o)\n    }) : o, a(o, e);\n  }\n\n};\ne([o()], d.prototype, \"layer\", void 0), e([o({\n  json: {\n    write: !0\n  }\n})], d.prototype, \"adjustAspectRatio\", void 0), e([s(\"adjustAspectRatio\")], d.prototype, \"writeAdjustAspectRatio\", null), e([o({\n  json: {\n    write: !0\n  }\n}), t(\"layer.bandIds\")], d.prototype, \"bandIds\", void 0), e([o({\n  json: {\n    write: !0\n  }\n})], d.prototype, \"compression\", void 0), e([o({\n  json: {\n    write: !0\n  }\n}), t(\"layer.compressionQuality\")], d.prototype, \"compressionQuality\", void 0), e([s(\"compressionQuality\")], d.prototype, \"writeCompressionQuality\", null), e([o({\n  json: {\n    write: !0\n  }\n}), t(\"layer.compressionTolerance\")], d.prototype, \"compressionTolerance\", void 0), e([s(\"compressionTolerance\")], d.prototype, \"writeCompressionTolerance\", null), e([o({\n  json: {\n    write: !0\n  }\n}), t(\"layer.format\")], d.prototype, \"format\", void 0), e([o({\n  type: String,\n  json: {\n    read: {\n      reader: m.read\n    },\n    write: {\n      writer: m.write\n    }\n  }\n}), t(\"layer.interpolation\")], d.prototype, \"interpolation\", void 0), e([o({\n  json: {\n    write: !0\n  }\n}), t(\"layer.noData\")], d.prototype, \"noData\", void 0), e([o({\n  type: String,\n  json: {\n    read: {\n      reader: y.read\n    },\n    write: {\n      writer: y.write\n    }\n  }\n}), t(\"layer.noDataInterpretation\")], d.prototype, \"noDataInterpretation\", void 0), e([o({\n  json: {\n    write: !0\n  }\n})], d.prototype, \"pixelType\", void 0), e([o({\n  json: {\n    write: !0\n  }\n})], d.prototype, \"lercVersion\", void 0), e([s(\"lercVersion\")], d.prototype, \"writeLercVersion\", null), e([o({\n  type: Number\n})], d.prototype, \"version\", null), e([o({\n  json: {\n    write: !0\n  }\n})], d.prototype, \"mosaicRule\", null), e([o({\n  json: {\n    write: !0\n  }\n})], d.prototype, \"renderingRule\", null), d = e([i(\"esri.layers.mixins.ExportImageServiceParameters\")], d);\nexport { d as ExportImageServiceParameters };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/layers/support/ExportImageServiceParameters.js"],"names":["_","e","JSONSupport","r","aliasOf","t","property","o","subclass","i","writer","s","isSupportedRendererType","n","combineRenderingRules","a","convertRendererToRenderingRule","p","convertRenderingRuleToRFT","l","c","interpolationKebab","m","noDataInterpretationKebab","y","u","d","constructor","arguments","layer","adjustAspectRatio","bandIds","compression","compressionQuality","compressionTolerance","format","interpolation","noData","noDataInterpretation","pixelType","lercVersion","writeAdjustAspectRatio","version","writeCompressionQuality","toLowerCase","indexOf","writeCompressionTolerance","writeLercVersion","commitProperty","_get","_set","mosaicRule","definitionExpression","where","clone","renderingRule","pixelFilter","_addResampleRasterFunction","combineRendererWithRenderingRule","rasterInfo","renderer","rasterAttributeTable","attributeTable","dataType","bandProperties","keyProperties","BandProperties","convertColorRampToColormap","convertToRFT","rasterFunctionDefinition","type","functionName","serviceDataType","functionArguments","ResamplingType","InputCellSize","x","pixelSizeX","pixelSizeY","prototype","json","write","String","read","reader","Number","ExportImageServiceParameters"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../chunks/tslib.es6.js\";import{JSONSupport as r}from\"../../core/JSONSupport.js\";import{aliasOf as t}from\"../../core/accessorSupport/decorators/aliasOf.js\";import\"../../core/arrayUtils.js\";import\"../../core/has.js\";import\"../../core/accessorSupport/ensureType.js\";import{property as o}from\"../../core/accessorSupport/decorators/property.js\";import{subclass as i}from\"../../core/accessorSupport/decorators/subclass.js\";import{writer as s}from\"../../core/accessorSupport/decorators/writer.js\";import{isSupportedRendererType as n,combineRenderingRules as a,convertRendererToRenderingRule as p,convertRenderingRuleToRFT as l}from\"./imageryRendererUtils.js\";import c from\"./MosaicRule.js\";import{interpolationKebab as m,noDataInterpretationKebab as y}from\"./rasterEnums.js\";import u from\"./RasterFunction.js\";let d=class extends r{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.format=null,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,r,t){this.layer.version<10.3||(r[t]=e)}writeCompressionQuality(e,r,t){this.format&&this.format.toLowerCase().indexOf(\"jpg\")>-1&&null!=e&&(r[t]=e)}writeCompressionTolerance(e,r,t){\"lerc\"===this.format&&null!=e&&(r[t]=e)}writeLercVersion(e,r,t){\"lerc\"===this.format&&this.layer.version>=10.5&&(r[t]=e)}get version(){const e=this.layer;return e.commitProperty(\"bandIds\"),e.commitProperty(\"format\"),e.commitProperty(\"compressionQuality\"),e.commitProperty(\"compressionTolerance\"),e.commitProperty(\"interpolation\"),e.commitProperty(\"noData\"),e.commitProperty(\"noDataInterpretation\"),e.commitProperty(\"mosaicRule\"),e.commitProperty(\"renderingRule\"),e.commitProperty(\"adjustAspectRatio\"),e.commitProperty(\"pixelFilter\"),e.commitProperty(\"renderer\"),e.commitProperty(\"definitionExpression\"),(this._get(\"version\")||0)+1}set version(e){this._set(\"version\",e)}get mosaicRule(){const e=this.layer;let r=e.mosaicRule;const t=e.definitionExpression;return r?t&&t!==r.where&&(r=r.clone(),r.where=t):t&&(r=new c({where:t})),r}get renderingRule(){const e=this.layer;let r=e.renderingRule;const t=e.pixelFilter,o=!e.format||e.format.indexOf(\"jpg\")>-1||e.format.indexOf(\"png\")>-1;return r=this._addResampleRasterFunction(r),o&&!t&&(r=this.combineRendererWithRenderingRule()),r}combineRendererWithRenderingRule(){var e;const r=this.layer,{rasterInfo:t,renderingRule:o,renderer:i}=r;if(!i||!n(i))return o;return a(p(i,{rasterAttributeTable:t.attributeTable,pixelType:t.pixelType,dataType:t.dataType,bandProperties:null==(e=t.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:r.version<10.6,convertToRFT:!(null==o||!o.rasterFunctionDefinition)}),o)}_addResampleRasterFunction(e){var r;if(!(\"vector-field\"===(null==(r=this.layer.renderer)?void 0:r.type))||\"Resample\"===(null==e?void 0:e.functionName))return e;const t=\"esriImageServiceDataTypeVector-UV\"===this.layer.serviceDataType?7:10;let o=new u({functionName:\"Resample\",functionArguments:{ResamplingType:t,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}});return o=null!=e&&e.rasterFunctionDefinition?new u({rasterFunctionDefinition:l(o)}):o,a(o,e)}};e([o()],d.prototype,\"layer\",void 0),e([o({json:{write:!0}})],d.prototype,\"adjustAspectRatio\",void 0),e([s(\"adjustAspectRatio\")],d.prototype,\"writeAdjustAspectRatio\",null),e([o({json:{write:!0}}),t(\"layer.bandIds\")],d.prototype,\"bandIds\",void 0),e([o({json:{write:!0}})],d.prototype,\"compression\",void 0),e([o({json:{write:!0}}),t(\"layer.compressionQuality\")],d.prototype,\"compressionQuality\",void 0),e([s(\"compressionQuality\")],d.prototype,\"writeCompressionQuality\",null),e([o({json:{write:!0}}),t(\"layer.compressionTolerance\")],d.prototype,\"compressionTolerance\",void 0),e([s(\"compressionTolerance\")],d.prototype,\"writeCompressionTolerance\",null),e([o({json:{write:!0}}),t(\"layer.format\")],d.prototype,\"format\",void 0),e([o({type:String,json:{read:{reader:m.read},write:{writer:m.write}}}),t(\"layer.interpolation\")],d.prototype,\"interpolation\",void 0),e([o({json:{write:!0}}),t(\"layer.noData\")],d.prototype,\"noData\",void 0),e([o({type:String,json:{read:{reader:y.read},write:{writer:y.write}}}),t(\"layer.noDataInterpretation\")],d.prototype,\"noDataInterpretation\",void 0),e([o({json:{write:!0}})],d.prototype,\"pixelType\",void 0),e([o({json:{write:!0}})],d.prototype,\"lercVersion\",void 0),e([s(\"lercVersion\")],d.prototype,\"writeLercVersion\",null),e([o({type:Number})],d.prototype,\"version\",null),e([o({json:{write:!0}})],d.prototype,\"mosaicRule\",null),e([o({json:{write:!0}})],d.prototype,\"renderingRule\",null),d=e([i(\"esri.layers.mixins.ExportImageServiceParameters\")],d);export{d as ExportImageServiceParameters};\n"]},"metadata":{},"sourceType":"module"}