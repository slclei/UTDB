{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport { version as e } from \"../../kernel.js\";\nimport s from \"../Error.js\";\nimport { on as t } from \"../events.js\";\nimport { isSome as o } from \"../maybe.js\";\nimport { onAbortOrThrow as r, createAbortError as i, isPromiseLike as n, isAbortError as a } from \"../promiseUtils.js\";\nimport { newJobId as l, MessageType as c, receiveMessage as p, toInvokeError as h, postMessage as u } from \"./utils.js\";\nimport { commitHash as _, buildDate as d } from \"../../support/revision.js\";\nconst m = {\n  statsWorker: () => import(\"../../smartMapping/statistics/support/statsWorker.js\"),\n  geometryEngineWorker: () => import(\"../../geometry/geometryEngineWorker.js\"),\n  CSVSourceWorker: () => import(\"../../layers/graphics/sources/support/CSVSourceWorker.js\"),\n  EdgeProcessingWorker: () => import(\"../../views/3d/webgl-engine/lib/edgeRendering/EdgeProcessingWorker.js\"),\n  ElevationSamplerWorker: () => import(\"../../geometry/support/meshUtils/ElevationSamplerWorker.js\"),\n  FeatureServiceSnappingSourceWorker: () => import(\"../../views/interactive/snapping/featureSources/featureServiceSource/FeatureServiceSnappingSourceWorker.js\"),\n  GeoJSONSourceWorker: () => import(\"../../layers/graphics/sources/geojson/GeoJSONSourceWorker.js\"),\n  LercWorker: () => import(\"../../layers/support/LercWorker.js\"),\n  MemorySourceWorker: () => import(\"../../layers/graphics/sources/support/MemorySourceWorker.js\"),\n  PBFDecoderWorker: () => import(\"../../views/3d/support/PBFDecoderWorker.js\"),\n  Pipeline: () => import(\"../../views/2d/layers/features/Pipeline.js\"),\n  PointCloudWorker: () => import(\"../../views/3d/layers/PointCloudWorker.js\"),\n  RasterWorker: () => import(\"../../layers/support/RasterWorker.js\"),\n  SceneLayerWorker: () => import(\"../../views/3d/layers/SceneLayerWorker.js\"),\n  WFSSourceWorker: () => import(\"../../layers/graphics/sources/WFSSourceWorker.js\"),\n  WorkerTileHandler: () => import(\"../../views/2d/engine/vectorTiles/WorkerTileHandler.js\")\n},\n      {\n  CLOSE: g,\n  ABORT: b,\n  INVOKE: k,\n  RESPONSE: v,\n  OPEN_PORT: y,\n  ON: j\n} = c;\n\nclass f {\n  constructor(e) {\n    this._timer = null, this._cancelledJobIds = new Set(), this._invokeMessages = [], this._invoke = e, this._timer = null, this._process = this._process.bind(this);\n  }\n\n  push(e) {\n    e.type === c.ABORT ? this._cancelledJobIds.add(e.jobId) : (this._invokeMessages.push(e), null === this._timer && (this._timer = setTimeout(this._process, 0)));\n  }\n\n  clear() {\n    this._invokeMessages.length = 0, this._cancelledJobIds.clear(), this._timer = null;\n  }\n\n  _process() {\n    this._timer = null;\n\n    for (const e of this._invokeMessages) this._cancelledJobIds.has(e.jobId) || this._invoke(e);\n\n    this._cancelledJobIds.clear(), this._invokeMessages.length = 0;\n  }\n\n}\n\nclass M {\n  constructor(e, s) {\n    this._port = e, this._outJobs = new Map(), this._inJobs = new Map(), this._invokeQueue = new f(e => this._onInvokeMessage(e)), this._client = s.client, this._onMessage = this._onMessage.bind(this), this._channel = s.channel, this._schedule = s.schedule, this._port.addEventListener(\"message\", this._onMessage), this._port.start();\n  }\n\n  static connect(e) {\n    const s = new MessageChannel();\n    let t;\n    t = \"function\" == typeof e ? new e() : \"default\" in e && \"function\" == typeof e.default ? new e.default() : e;\n    const o = new M(s.port1, {\n      channel: s,\n      client: t\n    });\n    return \"object\" == typeof t && \"remoteClient\" in t && (t.remoteClient = o), M.clients.set(o, t), s.port2;\n  }\n\n  static loadWorker(e) {\n    const s = m[e];\n    return s ? s() : Promise.resolve(null);\n  }\n\n  close() {\n    this._post({\n      type: g\n    }), this._close();\n  }\n\n  isBusy() {\n    return this._outJobs.size > 0;\n  }\n\n  invoke(e, t, o) {\n    const n = o && o.signal,\n          a = o && o.transferList;\n    if (!this._port) return Promise.reject(new s(\"worker:port-closed\", `Cannot call invoke('${e}'), port is closed`, {\n      methodName: e,\n      data: t\n    }));\n    const c = l();\n    return new Promise((s, o) => {\n      const l = r(n, () => {\n        var e;\n\n        const s = this._outJobs.get(c);\n\n        s && (this._outJobs.delete(c), null == (e = s.abortHandle) || e.remove(), this._post({\n          type: b,\n          jobId: c\n        }), o(i()));\n      }),\n            p = {\n        resolve: s,\n        reject: o,\n        abortHandle: l,\n        debugInfo: e\n      };\n      this._outJobs.set(c, p), this._post({\n        type: k,\n        jobId: c,\n        methodName: e,\n        abortable: null != n\n      }, t, a);\n    });\n  }\n\n  on(e, s) {\n    const t = new MessageChannel();\n\n    function o(e) {\n      s(e.data);\n    }\n\n    return this._port.postMessage({\n      type: c.ON,\n      eventType: e,\n      port: t.port2\n    }, [t.port2]), t.port1.addEventListener(\"message\", o), t.port1.start(), {\n      remove() {\n        t.port1.postMessage({\n          type: c.CLOSE\n        }), t.port1.close(), t.port1.removeEventListener(\"message\", o);\n      }\n\n    };\n  }\n\n  openPort() {\n    const e = new MessageChannel();\n    return this._post({\n      type: y,\n      port: e.port2\n    }), e.port1;\n  }\n\n  _close() {\n    this._channel && (this._channel = null), this._port.removeEventListener(\"message\", this._onMessage), this._port.close(), this._outJobs.forEach(e => {\n      var s;\n      null == (s = e.abortHandle) || s.remove(), e.reject(i(`Worker closing, aborting job calling '${e.debugInfo}'`));\n    }), this._inJobs.clear(), this._outJobs.clear(), this._invokeQueue.clear(), this._port = this._client = this._schedule = null;\n  }\n\n  _onMessage(e) {\n    o(this._schedule) ? this._schedule(() => this._processMessage(e)) : this._processMessage(e);\n  }\n\n  _processMessage(e) {\n    const s = p(e);\n    if (s) switch (s.type) {\n      case v:\n        this._onResponseMessage(s);\n\n        break;\n\n      case k:\n        this._invokeQueue.push(s);\n\n        break;\n\n      case b:\n        this._onAbortMessage(s);\n\n        break;\n\n      case g:\n        this._onCloseMessage();\n\n        break;\n\n      case y:\n        this._onOpenPortMessage(s);\n\n        break;\n\n      case j:\n        this._onOnMessage(s);\n\n    }\n  }\n\n  _onAbortMessage(e) {\n    const s = this._inJobs,\n          t = e.jobId,\n          o = s.get(t);\n    this._invokeQueue.push(e), o && (o.controller && o.controller.abort(), s.delete(t));\n  }\n\n  _onCloseMessage() {\n    const e = this._client;\n    this._close(), e && \"destroy\" in e && M.clients.get(this) === e && e.destroy(), M.clients.delete(this), e && e.remoteClient && (e.remoteClient = null);\n  }\n\n  _onInvokeMessage(e) {\n    const {\n      methodName: s,\n      jobId: t,\n      data: o,\n      abortable: r\n    } = e,\n          i = r ? new AbortController() : null,\n          l = this._inJobs;\n    let c,\n        p = this._client,\n        u = p[s];\n\n    try {\n      if (!u && s && -1 !== s.indexOf(\".\")) {\n        const e = s.split(\".\");\n\n        for (let s = 0; s < e.length - 1; s++) p = p[e[s]], u = p[e[s + 1]];\n      }\n\n      if (\"function\" != typeof u) throw new TypeError(`${s} is not a function`);\n      c = u.call(p, o, {\n        client: this,\n        signal: i ? i.signal : null\n      });\n    } catch (_) {\n      return void this._post({\n        type: v,\n        jobId: t,\n        error: h(_)\n      });\n    }\n\n    n(c) ? (l.set(t, {\n      controller: i,\n      promise: c\n    }), c.then(e => {\n      l.has(t) && (l.delete(t), this._post({\n        type: v,\n        jobId: t\n      }, e));\n    }, e => {\n      l.has(t) && (l.delete(t), a(e) || this._post({\n        type: v,\n        jobId: t,\n        error: h(e || {\n          message: `Error encountered at method ${s}`\n        })\n      }));\n    })) : this._post({\n      type: v,\n      jobId: t\n    }, c);\n  }\n\n  _onOpenPortMessage(e) {\n    new M(e.port, {\n      client: this._client\n    });\n  }\n\n  _onOnMessage(e) {\n    const {\n      port: s\n    } = e,\n          o = this._client.on(e.eventType, e => {\n      s.postMessage(e);\n    }),\n          r = t(e.port, \"message\", e => {\n      p(e).type === c.CLOSE && (r.remove(), o.remove(), s.close());\n    });\n  }\n\n  _onResponseMessage(e) {\n    var t;\n    const {\n      jobId: o,\n      error: r,\n      data: i\n    } = e,\n          n = this._outJobs;\n    if (!n.has(o)) return;\n    const a = n.get(o);\n    n.delete(o), null == (t = a.abortHandle) || t.remove(), r ? a.reject(s.fromJSON(JSON.parse(r))) : a.resolve(i);\n  }\n\n  _post(e, s, t) {\n    return u(this._port, e, s, t);\n  }\n\n}\n\nM.kernelInfo = {\n  revision: _,\n  version: e,\n  buildDate: d\n}, M.clients = new Map();\nexport { M as default };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/core/workers/RemoteClient.js"],"names":["version","e","s","on","t","isSome","o","onAbortOrThrow","r","createAbortError","i","isPromiseLike","n","isAbortError","a","newJobId","l","MessageType","c","receiveMessage","p","toInvokeError","h","postMessage","u","commitHash","_","buildDate","d","m","statsWorker","geometryEngineWorker","CSVSourceWorker","EdgeProcessingWorker","ElevationSamplerWorker","FeatureServiceSnappingSourceWorker","GeoJSONSourceWorker","LercWorker","MemorySourceWorker","PBFDecoderWorker","Pipeline","PointCloudWorker","RasterWorker","SceneLayerWorker","WFSSourceWorker","WorkerTileHandler","CLOSE","g","ABORT","b","INVOKE","k","RESPONSE","v","OPEN_PORT","y","ON","j","f","constructor","_timer","_cancelledJobIds","Set","_invokeMessages","_invoke","_process","bind","push","type","add","jobId","setTimeout","clear","length","has","M","_port","_outJobs","Map","_inJobs","_invokeQueue","_onInvokeMessage","_client","client","_onMessage","_channel","channel","_schedule","schedule","addEventListener","start","connect","MessageChannel","default","port1","remoteClient","clients","set","port2","loadWorker","Promise","resolve","close","_post","_close","isBusy","size","invoke","signal","transferList","reject","methodName","data","get","delete","abortHandle","remove","debugInfo","abortable","eventType","port","removeEventListener","openPort","forEach","_processMessage","_onResponseMessage","_onAbortMessage","_onCloseMessage","_onOpenPortMessage","_onOnMessage","controller","abort","destroy","AbortController","indexOf","split","TypeError","call","error","promise","then","message","fromJSON","JSON","parse","kernelInfo","revision"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,OAAO,IAAIC,CAAlB,QAAwB,iBAAxB;AAA0C,OAAOC,CAAP,MAAa,aAAb;AAA2B,SAAOC,EAAE,IAAIC,CAAb,QAAmB,cAAnB;AAAkC,SAAOC,MAAM,IAAIC,CAAjB,QAAuB,aAAvB;AAAqC,SAAOC,cAAc,IAAIC,CAAzB,EAA2BC,gBAAgB,IAAIC,CAA/C,EAAiDC,aAAa,IAAIC,CAAlE,EAAoEC,YAAY,IAAIC,CAApF,QAA0F,oBAA1F;AAA+G,SAAOC,QAAQ,IAAIC,CAAnB,EAAqBC,WAAW,IAAIC,CAApC,EAAsCC,cAAc,IAAIC,CAAxD,EAA0DC,aAAa,IAAIC,CAA3E,EAA6EC,WAAW,IAAIC,CAA5F,QAAkG,YAAlG;AAA+G,SAAOC,UAAU,IAAIC,CAArB,EAAuBC,SAAS,IAAIC,CAApC,QAA0C,2BAA1C;AAAsE,MAAMC,CAAC,GAAC;AAACC,EAAAA,WAAW,EAAC,MAAI,OAAO,sDAAP,CAAjB;AAAgFC,EAAAA,oBAAoB,EAAC,MAAI,OAAO,wCAAP,CAAzG;AAA0JC,EAAAA,eAAe,EAAC,MAAI,OAAO,0DAAP,CAA9K;AAAiPC,EAAAA,oBAAoB,EAAC,MAAI,OAAO,uEAAP,CAA1Q;AAA0VC,EAAAA,sBAAsB,EAAC,MAAI,OAAO,4DAAP,CAArX;AAA0bC,EAAAA,kCAAkC,EAAC,MAAI,OAAO,4GAAP,CAAje;AAAslBC,EAAAA,mBAAmB,EAAC,MAAI,OAAO,8DAAP,CAA9mB;AAAqrBC,EAAAA,UAAU,EAAC,MAAI,OAAO,oCAAP,CAApsB;AAAivBC,EAAAA,kBAAkB,EAAC,MAAI,OAAO,6DAAP,CAAxwB;AAA80BC,EAAAA,gBAAgB,EAAC,MAAI,OAAO,4CAAP,CAAn2B;AAAw5BC,EAAAA,QAAQ,EAAC,MAAI,OAAO,4CAAP,CAAr6B;AAA09BC,EAAAA,gBAAgB,EAAC,MAAI,OAAO,2CAAP,CAA/+B;AAAmiCC,EAAAA,YAAY,EAAC,MAAI,OAAO,sCAAP,CAApjC;AAAmmCC,EAAAA,gBAAgB,EAAC,MAAI,OAAO,2CAAP,CAAxnC;AAA4qCC,EAAAA,eAAe,EAAC,MAAI,OAAO,kDAAP,CAAhsC;AAA2vCC,EAAAA,iBAAiB,EAAC,MAAI,OAAO,wDAAP;AAAjxC,CAAR;AAAA,MAA21C;AAACC,EAAAA,KAAK,EAACC,CAAP;AAASC,EAAAA,KAAK,EAACC,CAAf;AAAiBC,EAAAA,MAAM,EAACC,CAAxB;AAA0BC,EAAAA,QAAQ,EAACC,CAAnC;AAAqCC,EAAAA,SAAS,EAACC,CAA/C;AAAiDC,EAAAA,EAAE,EAACC;AAApD,IAAuDvC,CAAl5C;;AAAo5C,MAAMwC,CAAN,CAAO;AAACC,EAAAA,WAAW,CAAC1D,CAAD,EAAG;AAAC,SAAK2D,MAAL,GAAY,IAAZ,EAAiB,KAAKC,gBAAL,GAAsB,IAAIC,GAAJ,EAAvC,EAA+C,KAAKC,eAAL,GAAqB,EAApE,EAAuE,KAAKC,OAAL,GAAa/D,CAApF,EAAsF,KAAK2D,MAAL,GAAY,IAAlG,EAAuG,KAAKK,QAAL,GAAc,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAArH;AAA8I;;AAAAC,EAAAA,IAAI,CAAClE,CAAD,EAAG;AAACA,IAAAA,CAAC,CAACmE,IAAF,KAASlD,CAAC,CAAC8B,KAAX,GAAiB,KAAKa,gBAAL,CAAsBQ,GAAtB,CAA0BpE,CAAC,CAACqE,KAA5B,CAAjB,IAAqD,KAAKP,eAAL,CAAqBI,IAArB,CAA0BlE,CAA1B,GAA6B,SAAO,KAAK2D,MAAZ,KAAqB,KAAKA,MAAL,GAAYW,UAAU,CAAC,KAAKN,QAAN,EAAe,CAAf,CAA3C,CAAlF;AAAiJ;;AAAAO,EAAAA,KAAK,GAAE;AAAC,SAAKT,eAAL,CAAqBU,MAArB,GAA4B,CAA5B,EAA8B,KAAKZ,gBAAL,CAAsBW,KAAtB,EAA9B,EAA4D,KAAKZ,MAAL,GAAY,IAAxE;AAA6E;;AAAAK,EAAAA,QAAQ,GAAE;AAAC,SAAKL,MAAL,GAAY,IAAZ;;AAAiB,SAAI,MAAM3D,CAAV,IAAe,KAAK8D,eAApB,EAAoC,KAAKF,gBAAL,CAAsBa,GAAtB,CAA0BzE,CAAC,CAACqE,KAA5B,KAAoC,KAAKN,OAAL,CAAa/D,CAAb,CAApC;;AAAoD,SAAK4D,gBAAL,CAAsBW,KAAtB,IAA8B,KAAKT,eAAL,CAAqBU,MAArB,GAA4B,CAA1D;AAA4D;;AAA5jB;;AAA6jB,MAAME,CAAN,CAAO;AAAChB,EAAAA,WAAW,CAAC1D,CAAD,EAAGC,CAAH,EAAK;AAAC,SAAK0E,KAAL,GAAW3E,CAAX,EAAa,KAAK4E,QAAL,GAAc,IAAIC,GAAJ,EAA3B,EAAmC,KAAKC,OAAL,GAAa,IAAID,GAAJ,EAAhD,EAAwD,KAAKE,YAAL,GAAkB,IAAItB,CAAJ,CAAOzD,CAAC,IAAE,KAAKgF,gBAAL,CAAsBhF,CAAtB,CAAV,CAA1E,EAA+G,KAAKiF,OAAL,GAAahF,CAAC,CAACiF,MAA9H,EAAqI,KAAKC,UAAL,GAAgB,KAAKA,UAAL,CAAgBlB,IAAhB,CAAqB,IAArB,CAArJ,EAAgL,KAAKmB,QAAL,GAAcnF,CAAC,CAACoF,OAAhM,EAAwM,KAAKC,SAAL,GAAerF,CAAC,CAACsF,QAAzN,EAAkO,KAAKZ,KAAL,CAAWa,gBAAX,CAA4B,SAA5B,EAAsC,KAAKL,UAA3C,CAAlO,EAAyR,KAAKR,KAAL,CAAWc,KAAX,EAAzR;AAA4S;;AAAc,SAAPC,OAAO,CAAC1F,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,IAAI0F,cAAJ,EAAR;AAA2B,QAAIxF,CAAJ;AAAMA,IAAAA,CAAC,GAAC,cAAY,OAAOH,CAAnB,GAAqB,IAAIA,CAAJ,EAArB,GAA2B,aAAYA,CAAZ,IAAe,cAAY,OAAOA,CAAC,CAAC4F,OAApC,GAA4C,IAAI5F,CAAC,CAAC4F,OAAN,EAA5C,GAA0D5F,CAAvF;AAAyF,UAAMK,CAAC,GAAC,IAAIqE,CAAJ,CAAMzE,CAAC,CAAC4F,KAAR,EAAc;AAACR,MAAAA,OAAO,EAACpF,CAAT;AAAWiF,MAAAA,MAAM,EAAC/E;AAAlB,KAAd,CAAR;AAA4C,WAAM,YAAU,OAAOA,CAAjB,IAAoB,kBAAiBA,CAArC,KAAyCA,CAAC,CAAC2F,YAAF,GAAezF,CAAxD,GAA2DqE,CAAC,CAACqB,OAAF,CAAUC,GAAV,CAAc3F,CAAd,EAAgBF,CAAhB,CAA3D,EAA8EF,CAAC,CAACgG,KAAtF;AAA4F;;AAAiB,SAAVC,UAAU,CAAClG,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC2B,CAAC,CAAC5B,CAAD,CAAT;AAAa,WAAOC,CAAC,GAACA,CAAC,EAAF,GAAKkG,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAb;AAAmC;;AAAAC,EAAAA,KAAK,GAAE;AAAC,SAAKC,KAAL,CAAW;AAACnC,MAAAA,IAAI,EAACrB;AAAN,KAAX,GAAqB,KAAKyD,MAAL,EAArB;AAAmC;;AAAAC,EAAAA,MAAM,GAAE;AAAC,WAAO,KAAK5B,QAAL,CAAc6B,IAAd,GAAmB,CAA1B;AAA4B;;AAAAC,EAAAA,MAAM,CAAC1G,CAAD,EAAGG,CAAH,EAAKE,CAAL,EAAO;AAAC,UAAMM,CAAC,GAACN,CAAC,IAAEA,CAAC,CAACsG,MAAb;AAAA,UAAoB9F,CAAC,GAACR,CAAC,IAAEA,CAAC,CAACuG,YAA3B;AAAwC,QAAG,CAAC,KAAKjC,KAAT,EAAe,OAAOwB,OAAO,CAACU,MAAR,CAAe,IAAI5G,CAAJ,CAAM,oBAAN,EAA4B,uBAAsBD,CAAE,oBAApD,EAAwE;AAAC8G,MAAAA,UAAU,EAAC9G,CAAZ;AAAc+G,MAAAA,IAAI,EAAC5G;AAAnB,KAAxE,CAAf,CAAP;AAAsH,UAAMc,CAAC,GAACF,CAAC,EAAT;AAAY,WAAO,IAAIoF,OAAJ,CAAa,CAAClG,CAAD,EAAGI,CAAH,KAAO;AAAC,YAAMU,CAAC,GAACR,CAAC,CAACI,CAAD,EAAI,MAAI;AAAC,YAAIX,CAAJ;;AAAM,cAAMC,CAAC,GAAC,KAAK2E,QAAL,CAAcoC,GAAd,CAAkB/F,CAAlB,CAAR;;AAA6BhB,QAAAA,CAAC,KAAG,KAAK2E,QAAL,CAAcqC,MAAd,CAAqBhG,CAArB,GAAwB,SAAOjB,CAAC,GAACC,CAAC,CAACiH,WAAX,KAAyBlH,CAAC,CAACmH,MAAF,EAAjD,EAA4D,KAAKb,KAAL,CAAW;AAACnC,UAAAA,IAAI,EAACnB,CAAN;AAAQqB,UAAAA,KAAK,EAACpD;AAAd,SAAX,CAA5D,EAAyFZ,CAAC,CAACI,CAAC,EAAF,CAA7F,CAAD;AAAqG,OAAjJ,CAAT;AAAA,YAA6JU,CAAC,GAAC;AAACiF,QAAAA,OAAO,EAACnG,CAAT;AAAW4G,QAAAA,MAAM,EAACxG,CAAlB;AAAoB6G,QAAAA,WAAW,EAACnG,CAAhC;AAAkCqG,QAAAA,SAAS,EAACpH;AAA5C,OAA/J;AAA8M,WAAK4E,QAAL,CAAcoB,GAAd,CAAkB/E,CAAlB,EAAoBE,CAApB,GAAuB,KAAKmF,KAAL,CAAW;AAACnC,QAAAA,IAAI,EAACjB,CAAN;AAAQmB,QAAAA,KAAK,EAACpD,CAAd;AAAgB6F,QAAAA,UAAU,EAAC9G,CAA3B;AAA6BqH,QAAAA,SAAS,EAAC,QAAM1G;AAA7C,OAAX,EAA2DR,CAA3D,EAA6DU,CAA7D,CAAvB;AAAuF,KAA1T,CAAP;AAAoU;;AAAAX,EAAAA,EAAE,CAACF,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAME,CAAC,GAAC,IAAIwF,cAAJ,EAAR;;AAA2B,aAAStF,CAAT,CAAWL,CAAX,EAAa;AAACC,MAAAA,CAAC,CAACD,CAAC,CAAC+G,IAAH,CAAD;AAAU;;AAAA,WAAO,KAAKpC,KAAL,CAAWrD,WAAX,CAAuB;AAAC6C,MAAAA,IAAI,EAAClD,CAAC,CAACsC,EAAR;AAAW+D,MAAAA,SAAS,EAACtH,CAArB;AAAuBuH,MAAAA,IAAI,EAACpH,CAAC,CAAC8F;AAA9B,KAAvB,EAA4D,CAAC9F,CAAC,CAAC8F,KAAH,CAA5D,GAAuE9F,CAAC,CAAC0F,KAAF,CAAQL,gBAAR,CAAyB,SAAzB,EAAmCnF,CAAnC,CAAvE,EAA6GF,CAAC,CAAC0F,KAAF,CAAQJ,KAAR,EAA7G,EAA6H;AAAC0B,MAAAA,MAAM,GAAE;AAAChH,QAAAA,CAAC,CAAC0F,KAAF,CAAQvE,WAAR,CAAoB;AAAC6C,UAAAA,IAAI,EAAClD,CAAC,CAAC4B;AAAR,SAApB,GAAoC1C,CAAC,CAAC0F,KAAF,CAAQQ,KAAR,EAApC,EAAoDlG,CAAC,CAAC0F,KAAF,CAAQ2B,mBAAR,CAA4B,SAA5B,EAAsCnH,CAAtC,CAApD;AAA6F;;AAAvG,KAApI;AAA6O;;AAAAoH,EAAAA,QAAQ,GAAE;AAAC,UAAMzH,CAAC,GAAC,IAAI2F,cAAJ,EAAR;AAA2B,WAAO,KAAKW,KAAL,CAAW;AAACnC,MAAAA,IAAI,EAACb,CAAN;AAAQiE,MAAAA,IAAI,EAACvH,CAAC,CAACiG;AAAf,KAAX,GAAkCjG,CAAC,CAAC6F,KAA3C;AAAiD;;AAAAU,EAAAA,MAAM,GAAE;AAAC,SAAKnB,QAAL,KAAgB,KAAKA,QAAL,GAAc,IAA9B,GAAoC,KAAKT,KAAL,CAAW6C,mBAAX,CAA+B,SAA/B,EAAyC,KAAKrC,UAA9C,CAApC,EAA8F,KAAKR,KAAL,CAAW0B,KAAX,EAA9F,EAAiH,KAAKzB,QAAL,CAAc8C,OAAd,CAAuB1H,CAAC,IAAE;AAAC,UAAIC,CAAJ;AAAM,eAAOA,CAAC,GAACD,CAAC,CAACkH,WAAX,KAAyBjH,CAAC,CAACkH,MAAF,EAAzB,EAAoCnH,CAAC,CAAC6G,MAAF,CAASpG,CAAC,CAAE,yCAAwCT,CAAC,CAACoH,SAAU,GAAtD,CAAV,CAApC;AAAyG,KAA1I,CAAjH,EAA8P,KAAKtC,OAAL,CAAaP,KAAb,EAA9P,EAAmR,KAAKK,QAAL,CAAcL,KAAd,EAAnR,EAAyS,KAAKQ,YAAL,CAAkBR,KAAlB,EAAzS,EAAmU,KAAKI,KAAL,GAAW,KAAKM,OAAL,GAAa,KAAKK,SAAL,GAAe,IAA1W;AAA+W;;AAAAH,EAAAA,UAAU,CAACnF,CAAD,EAAG;AAACK,IAAAA,CAAC,CAAC,KAAKiF,SAAN,CAAD,GAAkB,KAAKA,SAAL,CAAgB,MAAI,KAAKqC,eAAL,CAAqB3H,CAArB,CAApB,CAAlB,GAAgE,KAAK2H,eAAL,CAAqB3H,CAArB,CAAhE;AAAwF;;AAAA2H,EAAAA,eAAe,CAAC3H,CAAD,EAAG;AAAC,UAAMC,CAAC,GAACkB,CAAC,CAACnB,CAAD,CAAT;AAAa,QAAGC,CAAH,EAAK,QAAOA,CAAC,CAACkE,IAAT;AAAe,WAAKf,CAAL;AAAO,aAAKwE,kBAAL,CAAwB3H,CAAxB;;AAA2B;;AAAM,WAAKiD,CAAL;AAAO,aAAK6B,YAAL,CAAkBb,IAAlB,CAAuBjE,CAAvB;;AAA0B;;AAAM,WAAK+C,CAAL;AAAO,aAAK6E,eAAL,CAAqB5H,CAArB;;AAAwB;;AAAM,WAAK6C,CAAL;AAAO,aAAKgF,eAAL;;AAAuB;;AAAM,WAAKxE,CAAL;AAAO,aAAKyE,kBAAL,CAAwB9H,CAAxB;;AAA2B;;AAAM,WAAKuD,CAAL;AAAO,aAAKwE,YAAL,CAAkB/H,CAAlB;;AAAtN;AAA4O;;AAAA4H,EAAAA,eAAe,CAAC7H,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,KAAK6E,OAAb;AAAA,UAAqB3E,CAAC,GAACH,CAAC,CAACqE,KAAzB;AAAA,UAA+BhE,CAAC,GAACJ,CAAC,CAAC+G,GAAF,CAAM7G,CAAN,CAAjC;AAA0C,SAAK4E,YAAL,CAAkBb,IAAlB,CAAuBlE,CAAvB,GAA0BK,CAAC,KAAGA,CAAC,CAAC4H,UAAF,IAAc5H,CAAC,CAAC4H,UAAF,CAAaC,KAAb,EAAd,EAAmCjI,CAAC,CAACgH,MAAF,CAAS9G,CAAT,CAAtC,CAA3B;AAA8E;;AAAA2H,EAAAA,eAAe,GAAE;AAAC,UAAM9H,CAAC,GAAC,KAAKiF,OAAb;AAAqB,SAAKsB,MAAL,IAAcvG,CAAC,IAAE,aAAYA,CAAf,IAAkB0E,CAAC,CAACqB,OAAF,CAAUiB,GAAV,CAAc,IAAd,MAAsBhH,CAAxC,IAA2CA,CAAC,CAACmI,OAAF,EAAzD,EAAqEzD,CAAC,CAACqB,OAAF,CAAUkB,MAAV,CAAiB,IAAjB,CAArE,EAA4FjH,CAAC,IAAEA,CAAC,CAAC8F,YAAL,KAAoB9F,CAAC,CAAC8F,YAAF,GAAe,IAAnC,CAA5F;AAAqI;;AAAAd,EAAAA,gBAAgB,CAAChF,CAAD,EAAG;AAAC,UAAK;AAAC8G,MAAAA,UAAU,EAAC7G,CAAZ;AAAcoE,MAAAA,KAAK,EAAClE,CAApB;AAAsB4G,MAAAA,IAAI,EAAC1G,CAA3B;AAA6BgH,MAAAA,SAAS,EAAC9G;AAAvC,QAA0CP,CAA/C;AAAA,UAAiDS,CAAC,GAACF,CAAC,GAAC,IAAI6H,eAAJ,EAAD,GAAqB,IAAzE;AAAA,UAA8ErH,CAAC,GAAC,KAAK+D,OAArF;AAA6F,QAAI7D,CAAJ;AAAA,QAAME,CAAC,GAAC,KAAK8D,OAAb;AAAA,QAAqB1D,CAAC,GAACJ,CAAC,CAAClB,CAAD,CAAxB;;AAA4B,QAAG;AAAC,UAAG,CAACsB,CAAD,IAAItB,CAAJ,IAAO,CAAC,CAAD,KAAKA,CAAC,CAACoI,OAAF,CAAU,GAAV,CAAf,EAA8B;AAAC,cAAMrI,CAAC,GAACC,CAAC,CAACqI,KAAF,CAAQ,GAAR,CAAR;;AAAqB,aAAI,IAAIrI,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,CAAC,CAACwE,MAAF,GAAS,CAAvB,EAAyBvE,CAAC,EAA1B,EAA6BkB,CAAC,GAACA,CAAC,CAACnB,CAAC,CAACC,CAAD,CAAF,CAAH,EAAUsB,CAAC,GAACJ,CAAC,CAACnB,CAAC,CAACC,CAAC,GAAC,CAAH,CAAF,CAAb;AAAsB;;AAAA,UAAG,cAAY,OAAOsB,CAAtB,EAAwB,MAAM,IAAIgH,SAAJ,CAAe,GAAEtI,CAAE,oBAAnB,CAAN;AAA8CgB,MAAAA,CAAC,GAACM,CAAC,CAACiH,IAAF,CAAOrH,CAAP,EAASd,CAAT,EAAW;AAAC6E,QAAAA,MAAM,EAAC,IAAR;AAAayB,QAAAA,MAAM,EAAClG,CAAC,GAACA,CAAC,CAACkG,MAAH,GAAU;AAA/B,OAAX,CAAF;AAAmD,KAApO,CAAoO,OAAMlF,CAAN,EAAQ;AAAC,aAAO,KAAK,KAAK6E,KAAL,CAAW;AAACnC,QAAAA,IAAI,EAACf,CAAN;AAAQiB,QAAAA,KAAK,EAAClE,CAAd;AAAgBsI,QAAAA,KAAK,EAACpH,CAAC,CAACI,CAAD;AAAvB,OAAX,CAAZ;AAAoD;;AAAAd,IAAAA,CAAC,CAACM,CAAD,CAAD,IAAMF,CAAC,CAACiF,GAAF,CAAM7F,CAAN,EAAQ;AAAC8H,MAAAA,UAAU,EAACxH,CAAZ;AAAciI,MAAAA,OAAO,EAACzH;AAAtB,KAAR,GAAkCA,CAAC,CAAC0H,IAAF,CAAQ3I,CAAC,IAAE;AAACe,MAAAA,CAAC,CAAC0D,GAAF,CAAMtE,CAAN,MAAWY,CAAC,CAACkG,MAAF,CAAS9G,CAAT,GAAY,KAAKmG,KAAL,CAAW;AAACnC,QAAAA,IAAI,EAACf,CAAN;AAAQiB,QAAAA,KAAK,EAAClE;AAAd,OAAX,EAA4BH,CAA5B,CAAvB;AAAuD,KAAnE,EAAsEA,CAAC,IAAE;AAACe,MAAAA,CAAC,CAAC0D,GAAF,CAAMtE,CAAN,MAAWY,CAAC,CAACkG,MAAF,CAAS9G,CAAT,GAAYU,CAAC,CAACb,CAAD,CAAD,IAAM,KAAKsG,KAAL,CAAW;AAACnC,QAAAA,IAAI,EAACf,CAAN;AAAQiB,QAAAA,KAAK,EAAClE,CAAd;AAAgBsI,QAAAA,KAAK,EAACpH,CAAC,CAACrB,CAAC,IAAE;AAAC4I,UAAAA,OAAO,EAAE,+BAA8B3I,CAAE;AAA1C,SAAJ;AAAvB,OAAX,CAA7B;AAAoH,KAA9L,CAAxC,IAA0O,KAAKqG,KAAL,CAAW;AAACnC,MAAAA,IAAI,EAACf,CAAN;AAAQiB,MAAAA,KAAK,EAAClE;AAAd,KAAX,EAA4Bc,CAA5B,CAA1O;AAAyQ;;AAAA8G,EAAAA,kBAAkB,CAAC/H,CAAD,EAAG;AAAC,QAAI0E,CAAJ,CAAM1E,CAAC,CAACuH,IAAR,EAAa;AAACrC,MAAAA,MAAM,EAAC,KAAKD;AAAb,KAAb;AAAoC;;AAAA+C,EAAAA,YAAY,CAAChI,CAAD,EAAG;AAAC,UAAK;AAACuH,MAAAA,IAAI,EAACtH;AAAN,QAASD,CAAd;AAAA,UAAgBK,CAAC,GAAC,KAAK4E,OAAL,CAAa/E,EAAb,CAAgBF,CAAC,CAACsH,SAAlB,EAA6BtH,CAAC,IAAE;AAACC,MAAAA,CAAC,CAACqB,WAAF,CAActB,CAAd;AAAiB,KAAlD,CAAlB;AAAA,UAAuEO,CAAC,GAACJ,CAAC,CAACH,CAAC,CAACuH,IAAH,EAAQ,SAAR,EAAmBvH,CAAC,IAAE;AAACmB,MAAAA,CAAC,CAACnB,CAAD,CAAD,CAAKmE,IAAL,KAAYlD,CAAC,CAAC4B,KAAd,KAAsBtC,CAAC,CAAC4G,MAAF,IAAW9G,CAAC,CAAC8G,MAAF,EAAX,EAAsBlH,CAAC,CAACoG,KAAF,EAA5C;AAAuD,KAA9E,CAA1E;AAA2J;;AAAAuB,EAAAA,kBAAkB,CAAC5H,CAAD,EAAG;AAAC,QAAIG,CAAJ;AAAM,UAAK;AAACkE,MAAAA,KAAK,EAAChE,CAAP;AAASoI,MAAAA,KAAK,EAAClI,CAAf;AAAiBwG,MAAAA,IAAI,EAACtG;AAAtB,QAAyBT,CAA9B;AAAA,UAAgCW,CAAC,GAAC,KAAKiE,QAAvC;AAAgD,QAAG,CAACjE,CAAC,CAAC8D,GAAF,CAAMpE,CAAN,CAAJ,EAAa;AAAO,UAAMQ,CAAC,GAACF,CAAC,CAACqG,GAAF,CAAM3G,CAAN,CAAR;AAAiBM,IAAAA,CAAC,CAACsG,MAAF,CAAS5G,CAAT,GAAY,SAAOF,CAAC,GAACU,CAAC,CAACqG,WAAX,KAAyB/G,CAAC,CAACgH,MAAF,EAArC,EAAgD5G,CAAC,GAACM,CAAC,CAACgG,MAAF,CAAS5G,CAAC,CAAC4I,QAAF,CAAWC,IAAI,CAACC,KAAL,CAAWxI,CAAX,CAAX,CAAT,CAAD,GAAqCM,CAAC,CAACuF,OAAF,CAAU3F,CAAV,CAAtF;AAAmG;;AAAA6F,EAAAA,KAAK,CAACtG,CAAD,EAAGC,CAAH,EAAKE,CAAL,EAAO;AAAC,WAAOoB,CAAC,CAAC,KAAKoD,KAAN,EAAY3E,CAAZ,EAAcC,CAAd,EAAgBE,CAAhB,CAAR;AAA2B;;AAA/yH;;AAAgzHuE,CAAC,CAACsE,UAAF,GAAa;AAACC,EAAAA,QAAQ,EAACxH,CAAV;AAAY1B,EAAAA,OAAO,EAACC,CAApB;AAAsB0B,EAAAA,SAAS,EAACC;AAAhC,CAAb,EAAgD+C,CAAC,CAACqB,OAAF,GAAU,IAAIlB,GAAJ,EAA1D;AAAkE,SAAOH,CAAC,IAAIkB,OAAZ","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport{version as e}from\"../../kernel.js\";import s from\"../Error.js\";import{on as t}from\"../events.js\";import{isSome as o}from\"../maybe.js\";import{onAbortOrThrow as r,createAbortError as i,isPromiseLike as n,isAbortError as a}from\"../promiseUtils.js\";import{newJobId as l,MessageType as c,receiveMessage as p,toInvokeError as h,postMessage as u}from\"./utils.js\";import{commitHash as _,buildDate as d}from\"../../support/revision.js\";const m={statsWorker:()=>import(\"../../smartMapping/statistics/support/statsWorker.js\"),geometryEngineWorker:()=>import(\"../../geometry/geometryEngineWorker.js\"),CSVSourceWorker:()=>import(\"../../layers/graphics/sources/support/CSVSourceWorker.js\"),EdgeProcessingWorker:()=>import(\"../../views/3d/webgl-engine/lib/edgeRendering/EdgeProcessingWorker.js\"),ElevationSamplerWorker:()=>import(\"../../geometry/support/meshUtils/ElevationSamplerWorker.js\"),FeatureServiceSnappingSourceWorker:()=>import(\"../../views/interactive/snapping/featureSources/featureServiceSource/FeatureServiceSnappingSourceWorker.js\"),GeoJSONSourceWorker:()=>import(\"../../layers/graphics/sources/geojson/GeoJSONSourceWorker.js\"),LercWorker:()=>import(\"../../layers/support/LercWorker.js\"),MemorySourceWorker:()=>import(\"../../layers/graphics/sources/support/MemorySourceWorker.js\"),PBFDecoderWorker:()=>import(\"../../views/3d/support/PBFDecoderWorker.js\"),Pipeline:()=>import(\"../../views/2d/layers/features/Pipeline.js\"),PointCloudWorker:()=>import(\"../../views/3d/layers/PointCloudWorker.js\"),RasterWorker:()=>import(\"../../layers/support/RasterWorker.js\"),SceneLayerWorker:()=>import(\"../../views/3d/layers/SceneLayerWorker.js\"),WFSSourceWorker:()=>import(\"../../layers/graphics/sources/WFSSourceWorker.js\"),WorkerTileHandler:()=>import(\"../../views/2d/engine/vectorTiles/WorkerTileHandler.js\")},{CLOSE:g,ABORT:b,INVOKE:k,RESPONSE:v,OPEN_PORT:y,ON:j}=c;class f{constructor(e){this._timer=null,this._cancelledJobIds=new Set,this._invokeMessages=[],this._invoke=e,this._timer=null,this._process=this._process.bind(this)}push(e){e.type===c.ABORT?this._cancelledJobIds.add(e.jobId):(this._invokeMessages.push(e),null===this._timer&&(this._timer=setTimeout(this._process,0)))}clear(){this._invokeMessages.length=0,this._cancelledJobIds.clear(),this._timer=null}_process(){this._timer=null;for(const e of this._invokeMessages)this._cancelledJobIds.has(e.jobId)||this._invoke(e);this._cancelledJobIds.clear(),this._invokeMessages.length=0}}class M{constructor(e,s){this._port=e,this._outJobs=new Map,this._inJobs=new Map,this._invokeQueue=new f((e=>this._onInvokeMessage(e))),this._client=s.client,this._onMessage=this._onMessage.bind(this),this._channel=s.channel,this._schedule=s.schedule,this._port.addEventListener(\"message\",this._onMessage),this._port.start()}static connect(e){const s=new MessageChannel;let t;t=\"function\"==typeof e?new e:\"default\"in e&&\"function\"==typeof e.default?new e.default:e;const o=new M(s.port1,{channel:s,client:t});return\"object\"==typeof t&&\"remoteClient\"in t&&(t.remoteClient=o),M.clients.set(o,t),s.port2}static loadWorker(e){const s=m[e];return s?s():Promise.resolve(null)}close(){this._post({type:g}),this._close()}isBusy(){return this._outJobs.size>0}invoke(e,t,o){const n=o&&o.signal,a=o&&o.transferList;if(!this._port)return Promise.reject(new s(\"worker:port-closed\",`Cannot call invoke('${e}'), port is closed`,{methodName:e,data:t}));const c=l();return new Promise(((s,o)=>{const l=r(n,(()=>{var e;const s=this._outJobs.get(c);s&&(this._outJobs.delete(c),null==(e=s.abortHandle)||e.remove(),this._post({type:b,jobId:c}),o(i()))})),p={resolve:s,reject:o,abortHandle:l,debugInfo:e};this._outJobs.set(c,p),this._post({type:k,jobId:c,methodName:e,abortable:null!=n},t,a)}))}on(e,s){const t=new MessageChannel;function o(e){s(e.data)}return this._port.postMessage({type:c.ON,eventType:e,port:t.port2},[t.port2]),t.port1.addEventListener(\"message\",o),t.port1.start(),{remove(){t.port1.postMessage({type:c.CLOSE}),t.port1.close(),t.port1.removeEventListener(\"message\",o)}}}openPort(){const e=new MessageChannel;return this._post({type:y,port:e.port2}),e.port1}_close(){this._channel&&(this._channel=null),this._port.removeEventListener(\"message\",this._onMessage),this._port.close(),this._outJobs.forEach((e=>{var s;null==(s=e.abortHandle)||s.remove(),e.reject(i(`Worker closing, aborting job calling '${e.debugInfo}'`))})),this._inJobs.clear(),this._outJobs.clear(),this._invokeQueue.clear(),this._port=this._client=this._schedule=null}_onMessage(e){o(this._schedule)?this._schedule((()=>this._processMessage(e))):this._processMessage(e)}_processMessage(e){const s=p(e);if(s)switch(s.type){case v:this._onResponseMessage(s);break;case k:this._invokeQueue.push(s);break;case b:this._onAbortMessage(s);break;case g:this._onCloseMessage();break;case y:this._onOpenPortMessage(s);break;case j:this._onOnMessage(s)}}_onAbortMessage(e){const s=this._inJobs,t=e.jobId,o=s.get(t);this._invokeQueue.push(e),o&&(o.controller&&o.controller.abort(),s.delete(t))}_onCloseMessage(){const e=this._client;this._close(),e&&\"destroy\"in e&&M.clients.get(this)===e&&e.destroy(),M.clients.delete(this),e&&e.remoteClient&&(e.remoteClient=null)}_onInvokeMessage(e){const{methodName:s,jobId:t,data:o,abortable:r}=e,i=r?new AbortController:null,l=this._inJobs;let c,p=this._client,u=p[s];try{if(!u&&s&&-1!==s.indexOf(\".\")){const e=s.split(\".\");for(let s=0;s<e.length-1;s++)p=p[e[s]],u=p[e[s+1]]}if(\"function\"!=typeof u)throw new TypeError(`${s} is not a function`);c=u.call(p,o,{client:this,signal:i?i.signal:null})}catch(_){return void this._post({type:v,jobId:t,error:h(_)})}n(c)?(l.set(t,{controller:i,promise:c}),c.then((e=>{l.has(t)&&(l.delete(t),this._post({type:v,jobId:t},e))}),(e=>{l.has(t)&&(l.delete(t),a(e)||this._post({type:v,jobId:t,error:h(e||{message:`Error encountered at method ${s}`})}))}))):this._post({type:v,jobId:t},c)}_onOpenPortMessage(e){new M(e.port,{client:this._client})}_onOnMessage(e){const{port:s}=e,o=this._client.on(e.eventType,(e=>{s.postMessage(e)})),r=t(e.port,\"message\",(e=>{p(e).type===c.CLOSE&&(r.remove(),o.remove(),s.close())}))}_onResponseMessage(e){var t;const{jobId:o,error:r,data:i}=e,n=this._outJobs;if(!n.has(o))return;const a=n.get(o);n.delete(o),null==(t=a.abortHandle)||t.remove(),r?a.reject(s.fromJSON(JSON.parse(r))):a.resolve(i)}_post(e,s,t){return u(this._port,e,s,t)}}M.kernelInfo={revision:_,version:e,buildDate:d},M.clients=new Map;export{M as default};\n"]},"metadata":{},"sourceType":"module"}