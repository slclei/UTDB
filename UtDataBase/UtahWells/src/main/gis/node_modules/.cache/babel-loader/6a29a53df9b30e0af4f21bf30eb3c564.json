{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport t from \"./DirtyMap.js\";\nimport s from \"./DisplayRecordStore.js\";\nimport e from \"./WGLBuffers.js\";\nimport { WGLTile as i } from \"./WGLTile.js\";\n\nclass a extends i {\n  constructor() {\n    super(...arguments), this._data = null, this._displayList = null, this._lastCommitTime = 0, this._hasData = !1, this._invalidated = !1, this._wglBuffers = null, this._dirtyMap = new t();\n  }\n\n  destroy() {\n    super.destroy(), this.clear();\n  }\n\n  get hasData() {\n    return !!this._hasData;\n  }\n\n  get displayObjects() {\n    var t;\n    return null != (t = this._displayObjects) ? t : [];\n  }\n\n  getGeometry(t) {\n    return this._wglBuffers && this._wglBuffers.has(t) ? this._wglBuffers.get(t) : null;\n  }\n\n  getDisplayList() {\n    return this._displayList;\n  }\n\n  patch(e) {\n    if (!0 === e.clear) return this.clear(), void (this._hasData = !1);\n    const i = e.addOrUpdate,\n          a = e.remove;\n    !this._data && i && i.tileDisplayData.displayObjects.length ? (i.tileDisplayData.computeDisplayList(), this._dirtyMap = new t(), this._dispRecStore = s.fromTileData(i, this._dirtyMap), this._data = i, this._dirtyMap.markAllDirty(), this._hasData = !0, e.end && this.ready()) : this._data && (i && i.tileDisplayData.displayObjects.length || a.length) ? this._doPatchData(e) : e.end && this.ready(), e.end && !this._data && this.clear(), this.requestRender(), this.emit(\"change\");\n  }\n\n  commit(t) {\n    t.time && t.time === this._lastCommitTime || (this._lastCommitTime = t.time, this.visible && this._data && (this._wglBuffers || (this._wglBuffers = new e(t.context)), (this._dirtyMap.hasDirty() || this._invalidated) && (this._invalidated = !1, this._wglBuffers.upload(this._data.tileBufferData, this._dirtyMap), this._displayList = this._data.tileDisplayData.displayList.clone(), this._displayObjects = this._data.tileDisplayData.displayObjects.slice(), this._dirtyMap.markAllClean())));\n  }\n\n  clear() {\n    this._data = null, this._displayList = null, this._dispRecStore = null, this._wglBuffers && (this._wglBuffers.dispose(), this._wglBuffers = null);\n  }\n\n  _doPatchData(t) {\n    this._invalidated = !0, this._patchData(t) || (this._dirtyMap.markAllDirty(), this._data.reshuffle(), this._dispRecStore = s.fromTileData(this._data, this._dirtyMap)), this.requestRender();\n  }\n\n  _patchData(t) {\n    let s = !0;\n    const e = t.addOrUpdate && t.addOrUpdate.tileDisplayData && t.addOrUpdate.tileDisplayData.displayObjects || [],\n          i = (t.remove || []).slice();\n\n    for (const a of e) null != a.insertAfter && i.push(a.id);\n\n    for (const a of i) {\n      const t = this._data.tileDisplayData.displayObjectRegistry.get(a);\n\n      if (t) {\n        this._data.tileDisplayData.displayList.removeFromList(t.displayRecords);\n\n        for (const e of t.displayRecords) this._dispRecStore.delete(e);\n\n        this._data.tileDisplayData.displayObjectRegistry.delete(a);\n\n        const s = this._data.tileDisplayData.displayObjects.indexOf(t);\n\n        this._data.tileDisplayData.displayObjects.splice(s, 1);\n      }\n    }\n\n    for (const a of e) {\n      let e,\n          i = this._data.tileDisplayData.displayObjectRegistry.get(a.id);\n\n      if (i) {\n        const t = i.displayRecords;\n        i.set(a), i.displayRecords = t;\n        const s = i.displayRecords.length;\n\n        for (let e = 0; e < s; ++e) {\n          const t = i.displayRecords[e],\n                s = a.displayRecords[e];\n          (e >= a.displayRecords.length || t.geometryType !== s.geometryType || t.symbolLevel !== s.symbolLevel || t.zOrder !== s.zOrder || t.materialKey !== s.materialKey) && (this._dispRecStore.delete(i.displayRecords[e]), e < a.displayRecords.length && (i.displayRecords[e] = void 0));\n        }\n\n        i.displayRecords.length = a.displayRecords.length;\n      } else {\n        let t;\n        i = a.copy(), i.displayRecords = [], this._data.tileDisplayData.displayObjectRegistry.set(a.id, i);\n        const s = this._data.tileDisplayData.displayObjects;\n        if (null != i.insertAfter) {\n          if (e = {}, i.insertAfter >= 0) {\n            const e = this._data.tileDisplayData.displayObjectRegistry.get(i.insertAfter);\n\n            e ? (t = s.indexOf(e) + 1, t < s.length ? s.splice(t, 0, i) : (s.push(i), t = s.length)) : (s.push(i), t = s.length);\n          } else s.unshift(i), t = 0;\n        } else s.push(i), t = s.length;\n\n        if (e) {\n          const i = a.displayRecords.length > 0 ? 1 : 0;\n          let l = 0;\n\n          for (let a = t - 1; a >= 0 && l < i; --a) for (let t = s[a].displayRecords.length - 1; t >= 0 && l < i; --t) {\n            const i = s[a].displayRecords[t],\n                  d = this._data.tileDisplayData.displayList.getDPInfoType();\n\n            e[d] || (e[d] = i, ++l);\n          }\n        }\n      }\n\n      const l = a.displayRecords.length;\n\n      for (let d = 0; d < l; ++d) {\n        const l = a.displayRecords[d];\n        let r = i.displayRecords[d];\n        r ? (r.meshData = l.meshData, r.materialKey = l.materialKey) : (r = l.copy(), r.vertexFrom = void 0, r.indexFrom = void 0, i.displayRecords[d] = r);\n\n        const p = l.geometryType,\n              h = this._data.tileDisplayData.displayList.getDPInfoType(),\n              o = t.addOrUpdate.tileBufferData.geometries[p],\n              y = o.vertexBuffer,\n              c = o.indexBuffer;\n\n        let n;\n        e && (n = e[h] ? this._data.tileDisplayData.displayList.splitAfter(e[h]) : -1), s = this._dispRecStore.setMeshData(r, l, y, c, n) && s, e && null != r.indexFrom && null != r.indexFrom && (e[h] = r);\n      }\n    }\n\n    return s;\n  }\n\n}\n\nexport { a as GraphicTile };","map":{"version":3,"sources":["D:/Github/CUSP_DataBase/CUSP_DB/src/main/gis/node_modules/@arcgis/core/views/2d/engine/webgl/GraphicTile.js"],"names":["t","s","e","WGLTile","i","a","constructor","arguments","_data","_displayList","_lastCommitTime","_hasData","_invalidated","_wglBuffers","_dirtyMap","destroy","clear","hasData","displayObjects","_displayObjects","getGeometry","has","get","getDisplayList","patch","addOrUpdate","remove","tileDisplayData","length","computeDisplayList","_dispRecStore","fromTileData","markAllDirty","end","ready","_doPatchData","requestRender","emit","commit","time","visible","context","hasDirty","upload","tileBufferData","displayList","clone","slice","markAllClean","dispose","_patchData","reshuffle","insertAfter","push","id","displayObjectRegistry","removeFromList","displayRecords","delete","indexOf","splice","set","geometryType","symbolLevel","zOrder","materialKey","copy","unshift","l","d","getDPInfoType","r","meshData","vertexFrom","indexFrom","p","h","o","geometries","y","vertexBuffer","c","indexBuffer","n","splitAfter","setMeshData","GraphicTile"],"mappings":"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","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.23/esri/copyright.txt for details.\n*/\nimport t from\"./DirtyMap.js\";import s from\"./DisplayRecordStore.js\";import e from\"./WGLBuffers.js\";import{WGLTile as i}from\"./WGLTile.js\";class a extends i{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new t}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){var t;return null!=(t=this._displayObjects)?t:[]}getGeometry(t){return this._wglBuffers&&this._wglBuffers.has(t)?this._wglBuffers.get(t):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const i=e.addOrUpdate,a=e.remove;!this._data&&i&&i.tileDisplayData.displayObjects.length?(i.tileDisplayData.computeDisplayList(),this._dirtyMap=new t,this._dispRecStore=s.fromTileData(i,this._dirtyMap),this._data=i,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(i&&i.tileDisplayData.displayObjects.length||a.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit(\"change\")}commit(t){t.time&&t.time===this._lastCommitTime||(this._lastCommitTime=t.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new e(t.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(t){this._invalidated=!0,this._patchData(t)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=s.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(t){let s=!0;const e=t.addOrUpdate&&t.addOrUpdate.tileDisplayData&&t.addOrUpdate.tileDisplayData.displayObjects||[],i=(t.remove||[]).slice();for(const a of e)null!=a.insertAfter&&i.push(a.id);for(const a of i){const t=this._data.tileDisplayData.displayObjectRegistry.get(a);if(t){this._data.tileDisplayData.displayList.removeFromList(t.displayRecords);for(const e of t.displayRecords)this._dispRecStore.delete(e);this._data.tileDisplayData.displayObjectRegistry.delete(a);const s=this._data.tileDisplayData.displayObjects.indexOf(t);this._data.tileDisplayData.displayObjects.splice(s,1)}}for(const a of e){let e,i=this._data.tileDisplayData.displayObjectRegistry.get(a.id);if(i){const t=i.displayRecords;i.set(a),i.displayRecords=t;const s=i.displayRecords.length;for(let e=0;e<s;++e){const t=i.displayRecords[e],s=a.displayRecords[e];(e>=a.displayRecords.length||t.geometryType!==s.geometryType||t.symbolLevel!==s.symbolLevel||t.zOrder!==s.zOrder||t.materialKey!==s.materialKey)&&(this._dispRecStore.delete(i.displayRecords[e]),e<a.displayRecords.length&&(i.displayRecords[e]=void 0))}i.displayRecords.length=a.displayRecords.length}else{let t;i=a.copy(),i.displayRecords=[],this._data.tileDisplayData.displayObjectRegistry.set(a.id,i);const s=this._data.tileDisplayData.displayObjects;if(null!=i.insertAfter)if(e={},i.insertAfter>=0){const e=this._data.tileDisplayData.displayObjectRegistry.get(i.insertAfter);e?(t=s.indexOf(e)+1,t<s.length?s.splice(t,0,i):(s.push(i),t=s.length)):(s.push(i),t=s.length)}else s.unshift(i),t=0;else s.push(i),t=s.length;if(e){const i=a.displayRecords.length>0?1:0;let l=0;for(let a=t-1;a>=0&&l<i;--a)for(let t=s[a].displayRecords.length-1;t>=0&&l<i;--t){const i=s[a].displayRecords[t],d=this._data.tileDisplayData.displayList.getDPInfoType();e[d]||(e[d]=i,++l)}}}const l=a.displayRecords.length;for(let d=0;d<l;++d){const l=a.displayRecords[d];let r=i.displayRecords[d];r?(r.meshData=l.meshData,r.materialKey=l.materialKey):(r=l.copy(),r.vertexFrom=void 0,r.indexFrom=void 0,i.displayRecords[d]=r);const p=l.geometryType,h=this._data.tileDisplayData.displayList.getDPInfoType(),o=t.addOrUpdate.tileBufferData.geometries[p],y=o.vertexBuffer,c=o.indexBuffer;let n;e&&(n=e[h]?this._data.tileDisplayData.displayList.splitAfter(e[h]):-1),s=this._dispRecStore.setMeshData(r,l,y,c,n)&&s,e&&null!=r.indexFrom&&null!=r.indexFrom&&(e[h]=r)}}return s}}export{a as GraphicTile};\n"]},"metadata":{},"sourceType":"module"}