[{"D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\index.tsx":"1","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\reportWebVitals.ts":"2","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\App.tsx":"3","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\elements\\WellsList.tsx":"4","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\services\\WellService.ts":"5","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\http-common.ts":"6","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\layout\\Layout.tsx":"7","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\useMap\\useMap.tsx":"8","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\layerControl\\LayerControl.tsx":"9","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\services\\MapService.tsx":"10","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\data\\SpatialData.tsx":"11","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\basemap\\Basemap.tsx":"12","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\elements\\elementControl.tsx":"13","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\elements\\addressSearch.tsx":"14","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\elements\\xySearch.tsx":"15","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\elements\\bufferS.tsx":"16","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\elements\\printPage.tsx":"17","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\elements\\layerControlWhole.tsx":"18"},{"size":20562,"mtime":1652390469482,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":1400,"mtime":1652390498933,"results":"22","hashOfConfig":"20"},{"size":4578,"mtime":1651091770079,"results":"23","hashOfConfig":"20"},{"size":468,"mtime":1651011422384,"results":"24","hashOfConfig":"20"},{"size":252,"mtime":1651085678998,"results":"25","hashOfConfig":"20"},{"size":764,"mtime":1651178857995,"results":"26","hashOfConfig":"20"},{"size":5722,"mtime":1652385221163,"results":"27","hashOfConfig":"20"},{"size":1052,"mtime":1652297532022,"results":"28","hashOfConfig":"20"},{"size":410,"mtime":1651169473070,"results":"29","hashOfConfig":"20"},{"size":943,"mtime":1651252981681,"results":"30","hashOfConfig":"20"},{"size":2745,"mtime":1652384826066,"results":"31","hashOfConfig":"20"},{"size":522,"mtime":1652211842262,"results":"32","hashOfConfig":"20"},{"size":4592,"mtime":1652216028485,"results":"33","hashOfConfig":"20"},{"size":4815,"mtime":1652216365706,"results":"34","hashOfConfig":"20"},{"size":5055,"mtime":1652216814344,"results":"35","hashOfConfig":"20"},{"size":12295,"mtime":1652219358825,"results":"36","hashOfConfig":"20"},{"size":6096,"mtime":1652220085150,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},"124w3hs",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"44"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\index.tsx",["99","100","101","102","103","104","105","106","107","108"],[],"D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\reportWebVitals.ts",[],[],[],"D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\App.tsx",["109","110","111","112"],[],"D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\elements\\WellsList.tsx",[],[],"D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\services\\WellService.ts",[],[],"D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\http-common.ts",[],[],"D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\layout\\Layout.tsx",[],[],"D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\useMap\\useMap.tsx",["113","114"],[],"import {useCallback, useEffect, useState, useRef} from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport MapService from \"../services/MapService\";\r\nimport {Sources, Layers} from \"../data/SpatialData\";\r\nimport ReactDOM from \"react-dom\";\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nconst Popup = ({ featureName, featureNumber}: { featureName: any, featureNumber: any }) => (\r\n  <div className=\"popup\">\r\n    <p className=\"popField\">WellName: {featureName}</p>\r\n    <p className=\"popField\">API: {featureNumber}</p>\r\n  </div>\r\n);\r\n\r\nexport const useMap = (ref: any, mapConfig: any) => {\r\n    const [map, setMap] = useState<typeof ref.current | null>(null);\r\n    const [mapStatus, setMapStatus] = useState({\r\n      map: {\r\n        created: false,\r\n        loaded: false,\r\n      },\r\n      sources: {\r\n        loaded: false,\r\n        added: false,\r\n      },\r\n      layers: {\r\n        loaded: false,\r\n        added: false,\r\n      },\r\n    });\r\n    const [sources, setSources] = useState([]);\r\n    const [layers, setLayers] = useState<typeof Layers[]>([]);\r\n    const popUpRef = useRef(new mapboxgl.Popup({ offset: 15 }));\r\n  \r\n    useEffect(() => {\r\n      if (ref?.current && !mapStatus.map.created) {\r\n        const newMap = new mapboxgl.Map({\r\n          container: ref.current?? '',\r\n          ...mapConfig,\r\n        });\r\n        setMap(newMap);\r\n        setMapStatus((s) => ({\r\n          ...s,\r\n          map: {\r\n            ...s.map,\r\n            created: true,\r\n          },\r\n        }));\r\n        newMap.on(\"load\", () => {\r\n          setMapStatus((s) => ({\r\n            ...s,\r\n            map: {\r\n              ...s.map,\r\n              loaded: true,\r\n            },\r\n          }));\r\n        });\r\n      }\r\n    }, [ref, mapConfig, mapStatus.map.created]);\r\n  \r\n    const loadMapData = useCallback(() => {\r\n      const shouldLoadData =\r\n        !!map && mapStatus.map.loaded && !mapStatus.sources.loaded;\r\n      async function loadData() {\r\n        const fetchedSources: any = await MapService.getSources();\r\n        const fetchedLayers: any = await MapService.getLayers();\r\n        setSources(fetchedSources);\r\n        setLayers(fetchedLayers);\r\n        if (!mapStatus.sources.added) {\r\n          fetchedSources.forEach((source: { id: any; }) => {\r\n            const cleanedSource = { ...source };\r\n            delete cleanedSource.id;\r\n            map.addSource(source.id, cleanedSource);\r\n          });\r\n  \r\n          if (!mapStatus.layers.added) {\r\n            fetchedLayers.forEach((layer: any) => {\r\n              map.addLayer(layer);\r\n            });\r\n          }\r\n        }\r\n        setMapStatus((s) => ({\r\n          ...s,\r\n          sources: {\r\n            loaded: true,\r\n            added: true,\r\n          },\r\n          layers: {\r\n            loaded: true,\r\n            added: true,\r\n          },\r\n        }));\r\n\r\n        //albers, equirectangular, mercator, equalEarth, lambertConformalConic, naturalEarth, winkelTripel\r\n        map.setProjection(\"mercator\");\r\n\r\n        /**\r\n           * Event handler for defining what happens when a user clicks on the map\r\n           * In this example, we are checking if the user has clicked on one or more feature layers\r\n           * If they have, we want to render a popup with the data for the selected\r\n           * bus feature\r\n           * Else, do nothing\r\n           */\r\n          //build  a Popup component used to render a map popup with information for chosen feature\r\n                    \r\n        map.on(\"click\", (e: { point: any; lngLat: any; }) => {\r\n          const bbox = [\r\n            [e.point.x - 3, e.point.y - 3],\r\n            [e.point.x + 3, e.point.y + 3]\r\n            ];\r\n          const features = map.queryRenderedFeatures(e.lngLat, {\r\n            layers: [\"wellsInUTLayer\"],\r\n          });\r\n          if (features.length > 0) {\r\n            const feature = features[0];\r\n            {\r\n              // create popup node\r\n              const popupNode = document.createElement(\"div\");\r\n              ReactDOM.render(\r\n                <Popup\r\n                  featureName={feature?.properties?.wellname}\r\n                  featureNumber={feature?.properties?.api}\r\n                />,\r\n                popupNode\r\n              );\r\n              popUpRef.current\r\n                .setLngLat(e.lngLat)\r\n                .setDOMContent(popupNode)\r\n                .addTo(map);\r\n            }\r\n          }\r\n        });\r\n        // Change the cursor to a pointer when the mouse is over the places layer.\r\n        map.on('mouseenter', \"wellsInUTLayer\", () => {\r\n          map.getCanvas().style.cursor = 'pointer';\r\n        });\r\n\r\n        // Change it back to a pointer when it leaves.\r\n        map.on('mouseleave', \"wellsInUTLayer\", () => {\r\n          map.getCanvas().style.cursor = '';\r\n        });\r\n\r\n        \r\n      }\r\n      if (shouldLoadData) {\r\n        loadData();\r\n      }\r\n    }, [map, mapStatus.map.loaded, mapStatus.sources, mapStatus.layers]);\r\n  \r\n    const updateLayerVisibility = (id: any, visible: any) => {\r\n      if (!!map && !!map.getLayer(id)) {\r\n        const visibleValue = visible ? \"visible\" : \"none\";\r\n        map.setLayoutProperty(id, \"visibility\", visibleValue);\r\n        setLayers((s) => {\r\n          return s.map((layer: any) => {\r\n            if (layer.id === id) {\r\n              return {\r\n                ...layer,\r\n                layout: {\r\n                  ...layer.layout,\r\n                  visibility: visibleValue,\r\n                },\r\n              };\r\n            }\r\n            return layer;\r\n          });\r\n        });\r\n      }\r\n    };\r\n  \r\n    useEffect(() => {\r\n      loadMapData();\r\n    }, [loadMapData]);\r\n  \r\n    return {\r\n      layers,\r\n      map,\r\n      sources,\r\n      updateLayerVisibility,\r\n    };\r\n  };","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\layerControl\\LayerControl.tsx",[],[],"D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\services\\MapService.tsx",[],[],"D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\data\\SpatialData.tsx",[],[],"D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\basemap\\Basemap.tsx",["115","116","117","118","119","120","121","122"],[],"import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport {useMap} from '../useMap/useMap';\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport s from \"./Map.module.css\";\nimport {LayerControl} from \"../layerControl/LayerControl\";\nimport ReactDOM from \"react-dom\";\n//import {Source} from \"react-map-gl\";\n//import Layer from \"react-mapbox-gl/lib-esm/layer\"; // eslint-disable-line import/no-webpack-loader-syntax\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2xjbGVpIiwiYSI6ImNsMXV6czRnYjJkbnQzZG1qMHRxeGd0YmoifQ.mvtESpI1GCIdTrWSupNEIw';\n\nconst Popup = ({ featureName, featureNumber, field, type }: { featureName: any, featureNumber: any, field: any, type: any }) => (\n  <div className=\"popup\">\n    <p className=\"popField\">WellName: {featureName}</p>\n    <p className=\"popField\">API: {featureNumber}</p>\n    <p className=\"popField\">WellType: {type}</p>\n    <p className=\"popField\">FieldName: {field}</p>\n  </div>\n);\n\nexport function Wellmap(): any {\n  const mapContainer = useRef(null);\n  const [lng, setLong] = useState(-111.6);\n  const [lat, setLat] = useState(39.2);\n  const [zoom, setZoom] = useState(6);\n  const [height,setHight]=useState(1500);\n  //const popUpRef = useRef(new mapboxgl.Popup({ offset: 15 }));\n\n  const { layers, map, updateLayerVisibility } = useMap(mapContainer, {\n    style: \"mapbox://styles/mapbox/outdoors-v11\",\n    center: [lng,lat],\n    zoom: zoom,\n  });\n\n  class LayerControlWhole extends React.Component {\n    state = { showing: false };\n\n    render() {\n        const { showing } = this.state;\n        \n        return (\n            <div className=\"LayerC\">\n                <i\n                    style={{ cursor: \"pointer\"}}\n                    className=\"material-icons md-50\"\n                    id=\"layersIcon\"\n                    uib-tooltip=\"Layers\"\n                    onClick={() => this.setState({ showing: !showing })}>\n                          layers\n                </i>\n                <div className='popover-message'>Layer Control</div>\n                { showing \n                    ? <LayerControl id=\"inMapLegend2\" layers={layers} onToggle={updateLayerVisibility} />\n                    : null\n                }\n            </div>  \n        )\n    }\n}\n\nmap?.on('mousemove', (e:  { point: any; lngLat: any; }) => {\n  document.getElementById('show-location')!.innerHTML =\n  // `e.point` is the x, y coordinates of the `mousemove` event\n  // relative to the top-left corner of the map.\n  JSON.stringify(e.point) +\n  '<br />' +\n  // `e.lngLat` is the longitude, latitude geographical position of the event.\n  JSON.stringify(e.lngLat.wrap());\n  });\n\n  return (\n    <div id=\"map\" className={s.map} ref={mapContainer}>  \n      \n      <LayerControlWhole />  \n    </div>  \n  );\n}\n","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\elements\\elementControl.tsx",["123"],[],"D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\elements\\addressSearch.tsx",["124"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nclass AddressSearch extends React.Component {\r\n\r\n    state = { showing: false };\r\n\r\n    render() {\r\n        const { showing } = this.state;\r\n        return (\r\n            <div style={{position: 'relative'}} className=\"popover-icons\">\r\n                <i\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className=\"material-icons\"\r\n                    id=\"addressIcon\"\r\n                    uib-tooltip=\"Search by Address\"\r\n                    onClick={() => this.setState({ showing: !showing })}>\r\n                          place\r\n                </i>\r\n                <div className='popover-message'>Search by Address</div>\r\n                { showing \r\n                    ? <div\r\n                    id=\"addressPopoverTemplate\"\r\n                    style={{\r\n                      position: 'absolute',\r\n                      top: '30px',\r\n                      left: -300,\r\n                      width: 500,\r\n                      display: 'block',\r\n                      overflow:'hidden'\r\n                    }}\r\n                    className=\"popover bottom\"\r\n                  >\r\n                    <div\r\n                      className=\"arrow\"\r\n                      style={{ top: \"-11px\", right: 0, left: 226 }}\r\n                    />\r\n                    <div style={{ width: '100%', padding: \"10px 10px\" }}>\r\n                      <table\r\n                        className=\"header1Text\"\r\n                        style={{ fontWeight: \"bold\" }}\r\n                      >\r\n                        <tbody>\r\n                          <tr style={{ boxSizing: \"border-box\" }}>\r\n                            <td style={{ padding: \"0px 10px 3px 0px\" }}>\r\n                              <i className=\"material-icons\">place</i>\r\n                            </td>\r\n                            <td className=\"header1Text\">Search by Address</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                      <div className=\"popoverLine\" style={{ width: '100%' }} />\r\n                      <div id=\"addressContent\" style={{ left: \"-10px\" }}>\r\n                        <p\r\n                          className=\"popoverText\"\r\n                          style={{ textAlign: \"center\" }}\r\n                        >\r\n                          Select the features from the <strong>selected</strong>{\" \"}\r\n                          layers at the address\r\n                        </p>\r\n                        <input\r\n                          className=\"textfieldInputText\"\r\n                          type=\"text\"\r\n                          defaultValue=\"\"\r\n                          id=\"txtAddress\"\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                        <p\r\n                          className=\"popoverText\"\r\n                          style={{ textAlign: \"center\" }}\r\n                        >\r\n                          within the distance of\r\n                          <input\r\n                            className=\"textfieldInputText\"\r\n                            type=\"text\"\r\n                            defaultValue={5280}\r\n                            id=\"txtDistanceAddr\"\r\n                            style={{ width: 50 }}\r\n                          />\r\n                          <select id=\"cboUnitsAddr\" className=\"dropdownText\">\r\n                            <option defaultValue=\"ft\">\r\n                              ft\r\n                            </option>\r\n                            <option value=\"mi\">mile</option>\r\n                            <option value=\"m\">m</option>\r\n                            <option value=\"km\">km</option>\r\n                          </select>\r\n                        </p>\r\n                        <div style={{ textAlign: \"center\" }}>\r\n                          <i\r\n                            style={{ cursor: \"pointer\", width: 100 }}\r\n                            className=\"material-icons\"\r\n                            id=\"doSearchByAddress\"\r\n                            >done</i>\r\n                          <i\r\n                            className=\"material-icons\"\r\n                            id=\"undoSearchByAddress\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            >close</i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                    : null\r\n                }\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default AddressSearch;","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\elements\\xySearch.tsx",["125"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nclass XySearch extends React.Component {\r\n\r\n    state = { showing: false };\r\n\r\n    render() {\r\n        const { showing } = this.state;\r\n        return (\r\n            <div style={{position: 'relative'}} className=\"popover-icons\">\r\n                <i\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className=\"material-icons\"\r\n                    id=\"xyIcon\"\r\n                    uib-tooltip=\"Center by X, Y or Latitude, Longitude\"\r\n                    onClick={() => this.setState({ showing: !showing })}>\r\n                          my_location\r\n                </i>\r\n                <div className='popover-message'>Center by X, Y or Latitude, Longitude</div>\r\n                { showing \r\n                    ? <div\r\n                    id=\"xyPopoverTemplate\"\r\n                    className=\"popover bottom\"\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      right: 10,\r\n                      zIndex: 1050,\r\n                      width: 257,\r\n                      display: \"none !important\",\r\n                      left: -280,\r\n                      top: '30px',\r\n                    }}\r\n                  >\r\n                    <div className=\"arrow\" style={{ top: \"-11px\", left: 230 }} />\r\n                    <div style={{ width: 254, padding: \"10px 10px\" }}>\r\n                      <table\r\n                        className=\"header1Text\"\r\n                        style={{ fontWeight: \"bold\" }}\r\n                      >\r\n                        <tbody>\r\n                          <tr style={{ boxSizing: \"border-box\" }}>\r\n                            <td className=\"header1Text\">\r\n                              <strong>Center X, Y, Lat, Long</strong>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                      <div className=\"popoverLine\" style={{ width: 234 }} />\r\n                      <div id=\"centerContent\">\r\n                        <table\r\n                          style={{\r\n                            padding: \"0px 20px 10px 35px\",\r\n                            display: \"block\"\r\n                          }}\r\n                          id=\"DD\"\r\n                          className=\"locType\"\r\n                        >\r\n                          <tbody>\r\n                            <tr>\r\n                              <td\r\n                                className=\"header3Text\"\r\n                                style={{ fontWeight: \"bold\", paddingRight: 5 }}\r\n                              >\r\n                                Latitude:\r\n                              </td>\r\n                              <td>\r\n                                <input\r\n                                  className=\"textfieldInputText\"\r\n                                  style={{ width: 120, height: 20 }}\r\n                                  placeholder=\"Latitude...\"\r\n                                  id=\"ddY\"\r\n                                />\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td\r\n                                className=\"header3Text\"\r\n                                style={{\r\n                                  fontWeight: \"bold\",\r\n                                  paddingRight: 5,\r\n                                  paddingTop: 10\r\n                                }}\r\n                              >\r\n                                Longitude:\r\n                              </td>\r\n                              <td style={{ paddingTop: 10 }}>\r\n                                <input\r\n                                  className=\"textfieldInputText\"\r\n                                  style={{ height: 20, width: 120 }}\r\n                                  placeholder=\"Longitude...\"\r\n                                  id=\"ddX\"\r\n                                />\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                        \r\n                        <i className=\"material-icons\"\r\n                          style={{ paddingLeft: 47, cursor: \"pointer\", width: 100 }}\r\n                          id=\"centerXY\"\r\n                        >check</i>\r\n                        <i\r\n                          className=\"material-icons\"\r\n                          id=\"cancelCenterXY\"\r\n                          style={{ cursor: \"pointer\" }}\r\n                        >close</i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                    : null\r\n                }\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default XySearch;","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\elements\\bufferS.tsx",["126"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nclass BufferSearch extends React.Component {\r\n\r\n    state = { showing: false };\r\n\r\n    render() {\r\n        const { showing } = this.state;\r\n        return (\r\n            <div style={{position: 'relative'}} className=\"popover-icons\">\r\n                <i\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className=\"material-icons\"\r\n                    id=\"bufferIcon\"\r\n                    uib-tooltip=\"Buffer Selection\"\r\n                    onClick={() => this.setState({ showing: !showing })}>\r\n                          radio_button_checked\r\n                </i>\r\n                <div className='popover-message'>Buffer Selection</div>\r\n                { showing \r\n                    ? <div\r\n                    id=\"bufferPopoverTemplate\"\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: '30px',\r\n                      left: -300,\r\n                      width: 500,\r\n                      display: 'block',\r\n                      overflow:'hidden'\r\n                    }}\r\n                    className=\"popover bottom\"\r\n                  >\r\n                    <div\r\n                      className=\"arrow\"\r\n                      style={{ top: \"-11px\", right: 0, left: 226 }}\r\n                    />\r\n                    <div style={{ width: 254, padding: \"10px 10px\" }}>\r\n                      <table\r\n                        className=\"header1Text\"\r\n                        style={{ fontWeight: \"bold\" }}\r\n                      >\r\n                        <tbody>\r\n                          <tr style={{ boxSizing: \"border-box\" }}>\r\n                            <td style={{ padding: \"0px 10px 3px 0px\" }}>\r\n                              <i className='material-icons'>radio_button_checked</i>\r\n                            </td>\r\n                            <td className=\"header1Text\">Buffer</td>\r\n                            <td style={{ width: \"100%\" }} />\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                      <div className=\"popoverLine\" style={{ width: 234 }} />\r\n                      <div id=\"bufferContent\" style={{ left: \"-10px\" }}>\r\n                        <p\r\n                          className=\"popoverText\"\r\n                          style={{ textAlign: \"center\" }}\r\n                        >\r\n                          Select the features from the <strong>selected</strong>{\" \"}\r\n                          layers\r\n                        </p>\r\n                        <p\r\n                          className=\"popoverText\"\r\n                          style={{ textAlign: \"center\" }}\r\n                        >\r\n                          that are within\r\n                        </p>\r\n                        <table style={{ width: 200 }}>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td style={{ paddingLeft: 40, paddingRight: 10 }}>\r\n                                <input\r\n                                  className=\"textfieldInputText\"\r\n                                  type=\"text\"\r\n                                  defaultValue={5280}\r\n                                  id=\"txtDistance\"\r\n                                  style={{ width: 100 }}\r\n                                />\r\n                              </td>\r\n                              <td>\r\n                                <select id=\"cboUnits\" className=\"dropdownText\">\r\n                                  <option defaultValue=\"ft\">\r\n                                    ft\r\n                                  </option>\r\n                                  <option value=\"mi\">mile</option>\r\n                                  <option value=\"m\">m</option>\r\n                                  <option value=\"km\">km</option>\r\n                                </select>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                        <p\r\n                          className=\"popoverText\"\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            padding: \"10px 0px 0px 0px\"\r\n                          }}\r\n                        >\r\n                          of the currently selected features.\r\n                        </p>\r\n                        <i\r\n                          className='material-icons'\r\n                          style={{ width: 100,  cursor: \"pointer\" }}\r\n                          id=\"doBuffer\"\r\n                        >done</i>\r\n                        <i\r\n                        className='material-icons'\r\n                          style={{ cursor: \"pointer\" }}\r\n                          id=\"undoBuffer\">close</i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                    : null\r\n                }\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default BufferSearch;","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\elements\\printPage.tsx",["127"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nclass PrintPage extends React.Component {\r\n\r\n    state = { showing: false };\r\n\r\n    render() {\r\n        const { showing } = this.state;\r\n        return (\r\n            <div style={{position: 'relative'}} className=\"popover-icons\">\r\n                <i\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className=\"material-icons\"\r\n                    id=\"printIcon\"\r\n                    uib-tooltip=\"Print page\"\r\n                    onClick={() => this.setState({ showing: !showing })}>\r\n                          print\r\n                </i>\r\n                <div className='popover-message'>Print page</div>\r\n                { showing \r\n                    ? <div\r\n                    id=\"printPopoverTemplate\"\r\n                    className=\"popover bottom\"\r\n                    style={{\r\n                      position: 'absolute',\r\n                      top: '30px',\r\n                      left: -300,\r\n                      width: 500,\r\n                      display: 'block',\r\n                      overflow:'hidden'\r\n                    }}\r\n                  >\r\n                    <div className=\"arrow\" style={{ top: \"-11px\", left: 230 }} />\r\n                    <div style={{ width: 254, padding: \"10px 10px\" }}>\r\n                      <table style={{}}>\r\n                        <tbody>\r\n                          <tr>\r\n                            <td style={{ padding: \"0px 10px 3px 0px\" }}>\r\n                            <i className='material-icons'>print</i>\r\n                            </td>\r\n                            <td\r\n                              className=\"header1Text\"\r\n                              style={{ fontWeight: \"bold\" }}\r\n                            >\r\n                              Print\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                      <div className=\"popoverLine\" style={{ width: 234 }} />\r\n                      <div id=\"printContent\">\r\n                        <table style={{ margin: \"auto\", paddingBottom: 4 }}>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td\r\n                                className=\"header3Text\"\r\n                                style={{ fontWeight: \"bold\", paddingRight: 8 }}\r\n                              >\r\n                                Title:\r\n                              </td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  id=\"txtTitle\"\r\n                                  style={{ width: 188 }}\r\n                                  defaultValue=\"DataMining print\"\r\n                                />\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                        <table style={{ paddingBottom: 10 }}>\r\n                          <tbody>\r\n                            <tr style={{ paddingLeft: 10 }}>\r\n                              <td\r\n                                className=\"header3Text\"\r\n                                style={{\r\n                                  fontWeight: \"bold\",\r\n                                  width: 10,\r\n                                  textAlign: \"center\"\r\n                                }}\r\n                              >\r\n                                <div style={{ width: 25 }}>1</div>\r\n                              </td>\r\n                              <td style={{ width: 20 }}>\r\n                                <select id=\"cboSrcUnit\" className=\"dropdownText\">\r\n                                  <option defaultValue=\"in\">\r\n                                    in\r\n                                  </option>\r\n                                  <option value=\"cm\">cm</option>\r\n                                </select>\r\n                              </td>\r\n                              <td\r\n                                className=\"header3Text\"\r\n                                style={{\r\n                                  padding: \"0px 8px\",\r\n                                  textAlign: \"center\"\r\n                                }}\r\n                              >\r\n                                =\r\n                              </td>\r\n                              <td style={{ width: 20 }}>\r\n                                <input\r\n                                  className=\"textfieldInputText\"\r\n                                  type=\"text\"\r\n                                  id=\"txtScale\"\r\n                                  style={{ width: 90 }}\r\n                                />\r\n                              </td>\r\n                              <td style={{ padding: \"0px 5px\" }}>\r\n                                <select id=\"cboTrgUnit\" className=\"dropdownText\">\r\n                                  <option defaultValue=\"mi\">\r\n                                    mile\r\n                                  </option>\r\n                                  <option value=\"km\">km</option>\r\n                                </select>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                        <table style={{ margin: \"auto\", paddingBottom: 4 }}>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td\r\n                                className=\"header3Text\"\r\n                                style={{ fontWeight: \"bold\", paddingRight: 8 }}\r\n                              >\r\n                                Paper Size:\r\n                              </td>\r\n                              <td>\r\n                                <select id=\"cboTemplate\" className=\"dropdownText\">\r\n                                  <option value={0}>8.5 X 11 Portrait</option>\r\n                                  <option value={1}>8.5 X 11 Landscape</option>\r\n                                </select>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                        <table style={{ margin: \"auto\", paddingBottom: 4 }}>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td\r\n                                className=\"header3Text\"\r\n                                style={{ fontWeight: \"bold\", paddingRight: 8 }}\r\n                              >\r\n                                Notes:\r\n                              </td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  id=\"txtNotes\"\r\n                                  style={{ width: 182 }}\r\n                                />\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                        <table\r\n                          style={{\r\n                            margin: \"auto\",\r\n                            paddingRight: 8,\r\n                            paddingBottom: 4\r\n                          }}\r\n                        >\r\n                          <tbody>\r\n                            <tr>\r\n                              <td style={{ paddingRight: 8 }}>\r\n                                <i\r\n                                  style={{ display: \"none\", paddingBottom: 1 }}\r\n                                  className=\"material-icons\"\r\n                                  id=\"printLegend\"\r\n                                  >disabled_by_default</i>\r\n                                <i\r\n                                  style={{ paddingBottom: 1 }}\r\n                                  className=\"material-icons\"\r\n                                  id=\"unPrintLegend\"\r\n                                  >check_box</i>\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  name=\"chkLegend\"\r\n                                  id=\"chkLegend\"\r\n                                  defaultChecked={true}\r\n                                  style={{ display: \"none\" }}\r\n                                />\r\n                              </td>\r\n                              <td\r\n                                className=\"header3Text\"\r\n                                style={{ fontWeight: \"bold\" }}\r\n                              >\r\n                                Show Legend\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td style={{ paddingRight: 8 }}>\r\n                                <i\r\n                                  style={{ display: \"none\", paddingBottom: 1 }}\r\n                                  className=\"material-icons\"\r\n                                  id=\"printLayer\"\r\n                                  >disabled_by_default</i>\r\n                                <i\r\n                                  style={{ paddingBottom: 1 }}\r\n                                  className=\"material-icons\"\r\n                                  id=\"unPrintLayer\"\r\n                                  >check_box</i>\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  name=\"chkSelection\"\r\n                                  id=\"chkLayer\"\r\n                                  defaultChecked={true}\r\n                                  style={{ display: \"none\" }}\r\n                                />\r\n                              </td>\r\n                              <td\r\n                                className=\"header3Text\"\r\n                                style={{ fontWeight: \"bold\" }}\r\n                              >\r\n                                Show Selection Layer\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td style={{ paddingRight: 8 }}>\r\n                                <i\r\n                                  style={{ display: \"none\", paddingBottom: 1 }}\r\n                                  className=\"material-icons\"\r\n                                  id=\"printLabel\"\r\n                                  >disabled_by_default</i>\r\n                                <i\r\n                                  style={{ paddingBottom: 1 }}\r\n                                  className=\"material-icons\"\r\n                                  id=\"unPrintLabel\"\r\n                                  >check_box</i>\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  name=\"chkLabel\"\r\n                                  id=\"chkLabel\"\r\n                                  defaultChecked={true}\r\n                                  style={{ display: \"none\" }}\r\n                                />\r\n                              </td>\r\n                              <td\r\n                                className=\"header3Text\"\r\n                                style={{ fontWeight: \"bold\" }}\r\n                              >\r\n                                Show Selection Labels\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                        <div style={{ paddingLeft: 43 }}>\r\n                          <i\r\n                            style={{ paddingRight: 5, cursor: \"pointer\" }}\r\n                            className=\"material-icons\"\r\n                            id=\"printDone\"\r\n                            >done</i>\r\n                          <i\r\n                            className=\"material-icons\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            id=\"unPrintDone\"\r\n                            >close</i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                    : null\r\n                }\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default PrintPage;","D:\\Github\\UTDB\\UtDataBase\\UtahWellsDB\\utah_wells_db\\src\\elements\\layerControlWhole.tsx",["128","129","130","131"],[],{"ruleId":"132","severity":1,"message":"133","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":11},{"ruleId":"136","severity":1,"message":"137","line":52,"column":13,"nodeType":"138","messageId":"139","endLine":57,"endColumn":14,"fix":"140"},{"ruleId":"141","severity":1,"message":"142","line":62,"column":13,"nodeType":"138","endLine":66,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":63,"column":20,"nodeType":"145","messageId":"146","endLine":63,"endColumn":44},{"ruleId":"141","severity":1,"message":"142","line":84,"column":13,"nodeType":"138","endLine":88,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":85,"column":20,"nodeType":"145","messageId":"146","endLine":85,"endColumn":41},{"ruleId":"141","severity":1,"message":"147","line":93,"column":13,"nodeType":"138","endLine":101,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":516,"column":11,"nodeType":"138","messageId":"139","endLine":516,"endColumn":63,"fix":"148"},{"ruleId":"136","severity":1,"message":"137","line":520,"column":11,"nodeType":"138","messageId":"139","endLine":520,"endColumn":59,"fix":"149"},{"ruleId":"132","severity":1,"message":"150","line":570,"column":10,"nodeType":"134","messageId":"135","endLine":570,"endColumn":21},{"ruleId":"132","severity":1,"message":"151","line":3,"column":9,"nodeType":"134","messageId":"135","endLine":3,"endColumn":15},{"ruleId":"132","severity":1,"message":"152","line":3,"column":17,"nodeType":"134","messageId":"135","endLine":3,"endColumn":22},{"ruleId":"132","severity":1,"message":"153","line":3,"column":24,"nodeType":"134","messageId":"135","endLine":3,"endColumn":28},{"ruleId":"132","severity":1,"message":"154","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":17},{"ruleId":"132","severity":1,"message":"155","line":4,"column":9,"nodeType":"134","messageId":"135","endLine":4,"endColumn":16},{"ruleId":"132","severity":1,"message":"156","line":107,"column":17,"nodeType":"134","messageId":"135","endLine":107,"endColumn":21},{"ruleId":"132","severity":1,"message":"157","line":1,"column":25,"nodeType":"134","messageId":"135","endLine":1,"endColumn":34},{"ruleId":"132","severity":1,"message":"158","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":16},{"ruleId":"132","severity":1,"message":"159","line":13,"column":7,"nodeType":"134","messageId":"135","endLine":13,"endColumn":12},{"ruleId":"132","severity":1,"message":"160","line":24,"column":15,"nodeType":"134","messageId":"135","endLine":24,"endColumn":22},{"ruleId":"132","severity":1,"message":"161","line":25,"column":15,"nodeType":"134","messageId":"135","endLine":25,"endColumn":21},{"ruleId":"132","severity":1,"message":"162","line":26,"column":16,"nodeType":"134","messageId":"135","endLine":26,"endColumn":23},{"ruleId":"132","severity":1,"message":"163","line":27,"column":10,"nodeType":"134","messageId":"135","endLine":27,"endColumn":16},{"ruleId":"132","severity":1,"message":"164","line":27,"column":17,"nodeType":"134","messageId":"135","endLine":27,"endColumn":25},{"ruleId":"132","severity":1,"message":"158","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"158","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"158","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"158","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"158","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"158","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"165","line":3,"column":9,"nodeType":"134","messageId":"135","endLine":3,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":81,"column":29,"nodeType":"138","endLine":86,"endColumn":30},{"ruleId":"141","severity":1,"message":"142","line":94,"column":29,"nodeType":"138","endLine":99,"endColumn":30},"@typescript-eslint/no-unused-vars","'Foo' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"166","text":"167"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"range":"168","text":"167"},{"range":"169","text":"167"},"'exportToCsv' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Boreholes' is defined but never used.","'Sources' is defined but never used.","'bbox' is assigned a value but never used.","'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","'Popup' is assigned a value but never used.","'setLong' is assigned a value but never used.","'setLat' is assigned a value but never used.","'setZoom' is assigned a value but never used.","'height' is assigned a value but never used.","'setHight' is assigned a value but never used.","'LayerControl' is defined but never used.",[1596,1596]," rel=\"noreferrer\"",[19092,19092],[19235,19235]]