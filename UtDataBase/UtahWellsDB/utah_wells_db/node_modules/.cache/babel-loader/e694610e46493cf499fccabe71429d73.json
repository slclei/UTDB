{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\UTDB\\\\UtDataBase\\\\UtahWellsDB\\\\utah_wells_db\\\\src\\\\elements\\\\feedback.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"./form\";\nimport * as fs from 'fs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeedBack() {\n  _s();\n\n  // defining the initial state for the form\n  const initialState = {\n    email: \"\",\n    name: \"\",\n    note: \"\"\n  }; // getting the event handlers from our custom hook\n\n  const {\n    onChange,\n    onSubmit,\n    values\n  } = useForm(FeedBackUserCallback, initialState); // a submit function that will execute upon form submission\n\n  async function FeedBackUserCallback() {\n    const email = document.getElementById(\"email\").value;\n    const name = document.getElementById(\"name\").value;\n    const note = document.getElementById(\"note\").value;\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n    var yyyy = today.getFullYear();\n    const fileName = 'feedback' + mm + '-' + dd + '-' + yyyy;\n    fs.writeFile(fileName, 'Email: ' + email + ',  ' + 'Name: ' + name + ',   ' + 'Note: ' + note + '.', function (err) {\n      if (err) {\n        return console.error(err);\n      }\n\n      console.log(\"File created!\");\n    });\n  }\n\n  return (\n    /*#__PURE__*/\n    // don't mind this ugly form :P\n    _jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          id: \"email\",\n          type: \"email\",\n          placeholder: \"Email\",\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          id: \"name\",\n          type: \"name\",\n          placeholder: \"name\",\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"note\",\n          id: \"note\",\n          type: \"note\",\n          placeholder: \"note\",\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"FeedBack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(FeedBack, \"DA4m1tivC/PxEpxpa7RgS08g6r8=\", false, function () {\n  return [useForm];\n});\n\n_c = FeedBack;\nexport default FeedBack;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedBack\");","map":{"version":3,"sources":["D:/Github/UTDB/UtDataBase/UtahWellsDB/utah_wells_db/src/elements/feedback.tsx"],"names":["React","useForm","fs","FeedBack","initialState","email","name","note","onChange","onSubmit","values","FeedBackUserCallback","document","getElementById","value","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","fileName","writeFile","err","console","error","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AAEA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB;AACA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,EADU;AAEjBC,IAAAA,IAAI,EAAE,EAFW;AAGjBC,IAAAA,IAAI,EAAE;AAHW,GAArB,CAFgB,CAQhB;;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAAiCT,OAAO,CAC1CU,oBAD0C,EAE1CP,YAF0C,CAA9C,CATgB,CAchB;;AACA,iBAAeO,oBAAf,GAAsC;AAClC,UAAMN,KAAK,GAAGO,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAkCC,KAAhD;AACA,UAAMR,IAAI,GAAGM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAiCC,KAA9C;AACA,UAAMP,IAAI,GAAGK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAiCC,KAA9C;AACA,QAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAIC,EAAE,GAAGC,MAAM,CAACH,KAAK,CAACI,OAAN,EAAD,CAAN,CAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAT;AACA,QAAIC,EAAE,GAAGH,MAAM,CAACH,KAAK,CAACO,QAAN,KAAmB,CAApB,CAAN,CAA6BF,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAT,CANkC,CAMsB;;AACxD,QAAIG,IAAI,GAAGR,KAAK,CAACS,WAAN,EAAX;AAEA,UAAMC,QAAQ,GAAE,aAAWJ,EAAX,GAAgB,GAAhB,GAAsBJ,EAAtB,GAA2B,GAA3B,GAAiCM,IAAjD;AACArB,IAAAA,EAAE,CAACwB,SAAH,CAAaD,QAAb,EAAuB,YAAUpB,KAAV,GAAgB,KAAhB,GAAsB,QAAtB,GAA+BC,IAA/B,GAAoC,MAApC,GAA2C,QAA3C,GAAoDC,IAApD,GAAyD,GAAhF,EAAsF,UAASoB,GAAT,EAAc;AAChG,UAAIA,GAAJ,EAAS;AACL,eAAOC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAP;AACH;;AACDC,MAAAA,OAAO,CAACE,GAAR,CAAY,eAAZ;AACH,KALD;AAMH;;AAED;AAAA;AACI;AACA;AAAM,MAAA,QAAQ,EAAErB,QAAhB;AAAA,6BACI;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,EAAE,EAAC,OAFP;AAGI,UAAA,IAAI,EAAC,OAHT;AAII,UAAA,WAAW,EAAC,OAJhB;AAKI,UAAA,QAAQ,EAAED,QALd;AAMI,UAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,EAAE,EAAC,MAFP;AAGI,UAAA,IAAI,EAAC,MAHT;AAII,UAAA,WAAW,EAAC,MAJhB;AAKI,UAAA,QAAQ,EAAEA,QALd;AAMI,UAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAkBI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,EAAE,EAAC,MAFP;AAGI,UAAA,IAAI,EAAC,MAHT;AAII,UAAA,WAAW,EAAC,MAJhB;AAKI,UAAA,QAAQ,EAAEA,QALd;AAMI,UAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,gBAlBJ,eA0BI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAiCH;;GAlEQL,Q;UASkCF,O;;;KATlCE,Q;AAoET,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { useForm } from \"./form\";\r\nimport * as fs from 'fs';\r\n\r\nfunction FeedBack() {\r\n    // defining the initial state for the form\r\n    const initialState = {\r\n        email: \"\",\r\n        name: \"\",\r\n        note: \"\",\r\n    };\r\n\r\n    // getting the event handlers from our custom hook\r\n    const { onChange, onSubmit, values } = useForm(\r\n        FeedBackUserCallback,\r\n        initialState\r\n    );\r\n\r\n    // a submit function that will execute upon form submission\r\n    async function FeedBackUserCallback() {\r\n        const email = document.getElementById(\"email\")!.value;\r\n        const name = document.getElementById(\"name\")!.value;\r\n        const note = document.getElementById(\"note\")!.value;\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = today.getFullYear();\r\n\r\n        const fileName ='feedback'+mm + '-' + dd + '-' + yyyy;\r\n        fs.writeFile(fileName, 'Email: '+email+',  '+'Name: '+name+',   '+'Note: '+note+'.',  function(err) {\r\n            if (err) {\r\n                return console.error(err);\r\n            }\r\n            console.log(\"File created!\");\r\n        });\r\n    }\r\n\r\n    return (\r\n        // don't mind this ugly form :P\r\n        <form onSubmit={onSubmit}>\r\n            <div>\r\n                <input\r\n                    name='email'\r\n                    id='email'\r\n                    type='email'\r\n                    placeholder='Email'\r\n                    onChange={onChange}\r\n                    required\r\n                />\r\n\r\n                <input\r\n                    name='name'\r\n                    id='name'\r\n                    type='name'\r\n                    placeholder='name'\r\n                    onChange={onChange}\r\n                    required\r\n                />\r\n                <input\r\n                    name='note'\r\n                    id='note'\r\n                    type='note'\r\n                    placeholder='note'\r\n                    onChange={onChange}\r\n                    required\r\n                />\r\n                <button type='submit'>FeedBack</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default FeedBack;"]},"metadata":{},"sourceType":"module"}