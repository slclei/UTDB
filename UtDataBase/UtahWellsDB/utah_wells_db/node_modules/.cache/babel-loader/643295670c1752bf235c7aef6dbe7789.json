{"ast":null,"code":"import http from\"../http-common\";var getAll=function getAll(){return http.get(\"/boreholes\");};var getAPI=function getAPI(api){return http.get(\"/api/\".concat(api));};var findByName=function findByName(name){return http.get(\"/boreholes?wellName=\".concat(name));};var findMultiQueries=function findMultiQueries(query){return http.get(\"/like?search=\".concat(query));};var WellService={getAll:getAll,getAPI:getAPI,findByName:findByName,findMultiQueries:findMultiQueries};export default WellService;","map":{"version":3,"sources":["D:/Github/UTDB/UtDataBase/UtahWellsDB/utah_wells_db/src/services/WellService.ts"],"names":["http","getAll","get","getAPI","api","findByName","name","findMultiQueries","query","WellService"],"mappings":"AAAA,MAAOA,CAAAA,IAAP,KAAiB,gBAAjB,CAGA,GAAMC,CAAAA,MAAM,CAAE,QAARA,CAAAA,MAAQ,EAAI,CACd,MAAOD,CAAAA,IAAI,CAACE,GAAL,CAA0B,YAA1B,CAAP,CACH,CAFD,CAIA,GAAMC,CAAAA,MAAM,CAAE,QAARA,CAAAA,MAAQ,CAACC,GAAD,CAAY,CACtB,MAAOJ,CAAAA,IAAI,CAACE,GAAL,gBAAkCE,GAAlC,EAAP,CACH,CAFD,CAIA,GAAMC,CAAAA,UAAU,CAAE,QAAZA,CAAAA,UAAY,CAACC,IAAD,CAAgB,CAC9B,MAAON,CAAAA,IAAI,CAACE,GAAL,+BAAiDI,IAAjD,EAAP,CACH,CAFD,CAIA,GAAMC,CAAAA,gBAAgB,CAAE,QAAlBA,CAAAA,gBAAkB,CAACC,KAAD,CAAiB,CACrC,MAAOR,CAAAA,IAAI,CAACE,GAAL,wBAA0CM,KAA1C,EAAP,CACH,CAFD,CAIA,GAAMC,CAAAA,WAAW,CAAG,CAChBR,MAAM,CAANA,MADgB,CAEhBE,MAAM,CAANA,MAFgB,CAGhBE,UAAU,CAAVA,UAHgB,CAIhBE,gBAAgB,CAAhBA,gBAJgB,CAApB,CAOA,cAAeE,CAAAA,WAAf","sourcesContent":["import http from \"../http-common\";\r\nimport WellData from \"../types/Wells\";\r\n\r\nconst getAll =()=>{\r\n    return http.get<Array<WellData>>(\"/boreholes\");\r\n};\r\n\r\nconst getAPI =(api: any)=>{\r\n    return http.get<Array<WellData>>(`/api/${api}`);\r\n};\r\n\r\nconst findByName =(name: String)=>{\r\n    return http.get<Array<WellData>>(`/boreholes?wellName=${name}`);\r\n};\r\n\r\nconst findMultiQueries =(query: String)=>{\r\n    return http.get<Array<WellData>>(`/like?search=${query}`);\r\n}\r\n\r\nconst WellService = {\r\n    getAll,\r\n    getAPI,\r\n    findByName,\r\n    findMultiQueries,\r\n};\r\n\r\nexport default WellService;"]},"metadata":{},"sourceType":"module"}