{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // useForm functional componen\n\nexport const useForm = function (callback) {\n  _s();\n\n  let initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const [values, setValues] = useState(initialState); // onChange\n\n  const onChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  }; // onSubmit\n\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    await callback(); // triggering the callback\n  }; // return values\n\n\n  return {\n    onChange,\n    onSubmit,\n    values\n  };\n};\n\n_s(useForm, \"tR5pueiAhaduWSnglIJ8EBw8xeE=\");","map":{"version":3,"sources":["D:/Github/UTDB/UtDataBase/UtahWellsDB/utah_wells_db/src/elements/form.tsx"],"names":["useState","useForm","callback","initialState","values","setValues","onChange","event","target","name","value","onSubmit","preventDefault"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,OAAO,MAAMC,OAAO,GAAG,UAACC,QAAD,EAAsC;AAAA;;AAAA,MAAtBC,YAAsB,uEAAP,EAAO;AACzD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAACG,YAAD,CAApC,CADyD,CAGzD;;AACA,QAAMG,QAAQ,GAAIC,KAAD,IAAgD;AAC7DF,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACG,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAA/C,KAAD,CAAT;AACH,GAFD,CAJyD,CAQzD;;;AACA,QAAMC,QAAQ,GAAG,MAAOJ,KAAP,IAAmD;AAChEA,IAAAA,KAAK,CAACK,cAAN;AACA,UAAMV,QAAQ,EAAd,CAFgE,CAE9C;AACrB,GAHD,CATyD,CAczD;;;AACA,SAAO;AACHI,IAAAA,QADG;AAEHK,IAAAA,QAFG;AAGHP,IAAAA;AAHG,GAAP;AAKH,CApBM;;GAAMH,O","sourcesContent":["import { useState } from \"react\";\r\n\r\n// useForm functional componen\r\nexport const useForm = (callback: any, initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    // onChange\r\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [event.target.name]: event.target.value });\r\n    };\r\n\r\n    // onSubmit\r\n    const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        await callback(); // triggering the callback\r\n    };\r\n\r\n    // return values\r\n    return {\r\n        onChange,\r\n        onSubmit,\r\n        values,\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}