{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\UTDB\\\\UtDataBase\\\\UtahWellsDB\\\\utah_wells_db\\\\src\\\\basemap\\\\Basemap.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport { useMap } from '../useMap/useMap';\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport s from \"./Map.module.css\";\nimport { LayerControl } from \"../layerControl/LayerControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//import {Source} from \"react-map-gl\";\n//import Layer from \"react-mapbox-gl/lib-esm/layer\"; // eslint-disable-line import/no-webpack-loader-syntax\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2xjbGVpIiwiYSI6ImNsMXV6czRnYjJkbnQzZG1qMHRxeGd0YmoifQ.mvtESpI1GCIdTrWSupNEIw';\n\nconst Popup = _ref => {\n  let {\n    featureName,\n    featureNumber,\n    field,\n    type\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"popField\",\n      children: [\"WellName: \", featureName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"popField\",\n      children: [\"API: \", featureNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"popField\",\n      children: [\"WellType: \", type]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"popField\",\n      children: [\"FieldName: \", field]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Popup;\nexport function Wellmap() {\n  _s();\n\n  const mapContainer = useRef(null);\n  const [lng, setLong] = useState(-111.6);\n  const [lat, setLat] = useState(39.2);\n  const [zoom, setZoom] = useState(6);\n  const [height, setHight] = useState(1500); //const popUpRef = useRef(new mapboxgl.Popup({ offset: 15 }));\n\n  const {\n    layers,\n    map,\n    updateLayerVisibility\n  } = useMap(mapContainer, {\n    style: \"mapbox://styles/mapbox/outdoors-v11\",\n    center: [lng, lat],\n    zoom: zoom\n  });\n\n  class LayerControlWhole extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        showing: false\n      };\n    }\n\n    render() {\n      const {\n        showing\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LayerC\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            cursor: \"pointer\"\n          },\n          className: \"material-icons md-50\",\n          id: \"layersIcon\",\n          \"uib-tooltip\": \"Layers\",\n          onClick: () => this.setState({\n            showing: !showing\n          }),\n          children: \"layers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popover-message\",\n          children: \"Layer Control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), showing ? /*#__PURE__*/_jsxDEV(LayerControl, {\n          id: \"inMapLegend2\",\n          layers: layers,\n          onToggle: updateLayerVisibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 23\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this);\n    }\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    className: s.map,\n    ref: mapContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      id: \"features\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LayerControlWhole, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Wellmap, \"+wQ1SYNe1UBLNxuuwH2VxUNis5w=\", false, function () {\n  return [useMap];\n});\n\n_c2 = Wellmap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Popup\");\n$RefreshReg$(_c2, \"Wellmap\");","map":{"version":3,"sources":["D:/Github/UTDB/UtDataBase/UtahWellsDB/utah_wells_db/src/basemap/Basemap.tsx"],"names":["React","useRef","useState","mapboxgl","useMap","s","LayerControl","accessToken","Popup","featureName","featureNumber","field","type","Wellmap","mapContainer","lng","setLong","lat","setLat","zoom","setZoom","height","setHight","layers","map","updateLayerVisibility","style","center","LayerControlWhole","Component","state","showing","render","cursor","setState"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport {useMap} from '../useMap/useMap';\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport s from \"./Map.module.css\";\nimport {LayerControl} from \"../layerControl/LayerControl\";\nimport ReactDOM from \"react-dom\";\n//import {Source} from \"react-map-gl\";\n//import Layer from \"react-mapbox-gl/lib-esm/layer\"; // eslint-disable-line import/no-webpack-loader-syntax\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2xjbGVpIiwiYSI6ImNsMXV6czRnYjJkbnQzZG1qMHRxeGd0YmoifQ.mvtESpI1GCIdTrWSupNEIw';\n\nconst Popup = ({ featureName, featureNumber, field, type }: { featureName: any, featureNumber: any, field: any, type: any }) => (\n  <div className=\"popup\">\n    <p className=\"popField\">WellName: {featureName}</p>\n    <p className=\"popField\">API: {featureNumber}</p>\n    <p className=\"popField\">WellType: {type}</p>\n    <p className=\"popField\">FieldName: {field}</p>\n  </div>\n);\n\nexport function Wellmap(): any {\n  const mapContainer = useRef(null);\n  const [lng, setLong] = useState(-111.6);\n  const [lat, setLat] = useState(39.2);\n  const [zoom, setZoom] = useState(6);\n  const [height,setHight]=useState(1500);\n  //const popUpRef = useRef(new mapboxgl.Popup({ offset: 15 }));\n\n  const { layers, map, updateLayerVisibility } = useMap(mapContainer, {\n    style: \"mapbox://styles/mapbox/outdoors-v11\",\n    center: [lng,lat],\n    zoom: zoom,\n  });\n\n  class LayerControlWhole extends React.Component {\n    state = { showing: false };\n\n    render() {\n        const { showing } = this.state;\n        \n        return (\n            <div className=\"LayerC\">\n                <i\n                    style={{ cursor: \"pointer\"}}\n                    className=\"material-icons md-50\"\n                    id=\"layersIcon\"\n                    uib-tooltip=\"Layers\"\n                    onClick={() => this.setState({ showing: !showing })}>\n                          layers\n                </i>\n                <div className='popover-message'>Layer Control</div>\n                { showing \n                    ? <LayerControl id=\"inMapLegend2\" layers={layers} onToggle={updateLayerVisibility} />\n                    : null\n                }\n            </div>  \n        )\n    }\n}\n\n  return (\n    <div id=\"map\" className={s.map} ref={mapContainer}>  \n      <pre id=\"features\" />\n      <LayerControlWhole />  \n    </div>  \n  );\n}\n"]},"metadata":{},"sourceType":"module"}