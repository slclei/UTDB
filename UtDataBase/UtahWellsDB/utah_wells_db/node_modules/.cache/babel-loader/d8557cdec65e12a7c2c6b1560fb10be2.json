{"ast":null,"code":"import _createForOfIteratorHelper from\"D:/Github/UTDB/UtDataBase/UtahWellsDB/utah_wells_db/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _asyncToGenerator from\"D:/Github/UTDB/UtDataBase/UtahWellsDB/utah_wells_db/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/Github/UTDB/UtDataBase/UtahWellsDB/utah_wells_db/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"D:\\\\Github\\\\UTDB\\\\UtDataBase\\\\UtahWellsDB\\\\utah_wells_db\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState}from\"react\";import WellService from\"../services/WellService\";import Square from\"./Onclick\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function WellSearchResult(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),resultDic=_useState2[0],setresultDic=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),resultList=_useState4[0],setresultList=_useState4[1];var newResult=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var tmpArr,query,apiValue,nameValue,apiResult;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://get information from compareAPI and API elements for search by API\ntmpArr=[];//query=api:4300320047,wellName:abc\nquery=\"\";if(document.getElementById('compareAPI')&&document.getElementById('API')){//get api value and operation\napiValue=document.getElementById('API').value;query+=\"API:\";query+=apiValue;}if(document.getElementById('WellName')){//get api value and operation\nnameValue=document.getElementById('WellName').value;query+=\",WellName:\";query+=nameValue;}//in case of query is not null, get data with query\nif(query!==\"\"){apiResult=WellService.findMultiQueries(query);apiResult.then(function(res){var tmp=res.data;var _iterator=_createForOfIteratorHelper(tmp),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var each=_step.value;var tmpEach=[];tmpEach.push(each.api);tmpEach.push(each.wellName);tmpEach.push(each.county);tmpEach.push(each.wellType);if(tmpEach.length>0){tmpArr[each.api]=tmpEach;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}setresultDic(tmpArr);var tmpArr1=[];for(var key in resultDic){tmpArr1.push(resultDic[key]);}setresultList(tmpArr1);console.log(resultList);}).catch(function(err){console.log(err);});}return _context.abrupt(\"return\");case 6:case\"end\":return _context.stop();}}},_callee);}));return function newResult(_x){return _ref.apply(this,arguments);};}();var addToResult=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var tmpArr,query,apiValue,nameValue,apiResult;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0://get information from compareAPI and API elements for search by API\ntmpArr=resultDic;//query=api:4300320047,wellName:abc\nquery=\"\";if(document.getElementById('compareAPI')&&document.getElementById('API')){//get api value and operation\napiValue=document.getElementById('API').value;query+=\"API:\";query+=apiValue;}if(document.getElementById('WellName')){//get api value and operation\nnameValue=document.getElementById('WellName').value;query+=\",WellName:\";query+=nameValue;}//in case of query is not null, get data with query\nif(query!==\"\"){apiResult=WellService.findMultiQueries(query);apiResult.then(function(res){var tmp=res.data;var _iterator2=_createForOfIteratorHelper(tmp),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var each=_step2.value;var tmpEach=[];tmpEach.push(each.api);tmpEach.push(each.wellName);tmpEach.push(each.county);tmpEach.push(each.wellType);if(tmpEach.length>0){tmpArr[each.api]=tmpEach;}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}setresultDic(tmpArr);var tmpArr1=[];for(var key in resultDic){tmpArr1.push(resultDic[key]);}setresultList(tmpArr1);console.log(resultList);}).catch(function(err){console.log(err);});}return _context2.abrupt(\"return\");case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function addToResult(_x2){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{height:40,boxShadow:\"none\",borderTop:\"1px solid #CACACA\",boxSizing:\"border-box\",position:\"relative\",bottom:0,width:\"100%\",left:0},className:\"headerRect\",children:/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{style:{width:\"80%\"},children:/*#__PURE__*/_jsx(Square,{message:'Add to Result',onClick:function onClick(e){return addToResult(e);}})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Square,{message:'Filter New Result',onClick:function onClick(e){return newResult(e);}})})]})})}),/*#__PURE__*/_jsxs(\"div\",{id:\"ReNumber\",children:[\"Result total number is: \",resultList.length,/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:{width:\"3vw\"},children:\"ItemNo.\"}),/*#__PURE__*/_jsx(\"th\",{style:{width:\"5vw\"},children:\"API\"}),/*#__PURE__*/_jsx(\"th\",{style:{width:\"5vw\"},children:\"WellName\"}),/*#__PURE__*/_jsx(\"th\",{style:{width:\"5vw\"},children:\"County\"}),/*#__PURE__*/_jsx(\"th\",{style:{width:\"5vw\"},children:\"WellType\"})]})})}),/*#__PURE__*/_jsx(\"div\",{id:\"resultDic\",style:{overflow:\"auto\",height:\"500px\"},children:resultList.length>0&&resultList.map(function(item){return/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsxs(\"tr\",{style:{border:\"1px solid #e6e6e6\"},children:[/*#__PURE__*/_jsx(\"td\",{style:{padding:0,width:\"5vw\"},children:resultList.indexOf(item)}),/*#__PURE__*/_jsx(\"td\",{style:{padding:0,width:\"5vw\"},children:item[0]}),/*#__PURE__*/_jsx(\"td\",{style:{width:\"5vw\",textAlign:\"center\"},children:item[1]}),/*#__PURE__*/_jsx(\"td\",{style:{width:\"5vw\",textAlign:\"center\"},children:item[2]}),/*#__PURE__*/_jsx(\"td\",{style:{width:\"5vw\",textAlign:\"center\"},children:item[3]})]})});})})]})]});}export default WellSearchResult;","map":{"version":3,"sources":["D:/Github/UTDB/UtDataBase/UtahWellsDB/utah_wells_db/src/searchBox/WellSearchResult.tsx"],"names":["React","useState","WellService","Square","WellSearchResult","resultDic","setresultDic","resultList","setresultList","newResult","e","tmpArr","query","document","getElementById","apiValue","value","nameValue","apiResult","findMultiQueries","then","res","tmp","data","each","tmpEach","push","api","wellName","county","wellType","length","tmpArr1","key","console","log","catch","err","addToResult","height","boxShadow","borderTop","boxSizing","position","bottom","width","left","overflow","map","item","border","padding","indexOf","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport WellService from \"../services/WellService\";\r\nimport Square from \"./Onclick\";\r\n\r\nfunction WellSearchResult() {\r\n    const [resultDic, setresultDic] = useState<any>({});\r\n    const [resultList, setresultList] = useState<any>([]);\r\n\r\n    const newResult = async (e: React.MouseEvent<HTMLElement>) => {\r\n        //get information from compareAPI and API elements for search by API\r\n        let tmpArr: any[][] = [];\r\n        //query=api:4300320047,wellName:abc\r\n        let query: String = \"\";\r\n        if (document.getElementById('compareAPI') && document.getElementById('API')) {\r\n            //get api value and operation\r\n            const apiValue = document.getElementById('API')!.value;\r\n            query += \"API:\";\r\n            query += apiValue;\r\n        }\r\n        if (document.getElementById('WellName')) {\r\n            //get api value and operation\r\n            const nameValue = document.getElementById('WellName')!.value;\r\n            query += \",WellName:\";\r\n            query += nameValue;\r\n        }\r\n        //in case of query is not null, get data with query\r\n        if (query !== \"\") {\r\n            const apiResult = WellService.findMultiQueries(query);\r\n            apiResult.then((res) => {\r\n                const tmp: any[] = res.data;\r\n                for (var each of tmp) {\r\n                    const tmpEach: any[] = [];\r\n                    tmpEach.push(each.api);\r\n                    tmpEach.push(each.wellName);\r\n                    tmpEach.push(each.county);\r\n                    tmpEach.push(each.wellType);\r\n                    if (tmpEach.length > 0) {\r\n                        tmpArr[each.api] = tmpEach;\r\n                    }\r\n                }\r\n                setresultDic(tmpArr);\r\n                let tmpArr1: any[][] = [];\r\n                for (let key in resultDic) {\r\n                    tmpArr1.push(resultDic[key]);\r\n                }\r\n                setresultList(tmpArr1);\r\n                console.log(resultList);\r\n            })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n        return\r\n    }\r\n\r\n    const addToResult = async (e: React.MouseEvent<HTMLElement>) => {\r\n        //get information from compareAPI and API elements for search by API\r\n        let tmpArr: any[][] = resultDic;\r\n        //query=api:4300320047,wellName:abc\r\n        let query: String = \"\";\r\n        if (document.getElementById('compareAPI') && document.getElementById('API')) {\r\n            //get api value and operation\r\n            const apiValue = document.getElementById('API')!.value;\r\n            query += \"API:\";\r\n            query += apiValue;\r\n        }\r\n        if (document.getElementById('WellName')) {\r\n            //get api value and operation\r\n            const nameValue = document.getElementById('WellName')!.value;\r\n            query += \",WellName:\";\r\n            query += nameValue;\r\n        }\r\n        //in case of query is not null, get data with query\r\n        if (query !== \"\") {\r\n            const apiResult = WellService.findMultiQueries(query);\r\n            apiResult.then((res) => {\r\n                const tmp: any[] = res.data;\r\n                for (var each of tmp) {\r\n                    const tmpEach: any[] = [];\r\n                    tmpEach.push(each.api);\r\n                    tmpEach.push(each.wellName);\r\n                    tmpEach.push(each.county);\r\n                    tmpEach.push(each.wellType);\r\n                    if (tmpEach.length > 0) {\r\n                        tmpArr[each.api] = tmpEach;\r\n                    }\r\n                }\r\n                setresultDic(tmpArr);\r\n                let tmpArr1: any[][] = [];\r\n                for (let key in resultDic) {\r\n                    tmpArr1.push(resultDic[key]);\r\n                }\r\n                setresultList(tmpArr1);\r\n                console.log(resultList);\r\n            })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n        return\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                style={{\r\n                    height: 40,\r\n                    boxShadow: \"none\",\r\n                    borderTop: \"1px solid #CACACA\",\r\n                    boxSizing: \"border-box\",\r\n                    position: \"relative\",\r\n                    bottom: 0,\r\n                    width: \"100%\",\r\n                    left: 0\r\n                }}\r\n                className=\"headerRect\"\r\n            >\r\n                <table>\r\n                    <tr>\r\n                        <td style={{ width: \"80%\" }}>\r\n                            <Square\r\n                                message={'Add to Result'}\r\n                                onClick={(e: React.MouseEvent<HTMLElement>) => addToResult(e)}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <Square\r\n                                message={'Filter New Result'}\r\n                                onClick={(e: React.MouseEvent<HTMLElement>) => newResult(e)}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n            <div id=\"ReNumber\">Result total number is: {resultList.length}\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ width: \"3vw\" }}>ItemNo.</th>\r\n                            <th style={{ width: \"5vw\" }}>API</th>\r\n                            <th style={{ width: \"5vw\" }}>WellName</th>\r\n                            <th style={{ width: \"5vw\" }}>County</th>\r\n                            <th style={{ width: \"5vw\" }}>WellType</th>\r\n                        </tr>\r\n                    </thead>\r\n                </table>\r\n                <div id=\"resultDic\" style={{ overflow: \"auto\", height: \"500px\" }}>\r\n                    {resultList.length > 0 && resultList.map((item: any) => <table>\r\n                        <tr style={{ border: \"1px solid #e6e6e6\" }}>\r\n                            <td style={{ padding: 0, width: \"5vw\" }}>{resultList.indexOf(item)}</td>\r\n                            <td style={{ padding: 0, width: \"5vw\" }}>{item[0]}</td>\r\n                            <td style={{ width: \"5vw\", textAlign: \"center\" }}>{item[1]}</td>\r\n                            <td style={{ width: \"5vw\", textAlign: \"center\" }}>{item[2]}</td>\r\n                            <td style={{ width: \"5vw\", textAlign: \"center\" }}>{item[3]}</td>\r\n                        </tr></table>)}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default WellSearchResult"]},"metadata":{},"sourceType":"module"}